{"title":{"1":"Delete the Middle Node of a Linked List","2":"Minimum Difference Between Largest and Smallest Value in Three Moves","3":"Minimum Number of Frogs Croaking","4":"Replace Words","5":"Remove All Adjacent Duplicates in String II","6":"Longest Path With Different Adjacent Characters","7":"Roman to Integer","8":"Smallest Value of the Rearranged Number","9":"Contains Duplicate","10":"Minimum Swaps to Make Strings Equal","11":"Longest Common Subsequence","12":"Strange Printer II","13":"Maximum Ice Cream Bars","14":"Linked List in Binary Tree","15":"Find the Student that Will Replace the Chalk","16":"Median of Two Sorted Arrays","17":"Decode Ways","18":"Rotate Image","19":"Find and Replace Pattern","20":"Time Needed to Buy Tickets","21":"Pairs of Songs With Total Durations Divisible by 60","22":"Longest Repeating Character Replacement","23":"Check if an Original String Exists Given Two Encoded Strings","24":"Add Two Numbers II","25":"Construct Quad Tree","26":"Minimum Window Substring","27":"Maximum Height by Stacking Cuboids","28":"Palindrome Partitioning","29":"Sum of Digits of String After Convert","30":"Cells with Odd Values in a Matrix","31":"Minimum Genetic Mutation","32":"Closest Room","33":"Combine Two Tables","34":"Largest Number At Least Twice of Others","35":"Kth Smallest Product of Two Sorted Arrays","36":"Vertical Order Traversal of a Binary Tree","37":"Last Day Where You Can Still Cross","38":"Classes More Than 5 Students","39":"Coloring A Border","40":"Count Number of Homogenous Substrings","41":"First Bad Version","42":"Valid Perfect Square","43":"Special Positions in a Binary Matrix","44":"K Items With the Maximum Sum","45":"Make Two Arrays Equal by Reversing Subarrays","46":"Minimum Cost of Buying Candies With Discount","47":"Construct the Rectangle","48":"Number of Sets of K Non-Overlapping Line Segments","49":"Circular Array Loop","50":"Minimum Recolors to Get K Consecutive Black Blocks","51":"Best Time to Buy and Sell Stock","52":"Greatest Sum Divisible by Three","53":"Remove Digit From Number to Maximize Result","54":"Check if Number is a Sum of Powers of Three","55":"Uncrossed Lines","56":"Path Sum II","57":"Search a 2D Matrix","58":"Prime In Diagonal","59":"Second Minimum Node In a Binary Tree","60":"Non-overlapping Intervals","61":"Freedom Trail","62":"Super Palindromes","63":"Course Schedule III","64":"Teemo Attacking","65":"Determine if Two Events Have Conflict","66":"Calculate Digit Sum of a String","67":"Consecutive Numbers Sum","68":"Reorder Data in Log Files","69":"Investments in 2016","70":"Display Table of Food Orders in a Restaurant","71":"Burst Balloons","72":"Design Underground System","73":"Smallest Good Base","74":"Count Number of Teams","75":"Employee Importance","76":"Calculate Amount Paid in Taxes","77":"Airplane Seat Assignment Probability","78":"Closest Nodes Queries in a Binary Search Tree","79":"Distribute Money to Maximum Children","80":"Insertion Sort List","81":"Number of Longest Increasing Subsequence","82":"Query Kth Smallest Trimmed Number","83":"Plates Between Candles","84":"Find a Peak Element II","85":"Number of Ways to Reorder Array to Get Same BST","86":"Split Linked List in Parts","87":"Permutations","88":"Intersection of Multiple Arrays","89":"Minimum Possible Integer After at Most K Adjacent Swaps On Digits","90":"Lowest Common Ancestor of a Binary Search Tree","91":"Count the Number of Beautiful Subarrays","92":"Array of Doubled Pairs","93":"Encrypt and Decrypt Strings","94":"Time to Cross a Bridge","95":"Reach a Number","96":"The Latest Time to Catch a Bus","97":"Maximum Sum With Exactly K Elements","98":"Sort Integers by The Power Value","99":"Maximum Tastiness of Candy Basket","100":"Rectangle Overlap","101":"Self Crossing","102":"Allocate Mailboxes","103":"Stone Game VIII","104":"Employees Earning More Than Their Managers","105":"Maximize the Confusion of an Exam","106":"Percentage of Letter in String","107":"Open the Lock","108":"Remove Stones to Minimize the Total","109":"Maximum Frequency Stack","110":"Finding 3-Digit Even Numbers","111":"Get Maximum in Generated Array","112":"Partition List","113":"Array Partition","114":"Triangle","115":"Get Equal Substrings Within Budget","116":"Same Tree","117":"Minimized Maximum of Products Distributed to Any Store","118":"All Divisions With the Highest Score of a Binary Array","119":"Number of Distinct Roll Sequences","120":"Find All Good Indices","121":"Stock Price Fluctuation","122":"Sliding Subarray Beauty","123":"Check If a String Can Break Another String","124":"Average Time of Process per Machine","125":"Integer to English Words","126":"Count the Number of Good Subarrays","127":"Find All Lonely Numbers in the Array","128":"Spiral Matrix III","129":"Jump Game VI","130":"Minimum Adjacent Swaps for K Consecutive Ones","131":"Rank Transform of a Matrix","132":"Patients With a Condition","133":"Special Binary String","134":"Minimum Time Visiting All Points","135":"Managers with at Least 5 Direct Reports","136":"Minimum Average Difference","137":"Set Mismatch","138":"Swapping Nodes in a Linked List","139":"Design Graph With Shortest Path Calculator","140":"Decode the Message","141":"Shortest Cycle in a Graph","142":"Binary Tree Coloring Game","143":"Distribute Candies to People","144":"Scramble String","145":"Sort the Jumbled Numbers","146":"Find Minimum in Rotated Sorted Array II","147":"Split a String in Balanced Strings","148":"Range Sum Query - Mutable","149":"Recyclable and Low Fat Products","150":"Running Sum of 1d Array","151":"Customers Who Never Order","152":"Patching Array","153":"Find N Unique Integers Sum up to Zero","154":"Implement Rand10() Using Rand7()","155":"Design a Text Editor","156":"Minimum Number of Vertices to Reach All Nodes","157":"Guess Number Higher or Lower II","158":"Min Stack","159":"Number of Different Integers in a String","160":"Maximum XOR for Each Query","161":"Distinct Subsequences II","162":"Divide a String Into Groups of Size k","163":"Sort the Matrix Diagonally","164":"Check if There is a Valid Partition For The Array","165":"Build an Array With Stack Operations","166":"Find Players With Zero or One Losses","167":"Design Parking System","168":"Stone Game","169":"Valid Parentheses","170":"Flipping an Image","171":"Minimum Operations to Reduce X to Zero","172":"Adding Two Negabinary Numbers","173":"Sentence Similarity III","174":"Separate the Digits in an Array","175":"Triples with Bitwise AND Equal To Zero","176":"Longest Arithmetic Subsequence of Given Difference","177":"Print in Order","178":"Largest Local Values in a Matrix","179":"Minimum Moves to Move a Box to Their Target Location","180":"Longest Subsequence Repeated k Times","181":"Path With Minimum Effort","182":"All Ancestors of a Node in a Directed Acyclic Graph","183":"Magic Squares In Grid","184":"Maximum Total Importance of Roads","185":"Check if Numbers Are Ascending in a Sentence","186":"Car Pooling","187":"Can Place Flowers","188":"Count Fertile Pyramids in a Land","189":"Day of the Week","190":"Word Ladder II","191":"Dota2 Senate","192":"Parallel Courses II","193":"Largest Positive Integer That Exists With Its Negative","194":"Find Substring With Given Hash Value","195":"Maximal Rectangle","196":"Evaluate Boolean Binary Tree","197":"Binary Tree Level Order Traversal II","198":"Verify Preorder Serialization of a Binary Tree","199":"Generate Random Point in a Circle","200":"Minimum Cost to Make Array Equal","201":"Wiggle Subsequence","202":"Number of Wonderful Substrings","203":"Edit Distance","204":"Monotone Increasing Digits","205":"Count Days Spent Together","206":"DI String Match","207":"Numbers With Repeated Digits","208":"Number of Unequal Triplets in Array","209":"Minimum Swaps To Make Sequences Increasing","210":"Minimum Number of Operations to Reinitialize a Permutation","211":"Intersection of Two Arrays II","212":"Find the Difference of Two Arrays","213":"Subarray Product Less Than K","214":"Flower Planting With No Adjacent","215":"Maximum Gap","216":"Maximum Number of Ways to Partition an Array","217":"Maximum Score of a Good Subarray","218":"Factorial Trailing Zeroes","219":"Increasing Triplet Subsequence","220":"Counting Words With a Given Prefix","221":"Check if All A's Appears Before All B's","222":"Subarrays with K Different Integers","223":"Tweet Counts Per Frequency","224":"Lucky Numbers in a Matrix","225":"Water Bottles","226":"Stream of Characters","227":"Repeated String Match","228":"Best Time to Buy and Sell Stock IV","229":"Reverse Linked List","230":"Ugly Number III","231":"Find Elements in a Contaminated Binary Tree","232":"Capital Gain\/Loss","233":"Cinema Seat Allocation","234":"Sliding Puzzle","235":"Longest Word in Dictionary through Deleting","236":"Snail Traversal","237":"Univalued Binary Tree","238":"Create Components With Same Value","239":"Largest Perimeter Triangle","240":"Concatenated Words","241":"Shopping Offers","242":"Maximum Number of Achievable Transfer Requests","243":"Self Dividing Numbers","244":"Check Array Formation Through Concatenation","245":"Slowest Key","246":"Number of Students Doing Homework at a Given Time","247":"Count Vowel Substrings of a String","248":"Convert BST to Greater Tree","249":"Escape The Ghosts","250":"Maximum Length of Repeated Subarray","251":"Letter Combinations of a Phone Number","252":"Top K Frequent Elements","253":"Shifting Letters","254":"Finding MK Average","255":"Diagonal Traverse II","256":"Remove Duplicates from Sorted List","257":"Longest Consecutive Sequence","258":"Find the Width of Columns of a Grid","259":"Data Stream as Disjoint Intervals","260":"The Time When the Network Becomes Idle","261":"Linked List Components","262":"Find Array Given Subset Sums","263":"Container With Most Water","264":"Contain Virus","265":"Reverse Integer","266":"Vowels of All Substrings","267":"Find the Divisibility Array of a String","268":"Binary Tree Preorder Traversal","269":"Similar String Groups","270":"Number of Orders in the Backlog","271":"Game Play Analysis I","272":"Sequential Digits","273":"Knight Probability in Chessboard","274":"Check If a String Contains All Binary Codes of Size K","275":"Minimum Number of Operations to Sort a Binary Tree by Level","276":"Minimum Number of Operations to Make String Sorted","277":"Tree Node","278":"K Inverse Pairs Array","279":"Find Duplicate File in System","280":"The Score of Students Solving Math Expression","281":"Most Stones Removed with Same Row or Column","282":"Integer to Roman","283":"Customer Who Visited but Did Not Make Any Transactions","284":"Robot Bounded In Circle","285":"Find the Distance Value Between Two Arrays","286":"Maximum Width of Binary Tree","287":"Design Twitter","288":"Convert 1D Array Into 2D Array","289":"UTF-8 Validation","290":"Number of Flowers in Full Bloom","291":"Count Ways to Make Array With Product","292":"Backspace String Compare","293":"Check If String Is Transformable With Substring Sort Operations","294":"Count All Possible Routes","295":"Last Stone Weight II","296":"Divide Nodes Into the Maximum Number of Groups","297":"Ugly Number II","298":"Detect Pattern of Length M Repeated K or More Times","299":"Binary Trees With Factors","300":"Minimum Time to Finish the Race","301":"Second Largest Digit in a String","302":"Most Common Word","303":"Complex Number Multiplication","304":"Fair Distribution of Cookies","305":"Stamping The Sequence","306":"Minimum Add to Make Parentheses Valid","307":"Remove Invalid Parentheses","308":"Not Boring Movies","309":"Binary Tree Tilt","310":"Count Artifacts That Can Be Extracted","311":"Number of Pairs of Interchangeable Rectangles","312":"Number of Students Unable to Eat Lunch","313":"Maximum Width Ramp","314":"Find the Kth Smallest Sum of a Matrix With Sorted Rows","315":"Maximum Number of Removable Characters","316":"Valid Mountain Array","317":"Find the Town Judge","318":"Minimum Number of Days to Eat N Oranges","319":"Path with Maximum Gold","320":"Count Substrings That Differ by One Character","321":"Odd Even Jump","322":"Random Pick with Blacklist","323":"Make Sum Divisible by P","324":"Last Person to Fit in the Bus","325":"Iterator for Combination","326":"Merge Strings Alternately","327":"Longest Binary Subsequence Less Than or Equal to K","328":"Minimum Number of Operations to Make Arrays Similar","329":"Critical Connections in a Network","330":"Goat Latin","331":"Number of Pairs Satisfying Inequality","332":"Number of Ways Where Square of Number Is Equal to Product of Two Numbers","333":"Smallest Range I","334":"Wiggle Sort II","335":"Jump Game VII","336":"Student Attendance Record II","337":"Find the Index of the First Occurrence in a String","338":"Count Primes","339":"Contains Duplicate III","340":"Reorder Routes to Make All Paths Lead to the City Zero","341":"Smallest Subtree with all the Deepest Nodes","342":"Minimum Cost to Reach Destination in Time","343":"Replace Non-Coprime Numbers in Array","344":"Palindrome Partitioning IV","345":"Longest Harmonious Subsequence","346":"Avoid Flood in The City","347":"Minimum Penalty for a Shop","348":"Redundant Connection II","349":"Watering Plants","350":"Super Ugly Number","351":"Short Encoding of Words","352":"Minimum Number of Arrows to Burst Balloons","353":"First Missing Positive","354":"Find Longest Awesome Substring","355":"Number of Ways to Rearrange Sticks With K Sticks Visible","356":"Reachable Nodes In Subdivided Graph","357":"Recover Binary Search Tree","358":"Print Words Vertically","359":"Number of Ways to Split a String","360":"N-Queens II","361":"Largest 1-Bordered Square","362":"Design HashSet","363":"Most Frequent Subtree Sum","364":"Apply Bitwise Operations to Make Strings Equal","365":"Triangle Judgement","366":"Number of Good Pairs","367":"Check if a Parentheses String Can Be Valid","368":"Sort List","369":"Count Good Meals","370":"Maximum Compatibility Score Sum","371":"Increment Submatrices by One","372":"Cat and Mouse","373":"Create Sorted Array through Instructions","374":"Frog Jump II","375":"Increasing Decreasing String","376":"Convert Binary Number in a Linked List to Integer","377":"Find the Kth Largest Integer in the Array","378":"Reverse Odd Levels of Binary Tree","379":"Minimum Moves to Equal Array Elements II","380":"Range Module","381":"Number of Laser Beams in a Bank","382":"Substring XOR Queries","383":"Squares of a Sorted Array","384":"Find All People With Secret","385":"Where Will the Ball Fall","386":"Customers Who Bought All Products","387":"Max Difference You Can Get From Changing an Integer","388":"Minimum Number of Increments on Subarrays to Form a Target Array","389":"Combination Sum III","390":"Closest Divisors","391":"Arranging Coins","392":"Design Linked List","393":"Minimum Distance to Type a Word Using Two Fingers","394":"Number of Ways to Form a Target String Given a Dictionary","395":"Additive Number","396":"Maximum Candies Allocated to K Children","397":"Number of Segments in a String","398":"Number of Days Between Two Dates","399":"Maximum Rows Covered by Columns","400":"Restore IP Addresses","401":"Word Search II","402":"Binary Tree Postorder Traversal","403":"Count Good Numbers","404":"Longest Arithmetic Subsequence","405":"Card Flipping Game","406":"Height of Binary Tree After Subtree Removal Queries","407":"Cells in a Range on an Excel Sheet","408":"Largest Number After Mutating Substring","409":"Count Number of Pairs With Absolute Difference K","410":"Smallest Rotation with Highest Score","411":"Check if Array Is Sorted and Rotated","412":"Break a Palindrome","413":"Count Number of Rectangles Containing Each Point","414":"Stone Game IV","415":"Prime Number of Set Bits in Binary Representation","416":"Unique Morse Code Words","417":"Reverse Nodes in Even Length Groups","418":"Sleep","419":"Maximum Sum of Two Non-Overlapping Subarrays","420":"Odd String Difference","421":"Minimum Number of Flips to Make the Binary String Alternating","422":"Excel Sheet Column Number","423":"Rearrange Spaces Between Words","424":"Largest Combination With Bitwise AND Greater Than Zero","425":"Number of Visible People in a Queue","426":"Minimum Cost to Merge Stones","427":"Maximum Genetic Difference Query","428":"Rearrange Words in a Sentence","429":"Closest Prime Numbers in Range","430":"Strange Printer","431":"Count the Number of Complete Components","432":"Minimum Score Triangulation of Polygon","433":"Equal Rational Numbers","434":"Largest Time for Given Digits","435":"Split the Array to Make Coprime Products","436":"Sliding Window Median","437":"Climbing Stairs","438":"Minimum Total Distance Traveled","439":"Find Missing Observations","440":"Count the Digits That Divide a Number","441":"Collect Coins in a Tree","442":"Concatenation of Array","443":"Check if All Characters Have Equal Number of Occurrences","444":"Encode and Decode TinyURL","445":"Binary Prefix Divisible By 5","446":"Minimum One Bit Operations to Make Integers Zero","447":"Partition to K Equal Sum Subsets","448":"Snakes and Ladders","449":"Equal Sum Arrays With Minimum Number of Operations","450":"Walking Robot Simulation","451":"Find the Middle Index in Array","452":"Optimal Partition of String","453":"Least Operators to Express Number","454":"Merge Sorted Array","455":"Largest Multiple of Three","456":"Sell Diminishing-Valued Colored Balls","457":"Put Marbles in Bags","458":"Boats to Save People","459":"Divide Players Into Teams of Equal Skill","460":"Sorting the Sentence","461":"Move Pieces to Obtain a String","462":"String Without AAA or BBB","463":"Split Array With Same Average","464":"Soup Servings","465":"Stamping the Grid","466":"Maximum Non Negative Product in a Matrix","467":"Single-Threaded CPU","468":"Candy","469":"Successful Pairs of Spells and Potions","470":"Sum Multiples","471":"Minimum Rounds to Complete All Tasks","472":"Smallest Missing Non-negative Integer After Operations","473":"Champagne Tower","474":"Rearrange Array to Maximize Prefix Score","475":"Solve the Equation","476":"Word Pattern","477":"My Calendar II","478":"Sum of k-Mirror Numbers","479":"Split a String Into the Max Number of Unique Substrings","480":"Trim a Binary Search Tree","481":"Minimum Time to Type Word Using Special Typewriter","482":"Minimum Number of Removals to Make Mountain Array","483":"Substring With Largest Variance","484":"Keep Multiplying Found Values by Two","485":"Check if the Sentence Is Pangram","486":"Fizz Buzz","487":"Unique Binary Search Trees II","488":"Number of Substrings With Only 1s","489":"Smallest Index With Equal Value","490":"Bitwise AND of Numbers Range","491":"Categorize Box According to Criteria","492":"Invert Binary Tree","493":"Longest Univalue Path","494":"Array Nesting","495":"Maximum Value after Insertion","496":"Largest Odd Number in String","497":"Combination Sum IV","498":"Make Number of Distinct Characters Equal","499":"Minimum Absolute Sum Difference","500":"Sequentially Ordinal Rank Tracker","501":"Count Integers With Even Digit Sum","502":"Gas Station","503":"Bricks Falling When Hit","504":"Validate Stack Sequences","505":"Lowest Common Ancestor of Deepest Leaves","506":"Find the Difference","507":"Asteroid Collision","508":"Minimum Operations to Reduce an Integer to 0","509":"Permutation Sequence","510":"Binary Subarrays With Sum","511":"Largest Sum of Averages","512":"Search in a Binary Search Tree","513":"Russian Doll Envelopes","514":"Number of Distinct Averages","515":"Maximum Number of Words Found in Sentences","516":"Groups of Special-Equivalent Strings","517":"Word Ladder","518":"Fair Candy Swap","519":"User Activity for the Past 30 Days I","520":"3Sum With Multiplicity","521":"Find if Path Exists in Graph","522":"Minimum Number of Food Buckets to Feed the Hamsters","523":"Make the XOR of All Segments Equal to Zero","524":"Nth Magical Number","525":"Sum of Square Numbers","526":"4Sum","527":"Nearest Exit from Entrance in Maze","528":"Distinct Echo Substrings","529":"Distance Between Bus Stops","530":"Promise Pool","531":"Remove Boxes","532":"Find Kth Largest XOR Coordinate Value","533":"Students and Examinations","534":"Construct Target Array With Multiple Sums","535":"Pascal's Triangle II","536":"Design a Food Rating System","537":"Number Complement","538":"Palindrome Linked List","539":"Smallest Missing Genetic Value in Each Subtree","540":"Design Memory Allocator","541":"Capitalize the Title","542":"Valid Permutations for DI Sequence","543":"The kth Factor of n","544":"Booking Concert Tickets in Groups","545":"People Whose List of Favorite Companies Is Not a Subset of Another List","546":"Maximum White Tiles Covered by a Carpet","547":"Different Ways to Add Parentheses","548":"Super Washing Machines","549":"Count Ways To Build Good Strings","550":"Masking Personal Information","551":"Strong Password Checker","552":"Two Best Non-Overlapping Events","553":"Combination Sum","554":"Minimum Money Required Before Transactions","555":"Minimum Difference Between Highest and Lowest of K Scores","556":"Consecutive Numbers","557":"Count Triplets That Can Form Two Arrays of Equal XOR","558":"Remove Duplicates from Sorted List II","559":"Poor Pigs","560":"Surface Area of 3D Shapes","561":"Find Right Interval","562":"Sum of Prefix Scores of Strings","563":"Number of Ways to Wear Different Hats to Each Other","564":"Cheapest Flights Within K Stops","565":"Search in Rotated Sorted Array II","566":"Find Good Days to Rob the Bank","567":"Divide Array Into Equal Pairs","568":"Longest Nice Subarray","569":"Surrounded Regions","570":"Count Array Pairs Divisible by K","571":"Maximum Trailing Zeros in a Cornered Path","572":"Bulb Switcher II","573":"Design Front Middle Back Queue","574":"Three Consecutive Odds","575":"The Number of Beautiful Subsets","576":"Count Binary Substrings","577":"Minimum Additions to Make Valid String","578":"Determine Color of a Chessboard Square","579":"Remove K Digits","580":"Painting a Grid With Three Different Colors","581":"Non-negative Integers without Consecutive Ones","582":"Design Circular Queue","583":"Sort Characters By Frequency","584":"Valid Palindrome","585":"Gray Code","586":"Minimum Operations to Make the Array Increasing","587":"Find Closest Number to Zero","588":"Check If a Word Occurs As a Prefix of Any Word in a Sentence","589":"Rotting Oranges","590":"Number of Boomerangs","591":"Find Numbers with Even Number of Digits","592":"Partition Equal Subset Sum","593":"Minimum Area Rectangle II","594":"Power of Three","595":"Find XOR Sum of All Pairs Bitwise AND","596":"Mini Parser","597":"Kth Smallest Element in a Sorted Matrix","598":"Minimum Deletions to Make Array Beautiful","599":"Range Sum of Sorted Subarray Sums","600":"Finding the Users Active Minutes","601":"Delete Leaves With a Given Value","602":"Apply Discount Every n Orders","603":"Valid Square","604":"Remove Nth Node From End of List","605":"Reduce Array Size to The Half","606":"Arithmetic Subarrays","607":"Paths in Matrix Whose Sum Is Divisible by K","608":"Palindrome Partitioning II","609":"LFU Cache","610":"Reverse Substrings Between Each Pair of Parentheses","611":"Count the Number of Square-Free Subsets","612":"Valid Boomerang","613":"Sort Array By Parity","614":"Longest Happy Prefix","615":"Shortest Distance to Target String in a Circular Array","616":"Pass the Pillow","617":"Number of Subarrays With GCD Equal to K","618":"Maximum Students Taking Exam","619":"Find the Longest Valid Obstacle Course at Each Position","620":"Merge Triplets to Form Target Triplet","621":"Koko Eating Bananas","622":"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target","623":"Frequency of the Most Frequent Element","624":"Build Array from Permutation","625":"Remove Comments","626":"Remove Letter To Equalize Frequency","627":"RLE Iterator","628":"Maximum Number of Coins You Can Get","629":"Count Nodes Equal to Average of Subtree","630":"Detonate the Maximum Bombs","631":"Shortest Completing Word","632":"Isomorphic Strings","633":"Cousins in Binary Tree","634":"Parallel Courses III","635":"Minimum Speed to Arrive on Time","636":"Partition Array Into Two Arrays to Minimize Sum Difference","637":"Diameter of Binary Tree","638":"Number of Paths with Max Score","639":"Jump Game II","640":"Maximum Score After Splitting a String","641":"Count the Number of Fair Pairs","642":"Increasing Order Search Tree","643":"N-Repeated Element in Size 2N Array","644":"Biggest Single Number","645":"Subtree of Another Tree","646":"Greatest English Letter in Upper and Lower Case","647":"Merge BSTs to Create Single BST","648":"Maximum Depth of N-ary Tree","649":"Excel Sheet Column Title","650":"Minimum Elements to Add to Form a Given Sum","651":"Product of Array Except Self","652":"Unique Email Addresses","653":"Smallest Integer Divisible by K","654":"Maximum Star Sum of a Graph","655":"Frog Jump","656":"Majority Element","657":"Truncate Sentence","658":"Remove Duplicates from Sorted Array II","659":"Two Furthest Houses With Different Colors","660":"Filter Elements from Array","661":"Exclusive Time of Functions","662":"Count Unguarded Cells in the Grid","663":"HTML Entity Parser","664":"Maximum Level Sum of a Binary Tree","665":"Count Words Obtained After Adding a Letter","666":"Maximum of Absolute Value Expression","667":"Handling Sum Queries After Update","668":"Find a Corresponding Node of a Binary Tree in a Clone of That Tree","669":"Count Pairs With XOR in a Range","670":"Maximum Fruits Harvested After at Most K Steps","671":"Delete Columns to Make Sorted II","672":"Calculate Special Bonus","673":"Find K Closest Elements","674":"Evaluate the Bracket Pairs of a String","675":"Corporate Flight Bookings","676":"Tree of Coprimes","677":"Verbal Arithmetic Puzzle","678":"Single Number II","679":"Detect Cycles in 2D Grid","680":"Find in Mountain Array","681":"Largest 3-Same-Digit Number in String","682":"Product Price at a Given Date","683":"Fix Names in a Table","684":"Populating Next Right Pointers in Each Node II","685":"Maximum Distance Between a Pair of Values","686":"Degree of an Array","687":"Count of Smaller Numbers After Self","688":"Maximum 69 Number","689":"Maximum Number of Tasks You Can Assign","690":"Count All Valid Pickup and Delivery Options","691":"Longest Substring with At Least K Repeating Characters","692":"Minimum Operations to Make the Array Alternating","693":"Neighboring Bitwise XOR","694":"Buddy Strings","695":"Lexicographical Numbers","696":"Maximum Sum Obtained of Any Permutation","697":"Recover a Tree From Preorder Traversal","698":"Search in Rotated Sorted Array","699":"Add Edges to Make Degrees of All Nodes Even","700":"Partition String Into Substrings With Values at Most K","701":"Range Sum Query 2D - Immutable","702":"Maximum Number of Consecutive Values You Can Make","703":"Find the Highest Altitude","704":"Tenth Line","705":"Minimum XOR Sum of Two Arrays","706":"Count the Hidden Sequences","707":"Minimum Number of Refueling Stops","708":"Count Integers in Intervals","709":"Swap Salary","710":"Maximum Equal Frequency","711":"Symmetric Tree","712":"Smallest Range Covering Elements from K Lists","713":"Basic Calculator IV","714":"Elimination Game","715":"Minimum Absolute Difference in BST","716":"Sales Person","717":"Ways to Make a Fair Array","718":"First Day Where You Have Been in All the Rooms","719":"Kth Largest Sum in a Binary Tree","720":"Flip String to Monotone Increasing","721":"Remove All Adjacent Duplicates In String","722":"Get Biggest Three Rhombus Sums in a Grid","723":"Number of Senior Citizens","724":"Goal Parser Interpretation","725":"Single Element in a Sorted Array","726":"Primary Department for Each Employee","727":"Next Permutation","728":"House Robber IV","729":"Make Array Empty","730":"Possible Bipartition","731":"Find Lucky Integer in an Array","732":"Flood Fill","733":"Reverse Subarray To Maximize Array Value","734":"Find Greatest Common Divisor of Array","735":"Find Original Array From Doubled Array","736":"Alert Using Same Key-Card Three or More Times in a One Hour Period","737":"Sum of Total Strength of Wizards","738":"Minimize the Total Price of the Trips","739":"Camelcase Matching","740":"Vowel Spellchecker","741":"Count Number of Bad Pairs","742":"Copy List with Random Pointer","743":"Lemonade Change","744":"The Skyline Problem","745":"Contains Duplicate II","746":"Minimum Obstacle Removal to Reach Corner","747":"The Employee That Worked on the Longest Task","748":"N-Queens","749":"Watering Plants II","750":"Erect the Fence","751":"Groups of Strings","752":"Minimum Number of Operations to Convert Time","753":"Spiral Matrix","754":"Number of Ways to Select Buildings","755":"Minimum Cost to Connect Two Groups of Points","756":"Maximum Matching of Players With Trainers","757":"Reverse Nodes in k-Group","758":"Minimum Impossible OR","759":"Execution of All Suffix Instructions Staying in a Grid","760":"The Earliest and Latest Rounds Where Players Compete","761":"Convert Sorted List to Binary Search Tree","762":"Promise Time Limit","763":"Number of Lines To Write String","764":"Maximize Greatness of an Array","765":"Graph Connectivity With Threshold","766":"Path Sum III","767":"Reduction Operations to Make the Array Elements Equal","768":"Find Smallest Letter Greater Than Target","769":"Length of Longest Fibonacci Subsequence","770":"Process Tasks Using Servers","771":"Longest Palindromic Substring","772":"Daily Leads and Partners","773":"Search Suggestions System","774":"Random Pick with Weight","775":"Snapshot Array","776":"Number of Steps to Reduce a Number to Zero","777":"Minimum Height Trees","778":"Check If N and Its Double Exist","779":"Unique Paths II","780":"Nth Highest Salary","781":"Number Of Rectangles That Can Form The Largest Square","782":"Valid Palindrome II","783":"Find the Duplicate Number","784":"Number of Pairs of Strings With Concatenation Equal to Target","785":"Brace Expansion II","786":"Number of Submatrices That Sum to Target","787":"Brick Wall","788":"Random Flip Matrix","789":"Power of Two","790":"Maximum Bags With Full Capacity of Rocks","791":"Implement Stack using Queues","792":"Create Binary Tree From Descriptions","793":"Minimum Path Cost in a Grid","794":"Basic Calculator","795":"Minimum Depth of Binary Tree","796":"Transform to Chessboard","797":"JSON Deep Equal","798":"Check If Word Is Valid After Substitutions","799":"Maximal Square","800":"Longest Cycle in a Graph","801":"Baseball Game","802":"Queue Reconstruction by Height","803":"Maximum Product of Splitted Binary Tree","804":"Maximum Matrix Sum","805":"Matrix Block Sum","806":"Minimum Deletions to Make Array Divisible","807":"Time Based Key-Value Store","808":"Find the K-Sum of an Array","809":"Kth Largest Element in an Array","810":"Pascal's Triangle","811":"Binary String With Substrings Representing 1 To N","812":"Throne Inheritance","813":"Online Election","814":"Memoize","815":"Hamming Distance","816":"Subarray Sums Divisible by K","817":"Kth Missing Positive Number","818":"Stone Game III","819":"Find Resultant Array After Removing Anagrams","820":"Count Number of Special Subsequences","821":"Destroy Sequential Targets","822":"Numbers With Same Consecutive Differences","823":"Accounts Merge","824":"Rank Teams by Votes","825":"Maximum Good People Based on Statements","826":"Check if Word Can Be Placed In Crossword","827":"Minimum Weighted Subgraph With the Required Paths","828":"Minimum Swaps to Arrange a Binary Grid","829":"Cache With Time Limit","830":"Count Subarrays With Median K","831":"Minesweeper","832":"Maximum Sum of Distinct Subarrays With Length K","833":"Merge Nodes in Between Zeros","834":"Smallest String With A Given Numeric Value","835":"Number of Ways to Split Array","836":"Subsets II","837":"Bitwise ORs of Subarrays","838":"Race Car","839":"Number of Valid Words in a Sentence","840":"Delete and Earn","841":"Chunk Array","842":"Shuffle an Array","843":"Longest Subsequence With Limited Sum","844":"Check if There Is a Valid Parentheses String Path","845":"Path Sum","846":"Earliest Possible Day of Full Bloom","847":"Reverse Only Letters","848":"Count Anagrams","849":"Check If Two String Arrays are Equivalent","850":"Subarray With Elements Greater Than Varying Threshold","851":"Design Authentication Manager","852":"Number of Closed Islands","853":"Nim Game","854":"Minimum Subsequence in Non-Increasing Order","855":"Assign Cookies","856":"Finding Pairs With a Certain Sum","857":"Fibonacci Number","858":"Split Array Largest Sum","859":"Print Binary Tree","860":"Integer Break","861":"Sum of Beauty in the Array","862":"Find Followers Count","863":"Number of People Aware of a Secret","864":"Kids With the Greatest Number of Candies","865":"Complete Binary Tree Inserter","866":"Occurrences After Bigram","867":"Serialize and Deserialize BST","868":"Valid Number","869":"Trapping Rain Water II","870":"Jump Game IV","871":"Number of Ways to Earn Points","872":"Flatten Binary Tree to Linked List","873":"Actors and Directors Who Cooperated At Least Three Times","874":"Maximize Number of Nice Divisors","875":"Minimum Cost to Set Cooking Time","876":"Online Stock Span","877":"Minimum Cost to Hire K Workers","878":"Minimum Number of Steps to Make Two Strings Anagram","879":"Count Submatrices With All Ones","880":"Maximum Product After K Increments","881":"Relative Ranks","882":"Maximize Number of Subsequences in a String","883":"Three Divisors","884":"Find the Smallest Divisor Given a Threshold","885":"Number of Digit One","886":"Flip Columns For Maximum Number of Equal Rows","887":"Sales Analysis III","888":"Smallest String Starting From Leaf","889":"My Calendar I","890":"Append K Integers With Minimal Sum","891":"Can I Win","892":"Construct Binary Search Tree from Preorder Traversal","893":"Find the Distinct Difference Array","894":"Student Attendance Record I","895":"Available Captures for Rook","896":"Group the People Given the Group Size They Belong To","897":"Sign of the Product of an Array","898":"Design Bitset","899":"Sum Root to Leaf Numbers","900":"Trips and Users","901":"Interleaving String","902":"Peeking Iterator","903":"Maximize Win From Two Segments","904":"Frog Position After T Seconds","905":"Minimum Distance Between BST Nodes","906":"Distribute Candies","907":"Profitable Schemes","908":"Linked List Random Node","909":"Maximum Element After Decreasing and Rearranging","910":"Calculate Money in Leetcode Bank","911":"Count Subarrays With Score Less Than K","912":"Find Closest Node to Given Two Nodes","913":"Longest Nice Substring","914":"Valid Triangle Number","915":"Minimum Score of a Path Between Two Cities","916":"Find Consecutive Integers from a Data Stream","917":"Design HashMap","918":"Maximum Erasure Value","919":"Exchange Seats","920":"Maximum Score Of Spliced Array","921":"Daily Temperatures","922":"Check Completeness of a Binary Tree","923":"Group Sold Products By The Date","924":"Find the String with LCP","925":"Remove Colored Pieces if Both Neighbors are the Same Color","926":"Top Travellers","927":"Adding Spaces to a String","928":"Naming a Company","929":"Bank Account Summary II","930":"Maximum Subarray Sum with One Deletion","931":"Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree","932":"Count Items Matching a Rule","933":"Sum of Two Integers","934":"Sum of Distances in Tree","935":"Two City Scheduling","936":"Average of Levels in Binary Tree","937":"132 Pattern","938":"Shift 2D Grid","939":"Path with Maximum Probability","940":"Maximum Number of Darts Inside of a Circular Dartboard","941":"Find Bottom Left Tree Value","942":"Find And Replace in String","943":"Minimum Number of Visited Cells in a Grid","944":"Longest Square Streak in an Array","945":"Rotated Digits","946":"Longest Increasing Subsequence II","947":"Binary Watch","948":"Longest Substring Without Repeating Characters","949":"Make Array Zero by Subtracting Equal Amounts","950":"Third Maximum Number","951":"Sum of Beauty of All Substrings","952":"Generate Fibonacci Sequence","953":"Longest Turbulent Subarray","954":"Last Moment Before All Ants Fall Out of a Plank","955":"Find Score of an Array After Marking All Elements","956":"Find First Palindromic String in the Array","957":"Counter","958":"Build Array Where You Can Find The Maximum Exactly K Comparisons","959":"Take Gifts From the Richest Pile","960":"Rotate String","961":"Maximize Sum Of Array After K Negations","962":"Best Position for a Service Centre","963":"Minimum Initial Energy to Finish Tasks","964":"Range Sum Query - Immutable","965":"Find Servers That Handled Most Number of Requests","966":"Find Three Consecutive Integers That Sum to a Given Number","967":"Regions Cut By Slashes","968":"Maximum Points You Can Obtain from Cards","969":"Count Special Integers","970":"Domino and Tromino Tiling","971":"Maximum Split of Positive Even Integers","972":"Swap Nodes in Pairs","973":"Maximum Number of Visible Points","974":"Print FooBar Alternately","975":"Maximum Candies You Can Get from Boxes","976":"Convert the Temperature","977":"Maximum XOR After Operations","978":"Minimum Numbers of Function Calls to Make Target Array","979":"Minimum Number of Taps to Open to Water a Garden","980":"Count Common Words With One Occurrence","981":"Count Good Triplets","982":"Maximum Repeating Substring","983":"Sum Game","984":"Number of Nodes in the Sub-Tree With the Same Label","985":"Minimum Domino Rotations For Equal Row","986":"Can Convert String in K Moves","987":"Maximum Difference Between Node and Ancestor","988":"The k-th Lexicographical String of All Happy Strings of Length n","989":"Friends Of Appropriate Ages","990":"Number of Good Paths","991":"Height Checker","992":"Range Sum of BST","993":"Minimum Cost of a Path With Special Roads","994":"Minimum Absolute Difference Queries","995":"Minimum Operations to Make the Array K-Increasing","996":"Latest Time by Replacing Hidden Digits","997":"Maximum Number of Groups Entering a Competition","998":"N-ary Tree Preorder Traversal","999":"Sum of Subarray Ranges","1000":"Least Number of Unique Integers after K Removals","1001":"Reverse String","1002":"Unique Substrings in Wraparound String","1003":"Minimum Remove to Make Valid Parentheses","1004":"Design Circular Deque","1005":"Maximum Number of Balloons","1006":"Count Number of Possible Root Nodes","1007":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","1008":"Unique Paths III","1009":"Minimum Value to Get Positive Step by Step Sum","1010":"Check if Binary String Has at Most One Segment of Ones","1011":"Partition Array for Maximum Sum","1012":"Minimum Adjacent Swaps to Reach the Kth Smallest Number","1013":"Maximize Distance to Closest Person","1014":"Satisfiability of Equality Equations","1015":"Merge Similar Items","1016":"Best Poker Hand","1017":"Decoded String at Index","1018":"Cousins in Binary Tree II","1019":"Find the Closest Palindrome","1020":"Keyboard Row","1021":"Construct Smallest Number From DI String","1022":"Binary Tree Right Side View","1023":"Largest Merge Of Two Strings","1024":"Rearrange Characters to Make Target String","1025":"Largest Palindromic Number","1026":"Maximum Subsequence Score","1027":"Largest Component Size by Common Factor","1028":"Find Latest Group of Size M","1029":"3Sum Closest","1030":"Minimum White Tiles After Covering With Carpets","1031":"Maximum Score From Removing Stones","1032":"Minimum Number of Operations to Make All Array Elements Equal to 1","1033":"Rising Temperature","1034":"Apply Transform Over Each Element in Array","1035":"Long Pressed Name","1036":"Number of Atoms","1037":"Build a Matrix With Conditions","1038":"K-diff Pairs in an Array","1039":"Apply Operations to an Array","1040":"Maximum Difference Between Increasing Elements","1041":"Delete Columns to Make Sorted","1042":"Task Scheduler II","1043":"Decrypt String from Alphabet to Integer Mapping","1044":"Longest Uploaded Prefix","1045":"Longest Common Subpath","1046":"Number of Ways to Stay in the Same Place After Some Steps","1047":"Video Stitching","1048":"Find Customer Referee","1049":"Minimize Malware Spread II","1050":"Richest Customer Wealth","1051":"Shortest Subarray to be Removed to Make Array Sorted","1052":"Words Within Two Edits of Dictionary","1053":"Powerful Integers","1054":"Unique Number of Occurrences","1055":"Cherry Pickup","1056":"As Far from Land as Possible","1057":"Minimum Degree of a Connected Trio in a Graph","1058":"Course Schedule II","1059":"Maximum Nesting Depth of Two Valid Parentheses Strings","1060":"Range Product Queries of Powers","1061":"Check if Object Instance of Class","1062":"Clumsy Factorial","1063":"Random Point in Non-overlapping Rectangles","1064":"X of a Kind in a Deck of Cards","1065":"Pyramid Transition Matrix","1066":"Sort Array by Increasing Frequency","1067":"Merge Two 2D Arrays by Summing Values","1068":"Beautiful Arrangement II","1069":"Minimum Total Space Wasted With K Resizing Operations","1070":"Insert into a Binary Search Tree","1071":"Shortest Unsorted Continuous Subarray","1072":"Prison Cells After N Days","1073":"Reordered Power of 2","1074":"Removing Minimum Number of Magic Beans","1075":"Minimum Addition to Make Integer Beautiful","1076":"Find Pivot Index","1077":"Find the Maximum Number of Marked Indices","1078":"Counter II","1079":"First Unique Character in a String","1080":"Longest Happy String","1081":"Function Composition","1082":"Remove One Element to Make the Array Strictly Increasing","1083":"Longest Substring of One Repeating Character","1084":"Immediate Food Delivery II","1085":"Number of Zero-Filled Subarrays","1086":"Maximum Nesting Depth of the Parentheses","1087":"Design a Number Container System","1088":"Maximal Network Rank","1089":"Merge In Between Linked Lists","1090":"Construct K Palindrome Strings","1091":"Find Target Indices After Sorting Array","1092":"Check If Array Pairs Are Divisible by k","1093":"Maximum Alternating Subsequence Sum","1094":"Pow(x, n)","1095":"Maximum Difference by Remapping a Digit","1096":"Projection Area of 3D Shapes","1097":"Day of the Year","1098":"Meeting Rooms III","1099":"Find Largest Value in Each Tree Row","1100":"Maximum Number of Non-Overlapping Substrings","1101":"Maximum Number of Points From Grid Queries","1102":"Friend Requests II: Who Has the Most Friends","1103":"Left and Right Sum Differences","1104":"Distinct Subsequences","1105":"Permutations II","1106":"Cyclically Rotating a Grid","1107":"Rearrange Array Elements by Sign","1108":"Partitioning Into Minimum Number Of Deci-Binary Numbers","1109":"Jump Game","1110":"Concatenation of Consecutive Binary Numbers","1111":"Find the Maximum Divisibility Score","1112":"Difference Between Maximum and Minimum Price Sum","1113":"Count Servers that Communicate","1114":"Count Largest Group","1115":"Check if All the Integers in a Range Are Covered","1116":"Second Minimum Time to Reach Destination","1117":"Shortest Palindrome","1118":"Maximum Sum of 3 Non-Overlapping Subarrays","1119":"Group By","1120":"Remove Duplicate Letters","1121":"Special Array With X Elements Greater Than or Equal X","1122":"Bus Routes","1123":"Maximum Subarray","1124":"Sum of Nodes with Even-Valued Grandparent","1125":"Three Equal Parts","1126":"Permutation in String","1127":"Maximum Points in an Archery Competition","1128":"Sum of Floored Pairs","1129":"Remove All Occurrences of a Substring","1130":"Find K-th Smallest Pair Distance","1131":"01 Matrix","1132":"My Calendar III","1133":"Minimum Reverse Operations","1134":"Removing Minimum and Maximum From Array","1135":"Deepest Leaves Sum","1136":"Multiply Strings","1137":"Making File Names Unique","1138":"Peak Index in a Mountain Array","1139":"Longest Subarray of 1's After Deleting One Element","1140":"Take K of Each Character From Left and Right","1141":"Reverse Words in a String III","1142":"Shortest Subarray with Sum at Least K","1143":"Reverse String II","1144":"Daily Temperatures","1145":"Check Completeness of a Binary Tree","1146":"Group Sold Products By The Date","1147":"Find the String with LCP","1148":"Remove Colored Pieces if Both Neighbors are the Same Color","1149":"Top Travellers","1150":"Adding Spaces to a String","1151":"Naming a Company","1152":"Bank Account Summary II","1153":"Maximum Subarray Sum with One Deletion","1154":"Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree","1155":"Count Items Matching a Rule","1156":"Sum of Two Integers","1157":"Sum of Distances in Tree","1158":"Two City Scheduling","1159":"Average of Levels in Binary Tree","1160":"132 Pattern","1161":"Shift 2D Grid","1162":"Path with Maximum Probability","1163":"Maximum Number of Darts Inside of a Circular Dartboard","1164":"Find Bottom Left Tree Value","1165":"Find And Replace in String","1166":"Minimum Number of Visited Cells in a Grid","1167":"Longest Square Streak in an Array","1168":"Rotated Digits","1169":"Longest Increasing Subsequence II","1170":"Binary Watch","1171":"Longest Substring Without Repeating Characters","1172":"Make Array Zero by Subtracting Equal Amounts","1173":"Third Maximum Number","1174":"Sum of Beauty of All Substrings","1175":"Generate Fibonacci Sequence","1176":"Longest Turbulent Subarray","1177":"Last Moment Before All Ants Fall Out of a Plank","1178":"Find Score of an Array After Marking All Elements","1179":"Find First Palindromic String in the Array","1180":"Counter","1181":"Build Array Where You Can Find The Maximum Exactly K Comparisons","1182":"Take Gifts From the Richest Pile","1183":"Rotate String","1184":"Maximize Sum Of Array After K Negations","1185":"Best Position for a Service Centre","1186":"Minimum Initial Energy to Finish Tasks","1187":"Range Sum Query - Immutable","1188":"Find Servers That Handled Most Number of Requests","1189":"Find Three Consecutive Integers That Sum to a Given Number","1190":"Regions Cut By Slashes","1191":"Maximum Points You Can Obtain from Cards","1192":"Count Special Integers","1193":"Domino and Tromino Tiling","1194":"Maximum Split of Positive Even Integers","1195":"Swap Nodes in Pairs","1196":"Maximum Number of Visible Points","1197":"Print FooBar Alternately","1198":"Maximum Candies You Can Get from Boxes","1199":"Convert the Temperature","1200":"Maximum XOR After Operations","1201":"Minimum Numbers of Function Calls to Make Target Array","1202":"Minimum Number of Taps to Open to Water a Garden","1203":"Count Common Words With One Occurrence","1204":"Count Good Triplets","1205":"Maximum Repeating Substring","1206":"Sum Game","1207":"Number of Nodes in the Sub-Tree With the Same Label","1208":"Minimum Domino Rotations For Equal Row","1209":"Can Convert String in K Moves","1210":"Maximum Difference Between Node and Ancestor","1211":"The k-th Lexicographical String of All Happy Strings of Length n","1212":"Friends Of Appropriate Ages","1213":"Number of Good Paths","1214":"Height Checker","1215":"Range Sum of BST","1216":"Minimum Cost of a Path With Special Roads","1217":"Minimum Absolute Difference Queries","1218":"Minimum Operations to Make the Array K-Increasing","1219":"Latest Time by Replacing Hidden Digits","1220":"Maximum Number of Groups Entering a Competition","1221":"N-ary Tree Preorder Traversal","1222":"Sum of Subarray Ranges","1223":"Least Number of Unique Integers after K Removals","1224":"Reverse String","1225":"Unique Substrings in Wraparound String","1226":"Minimum Remove to Make Valid Parentheses","1227":"Design Circular Deque","1228":"Maximum Number of Balloons","1229":"Count Number of Possible Root Nodes","1230":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","1231":"Unique Paths III","1232":"Minimum Value to Get Positive Step by Step Sum","1233":"Check if Binary String Has at Most One Segment of Ones","1234":"Partition Array for Maximum Sum","1235":"Minimum Adjacent Swaps to Reach the Kth Smallest Number","1236":"Maximize Distance to Closest Person","1237":"Satisfiability of Equality Equations","1238":"Merge Similar Items","1239":"Best Poker Hand","1240":"Decoded String at Index","1241":"Cousins in Binary Tree II","1242":"Find the Closest Palindrome","1243":"Keyboard Row","1244":"Construct Smallest Number From DI String","1245":"Binary Tree Right Side View","1246":"Largest Merge Of Two Strings","1247":"Rearrange Characters to Make Target String","1248":"Largest Palindromic Number","1249":"Maximum Subsequence Score","1250":"Largest Component Size by Common Factor","1251":"Find Latest Group of Size M","1252":"3Sum Closest","1253":"Minimum White Tiles After Covering With Carpets","1254":"Maximum Score From Removing Stones","1255":"Minimum Number of Operations to Make All Array Elements Equal to 1","1256":"Rising Temperature","1257":"Apply Transform Over Each Element in Array","1258":"Long Pressed Name","1259":"Number of Atoms","1260":"Build a Matrix With Conditions","1261":"K-diff Pairs in an Array","1262":"Apply Operations to an Array","1263":"Maximum Difference Between Increasing Elements","1264":"Delete Columns to Make Sorted","1265":"Task Scheduler II","1266":"Decrypt String from Alphabet to Integer Mapping","1267":"Longest Uploaded Prefix","1268":"Longest Common Subpath","1269":"Number of Ways to Stay in the Same Place After Some Steps","1270":"Video Stitching","1271":"Find Customer Referee","1272":"Minimize Malware Spread II","1273":"Richest Customer Wealth","1274":"Shortest Subarray to be Removed to Make Array Sorted","1275":"Words Within Two Edits of Dictionary","1276":"Powerful Integers","1277":"Unique Number of Occurrences","1278":"Cherry Pickup","1279":"As Far from Land as Possible","1280":"Minimum Degree of a Connected Trio in a Graph","1281":"Course Schedule II","1282":"Maximum Nesting Depth of Two Valid Parentheses Strings","1283":"Range Product Queries of Powers","1284":"Check if Object Instance of Class","1285":"Clumsy Factorial","1286":"Random Point in Non-overlapping Rectangles","1287":"X of a Kind in a Deck of Cards","1288":"Pyramid Transition Matrix","1289":"Sort Array by Increasing Frequency","1290":"Merge Two 2D Arrays by Summing Values","1291":"Beautiful Arrangement II","1292":"Minimum Total Space Wasted With K Resizing Operations","1293":"Insert into a Binary Search Tree","1294":"Shortest Unsorted Continuous Subarray","1295":"Prison Cells After N Days","1296":"Reordered Power of 2","1297":"Removing Minimum Number of Magic Beans","1298":"Minimum Addition to Make Integer Beautiful","1299":"Find Pivot Index","1300":"Find the Maximum Number of Marked Indices","1301":"Counter II","1302":"First Unique Character in a String","1303":"Longest Happy String","1304":"Function Composition","1305":"Remove One Element to Make the Array Strictly Increasing","1306":"Longest Substring of One Repeating Character","1307":"Immediate Food Delivery II","1308":"Number of Zero-Filled Subarrays","1309":"Maximum Nesting Depth of the Parentheses","1310":"Design a Number Container System","1311":"Maximal Network Rank","1312":"Merge In Between Linked Lists","1313":"Construct K Palindrome Strings","1314":"Find Target Indices After Sorting Array","1315":"Check If Array Pairs Are Divisible by k","1316":"Maximum Alternating Subsequence Sum","1317":"Pow(x, n)","1318":"Maximum Difference by Remapping a Digit","1319":"Projection Area of 3D Shapes","1320":"Day of the Year","1321":"Meeting Rooms III","1322":"Find Largest Value in Each Tree Row","1323":"Maximum Number of Non-Overlapping Substrings","1324":"Maximum Number of Points From Grid Queries","1325":"Friend Requests II: Who Has the Most Friends","1326":"Left and Right Sum Differences","1327":"Distinct Subsequences","1328":"Permutations II","1329":"Cyclically Rotating a Grid","1330":"Rearrange Array Elements by Sign","1331":"Partitioning Into Minimum Number Of Deci-Binary Numbers","1332":"Jump Game","1333":"Concatenation of Consecutive Binary Numbers","1334":"Find the Maximum Divisibility Score","1335":"Difference Between Maximum and Minimum Price Sum","1336":"Count Servers that Communicate","1337":"Count Largest Group","1338":"Check if All the Integers in a Range Are Covered","1339":"Second Minimum Time to Reach Destination","1340":"Shortest Palindrome","1341":"Maximum Sum of 3 Non-Overlapping Subarrays","1342":"Group By","1343":"Remove Duplicate Letters","1344":"Special Array With X Elements Greater Than or Equal X","1345":"Bus Routes","1346":"Maximum Subarray","1347":"Sum of Nodes with Even-Valued Grandparent","1348":"Three Equal Parts","1349":"Permutation in String","1350":"Maximum Points in an Archery Competition","1351":"Sum of Floored Pairs","1352":"Remove All Occurrences of a Substring","1353":"Find K-th Smallest Pair Distance","1354":"01 Matrix","1355":"My Calendar III","1356":"Minimum Reverse Operations","1357":"Removing Minimum and Maximum From Array","1358":"Deepest Leaves Sum","1359":"Multiply Strings","1360":"Making File Names Unique","1361":"Peak Index in a Mountain Array","1362":"Longest Subarray of 1's After Deleting One Element","1363":"Take K of Each Character From Left and Right","1364":"Reverse Words in a String III","1365":"Shortest Subarray with Sum at Least K","1366":"Reverse String II","1367":"Capacity To Ship Packages Within D Days","1368":"Sum of Numbers With Units Digit K","1369":"Count the Number of Ideal Arrays","1370":"Binary Number with Alternating Bits","1371":"All Nodes Distance K in Binary Tree","1372":"Numbers At Most N Given Digit Set","1373":"Process Restricted Friend Requests","1374":"Egg Drop With 2 Eggs and N Floors","1375":"Minimum Cost to Move Chips to The Same Position","1376":"Reverse Linked List II","1377":"Rotate List","1378":"Word Search","1379":"Binary Search","1380":"Decode Ways II","1381":"Number of Matching Subsequences","1382":"Expression Add Operators","1383":"Count Number of Nice Subarrays","1384":"Count Nice Pairs in an Array","1385":"Word Break II","1386":"Prime Palindrome","1387":"Second Highest Salary","1388":"Removing Stars From a String","1389":"Find the Punishment Number of an Integer","1390":"Maximum Total Beauty of the Gardens","1391":"Rectangle Area","1392":"Employee Bonus","1393":"Sum of All Subset XOR Totals","1394":"Minimum Length of String After Deleting Similar Ends","1395":"Compare Version Numbers","1396":"Bulb Switcher","1397":"Check if Word Equals Summation of Two Words","1398":"Remove Covered Intervals","1399":"Non-decreasing Subsequences","1400":"Largest Palindrome Product","1401":"Next Greater Node In Linked List","1402":"Sort Colors","1403":"Best Time to Buy and Sell Stock with Transaction Fee","1404":"Maximum Number of Fish in a Grid","1405":"Reformat Date","1406":"Count Negative Numbers in a Sorted Matrix","1407":"Find All Good Strings","1408":"Minimum String Length After Removing Substrings","1409":"Cut Off Trees for Golf Event","1410":"Maximum XOR With an Element From Array","1411":"Get the Maximum Score","1412":"Minimum Distance to the Target Element","1413":"Intersection of Two Linked Lists","1414":"K-Concatenation Maximum Sum","1415":"Replace Elements in an Array","1416":"Element Appearing More Than 25% In Sorted Array","1417":"Predict the Winner","1418":"Sort Integers by The Number of 1 Bits","1419":"Count Salary Categories","1420":"Implement Queue using Stacks","1421":"Minimum Difficulty of a Job Schedule","1422":"Number of Ways to Separate Numbers","1423":"Two Sum","1424":"Minimum Operations to Make a Subsequence","1425":"Regular Expression Matching","1426":"Binary Tree Level Order Traversal","1427":"Split Message Based on Limit","1428":"Maximum Number of Vowels in a Substring of Given Length","1429":"Minimum Number of Swaps to Make the Binary String Alternating","1430":"Rotating the Box","1431":"Confirmation Rate","1432":"Array Prototype Last","1433":"Subsets","1434":"Arithmetic Slices","1435":"Thousand Separator","1436":"Reshape the Matrix","1437":"Count Vowels Permutation","1438":"Maximum Depth of Binary Tree","1439":"Swap For Longest Repeated Character Substring","1440":"Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts","1441":"Combination Sum II","1442":"Add Minimum Number of Rungs","1443":"Simplify Path","1444":"Continuous Subarray Sum","1445":"House Robber II","1446":"Number of Smooth Descent Periods of a Stock","1447":"Can Make Arithmetic Progression From Sequence","1448":"Minimum Fuel Cost to Report to the Capital","1449":"Circular Sentence","1450":"Group Anagrams","1451":"Word Subsets","1452":"Delete Operation for Two Strings","1453":"Create Hello World Function","1454":"Maximum Number of Events That Can Be Attended","1455":"Check if Number Has Equal Digit Count and Digit Value","1456":"Reformat Phone Number","1457":"Word Break","1458":"Longest Duplicate Substring","1459":"Ones and Zeroes","1460":"Score After Flipping Matrix","1461":"Average Salary Excluding the Minimum and Maximum Salary","1462":"Delivering Boxes from Storage to Ports","1463":"Debounce","1464":"Minimum Area Rectangle","1465":"Count Square Sum Triples","1466":"Reaching Points","1467":"Employees With Missing Information","1468":"Number of Valid Clock Times","1469":"Dice Roll Simulation","1470":"Maximum Binary Tree II","1471":"Delete Greatest Value in Each Row","1472":"Count Vowel Strings in Ranges","1473":"Sum of Root To Leaf Binary Numbers","1474":"Minimum Operations to Make a Uni-Value Grid","1475":"Remove Linked List Elements","1476":"Max Dot Product of Two Subsequences","1477":"Count Square Submatrices with All Ones","1478":"Prime Subtraction Operation","1479":"Partition Array Into Three Parts With Equal Sum","1480":"Stone Game II","1481":"Water and Jug Problem","1482":"XOR Queries of a Subarray","1483":"Largest Magic Square","1484":"Advantage Shuffle","1485":"Maximum Length of Subarray With Positive Product","1486":"Missing Number","1487":"Random Pick Index","1488":"Big Countries","1489":"Min Cost to Connect All Points","1490":"Rotate Function","1491":"Find All Anagrams in a String","1492":"Find the Losers of the Circular Game","1493":"XOR Operation in an Array","1494":"Prime Arrangements","1495":"Super Egg Drop","1496":"Reachable Nodes With Restrictions","1497":"Making A Large Island","1498":"Maximum Swap","1499":"4Sum II","1500":"Minimum Number of Work Sessions to Finish the Tasks","1501":"Range Addition II","1502":"Reorganize String","1503":"Minimum Skips to Arrive at Meeting On Time","1504":"Valid Tic-Tac-Toe State","1505":"Delete Columns to Make Sorted III","1506":"Longest Chunked Palindrome Decomposition","1507":"Filter Restaurants by Vegan-Friendly, Price and Distance","1508":"K-th Symbol in Grammar","1509":"Split Array into Consecutive Subsequences","1510":"Binary Tree Inorder Traversal","1511":"Broken Calculator","1512":"Falling Squares","1513":"Queries Quality and Percentage","1514":"Time Needed to Inform All Employees","1515":"Letter Case Permutation","1516":"K-Similar Strings","1517":"Binary Tree Zigzag Level Order Traversal","1518":"Remove Nodes From Linked List","1519":"Minimum Number of Days to Disconnect Island","1520":"Number of Valid Move Combinations On Chessboard","1521":"Number of Times Binary String Is Prefix-Aligned","1522":"Interval List Intersections","1523":"Global and Local Inversions","1524":"Cracking the Safe","1525":"Custom Sort String","1526":"Find All Groups of Farmland","1527":"Design Browser History","1528":"Rearranging Fruits","1529":"Minimum Sum of Four Digit Number After Splitting Digits","1530":"Minimum Moves to Reach Target Score","1531":"Furthest Building You Can Reach","1532":"Count Ways to Group Overlapping Ranges","1533":"All Paths From Source to Target","1534":"Shortest Impossible Sequence of Rolls","1535":"K Highest Ranked Items Within a Price Range","1536":"Largest Divisible Subset","1537":"Subarray Sum Equals K","1538":"Number of Ways to Buy Pens and Pencils","1539":"Throttle","1540":"Minimum Deletions to Make String Balanced","1541":"Restore the Array From Adjacent Pairs","1542":"Perfect Squares","1543":"Construct String With Repeat Limit","1544":"Find The Original Array of Prefix Xor","1545":"Verifying an Alien Dictionary","1546":"Parse Lisp Expression","1547":"Game Play Analysis IV","1548":"Max Chunks To Make Sorted II","1549":"Find Mode in Binary Search Tree","1550":"Shortest Path in Binary Matrix","1551":"Exam Room","1552":"Find Winner on a Tic Tac Toe Game","1553":"Count Unique Characters of All Substrings of a Given String","1554":"Construct Binary Tree from Preorder and Inorder Traversal","1555":"Complement of Base 10 Integer","1556":"Moving Stones Until Consecutive II","1557":"Convert to Base -2","1558":"LRU Cache","1559":"Filling Bookcase Shelves","1560":"Department Highest Salary","1561":"K-th Smallest in Lexicographical Order","1562":"Queries on a Permutation With Key","1563":"Remove Zero Sum Consecutive Nodes from Linked List","1564":"Palindromic Substrings","1565":"Monotonic Array","1566":"Count Operations to Obtain Zero","1567":"Maximize Score After N Operations","1568":"Number of Strings That Appear as Substrings in Word","1569":"Bitwise XOR of All Pairings","1570":"Find K Pairs with Smallest Sums","1571":"Product Sales Analysis I","1572":"Counting Bits","1573":"Department Top Three Salaries","1574":"Minimum Flips to Make a OR b Equal to c","1575":"Four Divisors","1576":"Replace the Substring for Balanced String","1577":"Detect Capital","1578":"Coordinate With Maximum Network Quality","1579":"N-th Tribonacci Number","1580":"Compare Strings by Frequency of the Smallest Character","1581":"Convert Object to JSON String","1582":"Maximum Value at a Given Index in a Bounded Array","1583":"Human Traffic of Stadium","1584":"Flatten Nested List Iterator","1585":"H-Index","1586":"Shortest Bridge","1587":"Lowest Common Ancestor of a Binary Tree","1588":"Basic Calculator II","1589":"Smallest K-Length Subsequence With Occurrences of a Letter","1590":"Destination City","1591":"Max Value of Equation","1592":"Minimum Time to Complete All Tasks","1593":"Two Sum II - Input Array Is Sorted","1594":"Paint House III","1595":"Maximum Building Height","1596":"Smallest String With Swaps","1597":"Max Increase to Keep City Skyline","1598":"Insert Delete GetRandom O(1)","1599":"Delete Node in a BST","1600":"Minimum Moves to Equal Array Elements","1601":"Longest Well-Performing Interval","1602":"Longest Absolute File Path","1603":"Find Valid Matrix Given Row and Column Sums","1604":"Minimum Moves to Make Array Complementary","1605":"Decode XORed Array","1606":"Fancy Sequence","1607":"Next Greater Element II","1608":"Largest Triangle Area","1609":"Flatten a Multilevel Doubly Linked List","1610":"Robot Return to Origin","1611":"Longest Palindromic Subsequence","1612":"Subtract the Product and Sum of Digits of an Integer","1613":"Minimum Moves to Convert String","1614":"Array Reduce Transformation","1615":"Largest Plus Sign","1616":"Car Fleet II","1617":"The Latest Login in 2020","1618":"Rabbits in Forest","1619":"Number of Excellent Pairs","1620":"Minimum Time to Repair Cars","1621":"Find the City With the Smallest Number of Neighbors at a Threshold Distance","1622":"Minimize Maximum of Array","1623":"Match Substring After Replacement","1624":"Determine Whether Matrix Can Be Obtained By Rotation","1625":"Design an Ordered Stream","1626":"Minimum Interval to Include Each Query","1627":"Minimum Cuts to Divide a Circle","1628":"Minimum Number of Moves to Seat Everyone","1629":"The Number of the Smallest Unoccupied Chair","1630":"Sliding Window Maximum","1631":"Network Delay Time","1632":"Maximum Segment Sum After Removals","1633":"Find Users With Valid E-Mails","1634":"Max Number of K-Sum Pairs","1635":"Find All K-Distant Indices in an Array","1636":"Number of Burgers with No Waste of Ingredients","1637":"Minimum Time Difference","1638":"All O`one Data Structure","1639":"Maximum XOR of Two Numbers in an Array","1640":"Sum of Digits in Base K","1641":"Design Skiplist","1642":"Count Prefixes of a Given String","1643":"Fruit Into Baskets","1644":"Maximum Number of Robots Within Budget","1645":"Best Time to Buy and Sell Stock with Cooldown","1646":"Count Number of Ways to Place Houses","1647":"Minimum Cost Homecoming of a Robot in a Grid","1648":"Beautiful Arrangement","1649":"Sort Array By Parity II","1650":"Merge Two Binary Trees","1651":"Final Prices With a Special Discount in a Shop","1652":"Battleships in a Board","1653":"Uncommon Words from Two Sentences","1654":"N-ary Tree Postorder Traversal","1655":"Sum of All Odd Length Subarrays","1656":"Grid Game","1657":"Add Two Numbers","1658":"Smallest Sufficient Team","1659":"Binary Tree Paths","1660":"Minimize Malware Spread","1661":"Count Pairs Of Similar Strings","1662":"Min Max Game","1663":"Difference Between Element Sum and Digit Sum of an Array","1664":"Validate Binary Search Tree","1665":"Number of Ways to Divide a Long Corridor","1666":"Minimum Number of Operations to Make Array Continuous","1667":"Minimum Suffix Flips","1668":"Minimum Time to Collect All Apples in a Tree","1669":"Reformat Department Table","1670":"Happy Number","1671":"Maximum Sum Circular Subarray","1672":"Reward Top K Students","1673":"Sender With Largest Word Count","1674":"Minimum Sum of Squared Difference","1675":"Super Pow","1676":"Decrease Elements To Make Array Zigzag","1677":"Total Cost to Hire K Workers","1678":"Minimize Result by Adding Parentheses to Expression","1679":"Longest Continuous Increasing Subsequence","1680":"Image Smoother","1681":"Max Consecutive Ones III","1682":"Count Number of Distinct Integers After Reverse Operations","1683":"Rearrange Products Table","1684":"Make Array Strictly Increasing","1685":"Divisor Game","1686":"Nth Digit","1687":"Employees Whose Manager Left the Company","1688":"Clone Graph","1689":"Number of Beautiful Partitions","1690":"Minimum Number of Steps to Make Two Strings Anagram II","1691":"Call Function with Custom Context","1692":"Power of Four","1693":"Maximize the Topmost Element After K Moves","1694":"Minimum Number of Moves to Make Palindrome","1695":"Probability of a Two Boxes Having The Same Number of Distinct Balls","1696":"Minimum Increment to Make Array Unique","1697":"Minimum Score by Changing Two Elements","1698":"Delete Duplicate Emails","1699":"Number of Subarrays With LCM Equal to K","1700":"Form Array by Concatenating Subarrays of Another Array","1701":"Constrained Subsequence Sum","1702":"Valid Phone Numbers","1703":"Best Sightseeing Pair","1704":"Minimum Path Sum","1705":"Angle Between Hands of a Clock","1706":"Minimum Time to Make Rope Colorful","1707":"Maximum Deletions on a String","1708":"Find a Value of a Mysterious Function Closest to Target","1709":"Maximum Count of Positive Integer and Negative Integer","1710":"Maximum Product Subarray","1711":"Change Minimum Characters to Satisfy One of Three Conditions","1712":"Remove Palindromic Subsequences","1713":"Base 7","1714":"Count Nodes With the Highest Score","1715":"Divide Two Integers","1716":"Maximum Twin Sum of a Linked List","1717":"Arithmetic Slices II - Subsequence","1718":"Tuple with Same Product","1719":"Shifting Letters II","1720":"Number of Unique Good Subsequences","1721":"Number of Sub-arrays With Odd Sum","1722":"Widest Vertical Area Between Two Points Containing No Points","1723":"Find the Score of All Prefixes of an Array","1724":"Largest Color Value in a Directed Graph","1725":"Toeplitz Matrix","1726":"Count the Number of Consistent Strings","1727":"Distinct Prime Factors of Product of Array","1728":"Destroying Asteroids","1729":"Queens That Can Attack the King","1730":"Monthly Transactions I","1731":"Last Substring in Lexicographical Order","1732":"Maximum Number of Weeks for Which You Can Work","1733":"Length of Last Word","1734":"Maximum Number of Groups Getting Fresh Donuts","1735":"Map of Highest Peak","1736":"Average Waiting Time","1737":"Flip Binary Tree To Match Preorder Traversal","1738":"Maximum Consecutive Floors Without Special Floors","1739":"Maximum Score Words Formed by Letters","1740":"Minimize XOR","1741":"Check if Every Row and Column Contains All Numbers","1742":"Longest Valid Parentheses","1743":"Dinner Plate Stacks","1744":"Map Sum Pairs","1745":"Find Median from Data Stream","1746":"Node With Highest Edge Score","1747":"Stone Game V","1748":"List the Products Ordered in a Period","1749":"Count Special Quadruplets","1750":"Longest Common Prefix","1751":"How Many Numbers Are Smaller Than the Current Number","1752":"Lexicographically Smallest String After Applying Operations","1753":"Amount of Time for Binary Tree to Be Infected","1754":"Maximum Number of Occurrences of a Substring","1755":"Balance a Binary Search Tree","1756":"Minimum Replacements to Sort the Array","1757":"Closest Dessert Cost","1758":"Word Frequency","1759":"Check If All 1's Are at Least Length K Places Away","1760":"Kth Largest Element in a Stream","1761":"Form Smallest Number From Two Digit Arrays","1762":"Palindrome Partitioning III","1763":"Bulls and Cows","1764":"Find Subsequence of Length K With the Largest Sum","1765":"Minimum Number of Swaps to Make the String Balanced","1766":"Longest Substring Of All Vowels in Order","1767":"Sqrt(x)","1768":"Stone Game VI","1769":"Longest Word in Dictionary","1770":"Minimum Number of Days to Make m Bouquets","1771":"Dungeon Game","1772":"Minimum Changes To Make Alternating Binary String","1773":"Minimum Size Subarray Sum","1774":"Maximum Number of Moves in a Grid","1775":"Reconstruct Original Digits from English","1776":"Number of Unique Subjects Taught by Each Teacher","1777":"Minimum Space Wasted From Packaging","1778":"Rotate Array","1779":"Expressive Words","1780":"Smallest Subsequence of Distinct Characters","1781":"Queries on Number of Points Inside a Circle","1782":"Minimize Maximum Pair Sum in Array","1783":"Check if Matrix Is X-Matrix","1784":"Couples Holding Hands","1785":"Maximum Score of a Node Sequence","1786":"Statistics from a Large Sample","1787":"Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold","1788":"Final Value of Variable After Performing Operations","1789":"Subdomain Visit Count","1790":"Form Largest Integer With Digits That Add up to Target","1791":"Swim in Rising Water","1792":"Number of Valid Words for Each Puzzle","1793":"Find First and Last Position of Element in Sorted Array","1794":"Online Majority Element In Subarray","1795":"Check If It Is a Straight Line","1796":"Minimum Difference in Sums After Removal of Elements","1797":"Distribute Repeating Integers","1798":"Find Words That Can Be Formed by Characters","1799":"Memoize II","1800":"Text Justification","1801":"Number of Adjacent Elements With the Same Color","1802":"Find Unique Binary String","1803":"The k Strongest Values in an Array","1804":"Replace All Digits with Characters","1805":"Circle and Rectangle Overlapping","1806":"Maximum Number of Words You Can Type","1807":"Number of Great Partitions","1808":"Chalkboard XOR Game","1809":"Check Knight Tour Configuration","1810":"Two Sum IV - Input is a BST","1811":"Combinations","1812":"Cherry Pickup II","1813":"Tallest Billboard","1814":"Number of Subarrays with Bounded Maximum","1815":"Count Increasing Quadruplets","1816":"Count Collisions of Monkeys on a Polygon","1817":"Minimum Index Sum of Two Lists","1818":"Find the Winner of an Array Game","1819":"Validate Binary Tree Nodes","1820":"Add Digits","1821":"Perfect Rectangle","1822":"Coin Change II","1823":"Is Subsequence","1824":"Number of Ways to Paint N \u00d7 3 Grid","1825":"Pseudo-Palindromic Paths in a Binary Tree","1826":"Minimum Amount of Time to Collect Garbage","1827":"The Number of Full Rounds You Have Played","1828":"Count Good Triplets in an Array","1829":"Remove Element","1830":"Replace Employee ID With The Unique Identifier","1831":"House Robber","1832":"Total Appeal of A String","1833":"Minimum Operations to Convert Number","1834":"Splitting a String Into Descending Consecutive Values","1835":"Count The Repetitions","1836":"Eliminate Maximum Number of Monsters","1837":"Target Sum","1838":"Minimum Moves to Reach Target with Rotations","1839":"Last Stone Weight","1840":"Largest Submatrix With Rearrangements","1841":"Longest ZigZag Path in a Binary Tree","1842":"Sort the Students by Their Kth Score","1843":"Mirror Reflection","1844":"Rank Scores","1845":"Score of Parentheses","1846":"Longest String Chain","1847":"All Elements in Two Binary Search Trees","1848":"Find Two Non-overlapping Sub-arrays Each With Target Sum","1849":"K Divisible Elements Subarrays","1850":"Minimum Lines to Represent a Line Chart","1851":"Evaluate Division","1852":"Substrings of Size Three with Distinct Characters","1853":"Minimum Cost to Change the Final Value of Expression","1854":"Maximum Number of Events That Can Be Attended II","1855":"Most Popular Video Creator","1856":"Next Greater Element III","1857":"Transpose Matrix","1858":"Selling Pieces of Wood","1859":"Most Beautiful Item for Each Query","1860":"Divide Array in Sets of K Consecutive Numbers","1861":"Lexicographically Smallest Beautiful String","1862":"Fraction to Recurring Decimal","1863":"Minimum Insertion Steps to Make a String Palindrome","1864":"Two Out of Three","1865":"Grid Illumination","1866":"Maximum Employees to Be Invited to a Meeting","1867":"Minimize Hamming Distance After Swap Operations","1868":"The Number of Good Subsets","1869":"Longest Uncommon Subsequence I","1870":"Count Number of Maximum Bitwise-OR Subsets","1871":"Checking Existence of Edge Length Limited Paths","1872":"Recover the Original Array","1873":"Find Kth Bit in Nth Binary String","1874":"Maximum Product Difference Between Two Pairs","1875":"Spiral Matrix II","1876":"Minimum Common Value","1877":"Crawler Log Folder","1878":"Minimum Operations to Make Array Equal","1879":"Replace All ?'s to Avoid Consecutive Repeating Characters","1880":"Sort the People","1881":"Closest Subsequence Sum","1882":"Minimum Cost to Split an Array","1883":"Shortest Path Visiting All Nodes","1884":"Find Triangular Sum of an Array","1885":"Merge k Sorted Lists","1886":"Find Eventual Safe States","1887":"Palindrome Number","1888":"Maximum Path Quality of a Graph","1889":"Maximum Average Subarray I","1890":"Array With Elements Not Equal to Average of Neighbors","1891":"Find Xor-Beauty of Array","1892":"2 Keys Keyboard","1893":"Minimum Operations to Halve Array Sum","1894":"Find the Minimum and Maximum Number of Nodes Between Critical Points","1895":"Push Dominoes","1896":"Number of Substrings Containing All Three Characters","1897":"Zigzag Conversion","1898":"Largest Values From Labels","1899":"Number of Common Factors","1900":"Find the Prefix Common Array of Two Arrays","1901":"Maximum Performance of a Team","1902":"Restaurant Growth","1903":"Serialize and Deserialize Binary Tree","1904":"Smallest Subarrays With Maximum Bitwise OR","1905":"Determine the Winner of a Bowling Game","1906":"Minimum Deletions to Make Character Frequencies Unique","1907":"Coin Change","1908":"Minimum Time to Visit a Cell In a Grid","1909":"Check if Move is Legal","1910":"Swap Adjacent in LR String","1911":"Count of Matches in Tournament","1912":"Determine if Two Strings Are Close","1913":"Single Number III","1914":"3Sum","1915":"Linked List Cycle II","1916":"Sort an Array","1917":"Minimum Limit of Balls in a Bag","1918":"Minimize the Maximum Difference of Pairs","1919":"Count Unhappy Friends","1920":"Count Hills and Valleys in an Array","1921":"Count Distinct Numbers on Board","1922":"Count Number of Texts","1923":"Abbreviating the Product of a Range","1924":"Minimum Incompatibility","1925":"Remove Outermost Parentheses","1926":"Zuma Game","1927":"Maximum Side Length of a Square with Sum Less than or Equal to Threshold","1928":"Populating Next Right Pointers in Each Node","1929":"Insert Delete GetRandom O(1) - Duplicates allowed","1930":"Partition Array According to Given Pivot","1931":"Maximum Running Time of N Computers","1932":"Find Positive Integer Solution for a Given Equation","1933":"Convert Integer to the Sum of Two No-Zero Integers","1934":"Max Points on a Line","1935":"Generate Parentheses","1936":"Average Value of Even Numbers That Are Divisible by Three","1937":"Sum of Unique Elements","1938":"Distribute Coins in Binary Tree","1939":"Number of Arithmetic Triplets","1940":"Greatest Common Divisor of Strings","1941":"Number of Enclaves","1942":"String Compression II","1943":"Max Area of Island","1944":"Valid Sudoku","1945":"Balanced Binary Tree","1946":"Count Collisions on a Road","1947":"Course Schedule","1948":"24 Game","1949":"Find the Shortest Superstring","1950":"Add One Row to Tree","1951":"Delete Nodes And Return Forest","1952":"Smallest Even Multiple","1953":"Substring with Concatenation of All Words","1954":"Design Movie Rental System","1955":"Rank Transform of an Array","1956":"Search a 2D Matrix II","1957":"Number of Increasing Paths in a Grid","1958":"Nested Array Generator","1959":"Percentage of Users Attended a Contest","1960":"Customer Placing the Largest Number of Orders","1961":"Alternating Digit Sum","1962":"Number of Provinces","1963":"Max Sum of Rectangle No Larger Than K","1964":"License Key Formatting","1965":"Next Greater Numerically Balanced Number","1966":"Implement Magic Dictionary","1967":"The Number of Weak Characters in the Game","1968":"Product of the Last K Numbers","1969":"Article Views I","1970":"The Dining Philosophers","1971":"Distant Barcodes","1972":"Length of the Longest Alphabetical Continuous Substring","1973":"Find Center of Star Graph","1974":"Jump Game V","1975":"Guess the Word","1976":"Longest Increasing Path in a Matrix","1977":"Longest Palindrome by Concatenating Two Letter Words","1978":"Unique Paths","1979":"Game of Life","1980":"Count Pairs Of Nodes","1981":"Kth Smallest Number in Multiplication Table","1982":"Heaters","1983":"Minimize Deviation in Array","1984":"Minimum Number of People to Teach","1985":"To Lower Case","1986":"Maximum Value of a String in an Array","1987":"Delete Node in a Linked List","1988":"All Possible Full Binary Trees","1989":"Matrix Diagonal Sum","1990":"New 21 Game","1991":"Minimum Cost to Cut a Stick","1992":"Kth Smallest Instructions","1993":"Ambiguous Coordinates","1994":"Calculate Delayed Arrival Time","1995":"Count Palindromic Subsequences","1996":"Reformat The String","1997":"Building H2O","1998":"Smallest Number in Infinite Set","1999":"Leaf-Similar Trees","2000":"Image Overlap","2001":"Average Selling Price","2002":"Steps to Make Array Non-decreasing","2003":"Wildcard Matching","2004":"Longest Increasing Subsequence","2005":"Check if One String Swap Can Make Strings Equal","2006":"Smallest Value After Replacing With Sum of Prime Factors","2007":"Unique Length-3 Palindromic Subsequences","2008":"Duplicate Zeros","2009":"Minimum Consecutive Cards to Pick Up","2010":"Add Strings","2011":"Binary Search Tree to Greater Sum Tree","2012":"Count Unreachable Pairs of Nodes in an Undirected Graph","2013":"Construct Binary Tree from Inorder and Postorder Traversal","2014":"Orderly Queue","2015":"Magnetic Force Between Two Balls","2016":"Design an ATM Machine","2017":"Number Of Ways To Reconstruct A Tree","2018":"Implement Trie (Prefix Tree)","2019":"Pancake Sorting","2020":"Reorder List","2021":"Defuse the Bomb","2022":"Merge Two Sorted Lists","2023":"Number of Subsequences That Satisfy the Given Sum Condition","2024":"K Closest Points to Origin","2025":"Decode String","2026":"Best Time to Buy and Sell Stock II","2027":"Maximum AND Sum of Array","2028":"Count Sorted Vowel Strings","2029":"Task Scheduler","2030":"Project Employees I","2031":"Find the Most Competitive Subsequence","2032":"Previous Permutation With One Swap","2033":"Longest Uncommon Subsequence II","2034":"Pizza With 3n Slices","2035":"Find Nearest Point That Has the Same X or Y Coordinate","2036":"Print Zero Even Odd","2037":"Kth Smallest Element in a BST","2038":"Sort Even and Odd Indices Independently","2039":"Moving Stones Until Consecutive","2040":"Create Maximum Number","2041":"Movie Rating","2042":"Find the Longest Balanced Substring of a Binary String","2043":"Best Time to Buy and Sell Stock III","2044":"K-th Smallest Prime Fraction","2045":"1-bit and 2-bit Characters","2046":"Frequency Tracker","2047":"Out of Boundary Paths","2048":"Number of Islands","2049":"Find Peak Element","2050":"Invalid Tweets","2051":"Number of Steps to Reduce a Number in Binary Representation to One","2052":"Maximum Number of Pairs in Array","2053":"Minimum Number of Operations to Move All Balls to Each Box","2054":"Convert an Array Into a 2D Array With Conditions","2055":"Find the K-Beauty of a Number","2056":"Shortest Common Supersequence","2057":"Shortest Path in a Grid with Obstacles Elimination","2058":"Move Zeroes","2059":"Minimize the Maximum of Two Arrays","2060":"Walking Robot Simulation II","2061":"Rings and Rods","2062":"Strong Password Checker II","2063":"Maximum Subarray Min-Product","2064":"Single Number","2065":"Row With Maximum Ones","2066":"Mean of Array After Removing Some Elements","2067":"Using a Robot to Print the Lexicographically Smallest String","2068":"Valid Arrangement of Pairs","2069":"Consecutive Characters","2070":"Sum of Scores of Built Strings","2071":"Sort Items by Groups Respecting Dependencies","2072":"Range Frequency Queries","2073":"Find Duplicate Subtrees","2074":"Rectangle Area II","2075":"Set Intersection Size At Least Two","2076":"Disconnect Path in a Binary Matrix by at Most One Flip","2077":"Find All Possible Recipes from Given Supplies","2078":"H-Index II","2079":"Longest Mountain in Array","2080":"Prefix and Suffix Search","2081":"Strictly Palindromic Number","2082":"Linked List Cycle","2083":"Non-decreasing Array","2084":"The K Weakest Rows in a Matrix","2085":"Ways to Split Array Into Three Subarrays","2086":"Path In Zigzag Labelled Binary Tree","2087":"Reveal Cards In Increasing Order","2088":"Largest Number","2089":"Maximum OR","2090":"Find Minimum in Rotated Sorted Array","2091":"Valid Anagram","2092":"Maximum Enemy Forts That Can Be Captured","2093":"IPO","2094":"Number of Operations to Make Network Connected","2095":"Shuffle the Array","2096":"Count and Say","2097":"Escape a Large Maze","2098":"Power of Heroes","2099":"Path Crossing","2100":"Guess Number Higher or Lower","2101":"Replace Elements with Greatest Element on Right Side","2102":"Shortest Distance to a Character","2103":"Number of Equivalent Domino Pairs","2104":"Logical OR of Two Binary Grids Represented as Quad-Trees","2105":"Reverse Vowels of a String","2106":"Maximum Binary String After Change","2107":"Array Wrapper","2108":"Knight Dialer","2109":"Maximum Sum BST in Binary Tree","2110":"Add Two Integers","2111":"Remove Duplicates from Sorted Array","2112":"Integer Replacement","2113":"A Number After a Double Reversal","2114":"Maximum Number of Points with Cost","2115":"Remove Sub-Folders from the Filesystem","2116":"Reverse Words in a String","2117":"Magical String","2118":"Maximum Sum of an Hourglass","2119":"Binary Gap","2120":"Diagonal Traverse","2121":"Minimum Garden Perimeter to Collect Enough Apples","2122":"Maximum Product of the Length of Two Palindromic Subsequences","2123":"Check If It Is a Good Array","2124":"Positions of Large Groups","2125":"Maximum Product of Three Numbers","2126":"Ransom Note","2127":"Decode XORed Permutation","2128":"Curry","2129":"Delete Duplicate Folders in System","2130":"Decode the Slanted Ciphertext","2131":"Minimum Hours of Training to Win a Competition","2132":"Create Target Array in the Given Order","2133":"Jewels and Stones","2134":"Middle of the Linked List","2135":"Most Frequent Even Element","2136":"Perfect Number","2137":"Check if There is a Valid Path in a Grid","2138":"Course Schedule IV","2139":"Parsing A Boolean Expression","2140":"Reverse Prefix of Word","2141":"Intersection of Two Arrays","2142":"Stickers to Spell Word","2143":"Circular Permutation in Binary Representation","2144":"Largest Number After Digit Swaps by Parity","2145":"House Robber III","2146":"Append Characters to String to Make Subsequence","2147":"Maximum Number of Non-overlapping Palindrome Substrings","2148":"Insufficient Nodes in Root to Leaf Paths","2149":"Bag of Tokens","2150":"Next Greater Element I","2151":"Tag Validator","2152":"Optimal Division","2153":"Valid Parenthesis String","2154":"Shuffle String","2155":"Minimum Jumps to Reach Home","2156":"Hand of Straights","2157":"Odd Even Linked List","2158":"Largest Rectangle in Histogram","2159":"Longest Subarray With Maximum Bitwise AND","2160":"Count Total Number of Colored Cells","2161":"Binary Tree Maximum Path Sum","2162":"Sum of Absolute Differences in a Sorted Array","2163":"Maximum Score from Performing Multiplication Operations","2164":"Next Greater Element IV","2165":"Construct Binary Tree from Preorder and Postorder Traversal","2166":"Design Add and Search Words Data Structure","2167":"Minimum Falling Path Sum II","2168":"Delete Characters to Make Fancy String","2169":"Maximize Palindrome Length From Subsequences","2170":"Detect Squares","2171":"Smallest Range II","2172":"Count Elements With Strictly Smaller and Greater Elements","2173":"Minimum Falling Path Sum","2174":"Simplified Fractions","2175":"Sudoku Solver","2176":"Maximum Earnings From Taxi","2177":"Relative Sort Array","2178":"Set Matrix Zeroes","2179":"Island Perimeter","2180":"Preimage Size of Factorial Zeroes Function","2181":"Most Profitable Path in a Tree","2182":"Number of Good Ways to Split a String","2183":"Max Chunks To Make Sorted","2184":"Find All Duplicates in an Array","2185":"Longer Contiguous Segments of Ones than Zeros","2186":"Restore The Array","2187":"Count of Range Sum","2188":"Can You Eat Your Favorite Candy on Your Favorite Day?","2189":"Number of Restricted Paths From First to Last Node","2190":"Minimum Operations to Make All Array Elements Equal","2191":"Alphabet Board Path","2192":"Count Lattice Points Inside a Circle","2193":"Step-By-Step Directions From a Binary Tree Node to Another","2194":"Number of Music Playlists","2195":"Maximum Population Year","2196":"Count Subarrays With Fixed Bounds","2197":"Find the Winner of the Circular Game","2198":"Count Subtrees With Max Distance Between Cities","2199":"Beautiful Array","2200":"Trapping Rain Water","2201":"Defanging an IP Address","2202":"Reverse Bits","2203":"Seat Reservation Manager","2204":"Can Make Palindrome from Substring","2205":"Grumpy Bookstore Owner","2206":"Generate a String With Characters That Have Odd Counts","2207":"Minimum Number of K Consecutive Bit Flips","2208":"Maximum Number of Balls in a Box","2209":"Duplicate Emails","2210":"Maximum Product of Word Lengths","2211":"GCD Sort of an Array","2212":"Split Two Strings to Make Palindrome","2213":"Minimum Score After Removals on a Tree","2214":"Stone Game IX","2215":"Letter Tile Possibilities","2216":"Subsequence With the Minimum Score","2217":"Building Boxes","2218":"Car Fleet","2219":"Decompress Run-Length Encoded List","2220":"Kth Distinct String in an Array","2221":"Lexicographically Smallest Equivalent String","2222":"Minimum Operations to Make Array Equal II","2223":"Minimum ASCII Delete Sum for Two Strings","2224":"Search Insert Position","2225":"Minimum Time to Remove All Cars Containing Illegal Goods","2226":"Check Whether Two Strings are Almost Equivalent","2227":"Number of Even and Odd Bits","2228":"String Compression","2229":"Top K Frequent Words","2230":"Product Sales Analysis III","2231":"Sum of Mutated Array Closest to Target","2232":"Find Minimum Time to Finish All Jobs","2233":"Maximize Grid Happiness","2234":"Find the Substring With Maximum Cost","2235":"Maximum Ascending Subarray Sum","2236":"Maximum Score From Removing Substrings","2237":"Root Equals Sum of Children","2238":"Fizz Buzz Multithreaded","2239":"Find Subarrays With Equal Sum","2240":"Minimize the Difference Between Target and Chosen Elements","2241":"Sum of Subsequence Widths","2242":"Determine if String Halves Are Alike","2243":"Evaluate Reverse Polish Notation","2244":"Minimum Cost to Make at Least One Valid Path in a Grid","2245":"Number of Ways of Cutting a Pizza","2246":"Check If String Is a Prefix of Array","2247":"Sum of Number and Its Reverse","2248":"Sum of Even Numbers After Queries","2249":"Maximum Value of K Coins From Piles","2250":"Kth Ancestor of a Tree Node","2251":"Minimum Cost Tree From Leaf Values","2252":"Keys and Rooms","2253":"Find Total Time Spent by Each Employee","2254":"Flip Equivalent Binary Trees","2255":"First Completely Painted Row or Column","2256":"Remove Max Number of Edges to Keep Graph Fully Traversable","2257":"Minimum Time to Complete Trips","2258":"Escape the Spreading Fire","2259":"Repeated Substring Pattern","2260":"Number of Ways to Reach a Position After Exactly k Steps","2261":"First Letter to Appear Twice","2262":"Reconstruct a 2-Row Binary Matrix","2263":"Simple Bank System","2264":"Intervals Between Identical Elements","2265":"Find the Array Concatenation Value","2266":"Divide Intervals Into Minimum Number of Groups","2267":"Longest Palindrome","2268":"Plus One","2269":"Stone Game VII","2270":"Maximize the Minimum Powered City","2271":"Design Cancellable Function","2272":"Minimum Cost For Tickets","2273":"Maximum Length of Pair Chain","2274":"Find Common Characters","2275":"Redistribute Characters to Make All Strings Equal","2276":"Maximum Profit of Operating a Centennial Wheel","2277":"Maximum Units on a Truck","2278":"Partition Array into Disjoint Intervals","2279":"Solving Questions With Brainpower","2280":"Sum of Distances","2281":"N-ary Tree Level Order Traversal","2282":"Construct the Lexicographically Largest Valid Sequence","2283":"Differences Between Two Objects","2284":"Count Sub Islands","2285":"Minimum Sideway Jumps","2286":"Most Visited Sector in a Circular Track","2287":"Min Cost Climbing Stairs","2288":"Number of Different Subsequences GCDs","2289":"Transpose File","2290":"Maximum Length of a Concatenated String with Unique Characters","2291":"Count Complete Tree Nodes","2292":"Maximum Number of Integers to Choose From a Range I","2293":"Count Ways to Build Rooms in an Ant Colony","2294":"Even Odd Tree","2295":"Shortest Path with Alternating Colors","2296":"Longest Ideal Subsequence","2297":"Contiguous Array","2298":"Max Sum of a Pair With Equal Sum of Digits","2299":"Number of Good Leaf Nodes Pairs","2300":"Is Graph Bipartite?","2301":"Find the Longest Substring Containing Vowels in Even Counts","2302":"Convert a Number to Hexadecimal","2303":"Cycle Length Queries in a Tree","2304":"String Matching in an Array","2305":"Matchsticks to Square","2306":"Count Numbers with Unique Digits","2307":"Tiling a Rectangle with the Fewest Squares","2308":"Minimum Insertions to Balance a Parentheses String","2309":"Most Frequent Number Following Key In an Array","2310":"Convert Sorted Array to Binary Search Tree","2311":"Number of Recent Calls","2312":"Number of 1 Bits","2313":"Jump Game III","2314":"Count Good Nodes in Binary Tree","2315":"Maximal Score After Applying K Operations","2316":"Maximum Average Pass Ratio","2317":"Binary Search Tree Iterator","2318":"Modify Graph Edge Weights","2319":"Minimum Non-Zero Product of the Array Elements","2320":"Make Costs of Paths Equal in a Binary Tree","2321":"Event Emitter","2322":"Minimum Total Cost to Make Arrays Unequal","2323":"Design a Stack With Increment Operation","2324":"Check Distances Between Same Letters","2325":"Difference Between Ones and Zeros in Row and Column","2326":"Validate IP Address","2327":"Largest Substring Between Two Equal Characters","2328":"Loud and Rich","2329":"Sum of Left Leaves","2330":"Binary Tree Pruning","2331":"Matrix Cells in Distance Order","2332":"Sum of Subarray Minimums","2333":"Add Binary","2334":"Reducing Dishes","2335":"Summary Ranges","2336":"Sum in a Matrix","2337":"Find the Minimum Number of Fibonacci Numbers Whose Sum Is K","2338":"Ugly Number","2339":"Maximum Product of Two Elements in an Array","2340":"Pacific Atlantic Water Flow","2341":"Insert Interval","2342":"Split With Minimum Sum","2343":"Incremental Memory Leak","2344":"Majority Element II","2345":"Apply Discount to Prices","2346":"Invalid Transactions","2347":"Allow One Function Call","2348":"Describe the Painting","2349":"Mice and Cheese","2350":"Minimum Bit Flips to Convert Number","2351":"Minimum Number of Flips to Convert Binary Matrix to Zero Matrix","2352":"Flatten Deeply Nested Array","2353":"Count Odd Numbers in an Interval Range","2354":"Find All Numbers Disappeared in an Array","2355":"Operations on Tree","2356":"Reverse Pairs","2357":"Best Team With No Conflicts","2358":"Unique Binary Search Trees","2359":"Find the Pivot Integer","2360":"Maximum Product of the Length of Two Palindromic Substrings","2361":"Maximum Number of Eaten Apples","2362":"Redundant Connection","2363":"Find Palindrome With Fixed Length","2364":"Max Consecutive Ones","2365":"Minimum Amount of Time to Fill Cups","2366":"Palindrome Pairs","2367":"Maximum Profit in Job Scheduling","2368":"Split Array into Fibonacci Sequence","2369":"Count Asterisks","2370":"Minimum Swaps to Group All 1's Together II","2371":"Minimum Absolute Difference","2372":"Merge Intervals","2373":"Add to Array-Form of Integer","2374":"Count Equal and Divisible Pairs in an Array","2375":"Equal Row and Column Pairs","2376":"Shortest Path to Get All Keys","2377":"Count the Number of Vowel Strings in Range","2378":"Repeated DNA Sequences","2379":"Check if Point Is Reachable","2380":"The Number of Employees Which Report to Each Employee","2381":"Subrectangle Queries","2382":"Partition Labels","2383":"Count Different Palindromic Subsequences","2384":"Time Needed to Rearrange a Binary String","2385":"Get Watched Videos by Your Friends","2386":"Make The String Great","2387":"Array of Objects to Matrix","2388":"String to Integer (atoi)","2389":"Number of Ways to Arrive at Destination","2390":"Market Analysis I","2391":"Lexicographically Smallest Palindrome","2392":"Partition Array Such That Maximum Difference Is K","2393":"Spiral Matrix IV","2394":"Make K-Subarray Sums Equal","2395":"Fraction Addition and Subtraction","2396":"Total Hamming Distance","2397":"Binary Tree Cameras","2398":"Maximum Absolute Sum of Any Subarray","2399":"Cat and Mouse II","2400":"Number of Squareful Arrays","2401":"K Radius Subarray Averages","2402":"Maximum Binary Tree","2403":"Construct String from Binary Tree","2404":"Most Profit Assigning Work","2405":"Reconstruct Itinerary"},"content":{"1":"You are given the head of a linked list. Delete the middle node, and return the head of the modified linked list.\nThe middle node of a linked list of size n is the \u230an \/ 2\u230bth node from the start using 0-based indexing, where \u230ax\u230b denotes the largest integer less than or equal to x.\nFor n = 1, 2, 3, 4, and 5, the middle nodes are 0, 1, 1, 2, and 2, respectively.\n","2":"You are given an integer array nums.\nIn one move, you can choose one element of nums and change it to any value.\nReturn the minimum difference between the largest and smallest value of nums after performing at most three moves.\n","3":"You are given the string croakOfFrogs, which represents a combination of the string \"croak\" from different frogs, that is, multiple frogs can croak at the same time, so multiple \"croak\" are mixed.\nReturn the minimum number of different frogs to finish all the croaks in the given string.\nA valid \"croak\" means a frog is printing five letters 'c', 'r', 'o', 'a', and 'k' sequentially. The frogs have to print all five letters to finish a croak. If the given string is not a combination of a valid \"croak\" return -1.\n","4":"In English, we have a concept called root, which can be followed by some other word to form another longer word - let's call this word successor. For example, when the root \"an\" is followed by the successor word \"other\", we can form a new word \"another\".\nGiven a dictionary consisting of many roots and a sentence consisting of words separated by spaces, replace all the successors in the sentence with the root forming it. If a successor can be replaced by more than one root, replace it with the root that has the shortest length.\nReturn the sentence after the replacement.\n","5":"You are given a string s and an integer k, a k duplicate removal consists of choosing k adjacent and equal letters from s and removing them, causing the left and the right side of the deleted substring to concatenate together.\nWe repeatedly make k duplicate removals on s until we no longer can.\nReturn the final string after all such duplicate removals have been made. It is guaranteed that the answer is unique.\n","6":"You are given a tree (i.e. a connected, undirected graph that has no cycles) rooted at node 0 consisting of n nodes numbered from 0 to n - 1. The tree is represented by a 0-indexed array parent of size n, where parent[i] is the parent of node i. Since node 0 is the root, parent[0] == -1.\nYou are also given a string s of length n, where s[i] is the character assigned to node i.\nReturn the length of the longest path in the tree such that no pair of adjacent nodes on the path have the same character assigned to them.\n","7":"Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\nFor example, 2 is written as II in Roman numeral, just two ones added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\nI can be placed before V (5) and X (10) to make 4 and 9. \nX can be placed before L (50) and C (100) to make 40 and 90. \nC can be placed before D (500) and M (1000) to make 400 and 900.\nGiven a roman numeral, convert it to an integer.\n","8":"You are given an integer num. Rearrange the digits of num such that its value is minimized and it does not contain any leading zeros.\nReturn the rearranged number with minimal value.\nNote that the sign of the number does not change after rearranging the digits.\n","9":"Given an integer array nums, return true if any value appears at least twice in the array, and return false if every element is distinct.\n","10":"You are given two strings s1 and s2 of equal length consisting of letters \"x\" and \"y\" only. Your task is to make these two strings equal to each other. You can swap any two characters that belong to different strings, which means: swap s1[i] and s2[j].\nReturn the minimum number of swaps required to make s1 and s2 equal, or return -1 if it is impossible to do so.\n","11":"Given two strings text1 and text2, return the length of their longest common subsequence. If there is no common subsequence, return 0.\nA subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\nFor example, \"ace\" is a subsequence of \"abcde\".\nA common subsequence of two strings is a subsequence that is common to both strings.\n","12":"There is a strange printer with the following two special requirements:\nOn each turn, the printer will print a solid rectangular pattern of a single color on the grid. This will cover up the existing colors in the rectangle.\nOnce the printer has used a color for the above operation, the same color cannot be used again.\nYou are given a m x n matrix targetGrid, where targetGrid[row][col] is the color in the position (row, col) of the grid.\nReturn true if it is possible to print the matrix targetGrid, otherwise, return false.\n","13":"It is a sweltering summer day, and a boy wants to buy some ice cream bars.\nAt the store, there are n ice cream bars. You are given an array costs of length n, where costs[i] is the price of the ith ice cream bar in coins. The boy initially has coins coins to spend, and he wants to buy as many ice cream bars as possible. \nNote: The boy can buy the ice cream bars in any order.\nReturn the maximum number of ice cream bars the boy can buy with coins coins.\nYou must solve the problem by counting sort.\n","14":"Given a binary tree root and a linked list with head as the first node. \nReturn True if all the elements in the linked list starting from the head correspond to some downward path connected in the binary tree otherwise return False.\nIn this context downward path means a path that starts at some node and goes downwards.\n","15":"There are n students in a class numbered from 0 to n - 1. The teacher will give each student a problem starting with the student number 0, then the student number 1, and so on until the teacher reaches the student number n - 1. After that, the teacher will restart the process, starting with the student number 0 again.\nYou are given a 0-indexed integer array chalk and an integer k. There are initially k pieces of chalk. When the student number i is given a problem to solve, they will use chalk[i] pieces of chalk to solve that problem. However, if the current number of chalk pieces is strictly less than chalk[i], then the student number i will be asked to replace the chalk.\nReturn the index of the student that will replace the chalk pieces.\n","16":"Given two sorted arrays nums1 and nums2 of size m and n respectively, return the median of the two sorted arrays.\nThe overall run time complexity should be O(log (m+n)).\n","17":"A message containing letters from A-Z can be encoded into numbers using the following mapping:\n'A' -> \"1\"\n'B' -> \"2\"\n...\n'Z' -> \"26\"\nTo decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, \"11106\" can be mapped into:\n\"AAJF\" with the grouping (1 1 10 6)\n\"KJF\" with the grouping (11 10 6)\nNote that the grouping (1 11 06) is invalid because \"06\" cannot be mapped into 'F' since \"6\" is different from \"06\".\nGiven a string s containing only digits, return the number of ways to decode it.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n","18":"You are given an n x n 2D matrix representing an image, rotate the image by 90 degrees (clockwise).\nYou have to rotate the image in-place, which means you have to modify the input 2D matrix directly. DO NOT allocate another 2D matrix and do the rotation.\n","19":"Given a list of strings words and a string pattern, return a list of words[i] that match pattern. You may return the answer in any order.\nA word matches the pattern if there exists a permutation of letters p so that after replacing every letter x in the pattern with p(x), we get the desired word.\nRecall that a permutation of letters is a bijection from letters to letters: every letter maps to another letter, and no two letters map to the same letter.\n","20":"There are n people in a line queuing to buy tickets, where the 0th person is at the front of the line and the (n - 1)th person is at the back of the line.\nYou are given a 0-indexed integer array tickets of length n where the number of tickets that the ith person would like to buy is tickets[i].\nEach person takes exactly 1 second to buy a ticket. A person can only buy 1 ticket at a time and has to go back to the end of the line (which happens instantaneously) in order to buy more tickets. If a person does not have any tickets left to buy, the person will leave the line.\nReturn the time taken for the person at position k (0-indexed) to finish buying tickets.\n","21":"You are given a list of songs where the ith song has a duration of time[i] seconds.\nReturn the number of pairs of songs for which their total duration in seconds is divisible by 60. Formally, we want the number of indices i, j such that i < j with (time[i] + time[j]) % 60 == 0.\n","22":"You are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.\nReturn the length of the longest substring containing the same letter you can get after performing the above operations.\n","23":"An original string, consisting of lowercase English letters, can be encoded by the following steps:\nArbitrarily split it into a sequence of some number of non-empty substrings.\nArbitrarily choose some elements (possibly none) of the sequence, and replace each with its length (as a numeric string).\nConcatenate the sequence as the encoded string.\nFor example, one way to encode an original string \"abcdefghijklmnop\" might be:\nSplit it as a sequence: [\"ab\", \"cdefghijklmn\", \"o\", \"p\"].\nChoose the second and third elements to be replaced by their lengths, respectively. The sequence becomes [\"ab\", \"12\", \"1\", \"p\"].\nConcatenate the elements of the sequence to get the encoded string: \"ab121p\".\nGiven two encoded strings s1 and s2, consisting of lowercase English letters and digits 1-9 (inclusive), return true if there exists an original string that could be encoded as both s1 and s2. Otherwise, return false.\nNote: The test cases are generated such that the number of consecutive digits in s1 and s2 does not exceed 3.\n","24":"You are given two non-empty linked lists representing two non-negative integers. The most significant digit comes first and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n","25":"Given a n * n matrix grid of 0's and 1's only. We want to represent grid with a Quad-Tree.\nReturn the root of the Quad-Tree representing grid.\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\nval: True if the node represents a grid of 1's or False if the node represents a grid of 0's. Notice that you can assign the val to True or False when isLeaf is False, and both are accepted in the answer.\nisLeaf: True if the node is a leaf node on the tree or False if the node has four children.\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\nIf the current grid has the same value (i.e all 1's or all 0's) set isLeaf True and set val to the value of the grid and set the four children to Null and stop.\nIf the current grid has different values, set isLeaf to False and set val to any value and divide the current grid into four sub-grids as shown in the photo.\nRecurse for each of the children with the proper sub-grid.\nIf you want to know more about the Quad-Tree, you can refer to the wiki.\nQuad-Tree format:\nYou don't need to read this section for solving the problem. This is only if you want to understand the output format here. The output represents the serialized format of a Quad-Tree using level order traversal, where null signifies a path terminator where no node exists below.\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list [isLeaf, val].\nIf the value of isLeaf or val is True we represent it as 1 in the list [isLeaf, val] and if the value of isLeaf or val is False we represent it as 0.\n","26":"Given two strings s and t of lengths m and n respectively, return the minimum window\nsubstring\nof s such that every character in t (including duplicates) is included in the window. If there is no such substring, return the empty string \"\".\nThe testcases will be generated such that the answer is unique.\n","27":"Given n cuboids where the dimensions of the ith cuboid is cuboids[i] = [widthi, lengthi, heighti] (0-indexed). Choose a subset of cuboids and place them on each other.\nYou can place cuboid i on cuboid j if widthi <= widthj and lengthi <= lengthj and heighti <= heightj. You can rearrange any cuboid's dimensions by rotating it to put it on another cuboid.\nReturn the maximum height of the stacked cuboids.\n","28":"Given a string s, partition s such that every\nsubstring\nof the partition is a\npalindrome\n. Return all possible palindrome partitioning of s.\n","29":"You are given a string s consisting of lowercase English letters, and an integer k.\nFirst, convert s into an integer by replacing each letter with its position in the alphabet (i.e., replace 'a' with 1, 'b' with 2, ..., 'z' with 26). Then, transform the integer by replacing it with the sum of its digits. Repeat the transform operation k times in total.\nFor example, if s = \"zbax\" and k = 2, then the resulting integer would be 8 by the following operations:\nConvert: \"zbax\" \u279d \"(26)(2)(1)(24)\" \u279d \"262124\" \u279d 262124\nTransform #1: 262124 \u279d 2 + 6 + 2 + 1 + 2 + 4 \u279d 17\nTransform #2: 17 \u279d 1 + 7 \u279d 8\nReturn the resulting integer after performing the operations described above.\n","30":"There is an m x n matrix that is initialized to all 0's. There is also a 2D array indices where each indices[i] = [ri, ci] represents a 0-indexed location to perform some increment operations on the matrix.\nFor each location indices[i], do both of the following:\nIncrement all the cells on row ri.\nIncrement all the cells on column ci.\nGiven m, n, and indices, return the number of odd-valued cells in the matrix after applying the increment to all locations in indices.\n","31":"A gene string can be represented by an 8-character long string, with choices from 'A', 'C', 'G', and 'T'.\nSuppose we need to investigate a mutation from a gene string startGene to a gene string endGene where one mutation is defined as one single character changed in the gene string.\nFor example, \"AACCGGTT\" --> \"AACCGGTA\" is one mutation.\nThere is also a gene bank bank that records all the valid gene mutations. A gene must be in bank to make it a valid gene string.\nGiven the two gene strings startGene and endGene and the gene bank bank, return the minimum number of mutations needed to mutate from startGene to endGene. If there is no such a mutation, return -1.\nNote that the starting point is assumed to be valid, so it might not be included in the bank.\n","32":"There is a hotel with n rooms. The rooms are represented by a 2D integer array rooms where rooms[i] = [roomIdi, sizei] denotes that there is a room with room number roomIdi and size equal to sizei. Each roomIdi is guaranteed to be unique.\nYou are also given k queries in a 2D array queries where queries[j] = [preferredj, minSizej]. The answer to the jth query is the room number id of a room such that:\nThe room has a size of at least minSizej, and\nabs(id - preferredj) is minimized, where abs(x) is the absolute value of x.\nIf there is a tie in the absolute difference, then use the room with the smallest such id. If there is no such room, the answer is -1.\nReturn an array answer of length k where answer[j] contains the answer to the jth query.\n","33":"SQL Schema\nTable: Person\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| personId    | int     |\n| lastName    | varchar |\n| firstName   | varchar |\n+-------------+---------+\npersonId is the primary key column for this table.\nThis table contains information about the ID of some persons and their first and last names.\n  Table: Address\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| addressId   | int     |\n| personId    | int     |\n| city        | varchar |\n| state       | varchar |\n+-------------+---------+\naddressId is the primary key column for this table.\nEach row of this table contains information about the city and state of one person with ID = PersonId.\n  Write an SQL query to report the first name, last name, city, and state of each person in the Person table. If the address of a personId is not present in the Address table, report null instead.\nReturn the result table in any order.\nThe query result format is in the following example.\n","34":"You are given an integer array nums where the largest integer is unique.\nDetermine whether the largest element in the array is at least twice as much as every other number in the array. If it is, return the index of the largest element, or return -1 otherwise.\n","35":"Given two sorted 0-indexed integer arrays nums1 and nums2 as well as an integer k, return the kth (1-based) smallest product of nums1[i] * nums2[j] where 0 <= i < nums1.length and 0 <= j < nums2.length.\n","36":"Given the root of a binary tree, calculate the vertical order traversal of the binary tree.\nFor each node at position (row, col), its left and right children will be at positions (row + 1, col - 1) and (row + 1, col + 1) respectively. The root of the tree is at (0, 0).\nThe vertical order traversal of a binary tree is a list of top-to-bottom orderings for each column index starting from the leftmost column and ending on the rightmost column. There may be multiple nodes in the same row and same column. In such a case, sort these nodes by their values.\nReturn the vertical order traversal of the binary tree.\n","37":"There is a 1-based binary matrix where 0 represents land and 1 represents water. You are given integers row and col representing the number of rows and columns in the matrix, respectively.\nInitially on day 0, the entire matrix is land. However, each day a new cell becomes flooded with water. You are given a 1-based 2D array cells, where cells[i] = [ri, ci] represents that on the ith day, the cell on the rith row and cith column (1-based coordinates) will be covered with water (i.e., changed to 1).\nYou want to find the last day that it is possible to walk from the top to the bottom by only walking on land cells. You can start from any cell in the top row and end at any cell in the bottom row. You can only travel in the four cardinal directions (left, right, up, and down).\nReturn the last day where it is possible to walk from the top to the bottom by only walking on land cells.\n","38":"SQL Schema\nTable: Courses\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| student     | varchar |\n| class       | varchar |\n+-------------+---------+\n(student, class) is the primary key column for this table.\nEach row of this table indicates the name of a student and the class in which they are enrolled.\n  Write an SQL query to report all the classes that have at least five students.\nReturn the result table in any order.\nThe query result format is in the following example.\n","39":"You are given an m x n integer matrix grid, and three integers row, col, and color. Each value in the grid represents the color of the grid square at that location.\nTwo squares belong to the same connected component if they have the same color and are next to each other in any of the 4 directions.\nThe border of a connected component is all the squares in the connected component that are either 4-directionally adjacent to a square not in the component, or on the boundary of the grid (the first or last row or column).\nYou should color the border of the connected component that contains the square grid[row][col] with color.\nReturn the final grid.\n","40":"Given a string s, return the number of homogenous substrings of s. Since the answer may be too large, return it modulo 109 + 7.\nA string is homogenous if all the characters of the string are the same.\nA substring is a contiguous sequence of characters within a string.\n","41":"You are a product manager and currently leading a team to develop a new product. Unfortunately, the latest version of your product fails the quality check. Since each version is developed based on the previous version, all the versions after a bad version are also bad.\nSuppose you have n versions [1, 2, ..., n] and you want to find out the first bad one, which causes all the following ones to be bad.\nYou are given an API bool isBadVersion(version) which returns whether version is bad. Implement a function to find the first bad version. You should minimize the number of calls to the API.\n","42":"Given a positive integer num, return true if num is a perfect square or false otherwise.\nA perfect square is an integer that is the square of an integer. In other words, it is the product of some integer with itself.\nYou must not use any built-in library function, such as sqrt.\n","43":"Given an m x n binary matrix mat, return the number of special positions in mat.\nA position (i, j) is called special if mat[i][j] == 1 and all other elements in row i and column j are 0 (rows and columns are 0-indexed).\n","44":"There is a bag that consists of items, each item has a number 1, 0, or -1 written on it.\nYou are given four non-negative integers numOnes, numZeros, numNegOnes, and k.\nThe bag initially contains:\nnumOnes items with 1s written on them.\nnumZeroes items with 0s written on them.\nnumNegOnes items with -1s written on them.\nWe want to pick exactly k items among the available items. Return the maximum possible sum of numbers written on the items.\n","45":"You are given two integer arrays of equal length target and arr. In one step, you can select any non-empty subarray of arr and reverse it. You are allowed to make any number of steps.\nReturn true if you can make arr equal to target or false otherwise.\n","46":"A shop is selling candies at a discount. For every two candies sold, the shop gives a third candy for free.\nThe customer can choose any candy to take away for free as long as the cost of the chosen candy is less than or equal to the minimum cost of the two candies bought.\nFor example, if there are 4 candies with costs 1, 2, 3, and 4, and the customer buys candies with costs 2 and 3, they can take the candy with cost 1 for free, but not the candy with cost 4.\nGiven a 0-indexed integer array cost, where cost[i] denotes the cost of the ith candy, return the minimum cost of buying all the candies.\n","47":"A web developer needs to know how to design a web page's size. So, given a specific rectangular web page\u2019s area, your job by now is to design a rectangular web page, whose length L and width W satisfy the following requirements:\nThe area of the rectangular web page you designed must equal to the given target area.\nThe width W should not be larger than the length L, which means L >= W.\nThe difference between length L and width W should be as small as possible.\nReturn an array [L, W] where L and W are the length and width of the web page you designed in sequence.\n","48":"Given n points on a 1-D plane, where the ith point (from 0 to n-1) is at x = i, find the number of ways we can draw exactly k non-overlapping line segments such that each segment covers two or more points. The endpoints of each segment must have integral coordinates. The k line segments do not have to cover all n points, and they are allowed to share endpoints.\nReturn the number of ways we can draw k non-overlapping line segments. Since this number can be huge, return it modulo 109 + 7.\n","49":"You are playing a game involving a circular array of non-zero integers nums. Each nums[i] denotes the number of indices forward\/backward you must move if you are located at index i:\nIf nums[i] is positive, move nums[i] steps forward, and\nIf nums[i] is negative, move nums[i] steps backward.\nSince the array is circular, you may assume that moving forward from the last element puts you on the first element, and moving backwards from the first element puts you on the last element.\nA cycle in the array consists of a sequence of indices seq of length k where:\nFollowing the movement rules above results in the repeating index sequence seq[0] -> seq[1] -> ... -> seq[k - 1] -> seq[0] -> ...\nEvery nums[seq[j]] is either all positive or all negative.\nk > 1\nReturn true if there is a cycle in nums, or false otherwise.\n","50":"You are given a 0-indexed string blocks of length n, where blocks[i] is either 'W' or 'B', representing the color of the ith block. The characters 'W' and 'B' denote the colors white and black, respectively.\nYou are also given an integer k, which is the desired number of consecutive black blocks.\nIn one operation, you can recolor a white block such that it becomes a black block.\nReturn the minimum number of operations needed such that there is at least one occurrence of k consecutive black blocks.\n","51":"You are given an array prices where prices[i] is the price of a given stock on the ith day.\nYou want to maximize your profit by choosing a single day to buy one stock and choosing a different day in the future to sell that stock.\nReturn the maximum profit you can achieve from this transaction. If you cannot achieve any profit, return 0.\n","52":"Given an integer array nums, return the maximum possible sum of elements of the array such that it is divisible by three.\n","53":"You are given a string number representing a positive integer and a character digit.\nReturn the resulting string after removing exactly one occurrence of digit from number such that the value of the resulting string in decimal form is maximized. The test cases are generated such that digit occurs at least once in number.\n","54":"Given an integer n, return true if it is possible to represent n as the sum of distinct powers of three. Otherwise, return false.\nAn integer y is a power of three if there exists an integer x such that y == 3x.\n","55":"You are given two integer arrays nums1 and nums2. We write the integers of nums1 and nums2 (in the order they are given) on two separate horizontal lines.\nWe may draw connecting lines: a straight line connecting two numbers nums1[i] and nums2[j] such that:\nnums1[i] == nums2[j], and\nthe line we draw does not intersect any other connecting (non-horizontal) line.\nNote that a connecting line cannot intersect even at the endpoints (i.e., each number can only belong to one connecting line).\nReturn the maximum number of connecting lines we can draw in this way.\n","56":"Given the root of a binary tree and an integer targetSum, return all root-to-leaf paths where the sum of the node values in the path equals targetSum. Each path should be returned as a list of the node values, not node references.\nA root-to-leaf path is a path starting from the root and ending at any leaf node. A leaf is a node with no children.\n","57":"You are given an m x n integer matrix matrix with the following two properties:\nEach row is sorted in non-decreasing order.\nThe first integer of each row is greater than the last integer of the previous row.\nGiven an integer target, return true if target is in matrix or false otherwise.\nYou must write a solution in O(log(m * n)) time complexity.\n","58":"You are given a 0-indexed two-dimensional integer array nums.\nReturn the largest prime number that lies on at least one of the diagonals of nums. In case, no prime is present on any of the diagonals, return 0.\nNote that:\nAn integer is prime if it is greater than 1 and has no positive integer divisors other than 1 and itself.\nAn integer val is on one of the diagonals of nums if there exists an integer i for which nums[i][i] = val or an i for which nums[i][nums.length - i - 1] = val.\nIn the above diagram, one diagonal is [1,5,9] and another diagonal is [3,5,7].\n","59":"Given a non-empty special binary tree consisting of nodes with the non-negative value, where each node in this tree has exactly two or zero sub-node. If the node has two sub-nodes, then this node's value is the smaller value among its two sub-nodes. More formally, the property root.val = min(root.left.val, root.right.val) always holds.\nGiven such a binary tree, you need to output the second minimum value in the set made of all the nodes' value in the whole tree.\nIf no such second minimum value exists, output -1 instead.\n","60":"Given an array of intervals intervals where intervals[i] = [starti, endi], return the minimum number of intervals you need to remove to make the rest of the intervals non-overlapping.\n","61":"In the video game Fallout 4, the quest \"Road to Freedom\" requires players to reach a metal dial called the \"Freedom Trail Ring\" and use the dial to spell a specific keyword to open the door.\nGiven a string ring that represents the code engraved on the outer ring and another string key that represents the keyword that needs to be spelled, return the minimum number of steps to spell all the characters in the keyword.\nInitially, the first character of the ring is aligned at the \"12:00\" direction. You should spell all the characters in key one by one by rotating ring clockwise or anticlockwise to make each character of the string key aligned at the \"12:00\" direction and then by pressing the center button.\nAt the stage of rotating the ring to spell the key character key[i]:\nYou can rotate the ring clockwise or anticlockwise by one place, which counts as one step. The final purpose of the rotation is to align one of ring's characters at the \"12:00\" direction, where this character must equal key[i].\nIf the character key[i] has been aligned at the \"12:00\" direction, press the center button to spell, which also counts as one step. After the pressing, you could begin to spell the next character in the key (next stage). Otherwise, you have finished all the spelling.\n","62":"Let's say a positive integer is a super-palindrome if it is a palindrome, and it is also the square of a palindrome.\nGiven two positive integers left and right represented as strings, return the number of super-palindromes integers in the inclusive range [left, right].\n","63":"There are n different online courses numbered from 1 to n. You are given an array courses where courses[i] = [durationi, lastDayi] indicate that the ith course should be taken continuously for durationi days and must be finished before or on lastDayi.\nYou will start on the 1st day and you cannot take two or more courses simultaneously.\nReturn the maximum number of courses that you can take.\n","64":"Our hero Teemo is attacking an enemy Ashe with poison attacks! When Teemo attacks Ashe, Ashe gets poisoned for a exactly duration seconds. More formally, an attack at second t will mean Ashe is poisoned during the inclusive time interval [t, t + duration - 1]. If Teemo attacks again before the poison effect ends, the timer for it is reset, and the poison effect will end duration seconds after the new attack.\nYou are given a non-decreasing integer array timeSeries, where timeSeries[i] denotes that Teemo attacks Ashe at second timeSeries[i], and an integer duration.\nReturn the total number of seconds that Ashe is poisoned.\n","65":"You are given two arrays of strings that represent two inclusive events that happened on the same day, event1 and event2, where:\nevent1 = [startTime1, endTime1] and\nevent2 = [startTime2, endTime2].\nEvent times are valid 24 hours format in the form of HH:MM.\nA conflict happens when two events have some non-empty intersection (i.e., some moment is common to both events).\nReturn true if there is a conflict between two events. Otherwise, return false.\n","66":"You are given a string s consisting of digits and an integer k.\nA round can be completed if the length of s is greater than k. In one round, do the following:\nDivide s into consecutive groups of size k such that the first k characters are in the first group, the next k characters are in the second group, and so on. Note that the size of the last group can be smaller than k.\nReplace each group of s with a string representing the sum of all its digits. For example, \"346\" is replaced with \"13\" because 3 + 4 + 6 = 13.\nMerge consecutive groups together to form a new string. If the length of the string is greater than k, repeat from step 1.\nReturn s after all rounds have been completed.\n","67":"Given an integer n, return the number of ways you can write n as the sum of consecutive positive integers.\n","68":"You are given an array of logs. Each log is a space-delimited string of words, where the first word is the identifier.\nThere are two types of logs:\nLetter-logs: All words (except the identifier) consist of lowercase English letters.\nDigit-logs: All words (except the identifier) consist of digits.\nReorder these logs so that:\nThe letter-logs come before all digit-logs.\nThe letter-logs are sorted lexicographically by their contents. If their contents are the same, then sort them lexicographically by their identifiers.\nThe digit-logs maintain their relative ordering.\nReturn the final order of the logs.\n","69":"SQL Schema\nTable: Insurance\n+-------------+-------+\n| Column Name | Type  |\n+-------------+-------+\n| pid         | int   |\n| tiv_2015    | float |\n| tiv_2016    | float |\n| lat         | float |\n| lon         | float |\n+-------------+-------+\npid is the primary key column for this table.\nEach row of this table contains information about one policy where:\npid is the policyholder's policy ID.\ntiv_2015 is the total investment value in 2015 and tiv_2016 is the total investment value in 2016.\nlat is the latitude of the policy holder's city. It's guaranteed that lat is not NULL.\nlon is the longitude of the policy holder's city. It's guaranteed that lon is not NULL.\n  Write an SQL query to report the sum of all total investment values in 2016 tiv_2016, for all policyholders who:\nhave the same tiv_2015 value as one or more other policyholders, and\nare not located in the same city like any other policyholder (i.e., the (lat, lon) attribute pairs must be unique).\nRound tiv_2016 to two decimal places.\nThe query result format is in the following example.\n","70":"Given the array orders, which represents the orders that customers have done in a restaurant. More specifically orders[i]=[customerNamei,tableNumberi,foodItemi] where customerNamei is the name of the customer, tableNumberi is the table customer sit at, and foodItemi is the item customer orders.\nReturn the restaurant's \u201cdisplay table\u201d. The \u201cdisplay table\u201d is a table whose row entries denote how many of each food item each table ordered. The first column is the table number and the remaining columns correspond to each food item in alphabetical order. The first row should be a header whose first column is \u201cTable\u201d, followed by the names of the food items. Note that the customer names are not part of the table. Additionally, the rows should be sorted in numerically increasing order.\n","71":"You are given n balloons, indexed from 0 to n - 1. Each balloon is painted with a number on it represented by an array nums. You are asked to burst all the balloons.\nIf you burst the ith balloon, you will get nums[i - 1] * nums[i] * nums[i + 1] coins. If i - 1 or i + 1 goes out of bounds of the array, then treat it as if there is a balloon with a 1 painted on it.\nReturn the maximum coins you can collect by bursting the balloons wisely.\n","72":"An underground railway system is keeping track of customer travel times between different stations. They are using this data to calculate the average time it takes to travel from one station to another.\nImplement the UndergroundSystem class:\nvoid checkIn(int id, string stationName, int t)\nA customer with a card ID equal to id, checks in at the station stationName at time t.\nA customer can only be checked into one place at a time.\nvoid checkOut(int id, string stationName, int t)\nA customer with a card ID equal to id, checks out from the station stationName at time t.\ndouble getAverageTime(string startStation, string endStation)\nReturns the average time it takes to travel from startStation to endStation.\nThe average time is computed from all the previous traveling times from startStation to endStation that happened directly, meaning a check in at startStation followed by a check out from endStation.\nThe time it takes to travel from startStation to endStation may be different from the time it takes to travel from endStation to startStation.\nThere will be at least one customer that has traveled from startStation to endStation before getAverageTime is called.\nYou may assume all calls to the checkIn and checkOut methods are consistent. If a customer checks in at time t1 then checks out at time t2, then t1 < t2. All events happen in chronological order.\n","73":"Given an integer n represented as a string, return the smallest good base of n.\nWe call k >= 2 a good base of n, if all digits of n base k are 1's.\n","74":"There are n soldiers standing in a line. Each soldier is assigned a unique rating value.\nYou have to form a team of 3 soldiers amongst them under the following rules:\nChoose 3 soldiers with index (i, j, k) with rating (rating[i], rating[j], rating[k]).\nA team is valid if: (rating[i] < rating[j] < rating[k]) or (rating[i] > rating[j] > rating[k]) where (0 <= i < j < k < n).\nReturn the number of teams you can form given the conditions. (soldiers can be part of multiple teams).\n","75":"You have a data structure of employee information, including the employee's unique ID, importance value, and direct subordinates' IDs.\nYou are given an array of employees employees where:\nemployees[i].id is the ID of the ith employee.\nemployees[i].importance is the importance value of the ith employee.\nemployees[i].subordinates is a list of the IDs of the direct subordinates of the ith employee.\nGiven an integer id that represents an employee's ID, return the total importance value of this employee and all their direct and indirect subordinates.\n","76":"You are given a 0-indexed 2D integer array brackets where brackets[i] = [upperi, percenti] means that the ith tax bracket has an upper bound of upperi and is taxed at a rate of percenti. The brackets are sorted by upper bound (i.e. upperi-1 < upperi for 0 < i < brackets.length).\nTax is calculated as follows:\nThe first upper0 dollars earned are taxed at a rate of percent0.\nThe next upper1 - upper0 dollars earned are taxed at a rate of percent1.\nThe next upper2 - upper1 dollars earned are taxed at a rate of percent2.\nAnd so on.\nYou are given an integer income representing the amount of money you earned. Return the amount of money that you have to pay in taxes. Answers within 10-5 of the actual answer will be accepted.\n","77":"n passengers board an airplane with exactly n seats. The first passenger has lost the ticket and picks a seat randomly. But after that, the rest of the passengers will:\nTake their own seat if it is still available, and\nPick other seats randomly when they find their seat occupied\nReturn the probability that the nth person gets his own seat.\n","78":"You are given the root of a binary search tree and an array queries of size n consisting of positive integers.\nFind a 2D array answer of size n where answer[i] = [mini, maxi]:\nmini is the largest value in the tree that is smaller than or equal to queries[i]. If a such value does not exist, add -1 instead.\nmaxi is the smallest value in the tree that is greater than or equal to queries[i]. If a such value does not exist, add -1 instead.\nReturn the array answer.\n","79":"You are given an integer money denoting the amount of money (in dollars) that you have and another integer children denoting the number of children that you must distribute the money to.\nYou have to distribute the money according to the following rules:\nAll money must be distributed.\nEveryone must receive at least 1 dollar.\nNobody receives 4 dollars.\nReturn the maximum number of children who may receive exactly 8 dollars if you distribute the money according to the aforementioned rules. If there is no way to distribute the money, return -1.\n","80":"Given the head of a singly linked list, sort the list using insertion sort, and return the sorted list's head.\nThe steps of the insertion sort algorithm:\nInsertion sort iterates, consuming one input element each repetition and growing a sorted output list.\nAt each iteration, insertion sort removes one element from the input data, finds the location it belongs within the sorted list and inserts it there.\nIt repeats until no input elements remain.\nThe following is a graphical example of the insertion sort algorithm. The partially sorted list (black) initially contains only the first element in the list. One element (red) is removed from the input data and inserted in-place into the sorted list with each iteration.\n","81":"Given an integer array nums, return the number of longest increasing subsequences.\nNotice that the sequence has to be strictly increasing.\n","82":"You are given a 0-indexed array of strings nums, where each string is of equal length and consists of only digits.\nYou are also given a 0-indexed 2D integer array queries where queries[i] = [ki, trimi]. For each queries[i], you need to:\nTrim each number in nums to its rightmost trimi digits.\nDetermine the index of the kith smallest trimmed number in nums. If two trimmed numbers are equal, the number with the lower index is considered to be smaller.\nReset each number in nums to its original length.\nReturn an array answer of the same length as queries, where answer[i] is the answer to the ith query.\nNote:\nTo trim to the rightmost x digits means to keep removing the leftmost digit, until only x digits remain.\nStrings in nums may contain leading zeros.\n","83":"There is a long table with a line of plates and candles arranged on top of it. You are given a 0-indexed string s consisting of characters '*' and '|' only, where a '*' represents a plate and a '|' represents a candle.\nYou are also given a 0-indexed 2D integer array queries where queries[i] = [lefti, righti] denotes the substring s[lefti...righti] (inclusive). For each query, you need to find the number of plates between candles that are in the substring. A plate is considered between candles if there is at least one candle to its left and at least one candle to its right in the substring.\nFor example, s = \"||**||**|*\", and a query [3, 8] denotes the substring \"*||**|\". The number of plates between candles in this substring is 2, as each of the two plates has at least one candle in the substring to its left and right.\nReturn an integer array answer where answer[i] is the answer to the ith query.\n","84":"A peak element in a 2D grid is an element that is strictly greater than all of its adjacent neighbors to the left, right, top, and bottom.\nGiven a 0-indexed m x n matrix mat where no two adjacent cells are equal, find any peak element mat[i][j] and return the length 2 array [i,j].\nYou may assume that the entire matrix is surrounded by an outer perimeter with the value -1 in each cell.\nYou must write an algorithm that runs in O(m log(n)) or O(n log(m)) time.\n","85":"Given an array nums that represents a permutation of integers from 1 to n. We are going to construct a binary search tree (BST) by inserting the elements of nums in order into an initially empty BST. Find the number of different ways to reorder nums so that the constructed BST is identical to that formed from the original array nums.\nFor example, given nums = [2,1,3], we will have 2 as the root, 1 as a left child, and 3 as a right child. The array [2,3,1] also yields the same BST but [3,2,1] yields a different BST.\nReturn the number of ways to reorder nums such that the BST formed is identical to the original BST formed from nums.\nSince the answer may be very large, return it modulo 109 + 7.\n","86":"Given the head of a singly linked list and an integer k, split the linked list into k consecutive linked list parts.\nThe length of each part should be as equal as possible: no two parts should have a size differing by more than one. This may lead to some parts being null.\nThe parts should be in the order of occurrence in the input list, and parts occurring earlier should always have a size greater than or equal to parts occurring later.\nReturn an array of the k parts.\n","87":"Given an array nums of distinct integers, return all the possible permutations. You can return the answer in any order.\n","88":"Given a 2D integer array nums where nums[i] is a non-empty array of distinct positive integers, return the list of integers that are present in each array of nums sorted in ascending order.\n","89":"You are given a string num representing the digits of a very large integer and an integer k. You are allowed to swap any two adjacent digits of the integer at most k times.\nReturn the minimum integer you can obtain also as a string.\n","90":"Given a binary search tree (BST), find the lowest common ancestor (LCA) node of two given nodes in the BST.\nAccording to the definition of LCA on Wikipedia: \u201cThe lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).\u201d\n","91":"You are given a 0-indexed integer array nums. In one operation, you can:\nChoose two different indices i and j such that 0 <= i, j < nums.length.\nChoose a non-negative integer k such that the kth bit (0-indexed) in the binary representation of nums[i] and nums[j] is 1.\nSubtract 2k from nums[i] and nums[j].\nA subarray is beautiful if it is possible to make all of its elements equal to 0 after applying the above operation any number of times.\nReturn the number of beautiful subarrays in the array nums.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","92":"Given an integer array of even length arr, return true if it is possible to reorder arr such that arr[2 * i + 1] = 2 * arr[2 * i] for every 0 <= i < len(arr) \/ 2, or false otherwise.\n","93":"You are given a character array keys containing unique characters and a string array values containing strings of length 2. You are also given another string array dictionary that contains all permitted original strings after decryption. You should implement a data structure that can encrypt or decrypt a 0-indexed string.\nA string is encrypted with the following process:\nFor each character c in the string, we find the index i satisfying keys[i] == c in keys.\nReplace c with values[i] in the string.\nNote that in case a character of the string is not present in keys, the encryption process cannot be carried out, and an empty string \"\" is returned.\nA string is decrypted with the following process:\nFor each substring s of length 2 occurring at an even index in the string, we find an i such that values[i] == s. If there are multiple valid i, we choose any one of them. This means a string could have multiple possible strings it can decrypt to.\nReplace s with keys[i] in the string.\nImplement the Encrypter class:\nEncrypter(char[] keys, String[] values, String[] dictionary) Initializes the Encrypter class with keys, values, and dictionary.\nString encrypt(String word1) Encrypts word1 with the encryption process described above and returns the encrypted string.\nint decrypt(String word2) Returns the number of possible strings word2 could decrypt to that also appear in dictionary.\n","94":"There are k workers who want to move n boxes from an old warehouse to a new one. You are given the two integers n and k, and a 2D integer array time of size k x 4 where time[i] = [leftToRighti, pickOldi, rightToLefti, putNewi].\nThe warehouses are separated by a river and connected by a bridge. The old warehouse is on the right bank of the river, and the new warehouse is on the left bank of the river. Initially, all k workers are waiting on the left side of the bridge. To move the boxes, the ith worker (0-indexed) can :\nCross the bridge from the left bank (new warehouse) to the right bank (old warehouse) in leftToRighti minutes.\nPick a box from the old warehouse and return to the bridge in pickOldi minutes. Different workers can pick up their boxes simultaneously.\nCross the bridge from the right bank (old warehouse) to the left bank (new warehouse) in rightToLefti minutes.\nPut the box in the new warehouse and return to the bridge in putNewi minutes. Different workers can put their boxes simultaneously.\nA worker i is less efficient than a worker j if either condition is met:\nleftToRighti + rightToLefti > leftToRightj + rightToLeftj\nleftToRighti + rightToLefti == leftToRightj + rightToLeftj and i > j\nThe following rules regulate the movement of the workers through the bridge :\nIf a worker x reaches the bridge while another worker y is crossing the bridge, x waits at their side of the bridge.\nIf the bridge is free, the worker waiting on the right side of the bridge gets to cross the bridge. If more than one worker is waiting on the right side, the one with the lowest efficiency crosses first.\nIf the bridge is free and no worker is waiting on the right side, and at least one box remains at the old warehouse, the worker on the left side of the river gets to cross the bridge. If more than one worker is waiting on the left side, the one with the lowest efficiency crosses first.\nReturn the instance of time at which the last worker reaches the left bank of the river after all n boxes have been put in the new warehouse.\n","95":"You are standing at position 0 on an infinite number line. There is a destination at position target.\nYou can make some number of moves numMoves so that:\nOn each move, you can either go left or right.\nDuring the ith move (starting from i == 1 to i == numMoves), you take i steps in the chosen direction.\nGiven the integer target, return the minimum number of moves required (i.e., the minimum numMoves) to reach the destination.\n","96":"You are given a 0-indexed integer array buses of length n, where buses[i] represents the departure time of the ith bus. You are also given a 0-indexed integer array passengers of length m, where passengers[j] represents the arrival time of the jth passenger. All bus departure times are unique. All passenger arrival times are unique.\nYou are given an integer capacity, which represents the maximum number of passengers that can get on each bus.\nWhen a passenger arrives, they will wait in line for the next available bus. You can get on a bus that departs at x minutes if you arrive at y minutes where y <= x, and the bus is not full. Passengers with the earliest arrival times get on the bus first.\nMore formally when a bus arrives, either:\nIf capacity or fewer passengers are waiting for a bus, they will all get on the bus, or\nThe capacity passengers with the earliest arrival times will get on the bus.\nReturn the latest time you may arrive at the bus station to catch a bus. You cannot arrive at the same time as another passenger.\nNote: The arrays buses and passengers are not necessarily sorted.\n","97":"You are given a 0-indexed integer array nums and an integer k. Your task is to perform the following operation exactly k times in order to maximize your score:\nSelect an element m from nums.\nRemove the selected element m from the array.\nAdd a new element with a value of m + 1 to the array.\nIncrease your score by m.\nReturn the maximum score you can achieve after performing the operation exactly k times.\n","98":"The power of an integer x is defined as the number of steps needed to transform x into 1 using the following steps:\nif x is even then x = x \/ 2\nif x is odd then x = 3 * x + 1\nFor example, the power of x = 3 is 7 because 3 needs 7 steps to become 1 (3 --> 10 --> 5 --> 16 --> 8 --> 4 --> 2 --> 1).\nGiven three integers lo, hi and k. The task is to sort all integers in the interval [lo, hi] by the power value in ascending order, if two or more integers have the same power value sort them by ascending order.\nReturn the kth integer in the range [lo, hi] sorted by the power value.\nNotice that for any integer x (lo <= x <= hi) it is guaranteed that x will transform into 1 using these steps and that the power of x is will fit in a 32-bit signed integer.\n","99":"You are given an array of positive integers price where price[i] denotes the price of the ith candy and a positive integer k.\nThe store sells baskets of k distinct candies. The tastiness of a candy basket is the smallest absolute difference of the prices of any two candies in the basket.\nReturn the maximum tastiness of a candy basket.\n","100":"An axis-aligned rectangle is represented as a list [x1, y1, x2, y2], where (x1, y1) is the coordinate of its bottom-left corner, and (x2, y2) is the coordinate of its top-right corner. Its top and bottom edges are parallel to the X-axis, and its left and right edges are parallel to the Y-axis.\nTwo rectangles overlap if the area of their intersection is positive. To be clear, two rectangles that only touch at the corner or edges do not overlap.\nGiven two axis-aligned rectangles rec1 and rec2, return true if they overlap, otherwise return false.\n","101":"You are given an array of integers distance.\nYou start at the point (0, 0) on an X-Y plane, and you move distance[0] meters to the north, then distance[1] meters to the west, distance[2] meters to the south, distance[3] meters to the east, and so on. In other words, after each move, your direction changes counter-clockwise.\nReturn true if your path crosses itself or false if it does not.\n","102":"Given the array houses where houses[i] is the location of the ith house along a street and an integer k, allocate k mailboxes in the street.\nReturn the minimum total distance between each house and its nearest mailbox.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n","103":"Alice and Bob take turns playing a game, with Alice starting first.\nThere are n stones arranged in a row. On each player's turn, while the number of stones is more than one, they will do the following:\nChoose an integer x > 1, and remove the leftmost x stones from the row.\nAdd the sum of the removed stones' values to the player's score.\nPlace a new stone, whose value is equal to that sum, on the left side of the row.\nThe game stops when only one stone is left in the row.\nThe score difference between Alice and Bob is (Alice's score - Bob's score). Alice's goal is to maximize the score difference, and Bob's goal is the minimize the score difference.\nGiven an integer array stones of length n where stones[i] represents the value of the ith stone from the left, return the score difference between Alice and Bob if they both play optimally.\n","104":"SQL Schema\nTable: Employee\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| salary      | int     |\n| managerId   | int     |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the ID of an employee, their name, salary, and the ID of their manager.\n  Write an SQL query to find the employees who earn more than their managers.\nReturn the result table in any order.\nThe query result format is in the following example.\n","105":"A teacher is writing a test with n true\/false questions, with 'T' denoting true and 'F' denoting false. He wants to confuse the students by maximizing the number of consecutive questions with the same answer (multiple trues or multiple falses in a row).\nYou are given a string answerKey, where answerKey[i] is the original answer to the ith question. In addition, you are given an integer k, the maximum number of times you may perform the following operation:\nChange the answer key for any question to 'T' or 'F' (i.e., set answerKey[i] to 'T' or 'F').\nReturn the maximum number of consecutive 'T's or 'F's in the answer key after performing the operation at most k times.\n","106":"Given a string s and a character letter, return the percentage of characters in s that equal letter rounded down to the nearest whole percent.\n","107":"You have a lock in front of you with 4 circular wheels. Each wheel has 10 slots: '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'. The wheels can rotate freely and wrap around: for example we can turn '9' to be '0', or '0' to be '9'. Each move consists of turning one wheel one slot.\nThe lock initially starts at '0000', a string representing the state of the 4 wheels.\nYou are given a list of deadends dead ends, meaning if the lock displays any of these codes, the wheels of the lock will stop turning and you will be unable to open it.\nGiven a target representing the value of the wheels that will unlock the lock, return the minimum total number of turns required to open the lock, or -1 if it is impossible.\n","108":"You are given a 0-indexed integer array piles, where piles[i] represents the number of stones in the ith pile, and an integer k. You should apply the following operation exactly k times:\nChoose any piles[i] and remove floor(piles[i] \/ 2) stones from it.\nNotice that you can apply the operation on the same pile more than once.\nReturn the minimum possible total number of stones remaining after applying the k operations.\nfloor(x) is the greatest integer that is smaller than or equal to x (i.e., rounds x down).\n","109":"Design a stack-like data structure to push elements to the stack and pop the most frequent element from the stack.\nImplement the FreqStack class:\nFreqStack() constructs an empty frequency stack.\nvoid push(int val) pushes an integer val onto the top of the stack.\nint pop() removes and returns the most frequent element in the stack.\nIf there is a tie for the most frequent element, the element closest to the stack's top is removed and returned.\n","110":"You are given an integer array digits, where each element is a digit. The array may contain duplicates.\nYou need to find all the unique integers that follow the given requirements:\nThe integer consists of the concatenation of three elements from digits in any arbitrary order.\nThe integer does not have leading zeros.\nThe integer is even.\nFor example, if the given digits were [1, 2, 3], integers 132 and 312 follow the requirements.\nReturn a sorted array of the unique integers.\n","111":"You are given an integer n. A 0-indexed integer array nums of length n + 1 is generated in the following way:\nnums[0] = 0\nnums[1] = 1\nnums[2 * i] = nums[i] when 2 <= 2 * i <= n\nnums[2 * i + 1] = nums[i] + nums[i + 1] when 2 <= 2 * i + 1 <= n\nReturn the maximum integer in the array nums.\n","112":"Given the head of a linked list and a value x, partition it such that all nodes less than x come before nodes greater than or equal to x.\nYou should preserve the original relative order of the nodes in each of the two partitions.\n","113":"Given an integer array nums of 2n integers, group these integers into n pairs (a1, b1), (a2, b2), ..., (an, bn) such that the sum of min(ai, bi) for all i is maximized. Return the maximized sum.\n","114":"Given a triangle array, return the minimum path sum from top to bottom.\nFor each step, you may move to an adjacent number of the row below. More formally, if you are on index i on the current row, you may move to either index i or index i + 1 on the next row.\n","115":"You are given two strings s and t of the same length and an integer maxCost.\nYou want to change s to t. Changing the ith character of s to ith character of t costs |s[i] - t[i]| (i.e., the absolute difference between the ASCII values of the characters).\nReturn the maximum length of a substring of s that can be changed to be the same as the corresponding substring of t with a cost less than or equal to maxCost. If there is no substring from s that can be changed to its corresponding substring from t, return 0.\n","116":"Given the roots of two binary trees p and q, write a function to check if they are the same or not.\nTwo binary trees are considered the same if they are structurally identical, and the nodes have the same value.\n","117":"You are given an integer n indicating there are n specialty retail stores. There are m product types of varying amounts, which are given as a 0-indexed integer array quantities, where quantities[i] represents the number of products of the ith product type.\nYou need to distribute all products to the retail stores following these rules:\nA store can only be given at most one product type but can be given any amount of it.\nAfter distribution, each store will have been given some number of products (possibly 0). Let x represent the maximum number of products given to any store. You want x to be as small as possible, i.e., you want to minimize the maximum number of products that are given to any store.\nReturn the minimum possible x.\n","118":"You are given a 0-indexed binary array nums of length n. nums can be divided at index i (where 0 <= i <= n) into two arrays (possibly empty) numsleft and numsright:\nnumsleft has all the elements of nums between index 0 and i - 1 (inclusive), while numsright has all the elements of nums between index i and n - 1 (inclusive).\nIf i == 0, numsleft is empty, while numsright has all the elements of nums.\nIf i == n, numsleft has all the elements of nums, while numsright is empty.\nThe division score of an index i is the sum of the number of 0's in numsleft and the number of 1's in numsright.\nReturn all distinct indices that have the highest possible division score. You may return the answer in any order.\n","119":"You are given an integer n. You roll a fair 6-sided dice n times. Determine the total number of distinct sequences of rolls possible such that the following conditions are satisfied:\nThe greatest common divisor of any adjacent values in the sequence is equal to 1.\nThere is at least a gap of 2 rolls between equal valued rolls. More formally, if the value of the ith roll is equal to the value of the jth roll, then abs(i - j) > 2.\nReturn the total number of distinct sequences possible. Since the answer may be very large, return it modulo 109 + 7.\nTwo sequences are considered distinct if at least one element is different.\n","120":"You are given a 0-indexed integer array nums of size n and a positive integer k.\nWe call an index i in the range k <= i < n - k good if the following conditions are satisfied:\nThe k elements that are just before the index i are in non-increasing order.\nThe k elements that are just after the index i are in non-decreasing order.\nReturn an array of all good indices sorted in increasing order.\n","121":"You are given a stream of records about a particular stock. Each record contains a timestamp and the corresponding price of the stock at that timestamp.\nUnfortunately due to the volatile nature of the stock market, the records do not come in order. Even worse, some records may be incorrect. Another record with the same timestamp may appear later in the stream correcting the price of the previous wrong record.\nDesign an algorithm that:\nUpdates the price of the stock at a particular timestamp, correcting the price from any previous records at the timestamp.\nFinds the latest price of the stock based on the current records. The latest price is the price at the latest timestamp recorded.\nFinds the maximum price the stock has been based on the current records.\nFinds the minimum price the stock has been based on the current records.\nImplement the StockPrice class:\nStockPrice() Initializes the object with no price records.\nvoid update(int timestamp, int price) Updates the price of the stock at the given timestamp.\nint current() Returns the latest price of the stock.\nint maximum() Returns the maximum price of the stock.\nint minimum() Returns the minimum price of the stock.\n","122":"Given an integer array nums containing n integers, find the beauty of each subarray of size k.\nThe beauty of a subarray is the xth smallest integer in the subarray if it is negative, or 0 if there are fewer than x negative integers.\nReturn an integer array containing n - k + 1 integers, which denote the beauty of the subarrays in order from the first index in the array.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","123":"Given two strings: s1 and s2 with the same size, check if some permutation of string s1 can break some permutation of string s2 or vice-versa. In other words s2 can break s1 or vice-versa.\nA string x can break string y (both of size n) if x[i] >= y[i] (in alphabetical order) for all i between 0 and n-1.\n","124":"SQL Schema\nTable: Activity\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| machine_id     | int     |\n| process_id     | int     |\n| activity_type  | enum    |\n| timestamp      | float   |\n+----------------+---------+\nThe table shows the user activities for a factory website.\n(machine_id, process_id, activity_type) is the primary key of this table.\nmachine_id is the ID of a machine.\nprocess_id is the ID of a process running on the machine with ID machine_id.\nactivity_type is an ENUM of type ('start', 'end').\ntimestamp is a float representing the current time in seconds.\n'start' means the machine starts the process at the given timestamp and 'end' means the machine ends the process at the given timestamp.\nThe 'start' timestamp will always be before the 'end' timestamp for every (machine_id, process_id) pair.\n  There is a factory website that has several machines each running the same number of processes. Write an SQL query to find the average time each machine takes to complete a process.\nThe time to complete a process is the 'end' timestamp minus the 'start' timestamp. The average time is calculated by the total time to complete every process on the machine divided by the number of processes that were run.\nThe resulting table should have the machine_id along with the average time as processing_time, which should be rounded to 3 decimal places.\nReturn the result table in any order.\nThe query result format is in the following example.\n","125":"Convert a non-negative integer num to its English words representation.\n","126":"Given an integer array nums and an integer k, return the number of good subarrays of nums.\nA subarray arr is good if it there are at least k pairs of indices (i, j) such that i < j and arr[i] == arr[j].\nA subarray is a contiguous non-empty sequence of elements within an array.\n","127":"You are given an integer array nums. A number x is lonely when it appears only once, and no adjacent numbers (i.e. x + 1 and x - 1) appear in the array.\nReturn all lonely numbers in nums. You may return the answer in any order.\n","128":"You start at the cell (rStart, cStart) of an rows x cols grid facing east. The northwest corner is at the first row and column in the grid, and the southeast corner is at the last row and column.\nYou will walk in a clockwise spiral shape to visit every position in this grid. Whenever you move outside the grid's boundary, we continue our walk outside the grid (but may return to the grid boundary later.). Eventually, we reach all rows * cols spaces of the grid.\nReturn an array of coordinates representing the positions of the grid in the order you visited them.\n","129":"You are given a 0-indexed integer array nums and an integer k.\nYou are initially standing at index 0. In one move, you can jump at most k steps forward without going outside the boundaries of the array. That is, you can jump from index i to any index in the range [i + 1, min(n - 1, i + k)] inclusive.\nYou want to reach the last index of the array (index n - 1). Your score is the sum of all nums[j] for each index j you visited in the array.\nReturn the maximum score you can get.\n","130":"You are given an integer array, nums, and an integer k. nums comprises of only 0's and 1's. In one move, you can choose two adjacent indices and swap their values.\nReturn the minimum number of moves required so that nums has k consecutive 1's.\n","131":"Given an m x n matrix, return a new matrix answer where answer[row][col] is the rank of matrix[row][col].\nThe rank is an integer that represents how large an element is compared to other elements. It is calculated using the following rules:\nThe rank is an integer starting from 1.\nIf two elements p and q are in the same row or column, then:\nIf p < q then rank(p) < rank(q)\nIf p == q then rank(p) == rank(q)\nIf p > q then rank(p) > rank(q)\nThe rank should be as small as possible.\nThe test cases are generated so that answer is unique under the given rules.\n","132":"SQL Schema\nTable: Patients\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| patient_id   | int     |\n| patient_name | varchar |\n| conditions   | varchar |\n+--------------+---------+\npatient_id is the primary key for this table.\n'conditions' contains 0 or more code separated by spaces. \nThis table contains information of the patients in the hospital.\n  Write an SQL query to report the patient_id, patient_name and conditions of the patients who have Type I Diabetes. Type I Diabetes always starts with DIAB1 prefix.\nReturn the result table in any order.\nThe query result format is in the following example.\n","133":"Special binary strings are binary strings with the following two properties:\nThe number of 0's is equal to the number of 1's.\nEvery prefix of the binary string has at least as many 1's as 0's.\nYou are given a special binary string s.\nA move consists of choosing two consecutive, non-empty, special substrings of s, and swapping them. Two strings are consecutive if the last character of the first string is exactly one index before the first character of the second string.\nReturn the lexicographically largest resulting string possible after applying the mentioned operations on the string.\n","134":"On a 2D plane, there are n points with integer coordinates points[i] = [xi, yi]. Return the minimum time in seconds to visit all the points in the order given by points.\nYou can move according to these rules:\nIn 1 second, you can either:\nmove vertically by one unit,\nmove horizontally by one unit, or\nmove diagonally sqrt(2) units (in other words, move one unit vertically then one unit horizontally in 1 second).\nYou have to visit the points in the same order as they appear in the array.\nYou are allowed to pass through points that appear later in the order, but these do not count as visits.\n","135":"SQL Schema\nTable: Employee\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| department  | varchar |\n| managerId   | int     |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the name of an employee, their department, and the id of their manager.\nIf managerId is null, then the employee does not have a manager.\nNo employee will be the manager of themself.\n  Write an SQL query to report the managers with at least five direct reports.\nReturn the result table in any order.\nThe query result format is in the following example.\n","136":"You are given a 0-indexed integer array nums of length n.\nThe average difference of the index i is the absolute difference between the average of the first i + 1 elements of nums and the average of the last n - i - 1 elements. Both averages should be rounded down to the nearest integer.\nReturn the index with the minimum average difference. If there are multiple such indices, return the smallest one.\nNote:\nThe absolute difference of two numbers is the absolute value of their difference.\nThe average of n elements is the sum of the n elements divided (integer division) by n.\nThe average of 0 elements is considered to be 0.\n","137":"You have a set of integers s, which originally contains all the numbers from 1 to n. Unfortunately, due to some error, one of the numbers in s got duplicated to another number in the set, which results in repetition of one number and loss of another number.\nYou are given an integer array nums representing the data status of this set after the error.\nFind the number that occurs twice and the number that is missing and return them in the form of an array.\n","138":"You are given the head of a linked list, and an integer k.\nReturn the head of the linked list after swapping the values of the kth node from the beginning and the kth node from the end (the list is 1-indexed).\n","139":"There is a directed weighted graph that consists of n nodes numbered from 0 to n - 1. The edges of the graph are initially represented by the given array edges where edges[i] = [fromi, toi, edgeCosti] meaning that there is an edge from fromi to toi with the cost edgeCosti.\nImplement the Graph class:\nGraph(int n, int[][] edges) initializes the object with n nodes and the given edges.\naddEdge(int[] edge) adds an edge to the list of edges where edge = [from, to, edgeCost]. It is guaranteed that there is no edge between the two nodes before adding this one.\nint shortestPath(int node1, int node2) returns the minimum cost of a path from node1 to node2. If no path exists, return -1. The cost of a path is the sum of the costs of the edges in the path.\n","140":"You are given the strings key and message, which represent a cipher key and a secret message, respectively. The steps to decode message are as follows:\nUse the first appearance of all 26 lowercase English letters in key as the order of the substitution table.\nAlign the substitution table with the regular English alphabet.\nEach letter in message is then substituted using the table.\nSpaces ' ' are transformed to themselves.\nFor example, given key = \"happy boy\" (actual key would have at least one instance of each letter in the alphabet), we have the partial substitution table of ('h' -> 'a', 'a' -> 'b', 'p' -> 'c', 'y' -> 'd', 'b' -> 'e', 'o' -> 'f').\nReturn the decoded message.\n","141":"There is a bi-directional graph with n vertices, where each vertex is labeled from 0 to n - 1. The edges in the graph are represented by a given 2D integer array edges, where edges[i] = [ui, vi] denotes an edge between vertex ui and vertex vi. Every vertex pair is connected by at most one edge, and no vertex has an edge to itself.\nReturn the length of the shortest cycle in the graph. If no cycle exists, return -1.\nA cycle is a path that starts and ends at the same node, and each edge in the path is used only once.\n","142":"Two players play a turn based game on a binary tree. We are given the root of this binary tree, and the number of nodes n in the tree. n is odd, and each node has a distinct value from 1 to n.\nInitially, the first player names a value x with 1 <= x <= n, and the second player names a value y with 1 <= y <= n and y != x. The first player colors the node with value x red, and the second player colors the node with value y blue.\nThen, the players take turns starting with the first player. In each turn, that player chooses a node of their color (red if player 1, blue if player 2) and colors an uncolored neighbor of the chosen node (either the left child, right child, or parent of the chosen node.)\nIf (and only if) a player cannot choose such a node in this way, they must pass their turn. If both players pass their turn, the game ends, and the winner is the player that colored more nodes.\nYou are the second player. If it is possible to choose such a y to ensure you win the game, return true. If it is not possible, return false.\n","143":"We distribute some number of candies, to a row of n = num_people people in the following way:\nWe then give 1 candy to the first person, 2 candies to the second person, and so on until we give n candies to the last person.\nThen, we go back to the start of the row, giving n + 1 candies to the first person, n + 2 candies to the second person, and so on until we give 2 * n candies to the last person.\nThis process repeats (with us giving one more candy each time, and moving to the start of the row after we reach the end) until we run out of candies.  The last person will receive all of our remaining candies (not necessarily one more than the previous gift).\nReturn an array (of length num_people and sum candies) that represents the final distribution of candies.\n","144":"We can scramble a string s to get a string t using the following algorithm:\nIf the length of the string is 1, stop.\nIf the length of the string is > 1, do the following:\nSplit the string into two non-empty substrings at a random index, i.e., if the string is s, divide it to x and y where s = x + y.\nRandomly decide to swap the two substrings or to keep them in the same order. i.e., after this step, s may become s = x + y or s = y + x.\nApply step 1 recursively on each of the two substrings x and y.\nGiven two strings s1 and s2 of the same length, return true if s2 is a scrambled string of s1, otherwise, return false.\n","145":"You are given a 0-indexed integer array mapping which represents the mapping rule of a shuffled decimal system. mapping[i] = j means digit i should be mapped to digit j in this system.\nThe mapped value of an integer is the new integer obtained by replacing each occurrence of digit i in the integer with mapping[i] for all 0 <= i <= 9.\nYou are also given another integer array nums. Return the array nums sorted in non-decreasing order based on the mapped values of its elements.\nNotes:\nElements with the same mapped values should appear in the same relative order as in the input.\nThe elements of nums should only be sorted based on their mapped values and not be replaced by them.\n","146":"Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,4,4,5,6,7] might become:\n[4,5,6,7,0,1,4] if it was rotated 4 times.\n[0,1,4,4,5,6,7] if it was rotated 7 times.\nNotice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]].\nGiven the sorted rotated array nums that may contain duplicates, return the minimum element of this array.\nYou must decrease the overall operation steps as much as possible.\n","147":"Balanced strings are those that have an equal quantity of 'L' and 'R' characters.\nGiven a balanced string s, split it into some number of substrings such that:\nEach substring is balanced.\nReturn the maximum number of balanced strings you can obtain.\n","148":"Given an integer array nums, handle multiple queries of the following types:\nUpdate the value of an element in nums.\nCalculate the sum of the elements of nums between indices left and right inclusive where left <= right.\nImplement the NumArray class:\nNumArray(int[] nums) Initializes the object with the integer array nums.\nvoid update(int index, int val) Updates the value of nums[index] to be val.\nint sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right]).\n","149":"SQL Schema\nTable: Products\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| product_id  | int     |\n| low_fats    | enum    |\n| recyclable  | enum    |\n+-------------+---------+\nproduct_id is the primary key for this table.\nlow_fats is an ENUM of type ('Y', 'N') where 'Y' means this product is low fat and 'N' means it is not.\nrecyclable is an ENUM of types ('Y', 'N') where 'Y' means this product is recyclable and 'N' means it is not.\n  Write an SQL query to find the ids of products that are both low fat and recyclable.\nReturn the result table in any order.\nThe query result format is in the following example.\n","150":"Given an array nums. We define a running sum of an array as runningSum[i] = sum(nums[0]\u2026nums[i]).\nReturn the running sum of nums.\n","151":"SQL Schema\nTable: Customers\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the ID and name of a customer.\n  Table: Orders\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| id          | int  |\n| customerId  | int  |\n+-------------+------+\nid is the primary key column for this table.\ncustomerId is a foreign key of the ID from the Customers table.\nEach row of this table indicates the ID of an order and the ID of the customer who ordered it.\n  Write an SQL query to report all customers who never order anything.\nReturn the result table in any order.\nThe query result format is in the following example.\n","152":"Given a sorted integer array nums and an integer n, add\/patch elements to the array such that any number in the range [1, n] inclusive can be formed by the sum of some elements in the array.\nReturn the minimum number of patches required.\n","153":"Given an integer n, return any array containing n unique integers such that they add up to 0.\n","154":"Given the API rand7() that generates a uniform random integer in the range [1, 7], write a function rand10() that generates a uniform random integer in the range [1, 10]. You can only call the API rand7(), and you shouldn't call any other API. Please do not use a language's built-in random API.\nEach test case will have one internal argument n, the number of times that your implemented function rand10() will be called while testing. Note that this is not an argument passed to rand10().\n","155":"Design a text editor with a cursor that can do the following:\nAdd text to where the cursor is.\nDelete text from where the cursor is (simulating the backspace key).\nMove the cursor either left or right.\nWhen deleting text, only characters to the left of the cursor will be deleted. The cursor will also remain within the actual text and cannot be moved beyond it. More formally, we have that 0 <= cursor.position <= currentText.length always holds.\nImplement the TextEditor class:\nTextEditor() Initializes the object with empty text.\nvoid addText(string text) Appends text to where the cursor is. The cursor ends to the right of text.\nint deleteText(int k) Deletes k characters to the left of the cursor. Returns the number of characters actually deleted.\nstring cursorLeft(int k) Moves the cursor to the left k times. Returns the last min(10, len) characters to the left of the cursor, where len is the number of characters to the left of the cursor.\nstring cursorRight(int k) Moves the cursor to the right k times. Returns the last min(10, len) characters to the left of the cursor, where len is the number of characters to the left of the cursor.\n","156":"Given a directed acyclic graph, with n vertices numbered from 0 to n-1, and an array edges where edges[i] = [fromi, toi] represents a directed edge from node fromi to node toi.\nFind the smallest set of vertices from which all nodes in the graph are reachable. It's guaranteed that a unique solution exists.\nNotice that you can return the vertices in any order.\n","157":"We are playing the Guessing Game. The game will work as follows:\nI pick a number between 1 and n.\nYou guess a number.\nIf you guess the right number, you win the game.\nIf you guess the wrong number, then I will tell you whether the number I picked is higher or lower, and you will continue guessing.\nEvery time you guess a wrong number x, you will pay x dollars. If you run out of money, you lose the game.\nGiven a particular n, return the minimum amount of money you need to guarantee a win regardless of what number I pick.\n","158":"Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.\nImplement the MinStack class:\nMinStack() initializes the stack object.\nvoid push(int val) pushes the element val onto the stack.\nvoid pop() removes the element on the top of the stack.\nint top() gets the top element of the stack.\nint getMin() retrieves the minimum element in the stack.\nYou must implement a solution with O(1) time complexity for each function.\n","159":"You are given a string word that consists of digits and lowercase English letters.\nYou will replace every non-digit character with a space. For example, \"a123bc34d8ef34\" will become \" 123  34 8  34\". Notice that you are left with some integers that are separated by at least one space: \"123\", \"34\", \"8\", and \"34\".\nReturn the number of different integers after performing the replacement operations on word.\nTwo integers are considered different if their decimal representations without any leading zeros are different.\n","160":"You are given a sorted array nums of n non-negative integers and an integer maximumBit. You want to perform the following query n times:\nFind a non-negative integer k < 2maximumBit such that nums[0] XOR nums[1] XOR ... XOR nums[nums.length-1] XOR k is maximized. k is the answer to the ith query.\nRemove the last element from the current array nums.\nReturn an array answer, where answer[i] is the answer to the ith query.\n","161":"Given a string s, return the number of distinct non-empty subsequences of s. Since the answer may be very large, return it modulo 109 + 7.\nA subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., \"ace\" is a subsequence of \"abcde\" while \"aec\" is not.\n","162":"A string s can be partitioned into groups of size k using the following procedure:\nThe first group consists of the first k characters of the string, the second group consists of the next k characters of the string, and so on. Each character can be a part of exactly one group.\nFor the last group, if the string does not have k characters remaining, a character fill is used to complete the group.\nNote that the partition is done so that after removing the fill character from the last group (if it exists) and concatenating all the groups in order, the resultant string should be s.\nGiven the string s, the size of each group k and the character fill, return a string array denoting the composition of every group s has been divided into, using the above procedure.\n","163":"A matrix diagonal is a diagonal line of cells starting from some cell in either the topmost row or leftmost column and going in the bottom-right direction until reaching the matrix's end. For example, the matrix diagonal starting from mat[2][0], where mat is a 6 x 3 matrix, includes cells mat[2][0], mat[3][1], and mat[4][2].\nGiven an m x n matrix mat of integers, sort each matrix diagonal in ascending order and return the resulting matrix.\n","164":"You are given a 0-indexed integer array nums. You have to partition the array into one or more contiguous subarrays.\nWe call a partition of the array valid if each of the obtained subarrays satisfies one of the following conditions:\nThe subarray consists of exactly 2 equal elements. For example, the subarray [2,2] is good.\nThe subarray consists of exactly 3 equal elements. For example, the subarray [4,4,4] is good.\nThe subarray consists of exactly 3 consecutive increasing elements, that is, the difference between adjacent elements is 1. For example, the subarray [3,4,5] is good, but the subarray [1,3,5] is not.\nReturn true if the array has at least one valid partition. Otherwise, return false.\n","165":"You are given an integer array target and an integer n.\nYou have an empty stack with the two following operations:\n\"Push\": pushes an integer to the top of the stack.\n\"Pop\": removes the integer on the top of the stack.\nYou also have a stream of the integers in the range [1, n].\nUse the two stack operations to make the numbers in the stack (from the bottom to the top) equal to target. You should follow the following rules:\nIf the stream of the integers is not empty, pick the next integer from the stream and push it to the top of the stack.\nIf the stack is not empty, pop the integer at the top of the stack.\nIf, at any moment, the elements in the stack (from the bottom to the top) are equal to target, do not read new integers from the stream and do not do more operations on the stack.\nReturn the stack operations needed to build target following the mentioned rules. If there are multiple valid answers, return any of them.\n","166":"You are given an integer array matches where matches[i] = [winneri, loseri] indicates that the player winneri defeated player loseri in a match.\nReturn a list answer of size 2 where:\nanswer[0] is a list of all players that have not lost any matches.\nanswer[1] is a list of all players that have lost exactly one match.\nThe values in the two lists should be returned in increasing order.\nNote:\nYou should only consider the players that have played at least one match.\nThe testcases will be generated such that no two matches will have the same outcome.\n","167":"Design a parking system for a parking lot. The parking lot has three kinds of parking spaces: big, medium, and small, with a fixed number of slots for each size.\nImplement the ParkingSystem class:\nParkingSystem(int big, int medium, int small) Initializes object of the ParkingSystem class. The number of slots for each parking space are given as part of the constructor.\nbool addCar(int carType) Checks whether there is a parking space of carType for the car that wants to get into the parking lot. carType can be of three kinds: big, medium, or small, which are represented by 1, 2, and 3 respectively. A car can only park in a parking space of its carType. If there is no space available, return false, else park the car in that size space and return true.\n","168":"Alice and Bob play a game with piles of stones. There are an even number of piles arranged in a row, and each pile has a positive integer number of stones piles[i].\nThe objective of the game is to end with the most stones. The total number of stones across all the piles is odd, so there are no ties.\nAlice and Bob take turns, with Alice starting first. Each turn, a player takes the entire pile of stones either from the beginning or from the end of the row. This continues until there are no more piles left, at which point the person with the most stones wins.\nAssuming Alice and Bob play optimally, return true if Alice wins the game, or false if Bob wins.\n","169":"Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.\nAn input string is valid if:\nOpen brackets must be closed by the same type of brackets.\nOpen brackets must be closed in the correct order.\nEvery close bracket has a corresponding open bracket of the same type.\n","170":"Given an n x n binary matrix image, flip the image horizontally, then invert it, and return the resulting image.\nTo flip an image horizontally means that each row of the image is reversed.\nFor example, flipping [1,1,0] horizontally results in [0,1,1].\nTo invert an image means that each 0 is replaced by 1, and each 1 is replaced by 0.\nFor example, inverting [0,1,1] results in [1,0,0].\n","171":"You are given an integer array nums and an integer x. In one operation, you can either remove the leftmost or the rightmost element from the array nums and subtract its value from x. Note that this modifies the array for future operations.\nReturn the minimum number of operations to reduce x to exactly 0 if it is possible, otherwise, return -1.\n","172":"Given two numbers arr1 and arr2 in base -2, return the result of adding them together.\nEach number is given in array format:  as an array of 0s and 1s, from most significant bit to least significant bit.  For example, arr = [1,1,0,1] represents the number (-2)^3 + (-2)^2 + (-2)^0 = -3.  A number arr in array, format is also guaranteed to have no leading zeros: either arr == [0] or arr[0] == 1.\nReturn the result of adding arr1 and arr2 in the same format: as an array of 0s and 1s with no leading zeros.\n","173":"A sentence is a list of words that are separated by a single space with no leading or trailing spaces. For example, \"Hello World\", \"HELLO\", \"hello world hello world\" are all sentences. Words consist of only uppercase and lowercase English letters.\nTwo sentences sentence1 and sentence2 are similar if it is possible to insert an arbitrary sentence (possibly empty) inside one of these sentences such that the two sentences become equal. For example, sentence1 = \"Hello my name is Jane\" and sentence2 = \"Hello Jane\" can be made equal by inserting \"my name is\" between \"Hello\" and \"Jane\" in sentence2.\nGiven two sentences sentence1 and sentence2, return true if sentence1 and sentence2 are similar. Otherwise, return false.\n","174":"Given an array of positive integers nums, return an array answer that consists of the digits of each integer in nums after separating them in the same order they appear in nums.\nTo separate the digits of an integer is to get all the digits it has in the same order.\nFor example, for the integer 10921, the separation of its digits is [1,0,9,2,1].\n","175":"Given an integer array nums, return the number of AND triples.\nAn AND triple is a triple of indices (i, j, k) such that:\n0 <= i < nums.length\n0 <= j < nums.length\n0 <= k < nums.length\nnums[i] & nums[j] & nums[k] == 0, where & represents the bitwise-AND operator.\n","176":"Given an integer array arr and an integer difference, return the length of the longest subsequence in arr which is an arithmetic sequence such that the difference between adjacent elements in the subsequence equals difference.\nA subsequence is a sequence that can be derived from arr by deleting some or no elements without changing the order of the remaining elements.\n","177":"Suppose we have a class:\npublic class Foo {\n  public void first() { print(\"first\"); }\n  public void second() { print(\"second\"); }\n  public void third() { print(\"third\"); }\n}\nThe same instance of Foo will be passed to three different threads. Thread A will call first(), thread B will call second(), and thread C will call third(). Design a mechanism and modify the program to ensure that second() is executed after first(), and third() is executed after second().\nNote:\nWe do not know how the threads will be scheduled in the operating system, even though the numbers in the input seem to imply the ordering. The input format you see is mainly to ensure our tests' comprehensiveness.\n","178":"You are given an n x n integer matrix grid.\nGenerate an integer matrix maxLocal of size (n - 2) x (n - 2) such that:\nmaxLocal[i][j] is equal to the largest value of the 3 x 3 matrix in grid centered around row i + 1 and column j + 1.\nIn other words, we want to find the largest value in every contiguous 3 x 3 matrix in grid.\nReturn the generated matrix.\n","179":"A storekeeper is a game in which the player pushes boxes around in a warehouse trying to get them to target locations.\nThe game is represented by an m x n grid of characters grid where each element is a wall, floor, or box.\nYour task is to move the box 'B' to the target position 'T' under the following rules:\nThe character 'S' represents the player. The player can move up, down, left, right in grid if it is a floor (empty cell).\nThe character '.' represents the floor which means a free cell to walk.\nThe character '#' represents the wall which means an obstacle (impossible to walk there).\nThere is only one box 'B' and one target cell 'T' in the grid.\nThe box can be moved to an adjacent free cell by standing next to the box and then moving in the direction of the box. This is a push.\nThe player cannot walk through the box.\nReturn the minimum number of pushes to move the box to the target. If there is no way to reach the target, return -1.\n","180":"You are given a string s of length n, and an integer k. You are tasked to find the longest subsequence repeated k times in string s.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\nA subsequence seq is repeated k times in the string s if seq * k is a subsequence of s, where seq * k represents a string constructed by concatenating seq k times.\nFor example, \"bba\" is repeated 2 times in the string \"bababcba\", because the string \"bbabba\", constructed by concatenating \"bba\" 2 times, is a subsequence of the string \"bababcba\".\nReturn the longest subsequence repeated k times in string s. If multiple such subsequences are found, return the lexicographically largest one. If there is no such subsequence, return an empty string.\n","181":"You are a hiker preparing for an upcoming hike. You are given heights, a 2D array of size rows x columns, where heights[row][col] represents the height of cell (row, col). You are situated in the top-left cell, (0, 0), and you hope to travel to the bottom-right cell, (rows-1, columns-1) (i.e., 0-indexed). You can move up, down, left, or right, and you wish to find a route that requires the minimum effort.\nA route's effort is the maximum absolute difference in heights between two consecutive cells of the route.\nReturn the minimum effort required to travel from the top-left cell to the bottom-right cell.\n","182":"You are given a positive integer n representing the number of nodes of a Directed Acyclic Graph (DAG). The nodes are numbered from 0 to n - 1 (inclusive).\nYou are also given a 2D integer array edges, where edges[i] = [fromi, toi] denotes that there is a unidirectional edge from fromi to toi in the graph.\nReturn a list answer, where answer[i] is the list of ancestors of the ith node, sorted in ascending order.\nA node u is an ancestor of another node v if u can reach v via a set of edges.\n","183":"A 3 x 3 magic square is a 3 x 3 grid filled with distinct numbers from 1 to 9 such that each row, column, and both diagonals all have the same sum.\nGiven a row x col grid of integers, how many 3 x 3 \"magic square\" subgrids are there?  (Each subgrid is contiguous).\n","184":"","185":"A sentence is a list of tokens separated by a single space with no leading or trailing spaces. Every token is either a positive number consisting of digits 0-9 with no leading zeros, or a word consisting of lowercase English letters.\nFor example, \"a puppy has 2 eyes 4 legs\" is a sentence with seven tokens: \"2\" and \"4\" are numbers and the other tokens such as \"puppy\" are words.\nGiven a string s representing a sentence, you need to check if all the numbers in s are strictly increasing from left to right (i.e., other than the last number, each number is strictly smaller than the number on its right in s).\nReturn true if so, or false otherwise.\n","186":"There is a car with capacity empty seats. The vehicle only drives east (i.e., it cannot turn around and drive west).\nYou are given the integer capacity and an array trips where trips[i] = [numPassengersi, fromi, toi] indicates that the ith trip has numPassengersi passengers and the locations to pick them up and drop them off are fromi and toi respectively. The locations are given as the number of kilometers due east from the car's initial location.\nReturn true if it is possible to pick up and drop off all passengers for all the given trips, or false otherwise.\n","187":"You have a long flowerbed in which some of the plots are planted, and some are not. However, flowers cannot be planted in adjacent plots.\nGiven an integer array flowerbed containing 0's and 1's, where 0 means empty and 1 means not empty, and an integer n, return true if n new flowers can be planted in the flowerbed without violating the no-adjacent-flowers rule and false otherwise.\n","188":"A farmer has a rectangular grid of land with m rows and n columns that can be divided into unit cells. Each cell is either fertile (represented by a 1) or barren (represented by a 0). All cells outside the grid are considered barren.\nA pyramidal plot of land can be defined as a set of cells with the following criteria:\nThe number of cells in the set has to be greater than 1 and all cells must be fertile.\nThe apex of a pyramid is the topmost cell of the pyramid. The height of a pyramid is the number of rows it covers. Let (r, c) be the apex of the pyramid, and its height be h. Then, the plot comprises of cells (i, j) where r <= i <= r + h - 1 and c - (i - r) <= j <= c + (i - r).\nAn inverse pyramidal plot of land can be defined as a set of cells with similar criteria:\nThe number of cells in the set has to be greater than 1 and all cells must be fertile.\nThe apex of an inverse pyramid is the bottommost cell of the inverse pyramid. The height of an inverse pyramid is the number of rows it covers. Let (r, c) be the apex of the pyramid, and its height be h. Then, the plot comprises of cells (i, j) where r - h + 1 <= i <= r and c - (r - i) <= j <= c + (r - i).\nSome examples of valid and invalid pyramidal (and inverse pyramidal) plots are shown below. Black cells indicate fertile cells.\nGiven a 0-indexed m x n binary matrix grid representing the farmland, return the total number of pyramidal and inverse pyramidal plots that can be found in grid.\n","189":"Given a date, return the corresponding day of the week for that date.\nThe input is given as three integers representing the day, month and year respectively.\nReturn the answer as one of the following values {\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"}.\n","190":"A transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s1 -> s2 -> ... -> sk such that:\nEvery adjacent pair of words differs by a single letter.\nEvery si for 1 <= i <= k is in wordList. Note that beginWord does not need to be in wordList.\nsk == endWord\nGiven two words, beginWord and endWord, and a dictionary wordList, return all the shortest transformation sequences from beginWord to endWord, or an empty list if no such sequence exists. Each sequence should be returned as a list of the words [beginWord, s1, s2, ..., sk].\n","191":"In the world of Dota2, there are two parties: the Radiant and the Dire.\nThe Dota2 senate consists of senators coming from two parties. Now the Senate wants to decide on a change in the Dota2 game. The voting for this change is a round-based procedure. In each round, each senator can exercise one of the two rights:\nBan one senator's right: A senator can make another senator lose all his rights in this and all the following rounds.\nAnnounce the victory: If this senator found the senators who still have rights to vote are all from the same party, he can announce the victory and decide on the change in the game.\nGiven a string senate representing each senator's party belonging. The character 'R' and 'D' represent the Radiant party and the Dire party. Then if there are n senators, the size of the given string will be n.\nThe round-based procedure starts from the first senator to the last senator in the given order. This procedure will last until the end of voting. All the senators who have lost their rights will be skipped during the procedure.\nSuppose every senator is smart enough and will play the best strategy for his own party. Predict which party will finally announce the victory and change the Dota2 game. The output should be \"Radiant\" or \"Dire\".\n","192":"You are given an integer n, which indicates that there are n courses labeled from 1 to n. You are also given an array relations where relations[i] = [prevCoursei, nextCoursei], representing a prerequisite relationship between course prevCoursei and course nextCoursei: course prevCoursei has to be taken before course nextCoursei. Also, you are given the integer k.\nIn one semester, you can take at most k courses as long as you have taken all the prerequisites in the previous semesters for the courses you are taking.\nReturn the minimum number of semesters needed to take all courses. The testcases will be generated such that it is possible to take every course.\n","193":"Given an integer array nums that does not contain any zeros, find the largest positive integer k such that -k also exists in the array.\nReturn the positive integer k. If there is no such integer, return -1.\n","194":"","195":"Given a rows x cols binary matrix filled with 0's and 1's, find the largest rectangle containing only 1's and return its area.\n","196":"You are given the root of a full binary tree with the following properties:\nLeaf nodes have either the value 0 or 1, where 0 represents False and 1 represents True.\nNon-leaf nodes have either the value 2 or 3, where 2 represents the boolean OR and 3 represents the boolean AND.\nThe evaluation of a node is as follows:\nIf the node is a leaf node, the evaluation is the value of the node, i.e. True or False.\nOtherwise, evaluate the node's two children and apply the boolean operation of its value with the children's evaluations.\nReturn the boolean result of evaluating the root node.\nA full binary tree is a binary tree where each node has either 0 or 2 children.\nA leaf node is a node that has zero children.\n","197":"Given the root of a binary tree, return the bottom-up level order traversal of its nodes' values. (i.e., from left to right, level by level from leaf to root).\n","198":"One way to serialize a binary tree is to use preorder traversal. When we encounter a non-null node, we record the node's value. If it is a null node, we record using a sentinel value such as '#'.\nFor example, the above binary tree can be serialized to the string \"9,3,4,#,#,1,#,#,2,#,6,#,#\", where '#' represents a null node.\nGiven a string of comma-separated values preorder, return true if it is a correct preorder traversal serialization of a binary tree.\nIt is guaranteed that each comma-separated value in the string must be either an integer or a character '#' representing null pointer.\nYou may assume that the input format is always valid.\nFor example, it could never contain two consecutive commas, such as \"1,,3\".\nNote: You are not allowed to reconstruct the tree.\n","199":"Given the radius and the position of the center of a circle, implement the function randPoint which generates a uniform random point inside the circle.\nImplement the Solution class:\nSolution(double radius, double x_center, double y_center) initializes the object with the radius of the circle radius and the position of the center (x_center, y_center).\nrandPoint() returns a random point inside the circle. A point on the circumference of the circle is considered to be in the circle. The answer is returned as an array [x, y].\n","200":"You are given two 0-indexed arrays nums and cost consisting each of n positive integers.\nYou can do the following operation any number of times:\nIncrease or decrease any element of the array nums by 1.\nThe cost of doing one operation on the ith element is cost[i].\nReturn the minimum total cost such that all the elements of the array nums become equal.\n","201":"A wiggle sequence is a sequence where the differences between successive numbers strictly alternate between positive and negative. The first difference (if one exists) may be either positive or negative. A sequence with one element and a sequence with two non-equal elements are trivially wiggle sequences.\nFor example, [1, 7, 4, 9, 2, 5] is a wiggle sequence because the differences (6, -3, 5, -7, 3) alternate between positive and negative.\nIn contrast, [1, 4, 7, 2, 5] and [1, 7, 4, 5, 5] are not wiggle sequences. The first is not because its first two differences are positive, and the second is not because its last difference is zero.\nA subsequence is obtained by deleting some elements (possibly zero) from the original sequence, leaving the remaining elements in their original order.\nGiven an integer array nums, return the length of the longest wiggle subsequence of nums.\n","202":"A wonderful string is a string where at most one letter appears an odd number of times.\nFor example, \"ccjjc\" and \"abab\" are wonderful, but \"ab\" is not.\nGiven a string word that consists of the first ten lowercase English letters ('a' through 'j'), return the number of wonderful non-empty substrings in word. If the same substring appears multiple times in word, then count each occurrence separately.\nA substring is a contiguous sequence of characters in a string.\n","203":"Given two strings word1 and word2, return the minimum number of operations required to convert word1 to word2.\nYou have the following three operations permitted on a word:\nInsert a character\nDelete a character\nReplace a character\n","204":"An integer has monotone increasing digits if and only if each pair of adjacent digits x and y satisfy x <= y.\nGiven an integer n, return the largest number that is less than or equal to n with monotone increasing digits.\n","205":"Alice and Bob are traveling to Rome for separate business meetings.\nYou are given 4 strings arriveAlice, leaveAlice, arriveBob, and leaveBob. Alice will be in the city from the dates arriveAlice to leaveAlice (inclusive), while Bob will be in the city from the dates arriveBob to leaveBob (inclusive). Each will be a 5-character string in the format \"MM-DD\", corresponding to the month and day of the date.\nReturn the total number of days that Alice and Bob are in Rome together.\nYou can assume that all dates occur in the same calendar year, which is not a leap year. Note that the number of days per month can be represented as: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31].\n","206":"A permutation perm of n + 1 integers of all the integers in the range [0, n] can be represented as a string s of length n where:\ns[i] == 'I' if perm[i] < perm[i + 1], and\ns[i] == 'D' if perm[i] > perm[i + 1].\nGiven a string s, reconstruct the permutation perm and return it. If there are multiple valid permutations perm, return any of them.\n","207":"Given an integer n, return the number of positive integers in the range [1, n] that have at least one repeated digit.\n","208":"You are given a 0-indexed array of positive integers nums. Find the number of triplets (i, j, k) that meet the following conditions:\n0 <= i < j < k < nums.length\nnums[i], nums[j], and nums[k] are pairwise distinct.\nIn other words, nums[i] != nums[j], nums[i] != nums[k], and nums[j] != nums[k].\nReturn the number of triplets that meet the conditions.\n","209":"You are given two integer arrays of the same length nums1 and nums2. In one operation, you are allowed to swap nums1[i] with nums2[i].\nFor example, if nums1 = [1,2,3,8], and nums2 = [5,6,7,4], you can swap the element at i = 3 to obtain nums1 = [1,2,3,4] and nums2 = [5,6,7,8].\nReturn the minimum number of needed operations to make nums1 and nums2 strictly increasing. The test cases are generated so that the given input always makes it possible.\nAn array arr is strictly increasing if and only if arr[0] < arr[1] < arr[2] < ... < arr[arr.length - 1].\n","210":"You are given an even integer n. You initially have a permutation perm of size n where perm[i] == i (0-indexed).\nIn one operation, you will create a new array arr, and for each i:\nIf i % 2 == 0, then arr[i] = perm[i \/ 2].\nIf i % 2 == 1, then arr[i] = perm[n \/ 2 + (i - 1) \/ 2].\nYou will then assign arr to perm.\nReturn the minimum non-zero number of operations you need to perform on perm to return the permutation to its initial value.\n","211":"Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must appear as many times as it shows in both arrays and you may return the result in any order.\n","212":"Given two 0-indexed integer arrays nums1 and nums2, return a list answer of size 2 where:\nanswer[0] is a list of all distinct integers in nums1 which are not present in nums2.\nanswer[1] is a list of all distinct integers in nums2 which are not present in nums1.\nNote that the integers in the lists may be returned in any order.\n","213":"Given an array of integers nums and an integer k, return the number of contiguous subarrays where the product of all the elements in the subarray is strictly less than k.\n","214":"You have n gardens, labeled from 1 to n, and an array paths where paths[i] = [xi, yi] describes a bidirectional path between garden xi to garden yi. In each garden, you want to plant one of 4 types of flowers.\nAll gardens have at most 3 paths coming into or leaving it.\nYour task is to choose a flower type for each garden such that, for any two gardens connected by a path, they have different types of flowers.\nReturn any such a choice as an array answer, where answer[i] is the type of flower planted in the (i+1)th garden. The flower types are denoted 1, 2, 3, or 4. It is guaranteed an answer exists.\n","215":"Given an integer array nums, return the maximum difference between two successive elements in its sorted form. If the array contains less than two elements, return 0.\nYou must write an algorithm that runs in linear time and uses linear extra space.\n","216":"You are given a 0-indexed integer array nums of length n. The number of ways to partition nums is the number of pivot indices that satisfy both conditions:\n1 <= pivot < n\nnums[0] + nums[1] + ... + nums[pivot - 1] == nums[pivot] + nums[pivot + 1] + ... + nums[n - 1]\nYou are also given an integer k. You can choose to change the value of one element of nums to k, or to leave the array unchanged.\nReturn the maximum possible number of ways to partition nums to satisfy both conditions after changing at most one element.\n","217":"You are given an array of integers nums (0-indexed) and an integer k.\nThe score of a subarray (i, j) is defined as min(nums[i], nums[i+1], ..., nums[j]) * (j - i + 1). A good subarray is a subarray where i <= k <= j.\nReturn the maximum possible score of a good subarray.\n","218":"Given an integer n, return the number of trailing zeroes in n!.\nNote that n! = n * (n - 1) * (n - 2) * ... * 3 * 2 * 1.\n","219":"Given an integer array nums, return true if there exists a triple of indices (i, j, k) such that i < j < k and nums[i] < nums[j] < nums[k]. If no such indices exists, return false.\n","220":"You are given an array of strings words and a string pref.\nReturn the number of strings in words that contain pref as a prefix.\nA prefix of a string s is any leading contiguous substring of s.\n","221":"Given a string s consisting of only the characters 'a' and 'b', return true if every 'a' appears before every 'b' in the string. Otherwise, return false.\n","222":"Given an integer array nums and an integer k, return the number of good subarrays of nums.\nA good array is an array where the number of different integers in that array is exactly k.\nFor example, [1,2,3,1,2] has 3 different integers: 1, 2, and 3.\nA subarray is a contiguous part of an array.\n","223":"A social media company is trying to monitor activity on their site by analyzing the number of tweets that occur in select periods of time. These periods can be partitioned into smaller time chunks based on a certain frequency (every minute, hour, or day).\nFor example, the period [10, 10000] (in seconds) would be partitioned into the following time chunks with these frequencies:\nEvery minute (60-second chunks): [10,69], [70,129], [130,189], ..., [9970,10000]\nEvery hour (3600-second chunks): [10,3609], [3610,7209], [7210,10000]\nEvery day (86400-second chunks): [10,10000]\nNotice that the last chunk may be shorter than the specified frequency's chunk size and will always end with the end time of the period (10000 in the above example).\nDesign and implement an API to help the company with their analysis.\nImplement the TweetCounts class:\nTweetCounts() Initializes the TweetCounts object.\nvoid recordTweet(String tweetName, int time) Stores the tweetName at the recorded time (in seconds).\nList<Integer> getTweetCountsPerFrequency(String freq, String tweetName, int startTime, int endTime) Returns a list of integers representing the number of tweets with tweetName in each time chunk for the given period of time [startTime, endTime] (in seconds) and frequency freq.\nfreq is one of \"minute\", \"hour\", or \"day\" representing a frequency of every minute, hour, or day respectively.\n","224":"Given an m x n matrix of distinct numbers, return all lucky numbers in the matrix in any order.\nA lucky number is an element of the matrix such that it is the minimum element in its row and maximum in its column.\n","225":"There are numBottles water bottles that are initially full of water. You can exchange numExchange empty water bottles from the market with one full water bottle.\nThe operation of drinking a full water bottle turns it into an empty bottle.\nGiven the two integers numBottles and numExchange, return the maximum number of water bottles you can drink.\n","226":"Design an algorithm that accepts a stream of characters and checks if a suffix of these characters is a string of a given array of strings words.\nFor example, if words = [\"abc\", \"xyz\"] and the stream added the four characters (one by one) 'a', 'x', 'y', and 'z', your algorithm should detect that the suffix \"xyz\" of the characters \"axyz\" matches \"xyz\" from words.\nImplement the StreamChecker class:\nStreamChecker(String[] words) Initializes the object with the strings array words.\nboolean query(char letter) Accepts a new character from the stream and returns true if any non-empty suffix from the stream forms a word that is in words.\n","227":"Given two strings a and b, return the minimum number of times you should repeat string a so that string b is a substring of it. If it is impossible for b to be a substring of a after repeating it, return -1.\nNotice: string \"abc\" repeated 0 times is \"\", repeated 1 time is \"abc\" and repeated 2 times is \"abcabc\".\n","228":"You are given an integer array prices where prices[i] is the price of a given stock on the ith day, and an integer k.\nFind the maximum profit you can achieve. You may complete at most k transactions: i.e. you may buy at most k times and sell at most k times.\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n","229":"Given the head of a singly linked list, reverse the list, and return the reversed list.\n","230":"An ugly number is a positive integer that is divisible by a, b, or c.\nGiven four integers n, a, b, and c, return the nth ugly number.\n","231":"Given a binary tree with the following rules:\nroot.val == 0\nIf treeNode.val == x and treeNode.left != null, then treeNode.left.val == 2 * x + 1\nIf treeNode.val == x and treeNode.right != null, then treeNode.right.val == 2 * x + 2\nNow the binary tree is contaminated, which means all treeNode.val have been changed to -1.\nImplement the FindElements class:\nFindElements(TreeNode* root) Initializes the object with a contaminated binary tree and recovers it.\nbool find(int target) Returns true if the target value exists in the recovered binary tree.\n","232":"SQL Schema\nTable: Stocks\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| stock_name    | varchar |\n| operation     | enum    |\n| operation_day | int     |\n| price         | int     |\n+---------------+---------+\n(stock_name, operation_day) is the primary key for this table.\nThe operation column is an ENUM of type ('Sell', 'Buy')\nEach row of this table indicates that the stock which has stock_name had an operation on the day operation_day with the price.\nIt is guaranteed that each 'Sell' operation for a stock has a corresponding 'Buy' operation in a previous day. It is also guaranteed that each 'Buy' operation for a stock has a corresponding 'Sell' operation in an upcoming day.\n  Write an SQL query to report the Capital gain\/loss for each stock.\nThe Capital gain\/loss of a stock is the total gain or loss after buying and selling the stock one or many times.\nReturn the result table in any order.\nThe query result format is in the following example.\n","233":"A cinema has n rows of seats, numbered from 1 to n and there are ten seats in each row, labelled from 1 to 10 as shown in the figure above.\nGiven the array reservedSeats containing the numbers of seats already reserved, for example, reservedSeats[i] = [3,8] means the seat located in row 3 and labelled with 8 is already reserved.\nReturn the maximum number of four-person groups you can assign on the cinema seats. A four-person group occupies four adjacent seats in one single row. Seats across an aisle (such as [3,3] and [3,4]) are not considered to be adjacent, but there is an exceptional case on which an aisle split a four-person group, in that case, the aisle split a four-person group in the middle, which means to have two people on each side.\n","234":"On an 2 x 3 board, there are five tiles labeled from 1 to 5, and an empty square represented by 0. A move consists of choosing 0 and a 4-directionally adjacent number and swapping it.\nThe state of the board is solved if and only if the board is [[1,2,3],[4,5,0]].\nGiven the puzzle board board, return the least number of moves required so that the state of the board is solved. If it is impossible for the state of the board to be solved, return -1.\n","235":"Given a string s and a string array dictionary, return the longest string in the dictionary that can be formed by deleting some of the given string characters. If there is more than one possible result, return the longest word with the smallest lexicographical order. If there is no possible result, return the empty string.\n","236":"Write code that enhances all arrays such that you can call the snail(rowsCount, colsCount) method that transforms the 1D array into a 2D array organised in the pattern known as snail traversal order. Invalid input values should output an empty array. If rowsCount * colsCount !== nums.length, the input is considered invalid.\nSnail traversal order starts at the top left cell with the first value of the current array. It then moves through the entire first column from top to bottom, followed by moving to the next column on the right and traversing it from bottom to top. This pattern continues, alternating the direction of traversal with each column, until the entire current array is covered. For example, when given the input array [19, 10, 3, 7, 9, 8, 5, 2, 1, 17, 16, 14, 12, 18, 6, 13, 11, 20, 4, 15] with rowsCount = 5 and colsCount = 4, the desired output matrix is shown below. Note that iterating the matrix following the arrows corresponds to the order of numbers in the original array.\n","237":"A binary tree is uni-valued if every node in the tree has the same value.\nGiven the root of a binary tree, return true if the given tree is uni-valued, or false otherwise.\n","238":"There is an undirected tree with n nodes labeled from 0 to n - 1.\nYou are given a 0-indexed integer array nums of length n where nums[i] represents the value of the ith node. You are also given a 2D integer array edges of length n - 1 where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nYou are allowed to delete some edges, splitting the tree into multiple connected components. Let the value of a component be the sum of all nums[i] for which node i is in the component.\nReturn the maximum number of edges you can delete, such that every connected component in the tree has the same value.\n","239":"Given an integer array nums, return the largest perimeter of a triangle with a non-zero area, formed from three of these lengths. If it is impossible to form any triangle of a non-zero area, return 0.\n","240":"Given an array of strings words (without duplicates), return all the concatenated words in the given list of words.\nA concatenated word is defined as a string that is comprised entirely of at least two shorter words (not necesssarily distinct) in the given array.\n","241":"In LeetCode Store, there are n items to sell. Each item has a price. However, there are some special offers, and a special offer consists of one or more different kinds of items with a sale price.\nYou are given an integer array price where price[i] is the price of the ith item, and an integer array needs where needs[i] is the number of pieces of the ith item you want to buy.\nYou are also given an array special where special[i] is of size n + 1 where special[i][j] is the number of pieces of the jth item in the ith offer and special[i][n] (i.e., the last integer in the array) is the price of the ith offer.\nReturn the lowest price you have to pay for exactly certain items as given, where you could make optimal use of the special offers. You are not allowed to buy more items than you want, even if that would lower the overall price. You could use any of the special offers as many times as you want.\n","242":"We have n buildings numbered from 0 to n - 1. Each building has a number of employees. It's transfer season, and some employees want to change the building they reside in.\nYou are given an array requests where requests[i] = [fromi, toi] represents an employee's request to transfer from building fromi to building toi.\nAll buildings are full, so a list of requests is achievable only if for each building, the net change in employee transfers is zero. This means the number of employees leaving is equal to the number of employees moving in. For example if n = 3 and two employees are leaving building 0, one is leaving building 1, and one is leaving building 2, there should be two employees moving to building 0, one employee moving to building 1, and one employee moving to building 2.\nReturn the maximum number of achievable requests.\n","243":"A self-dividing number is a number that is divisible by every digit it contains.\nFor example, 128 is a self-dividing number because 128 % 1 == 0, 128 % 2 == 0, and 128 % 8 == 0.\nA self-dividing number is not allowed to contain the digit zero.\nGiven two integers left and right, return a list of all the self-dividing numbers in the range [left, right].\n","244":"You are given an array of distinct integers arr and an array of integer arrays pieces, where the integers in pieces are distinct. Your goal is to form arr by concatenating the arrays in pieces in any order. However, you are not allowed to reorder the integers in each array pieces[i].\nReturn true if it is possible to form the array arr from pieces. Otherwise, return false.\n","245":"A newly designed keypad was tested, where a tester pressed a sequence of n keys, one at a time.\nYou are given a string keysPressed of length n, where keysPressed[i] was the ith key pressed in the testing sequence, and a sorted list releaseTimes, where releaseTimes[i] was the time the ith key was released. Both arrays are 0-indexed. The 0th key was pressed at the time 0, and every subsequent key was pressed at the exact time the previous key was released.\nThe tester wants to know the key of the keypress that had the longest duration. The ith keypress had a duration of releaseTimes[i] - releaseTimes[i - 1], and the 0th keypress had a duration of releaseTimes[0].\nNote that the same key could have been pressed multiple times during the test, and these multiple presses of the same key may not have had the same duration.\nReturn the key of the keypress that had the longest duration. If there are multiple such keypresses, return the lexicographically largest key of the keypresses.\n","246":"Given two integer arrays startTime and endTime and given an integer queryTime.\nThe ith student started doing their homework at the time startTime[i] and finished it at time endTime[i].\nReturn the number of students doing their homework at time queryTime. More formally, return the number of students where queryTime lays in the interval [startTime[i], endTime[i]] inclusive.\n","247":"A substring is a contiguous (non-empty) sequence of characters within a string.\nA vowel substring is a substring that only consists of vowels ('a', 'e', 'i', 'o', and 'u') and has all five vowels present in it.\nGiven a string word, return the number of vowel substrings in word.\n","248":"Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\nAs a reminder, a binary search tree is a tree that satisfies these constraints:\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n","249":"You are playing a simplified PAC-MAN game on an infinite 2-D grid. You start at the point [0, 0], and you are given a destination point target = [xtarget, ytarget] that you are trying to get to. There are several ghosts on the map with their starting positions given as a 2D array ghosts, where ghosts[i] = [xi, yi] represents the starting position of the ith ghost. All inputs are integral coordinates.\nEach turn, you and all the ghosts may independently choose to either move 1 unit in any of the four cardinal directions: north, east, south, or west, or stay still. All actions happen simultaneously.\nYou escape if and only if you can reach the target before any ghost reaches you. If you reach any square (including the target) at the same time as a ghost, it does not count as an escape.\nReturn true if it is possible to escape regardless of how the ghosts move, otherwise return false.\n","250":"Given two integer arrays nums1 and nums2, return the maximum length of a subarray that appears in both arrays.\n","251":"Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent. Return the answer in any order.\nA mapping of digits to letters (just like on the telephone buttons) is given below. Note that 1 does not map to any letters.\n","252":"Given an integer array nums and an integer k, return the k most frequent elements. You may return the answer in any order.\n","253":"You are given a string s of lowercase English letters and an integer array shifts of the same length.\nCall the shift() of a letter, the next letter in the alphabet, (wrapping around so that 'z' becomes 'a').\nFor example, shift('a') = 'b', shift('t') = 'u', and shift('z') = 'a'.\nNow for each shifts[i] = x, we want to shift the first i + 1 letters of s, x times.\nReturn the final string after all such shifts to s are applied.\n","254":"You are given two integers, m and k, and a stream of integers. You are tasked to implement a data structure that calculates the MKAverage for the stream.\nThe MKAverage can be calculated using these steps:\nIf the number of the elements in the stream is less than m you should consider the MKAverage to be -1. Otherwise, copy the last m elements of the stream to a separate container.\nRemove the smallest k elements and the largest k elements from the container.\nCalculate the average value for the rest of the elements rounded down to the nearest integer.\nImplement the MKAverage class:\nMKAverage(int m, int k) Initializes the MKAverage object with an empty stream and the two integers m and k.\nvoid addElement(int num) Inserts a new element num into the stream.\nint calculateMKAverage() Calculates and returns the MKAverage for the current stream rounded down to the nearest integer.\n","255":"Given a 2D integer array nums, return all elements of nums in diagonal order as shown in the below images.\n","256":"Given the head of a sorted linked list, delete all duplicates such that each element appears only once. Return the linked list sorted as well.\n","257":"Given an unsorted array of integers nums, return the length of the longest consecutive elements sequence.\nYou must write an algorithm that runs in O(n) time.\n","258":"You are given a 0-indexed m x n integer matrix grid. The width of a column is the maximum length of its integers.\nFor example, if grid = [[-10], [3], [12]], the width of the only column is 3 since -10 is of length 3.\nReturn an integer array ans of size n where ans[i] is the width of the ith column.\nThe length of an integer x with len digits is equal to len if x is non-negative, and len + 1 otherwise.\n","259":"Given a data stream input of non-negative integers a1, a2, ..., an, summarize the numbers seen so far as a list of disjoint intervals.\nImplement the SummaryRanges class:\nSummaryRanges() Initializes the object with an empty stream.\nvoid addNum(int value) Adds the integer value to the stream.\nint[][] getIntervals() Returns a summary of the integers in the stream currently as a list of disjoint intervals [starti, endi]. The answer should be sorted by starti.\n","260":"There is a network of n servers, labeled from 0 to n - 1. You are given a 2D integer array edges, where edges[i] = [ui, vi] indicates there is a message channel between servers ui and vi, and they can pass any number of messages to each other directly in one second. You are also given a 0-indexed integer array patience of length n.\nAll servers are connected, i.e., a message can be passed from one server to any other server(s) directly or indirectly through the message channels.\nThe server labeled 0 is the master server. The rest are data servers. Each data server needs to send its message to the master server for processing and wait for a reply. Messages move between servers optimally, so every message takes the least amount of time to arrive at the master server. The master server will process all newly arrived messages instantly and send a reply to the originating server via the reversed path the message had gone through.\nAt the beginning of second 0, each data server sends its message to be processed. Starting from second 1, at the beginning of every second, each data server will check if it has received a reply to the message it sent (including any newly arrived replies) from the master server:\nIf it has not, it will resend the message periodically. The data server i will resend the message every patience[i] second(s), i.e., the data server i will resend the message if patience[i] second(s) have elapsed since the last time the message was sent from this server.\nOtherwise, no more resending will occur from this server.\nThe network becomes idle when there are no messages passing between servers or arriving at servers.\nReturn the earliest second starting from which the network becomes idle.\n","261":"You are given the head of a linked list containing unique integer values and an integer array nums that is a subset of the linked list values.\nReturn the number of connected components in nums where two values are connected if they appear consecutively in the linked list.\n","262":"You are given an integer n representing the length of an unknown array that you are trying to recover. You are also given an array sums containing the values of all 2n subset sums of the unknown array (in no particular order).\nReturn the array ans of length n representing the unknown array. If multiple answers exist, return any of them.\nAn array sub is a subset of an array arr if sub can be obtained from arr by deleting some (possibly zero or all) elements of arr. The sum of the elements in sub is one possible subset sum of arr. The sum of an empty array is considered to be 0.\nNote: Test cases are generated such that there will always be at least one correct answer.\n","263":"You are given an integer array height of length n. There are n vertical lines drawn such that the two endpoints of the ith line are (i, 0) and (i, height[i]).\nFind two lines that together with the x-axis form a container, such that the container contains the most water.\nReturn the maximum amount of water a container can store.\nNotice that you may not slant the container.\n","264":"A virus is spreading rapidly, and your task is to quarantine the infected area by installing walls.\nThe world is modeled as an m x n binary grid isInfected, where isInfected[i][j] == 0 represents uninfected cells, and isInfected[i][j] == 1 represents cells contaminated with the virus. A wall (and only one wall) can be installed between any two 4-directionally adjacent cells, on the shared boundary.\nEvery night, the virus spreads to all neighboring cells in all four directions unless blocked by a wall. Resources are limited. Each day, you can install walls around only one region (i.e., the affected area (continuous block of infected cells) that threatens the most uninfected cells the following night). There will never be a tie.\nReturn the number of walls used to quarantine all the infected regions. If the world will become fully infected, return the number of walls used.\n","265":"Given a signed 32-bit integer x, return x with its digits reversed. If reversing x causes the value to go outside the signed 32-bit integer range [-231, 231 - 1], then return 0.\nAssume the environment does not allow you to store 64-bit integers (signed or unsigned).\n","266":"Given a string word, return the sum of the number of vowels ('a', 'e', 'i', 'o', and 'u') in every substring of word.\nA substring is a contiguous (non-empty) sequence of characters within a string.\nNote: Due to the large constraints, the answer may not fit in a signed 32-bit integer. Please be careful during the calculations.\n","267":"You are given a 0-indexed string word of length n consisting of digits, and a positive integer m.\nThe divisibility array div of word is an integer array of length n such that:\ndiv[i] = 1 if the numeric value of word[0,...,i] is divisible by m, or\ndiv[i] = 0 otherwise.\nReturn the divisibility array of word.\n","268":"Given the root of a binary tree, return the preorder traversal of its nodes' values.\n","269":"Two strings, X and Y, are considered similar if either they are identical or we can make them equivalent by swapping at most two letters (in distinct positions) within the string X.\nFor example, \"tars\" and \"rats\" are similar (swapping at positions 0 and 2), and \"rats\" and \"arts\" are similar, but \"star\" is not similar to \"tars\", \"rats\", or \"arts\".\nTogether, these form two connected groups by similarity: {\"tars\", \"rats\", \"arts\"} and {\"star\"}.  Notice that \"tars\" and \"arts\" are in the same group even though they are not similar.  Formally, each group is such that a word is in the group if and only if it is similar to at least one other word in the group.\nWe are given a list strs of strings where every string in strs is an anagram of every other string in strs. How many groups are there?\n","270":"You are given a 2D integer array orders, where each orders[i] = [pricei, amounti, orderTypei] denotes that amounti orders have been placed of type orderTypei at the price pricei. The orderTypei is:\n0 if it is a batch of buy orders, or\n1 if it is a batch of sell orders.\nNote that orders[i] represents a batch of amounti independent orders with the same price and order type. All orders represented by orders[i] will be placed before all orders represented by orders[i+1] for all valid i.\nThere is a backlog that consists of orders that have not been executed. The backlog is initially empty. When an order is placed, the following happens:\nIf the order is a buy order, you look at the sell order with the smallest price in the backlog. If that sell order's price is smaller than or equal to the current buy order's price, they will match and be executed, and that sell order will be removed from the backlog. Else, the buy order is added to the backlog.\nVice versa, if the order is a sell order, you look at the buy order with the largest price in the backlog. If that buy order's price is larger than or equal to the current sell order's price, they will match and be executed, and that buy order will be removed from the backlog. Else, the sell order is added to the backlog.\nReturn the total amount of orders in the backlog after placing all the orders from the input. Since this number can be large, return it modulo 109 + 7.\n","271":"SQL Schema\nTable: Activity\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| player_id    | int     |\n| device_id    | int     |\n| event_date   | date    |\n| games_played | int     |\n+--------------+---------+\n(player_id, event_date) is the primary key of this table.\nThis table shows the activity of players of some games.\nEach row is a record of a player who logged in and played a number of games (possibly 0) before logging out on someday using some device.\n  Write an SQL query to report the first login date for each player.\nReturn the result table in any order.\nThe query result format is in the following example.\n","272":"An integer has sequential digits if and only if each digit in the number is one more than the previous digit.\nReturn a sorted list of all the integers in the range [low, high] inclusive that have sequential digits.\n","273":"On an n x n chessboard, a knight starts at the cell (row, column) and attempts to make exactly k moves. The rows and columns are 0-indexed, so the top-left cell is (0, 0), and the bottom-right cell is (n - 1, n - 1).\nA chess knight has eight possible moves it can make, as illustrated below. Each move is two cells in a cardinal direction, then one cell in an orthogonal direction.\nEach time the knight is to move, it chooses one of eight possible moves uniformly at random (even if the piece would go off the chessboard) and moves there.\nThe knight continues moving until it has made exactly k moves or has moved off the chessboard.\nReturn the probability that the knight remains on the board after it has stopped moving.\n","274":"Given a binary string s and an integer k, return true if every binary code of length k is a substring of s. Otherwise, return false.\n","275":"You are given the root of a binary tree with unique values.\nIn one operation, you can choose any two nodes at the same level and swap their values.\nReturn the minimum number of operations needed to make the values at each level sorted in a strictly increasing order.\nThe level of a node is the number of edges along the path between it and the root node.\n","276":"You are given a string s (0-indexed). You are asked to perform the following operation on s until you get a sorted string:\nFind the largest index i such that 1 <= i < s.length and s[i] < s[i - 1].\nFind the largest index j such that i <= j < s.length and s[k] < s[i - 1] for all the possible values of k in the range [i, j] inclusive.\nSwap the two characters at indices i - 1 and j.\nReverse the suffix starting at index i.\nReturn the number of operations needed to make the string sorted. Since the answer can be too large, return it modulo 109 + 7.\n","277":"SQL Schema\nTable: Tree\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| id          | int  |\n| p_id        | int  |\n+-------------+------+\nid is the primary key column for this table.\nEach row of this table contains information about the id of a node and the id of its parent node in a tree.\nThe given structure is always a valid tree.\n  Each node in the tree can be one of three types:\n\"Leaf\": if the node is a leaf node.\n\"Root\": if the node is the root of the tree.\n\"Inner\": If the node is neither a leaf node nor a root node.\nWrite an SQL query to report the type of each node in the tree.\nReturn the result table in any order.\nThe query result format is in the following example.\n","278":"For an integer array nums, an inverse pair is a pair of integers [i, j] where 0 <= i < j < nums.length and nums[i] > nums[j].\nGiven two integers n and k, return the number of different arrays consist of numbers from 1 to n such that there are exactly k inverse pairs. Since the answer can be huge, return it modulo 109 + 7.\n","279":"Given a list paths of directory info, including the directory path, and all the files with contents in this directory, return all the duplicate files in the file system in terms of their paths. You may return the answer in any order.\nA group of duplicate files consists of at least two files that have the same content.\nA single directory info string in the input list has the following format:\n\"root\/d1\/d2\/...\/dm f1.txt(f1_content) f2.txt(f2_content) ... fn.txt(fn_content)\"\nIt means there are n files (f1.txt, f2.txt ... fn.txt) with content (f1_content, f2_content ... fn_content) respectively in the directory \"root\/d1\/d2\/...\/dm\". Note that n >= 1 and m >= 0. If m = 0, it means the directory is just the root directory.\nThe output is a list of groups of duplicate file paths. For each group, it contains all the file paths of the files that have the same content. A file path is a string that has the following format:\n\"directory_path\/file_name.txt\"\n","280":"You are given a string s that contains digits 0-9, addition symbols '+', and multiplication symbols '*' only, representing a valid math expression of single digit numbers (e.g., 3+5*2). This expression was given to n elementary school students. The students were instructed to get the answer of the expression by following this order of operations:\nCompute multiplication, reading from left to right; Then,\nCompute addition, reading from left to right.\nYou are given an integer array answers of length n, which are the submitted answers of the students in no particular order. You are asked to grade the answers, by following these rules:\nIf an answer equals the correct answer of the expression, this student will be rewarded 5 points;\nOtherwise, if the answer could be interpreted as if the student applied the operators in the wrong order but had correct arithmetic, this student will be rewarded 2 points;\nOtherwise, this student will be rewarded 0 points.\nReturn the sum of the points of the students.\n","281":"On a 2D plane, we place n stones at some integer coordinate points. Each coordinate point may have at most one stone.\nA stone can be removed if it shares either the same row or the same column as another stone that has not been removed.\nGiven an array stones of length n where stones[i] = [xi, yi] represents the location of the ith stone, return the largest possible number of stones that can be removed.\n","282":"Roman numerals are represented by seven different symbols: I, V, X, L, C, D and M.\nSymbol       Value\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\nFor example, 2 is written as II in Roman numeral, just two one's added together. 12 is written as XII, which is simply X + II. The number 27 is written as XXVII, which is XX + V + II.\nRoman numerals are usually written largest to smallest from left to right. However, the numeral for four is not IIII. Instead, the number four is written as IV. Because the one is before the five we subtract it making four. The same principle applies to the number nine, which is written as IX. There are six instances where subtraction is used:\nI can be placed before V (5) and X (10) to make 4 and 9. \nX can be placed before L (50) and C (100) to make 40 and 90. \nC can be placed before D (500) and M (1000) to make 400 and 900.\nGiven an integer, convert it to a roman numeral.\n","283":"SQL Schema\nTable: Visits\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| visit_id    | int     |\n| customer_id | int     |\n+-------------+---------+\nvisit_id is the primary key for this table.\nThis table contains information about the customers who visited the mall.\n  Table: Transactions\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| transaction_id | int     |\n| visit_id       | int     |\n| amount         | int     |\n+----------------+---------+\ntransaction_id is the primary key for this table.\nThis table contains information about the transactions made during the visit_id.\n  Write a SQL query to find the IDs of the users who visited without making any transactions and the number of times they made these types of visits.\nReturn the result table sorted in any order.\nThe query result format is in the following example.\n","284":"On an infinite plane, a robot initially stands at (0, 0) and faces north. Note that:\nThe north direction is the positive direction of the y-axis.\nThe south direction is the negative direction of the y-axis.\nThe east direction is the positive direction of the x-axis.\nThe west direction is the negative direction of the x-axis.\nThe robot can receive one of three instructions:\n\"G\": go straight 1 unit.\n\"L\": turn 90 degrees to the left (i.e., anti-clockwise direction).\n\"R\": turn 90 degrees to the right (i.e., clockwise direction).\nThe robot performs the instructions given in order, and repeats them forever.\nReturn true if and only if there exists a circle in the plane such that the robot never leaves the circle.\n","285":"Given two integer arrays arr1 and arr2, and the integer d, return the distance value between the two arrays.\nThe distance value is defined as the number of elements arr1[i] such that there is not any element arr2[j] where |arr1[i]-arr2[j]| <= d.\n","286":"Given the root of a binary tree, return the maximum width of the given tree.\nThe maximum width of a tree is the maximum width among all levels.\nThe width of one level is defined as the length between the end-nodes (the leftmost and rightmost non-null nodes), where the null nodes between the end-nodes that would be present in a complete binary tree extending down to that level are also counted into the length calculation.\nIt is guaranteed that the answer will in the range of a 32-bit signed integer.\n","287":"Design a simplified version of Twitter where users can post tweets, follow\/unfollow another user, and is able to see the 10 most recent tweets in the user's news feed.\nImplement the Twitter class:\nTwitter() Initializes your twitter object.\nvoid postTweet(int userId, int tweetId) Composes a new tweet with ID tweetId by the user userId. Each call to this function will be made with a unique tweetId.\nList<Integer> getNewsFeed(int userId) Retrieves the 10 most recent tweet IDs in the user's news feed. Each item in the news feed must be posted by users who the user followed or by the user themself. Tweets must be ordered from most recent to least recent.\nvoid follow(int followerId, int followeeId) The user with ID followerId started following the user with ID followeeId.\nvoid unfollow(int followerId, int followeeId) The user with ID followerId started unfollowing the user with ID followeeId.\n","288":"You are given a 0-indexed 1-dimensional (1D) integer array original, and two integers, m and n. You are tasked with creating a 2-dimensional (2D) array with  m rows and n columns using all the elements from original.\nThe elements from indices 0 to n - 1 (inclusive) of original should form the first row of the constructed 2D array, the elements from indices n to 2 * n - 1 (inclusive) should form the second row of the constructed 2D array, and so on.\nReturn an m x n 2D array constructed according to the above procedure, or an empty 2D array if it is impossible.\n","289":"Given an integer array data representing the data, return whether it is a valid UTF-8 encoding (i.e. it translates to a sequence of valid UTF-8 encoded characters).\nA character in UTF8 can be from 1 to 4 bytes long, subjected to the following rules:\nFor a 1-byte character, the first bit is a 0, followed by its Unicode code.\nFor an n-bytes character, the first n bits are all one's, the n + 1 bit is 0, followed by n - 1 bytes with the most significant 2 bits being 10.\nThis is how the UTF-8 encoding would work:\n     Number of Bytes   |        UTF-8 Octet Sequence\n                       |              (binary)\n   --------------------+-----------------------------------------\n            1          |   0xxxxxxx\n            2          |   110xxxxx 10xxxxxx\n            3          |   1110xxxx 10xxxxxx 10xxxxxx\n            4          |   11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\nx denotes a bit in the binary form of a byte that may be either 0 or 1.\nNote: The input is an array of integers. Only the least significant 8 bits of each integer is used to store the data. This means each integer represents only 1 byte of data.\n","290":"","291":"You are given a 2D integer array, queries. For each queries[i], where queries[i] = [ni, ki], find the number of different ways you can place positive integers into an array of size ni such that the product of the integers is ki. As the number of ways may be too large, the answer to the ith query is the number of ways modulo 109 + 7.\nReturn an integer array answer where answer.length == queries.length, and answer[i] is the answer to the ith query.\n","292":"Given two strings s and t, return true if they are equal when both are typed into empty text editors. '#' means a backspace character.\nNote that after backspacing an empty text, the text will continue empty.\n","293":"Given two strings s and t, transform string s into string t using the following operation any number of times:\nChoose a non-empty substring in s and sort it in place so the characters are in ascending order.\nFor example, applying the operation on the underlined substring in \"14234\" results in \"12344\".\nReturn true if it is possible to transform s into t. Otherwise, return false.\nA substring is a contiguous sequence of characters within a string.\n","294":"You are given an array of distinct positive integers locations where locations[i] represents the position of city i. You are also given integers start, finish and fuel representing the starting city, ending city, and the initial amount of fuel you have, respectively.\nAt each step, if you are at city i, you can pick any city j such that j != i and 0 <= j < locations.length and move to city j. Moving from city i to city j reduces the amount of fuel you have by |locations[i] - locations[j]|. Please notice that |x| denotes the absolute value of x.\nNotice that fuel cannot become negative at any point in time, and that you are allowed to visit any city more than once (including start and finish).\nReturn the count of all possible routes from start to finish. Since the answer may be too large, return it modulo 109 + 7.\n","295":"You are given an array of integers stones where stones[i] is the weight of the ith stone.\nWe are playing a game with the stones. On each turn, we choose any two stones and smash them together. Suppose the stones have weights x and y with x <= y. The result of this smash is:\nIf x == y, both stones are destroyed, and\nIf x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.\nAt the end of the game, there is at most one stone left.\nReturn the smallest possible weight of the left stone. If there are no stones left, return 0.\n","296":"You are given a positive integer n representing the number of nodes in an undirected graph. The nodes are labeled from 1 to n.\nYou are also given a 2D integer array edges, where edges[i] = [ai, bi] indicates that there is a bidirectional edge between nodes ai and bi. Notice that the given graph may be disconnected.\nDivide the nodes of the graph into m groups (1-indexed) such that:\nEach node in the graph belongs to exactly one group.\nFor every pair of nodes in the graph that are connected by an edge [ai, bi], if ai belongs to the group with index x, and bi belongs to the group with index y, then |y - x| = 1.\nReturn the maximum number of groups (i.e., maximum m) into which you can divide the nodes. Return -1 if it is impossible to group the nodes with the given conditions.\n","297":"An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.\nGiven an integer n, return the nth ugly number.\n","298":"Given an array of positive integers arr, find a pattern of length m that is repeated k or more times.\nA pattern is a subarray (consecutive sub-sequence) that consists of one or more values, repeated multiple times consecutively without overlapping. A pattern is defined by its length and the number of repetitions.\nReturn true if there exists a pattern of length m that is repeated k or more times, otherwise return false.\n","299":"Given an array of unique integers, arr, where each integer arr[i] is strictly greater than 1.\nWe make a binary tree using these integers, and each number may be used for any number of times. Each non-leaf node's value should be equal to the product of the values of its children.\nReturn the number of binary trees we can make. The answer may be too large so return the answer modulo 109 + 7.\n","300":"You are given a 0-indexed 2D integer array tires where tires[i] = [fi, ri] indicates that the ith tire can finish its xth successive lap in fi * ri(x-1) seconds.\nFor example, if fi = 3 and ri = 2, then the tire would finish its 1st lap in 3 seconds, its 2nd lap in 3 * 2 = 6 seconds, its 3rd lap in 3 * 22 = 12 seconds, etc.\nYou are also given an integer changeTime and an integer numLaps.\nThe race consists of numLaps laps and you may start the race with any tire. You have an unlimited supply of each tire and after every lap, you may change to any given tire (including the current tire type) if you wait changeTime seconds.\nReturn the minimum time to finish the race.\n","301":"Given an alphanumeric string s, return the second largest numerical digit that appears in s, or -1 if it does not exist.\nAn alphanumeric string is a string consisting of lowercase English letters and digits.\n","302":"Given a string paragraph and a string array of the banned words banned, return the most frequent word that is not banned. It is guaranteed there is at least one word that is not banned, and that the answer is unique.\nThe words in paragraph are case-insensitive and the answer should be returned in lowercase.\n","303":"A complex number can be represented as a string on the form \"real+imaginaryi\" where:\nreal is the real part and is an integer in the range [-100, 100].\nimaginary is the imaginary part and is an integer in the range [-100, 100].\ni2 == -1.\nGiven two complex numbers num1 and num2 as strings, return a string of the complex number that represents their multiplications.\n","304":"You are given an integer array cookies, where cookies[i] denotes the number of cookies in the ith bag. You are also given an integer k that denotes the number of children to distribute all the bags of cookies to. All the cookies in the same bag must go to the same child and cannot be split up.\nThe unfairness of a distribution is defined as the maximum total cookies obtained by a single child in the distribution.\nReturn the minimum unfairness of all distributions.\n","305":"You are given two strings stamp and target. Initially, there is a string s of length target.length with all s[i] == '?'.\nIn one turn, you can place stamp over s and replace every letter in the s with the corresponding letter from stamp.\nFor example, if stamp = \"abc\" and target = \"abcba\", then s is \"?????\" initially. In one turn you can:\nplace stamp at index 0 of s to obtain \"abc??\",\nplace stamp at index 1 of s to obtain \"?abc?\", or\nplace stamp at index 2 of s to obtain \"??abc\".\nNote that stamp must be fully contained in the boundaries of s in order to stamp (i.e., you cannot place stamp at index 3 of s).\nWe want to convert s to target using at most 10 * target.length turns.\nReturn an array of the index of the left-most letter being stamped at each turn. If we cannot obtain target from s within 10 * target.length turns, return an empty array.\n","306":"A parentheses string is valid if and only if:\nIt is the empty string,\nIt can be written as AB (A concatenated with B), where A and B are valid strings, or\nIt can be written as (A), where A is a valid string.\nYou are given a parentheses string s. In one move, you can insert a parenthesis at any position of the string.\nFor example, if s = \"()))\", you can insert an opening parenthesis to be \"(()))\" or a closing parenthesis to be \"())))\".\nReturn the minimum number of moves required to make s valid.\n","307":"Given a string s that contains parentheses and letters, remove the minimum number of invalid parentheses to make the input string valid.\nReturn a list of unique strings that are valid with the minimum number of removals. You may return the answer in any order.\n","308":"SQL Schema\nTable: Cinema\n+----------------+----------+\n| Column Name    | Type     |\n+----------------+----------+\n| id             | int      |\n| movie          | varchar  |\n| description    | varchar  |\n| rating         | float    |\n+----------------+----------+\nid is the primary key for this table.\nEach row contains information about the name of a movie, its genre, and its rating.\nrating is a 2 decimal places float in the range [0, 10]\n  Write an SQL query to report the movies with an odd-numbered ID and a description that is not \"boring\".\nReturn the result table ordered by rating in descending order.\nThe query result format is in the following example.\n","309":"Given the root of a binary tree, return the sum of every tree node's tilt.\nThe tilt of a tree node is the absolute difference between the sum of all left subtree node values and all right subtree node values. If a node does not have a left child, then the sum of the left subtree node values is treated as 0. The rule is similar if the node does not have a right child.\n","310":"There is an n x n 0-indexed grid with some artifacts buried in it. You are given the integer n and a 0-indexed 2D integer array artifacts describing the positions of the rectangular artifacts where artifacts[i] = [r1i, c1i, r2i, c2i] denotes that the ith artifact is buried in the subgrid where:\n(r1i, c1i) is the coordinate of the top-left cell of the ith artifact and\n(r2i, c2i) is the coordinate of the bottom-right cell of the ith artifact.\nYou will excavate some cells of the grid and remove all the mud from them. If the cell has a part of an artifact buried underneath, it will be uncovered. If all the parts of an artifact are uncovered, you can extract it.\nGiven a 0-indexed 2D integer array dig where dig[i] = [ri, ci] indicates that you will excavate the cell (ri, ci), return the number of artifacts that you can extract.\nThe test cases are generated such that:\nNo two artifacts overlap.\nEach artifact only covers at most 4 cells.\nThe entries of dig are unique.\n","311":"You are given n rectangles represented by a 0-indexed 2D integer array rectangles, where rectangles[i] = [widthi, heighti] denotes the width and height of the ith rectangle.\nTwo rectangles i and j (i < j) are considered interchangeable if they have the same width-to-height ratio. More formally, two rectangles are interchangeable if widthi\/heighti == widthj\/heightj (using decimal division, not integer division).\nReturn the number of pairs of interchangeable rectangles in rectangles.\n","312":"The school cafeteria offers circular and square sandwiches at lunch break, referred to by numbers 0 and 1 respectively. All students stand in a queue. Each student either prefers square or circular sandwiches.\nThe number of sandwiches in the cafeteria is equal to the number of students. The sandwiches are placed in a stack. At each step:\nIf the student at the front of the queue prefers the sandwich on the top of the stack, they will take it and leave the queue.\nOtherwise, they will leave it and go to the queue's end.\nThis continues until none of the queue students want to take the top sandwich and are thus unable to eat.\nYou are given two integer arrays students and sandwiches where sandwiches[i] is the type of the ith sandwich in the stack (i = 0 is the top of the stack) and students[j] is the preference of the jth student in the initial queue (j = 0 is the front of the queue). Return the number of students that are unable to eat.\n","313":"A ramp in an integer array nums is a pair (i, j) for which i < j and nums[i] <= nums[j]. The width of such a ramp is j - i.\nGiven an integer array nums, return the maximum width of a ramp in nums. If there is no ramp in nums, return 0.\n","314":"You are given an m x n matrix mat that has its rows sorted in non-decreasing order and an integer k.\nYou are allowed to choose exactly one element from each row to form an array.\nReturn the kth smallest array sum among all possible arrays.\n","315":"You are given two strings s and p where p is a subsequence of s. You are also given a distinct 0-indexed integer array removable containing a subset of indices of s (s is also 0-indexed).\nYou want to choose an integer k (0 <= k <= removable.length) such that, after removing k characters from s using the first k indices in removable, p is still a subsequence of s. More formally, you will mark the character at s[removable[i]] for each 0 <= i < k, then remove all marked characters and check if p is still a subsequence.\nReturn the maximum k you can choose such that p is still a subsequence of s after the removals.\nA subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\n","316":"Given an array of integers arr, return true if and only if it is a valid mountain array.\nRecall that arr is a mountain array if and only if:\narr.length >= 3\nThere exists some i with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < arr[i] \narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\n","317":"In a town, there are n people labeled from 1 to n. There is a rumor that one of these people is secretly the town judge.\nIf the town judge exists, then:\nThe town judge trusts nobody.\nEverybody (except for the town judge) trusts the town judge.\nThere is exactly one person that satisfies properties 1 and 2.\nYou are given an array trust where trust[i] = [ai, bi] representing that the person labeled ai trusts the person labeled bi. If a trust relationship does not exist in trust array, then such a trust relationship does not exist.\nReturn the label of the town judge if the town judge exists and can be identified, or return -1 otherwise.\n","318":"There are n oranges in the kitchen and you decided to eat some of these oranges every day as follows:\nEat one orange.\nIf the number of remaining oranges n is divisible by 2 then you can eat n \/ 2 oranges.\nIf the number of remaining oranges n is divisible by 3 then you can eat 2 * (n \/ 3) oranges.\nYou can only choose one of the actions per day.\nGiven the integer n, return the minimum number of days to eat n oranges.\n","319":"In a gold mine grid of size m x n, each cell in this mine has an integer representing the amount of gold in that cell, 0 if it is empty.\nReturn the maximum amount of gold you can collect under the conditions:\nEvery time you are located in a cell you will collect all the gold in that cell.\nFrom your position, you can walk one step to the left, right, up, or down.\nYou can't visit the same cell more than once.\nNever visit a cell with 0 gold.\nYou can start and stop collecting gold from any position in the grid that has some gold.\n","320":"Given two strings s and t, find the number of ways you can choose a non-empty substring of s and replace a single character by a different character such that the resulting substring is a substring of t. In other words, find the number of substrings in s that differ from some substring in t by exactly one character.\nFor example, the underlined substrings in \"computer\" and \"computation\" only differ by the 'e'\/'a', so this is a valid way.\nReturn the number of substrings that satisfy the condition above.\nA substring is a contiguous sequence of characters within a string.\n","321":"You are given an integer array arr. From some starting index, you can make a series of jumps. The (1st, 3rd, 5th, ...) jumps in the series are called odd-numbered jumps, and the (2nd, 4th, 6th, ...) jumps in the series are called even-numbered jumps. Note that the jumps are numbered, not the indices.\nYou may jump forward from index i to index j (with i < j) in the following way:\nDuring odd-numbered jumps (i.e., jumps 1, 3, 5, ...), you jump to the index j such that arr[i] <= arr[j] and arr[j] is the smallest possible value. If there are multiple such indices j, you can only jump to the smallest such index j.\nDuring even-numbered jumps (i.e., jumps 2, 4, 6, ...), you jump to the index j such that arr[i] >= arr[j] and arr[j] is the largest possible value. If there are multiple such indices j, you can only jump to the smallest such index j.\nIt may be the case that for some index i, there are no legal jumps.\nA starting index is good if, starting from that index, you can reach the end of the array (index arr.length - 1) by jumping some number of times (possibly 0 or more than once).\nReturn the number of good starting indices.\n","322":"You are given an integer n and an array of unique integers blacklist. Design an algorithm to pick a random integer in the range [0, n - 1] that is not in blacklist. Any integer that is in the mentioned range and not in blacklist should be equally likely to be returned.\nOptimize your algorithm such that it minimizes the number of calls to the built-in random function of your language.\nImplement the Solution class:\nSolution(int n, int[] blacklist) Initializes the object with the integer n and the blacklisted integers blacklist.\nint pick() Returns a random integer in the range [0, n - 1] and not in blacklist.\n","323":"Given an array of positive integers nums, remove the smallest subarray (possibly empty) such that the sum of the remaining elements is divisible by p. It is not allowed to remove the whole array.\nReturn the length of the smallest subarray that you need to remove, or -1 if it's impossible.\nA subarray is defined as a contiguous block of elements in the array.\n","324":"SQL Schema\nTable: Queue\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| person_id   | int     |\n| person_name | varchar |\n| weight      | int     |\n| turn        | int     |\n+-------------+---------+\nperson_id is the primary key column for this table.\nThis table has the information about all people waiting for a bus.\nThe person_id and turn columns will contain all numbers from 1 to n, where n is the number of rows in the table.\nturn determines the order of which the people will board the bus, where turn=1 denotes the first person to board and turn=n denotes the last person to board.\nweight is the weight of the person in kilograms.\n  There is a queue of people waiting to board a bus. However, the bus has a weight limit of 1000 kilograms, so there may be some people who cannot board.\nWrite an SQL query to find the person_name of the last person that can fit on the bus without exceeding the weight limit. The test cases are generated such that the first person does not exceed the weight limit.\nThe query result format is in the following example.\n","325":"Design the CombinationIterator class:\nCombinationIterator(string characters, int combinationLength) Initializes the object with a string characters of sorted distinct lowercase English letters and a number combinationLength as arguments.\nnext() Returns the next combination of length combinationLength in lexicographical order.\nhasNext() Returns true if and only if there exists a next combination.\n","326":"You are given two strings word1 and word2. Merge the strings by adding letters in alternating order, starting with word1. If a string is longer than the other, append the additional letters onto the end of the merged string.\nReturn the merged string.\n","327":"You are given a binary string s and a positive integer k.\nReturn the length of the longest subsequence of s that makes up a binary number less than or equal to k.\nNote:\nThe subsequence can contain leading zeroes.\nThe empty string is considered to be equal to 0.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n","328":"You are given two positive integer arrays nums and target, of the same length.\nIn one operation, you can choose any two distinct indices i and j where 0 <= i, j < nums.length and:\nset nums[i] = nums[i] + 2 and\nset nums[j] = nums[j] - 2.\nTwo arrays are considered to be similar if the frequency of each element is the same.\nReturn the minimum number of operations required to make nums similar to target. The test cases are generated such that nums can always be similar to target.\n","329":"There are n servers numbered from 0 to n - 1 connected by undirected server-to-server connections forming a network where connections[i] = [ai, bi] represents a connection between servers ai and bi. Any server can reach other servers directly or indirectly through the network.\nA critical connection is a connection that, if removed, will make some servers unable to reach some other server.\nReturn all critical connections in the network in any order.\n","330":"You are given a string sentence that consist of words separated by spaces. Each word consists of lowercase and uppercase letters only.\nWe would like to convert the sentence to \"Goat Latin\" (a made-up language similar to Pig Latin.) The rules of Goat Latin are as follows:\nIf a word begins with a vowel ('a', 'e', 'i', 'o', or 'u'), append \"ma\" to the end of the word.\nFor example, the word \"apple\" becomes \"applema\".\nIf a word begins with a consonant (i.e., not a vowel), remove the first letter and append it to the end, then add \"ma\".\nFor example, the word \"goat\" becomes \"oatgma\".\nAdd one letter 'a' to the end of each word per its word index in the sentence, starting with 1.\nFor example, the first word gets \"a\" added to the end, the second word gets \"aa\" added to the end, and so on.\nReturn the final sentence representing the conversion from sentence to Goat Latin.\n","331":"You are given two 0-indexed integer arrays nums1 and nums2, each of size n, and an integer diff. Find the number of pairs (i, j) such that:\n0 <= i < j <= n - 1 and\nnums1[i] - nums1[j] <= nums2[i] - nums2[j] + diff.\nReturn the number of pairs that satisfy the conditions.\n","332":"Given two arrays of integers nums1 and nums2, return the number of triplets formed (type 1 and type 2) under the following rules:\nType 1: Triplet (i, j, k) if nums1[i]2 == nums2[j] * nums2[k] where 0 <= i < nums1.length and 0 <= j < k < nums2.length.\nType 2: Triplet (i, j, k) if nums2[i]2 == nums1[j] * nums1[k] where 0 <= i < nums2.length and 0 <= j < k < nums1.length.\n","333":"You are given an integer array nums and an integer k.\nIn one operation, you can choose any index i where 0 <= i < nums.length and change nums[i] to nums[i] + x where x is an integer from the range [-k, k]. You can apply this operation at most once for each index i.\nThe score of nums is the difference between the maximum and minimum elements in nums.\nReturn the minimum score of nums after applying the mentioned operation at most once for each index in it.\n","334":"Given an integer array nums, reorder it such that nums[0] < nums[1] > nums[2] < nums[3]....\nYou may assume the input array always has a valid answer.\n","335":"You are given a 0-indexed binary string s and two integers minJump and maxJump. In the beginning, you are standing at index 0, which is equal to '0'. You can move from index i to index j if the following conditions are fulfilled:\ni + minJump <= j <= min(i + maxJump, s.length - 1), and\ns[j] == '0'.\nReturn true if you can reach index s.length - 1 in s, or false otherwise.\n","336":"An attendance record for a student can be represented as a string where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:\n'A': Absent.\n'L': Late.\n'P': Present.\nAny student is eligible for an attendance award if they meet both of the following criteria:\nThe student was absent ('A') for strictly fewer than 2 days total.\nThe student was never late ('L') for 3 or more consecutive days.\nGiven an integer n, return the number of possible attendance records of length n that make a student eligible for an attendance award. The answer may be very large, so return it modulo 109 + 7.\n","337":"Given two strings needle and haystack, return the index of the first occurrence of needle in haystack, or -1 if needle is not part of haystack.\n","338":"Given an integer n, return the number of prime numbers that are strictly less than n.\n","339":"You are given an integer array nums and two integers indexDiff and valueDiff.\nFind a pair of indices (i, j) such that:\ni != j,\nabs(i - j) <= indexDiff.\nabs(nums[i] - nums[j]) <= valueDiff, and\nReturn true if such pair exists or false otherwise.\n","340":"There are n cities numbered from 0 to n - 1 and n - 1 roads such that there is only one way to travel between two different cities (this network form a tree). Last year, The ministry of transport decided to orient the roads in one direction because they are too narrow.\nRoads are represented by connections where connections[i] = [ai, bi] represents a road from city ai to city bi.\nThis year, there will be a big event in the capital (city 0), and many people want to travel to this city.\nYour task consists of reorienting some roads such that each city can visit the city 0. Return the minimum number of edges changed.\nIt's guaranteed that each city can reach city 0 after reorder.\n","341":"Given the root of a binary tree, the depth of each node is the shortest distance to the root.\nReturn the smallest subtree such that it contains all the deepest nodes in the original tree.\nA node is called the deepest if it has the largest depth possible among any node in the entire tree.\nThe subtree of a node is a tree consisting of that node, plus the set of all descendants of that node.\n","342":"There is a country of n cities numbered from 0 to n - 1 where all the cities are connected by bi-directional roads. The roads are represented as a 2D integer array edges where edges[i] = [xi, yi, timei] denotes a road between cities xi and yi that takes timei minutes to travel. There may be multiple roads of differing travel times connecting the same two cities, but no road connects a city to itself.\nEach time you pass through a city, you must pay a passing fee. This is represented as a 0-indexed integer array passingFees of length n where passingFees[j] is the amount of dollars you must pay when you pass through city j.\nIn the beginning, you are at city 0 and want to reach city n - 1 in maxTime minutes or less. The cost of your journey is the summation of passing fees for each city that you passed through at some moment of your journey (including the source and destination cities).\nGiven maxTime, edges, and passingFees, return the minimum cost to complete your journey, or -1 if you cannot complete it within maxTime minutes.\n","343":"You are given an array of integers nums. Perform the following steps:\nFind any two adjacent numbers in nums that are non-coprime.\nIf no such numbers are found, stop the process.\nOtherwise, delete the two numbers and replace them with their LCM (Least Common Multiple).\nRepeat this process as long as you keep finding two adjacent non-coprime numbers.\nReturn the final modified array. It can be shown that replacing adjacent non-coprime numbers in any arbitrary order will lead to the same result.\nThe test cases are generated such that the values in the final array are less than or equal to 108.\nTwo values x and y are non-coprime if GCD(x, y) > 1 where GCD(x, y) is the Greatest Common Divisor of x and y.\n","344":"Given a string s, return true if it is possible to split the string s into three non-empty palindromic substrings. Otherwise, return false.\nA string is said to be palindrome if it the same string when reversed.\n","345":"We define a harmonious array as an array where the difference between its maximum value and its minimum value is exactly 1.\nGiven an integer array nums, return the length of its longest harmonious subsequence among all its possible subsequences.\nA subsequence of array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements.\n","346":"Your country has an infinite number of lakes. Initially, all the lakes are empty, but when it rains over the nth lake, the nth lake becomes full of water. If it rains over a lake that is full of water, there will be a flood. Your goal is to avoid floods in any lake.\nGiven an integer array rains where:\nrains[i] > 0 means there will be rains over the rains[i] lake.\nrains[i] == 0 means there are no rains this day and you can choose one lake this day and dry it.\nReturn an array ans where:\nans.length == rains.length\nans[i] == -1 if rains[i] > 0.\nans[i] is the lake you choose to dry in the ith day if rains[i] == 0.\nIf there are multiple valid answers return any of them. If it is impossible to avoid flood return an empty array.\nNotice that if you chose to dry a full lake, it becomes empty, but if you chose to dry an empty lake, nothing changes.\n","347":"You are given the customer visit log of a shop represented by a 0-indexed string customers consisting only of characters 'N' and 'Y':\nif the ith character is 'Y', it means that customers come at the ith hour\nwhereas 'N' indicates that no customers come at the ith hour.\nIf the shop closes at the jth hour (0 <= j <= n), the penalty is calculated as follows:\nFor every hour when the shop is open and no customers come, the penalty increases by 1.\nFor every hour when the shop is closed and customers come, the penalty increases by 1.\nReturn the earliest hour at which the shop must be closed to incur a minimum penalty.\nNote that if a shop closes at the jth hour, it means the shop is closed at the hour j.\n","348":"In this problem, a rooted tree is a directed graph such that, there is exactly one node (the root) for which all other nodes are descendants of this node, plus every node has exactly one parent, except for the root node which has no parents.\nThe given input is a directed graph that started as a rooted tree with n nodes (with distinct values from 1 to n), with one additional directed edge added. The added edge has two different vertices chosen from 1 to n, and was not an edge that already existed.\nThe resulting graph is given as a 2D-array of edges. Each element of edges is a pair [ui, vi] that represents a directed edge connecting nodes ui and vi, where ui is a parent of child vi.\nReturn an edge that can be removed so that the resulting graph is a rooted tree of n nodes. If there are multiple answers, return the answer that occurs last in the given 2D-array.\n","349":"You want to water n plants in your garden with a watering can. The plants are arranged in a row and are labeled from 0 to n - 1 from left to right where the ith plant is located at x = i. There is a river at x = -1 that you can refill your watering can at.\nEach plant needs a specific amount of water. You will water the plants in the following way:\nWater the plants in order from left to right.\nAfter watering the current plant, if you do not have enough water to completely water the next plant, return to the river to fully refill the watering can.\nYou cannot refill the watering can early.\nYou are initially at the river (i.e., x = -1). It takes one step to move one unit on the x-axis.\nGiven a 0-indexed integer array plants of n integers, where plants[i] is the amount of water the ith plant needs, and an integer capacity representing the watering can capacity, return the number of steps needed to water all the plants.\n","350":"A super ugly number is a positive integer whose prime factors are in the array primes.\nGiven an integer n and an array of integers primes, return the nth super ugly number.\nThe nth super ugly number is guaranteed to fit in a 32-bit signed integer.\n","351":"A valid encoding of an array of words is any reference string s and array of indices indices such that:\nwords.length == indices.length\nThe reference string s ends with the '#' character.\nFor each index indices[i], the substring of s starting from indices[i] and up to (but not including) the next '#' character is equal to words[i].\nGiven an array of words, return the length of the shortest reference string s possible of any valid encoding of words.\n","352":"There are some spherical balloons taped onto a flat wall that represents the XY-plane. The balloons are represented as a 2D integer array points where points[i] = [xstart, xend] denotes a balloon whose horizontal diameter stretches between xstart and xend. You do not know the exact y-coordinates of the balloons.\nArrows can be shot up directly vertically (in the positive y-direction) from different points along the x-axis. A balloon with xstart and xend is burst by an arrow shot at x if xstart <= x <= xend. There is no limit to the number of arrows that can be shot. A shot arrow keeps traveling up infinitely, bursting any balloons in its path.\nGiven the array points, return the minimum number of arrows that must be shot to burst all balloons.\n","353":"Given an unsorted integer array nums, return the smallest missing positive integer.\nYou must implement an algorithm that runs in O(n) time and uses constant extra space.\n","354":"You are given a string s. An awesome substring is a non-empty substring of s such that we can make any number of swaps in order to make it a palindrome.\nReturn the length of the maximum length awesome substring of s.\n","355":"There are n uniquely-sized sticks whose lengths are integers from 1 to n. You want to arrange the sticks such that exactly k sticks are visible from the left. A stick is visible from the left if there are no longer sticks to the left of it.\nFor example, if the sticks are arranged [1,3,2,5,4], then the sticks with lengths 1, 3, and 5 are visible from the left.\nGiven n and k, return the number of such arrangements. Since the answer may be large, return it modulo 109 + 7.\n","356":"You are given an undirected graph (the \"original graph\") with n nodes labeled from 0 to n - 1. You decide to subdivide each edge in the graph into a chain of nodes, with the number of new nodes varying between each edge.\nThe graph is given as a 2D array of edges where edges[i] = [ui, vi, cnti] indicates that there is an edge between nodes ui and vi in the original graph, and cnti is the total number of new nodes that you will subdivide the edge into. Note that cnti == 0 means you will not subdivide the edge.\nTo subdivide the edge [ui, vi], replace it with (cnti + 1) new edges and cnti new nodes. The new nodes are x1, x2, ..., xcnti, and the new edges are [ui, x1], [x1, x2], [x2, x3], ..., [xcnti-1, xcnti], [xcnti, vi].\nIn this new graph, you want to know how many nodes are reachable from the node 0, where a node is reachable if the distance is maxMoves or less.\nGiven the original graph and maxMoves, return the number of nodes that are reachable from node 0 in the new graph.\n","357":"You are given the root of a binary search tree (BST), where the values of exactly two nodes of the tree were swapped by mistake. Recover the tree without changing its structure.\n","358":"Given a string s. Return all the words vertically in the same order in which they appear in s.\nWords are returned as a list of strings, complete with spaces when is necessary. (Trailing spaces are not allowed).\nEach word would be put on only one column and that in one column there will be only one word.\n","359":"Given a binary string s, you can split s into 3 non-empty strings s1, s2, and s3 where s1 + s2 + s3 = s.\nReturn the number of ways s can be split such that the number of ones is the same in s1, s2, and s3. Since the answer may be too large, return it modulo 109 + 7.\n","360":"The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\nGiven an integer n, return the number of distinct solutions to the n-queens puzzle.\n","361":"Given a 2D grid of 0s and 1s, return the number of elements in the largest square subgrid that has all 1s on its border, or 0 if such a subgrid doesn't exist in the grid.\n","362":"Design a HashSet without using any built-in hash table libraries.\nImplement MyHashSet class:\nvoid add(key) Inserts the value key into the HashSet.\nbool contains(key) Returns whether the value key exists in the HashSet or not.\nvoid remove(key) Removes the value key in the HashSet. If key does not exist in the HashSet, do nothing.\n","363":"Given the root of a binary tree, return the most frequent subtree sum. If there is a tie, return all the values with the highest frequency in any order.\nThe subtree sum of a node is defined as the sum of all the node values formed by the subtree rooted at that node (including the node itself).\n","364":"You are given two 0-indexed binary strings s and target of the same length n. You can do the following operation on s any number of times:\nChoose two different indices i and j where 0 <= i, j < n.\nSimultaneously, replace s[i] with (s[i] OR s[j]) and s[j] with (s[i] XOR s[j]).\nFor example, if s = \"0110\", you can choose i = 0 and j = 2, then simultaneously replace s[0] with (s[0] OR s[2] = 0 OR 1 = 1), and s[2] with (s[0] XOR s[2] = 0 XOR 1 = 1), so we will have s = \"1110\".\nReturn true if you can make the string s equal to target, or false otherwise.\n","365":"SQL Schema\nTable: Triangle\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| x           | int  |\n| y           | int  |\n| z           | int  |\n+-------------+------+\n(x, y, z) is the primary key column for this table.\nEach row of this table contains the lengths of three line segments.\n  Write an SQL query to report for every three line segments whether they can form a triangle.\nReturn the result table in any order.\nThe query result format is in the following example.\n","366":"Given an array of integers nums, return the number of good pairs.\nA pair (i, j) is called good if nums[i] == nums[j] and i < j.\n","367":"A parentheses string is a non-empty string consisting only of '(' and ')'. It is valid if any of the following conditions is true:\nIt is ().\nIt can be written as AB (A concatenated with B), where A and B are valid parentheses strings.\nIt can be written as (A), where A is a valid parentheses string.\nYou are given a parentheses string s and a string locked, both of length n. locked is a binary string consisting only of '0's and '1's. For each index i of locked,\nIf locked[i] is '1', you cannot change s[i].\nBut if locked[i] is '0', you can change s[i] to either '(' or ')'.\nReturn true if you can make s a valid parentheses string. Otherwise, return false.\n","368":"Given the head of a linked list, return the list after sorting it in ascending order.\n","369":"A good meal is a meal that contains exactly two different food items with a sum of deliciousness equal to a power of two.\nYou can pick any two different foods to make a good meal.\nGiven an array of integers deliciousness where deliciousness[i] is the deliciousness of the ith item of food, return the number of different good meals you can make from this list modulo 109 + 7.\nNote that items with different indices are considered different even if they have the same deliciousness value.\n","370":"There is a survey that consists of n questions where each question's answer is either 0 (no) or 1 (yes).\nThe survey was given to m students numbered from 0 to m - 1 and m mentors numbered from 0 to m - 1. The answers of the students are represented by a 2D integer array students where students[i] is an integer array that contains the answers of the ith student (0-indexed). The answers of the mentors are represented by a 2D integer array mentors where mentors[j] is an integer array that contains the answers of the jth mentor (0-indexed).\nEach student will be assigned to one mentor, and each mentor will have one student assigned to them. The compatibility score of a student-mentor pair is the number of answers that are the same for both the student and the mentor.\nFor example, if the student's answers were [1, 0, 1] and the mentor's answers were [0, 0, 1], then their compatibility score is 2 because only the second and the third answers are the same.\nYou are tasked with finding the optimal student-mentor pairings to maximize the sum of the compatibility scores.\nGiven students and mentors, return the maximum compatibility score sum that can be achieved.\n","371":"You are given a positive integer n, indicating that we initially have an n x n 0-indexed integer matrix mat filled with zeroes.\nYou are also given a 2D integer array query. For each query[i] = [row1i, col1i, row2i, col2i], you should do the following operation:\nAdd 1 to every element in the submatrix with the top left corner (row1i, col1i) and the bottom right corner (row2i, col2i). That is, add 1 to mat[x][y] for all row1i <= x <= row2i and col1i <= y <= col2i.\nReturn the matrix mat after performing every query.\n","372":"A game on an undirected graph is played by two players, Mouse and Cat, who alternate turns.\nThe graph is given as follows: graph[a] is a list of all nodes b such that ab is an edge of the graph.\nThe mouse starts at node 1 and goes first, the cat starts at node 2 and goes second, and there is a hole at node 0.\nDuring each player's turn, they must travel along one edge of the graph that meets where they are.  For example, if the Mouse is at node 1, it must travel to any node in graph[1].\nAdditionally, it is not allowed for the Cat to travel to the Hole (node 0.)\nThen, the game can end in three ways:\nIf ever the Cat occupies the same node as the Mouse, the Cat wins.\nIf ever the Mouse reaches the Hole, the Mouse wins.\nIf ever a position is repeated (i.e., the players are in the same position as a previous turn, and it is the same player's turn to move), the game is a draw.\nGiven a graph, and assuming both players play optimally, return\n1 if the mouse wins the game,\n2 if the cat wins the game, or\n0 if the game is a draw.\n","373":"Given an integer array instructions, you are asked to create a sorted array from the elements in instructions. You start with an empty container nums. For each element from left to right in instructions, insert it into nums. The cost of each insertion is the minimum of the following:\nThe number of elements currently in nums that are strictly less than instructions[i].\nThe number of elements currently in nums that are strictly greater than instructions[i].\nFor example, if inserting element 3 into nums = [1,2,3,5], the cost of insertion is min(2, 1) (elements 1 and 2 are less than 3, element 5 is greater than 3) and nums will become [1,2,3,3,5].\nReturn the total cost to insert all elements from instructions into nums. Since the answer may be large, return it modulo 109 + 7\n","374":"You are given a 0-indexed integer array stones sorted in strictly increasing order representing the positions of stones in a river.\nA frog, initially on the first stone, wants to travel to the last stone and then return to the first stone. However, it can jump to any stone at most once.\nThe length of a jump is the absolute difference between the position of the stone the frog is currently on and the position of the stone to which the frog jumps.\nMore formally, if the frog is at stones[i] and is jumping to stones[j], the length of the jump is |stones[i] - stones[j]|.\nThe cost of a path is the maximum length of a jump among all jumps in the path.\nReturn the minimum cost of a path for the frog.\n","375":"You are given a string s. Reorder the string using the following algorithm:\nPick the smallest character from s and append it to the result.\nPick the smallest character from s which is greater than the last appended character to the result and append it.\nRepeat step 2 until you cannot pick more characters.\nPick the largest character from s and append it to the result.\nPick the largest character from s which is smaller than the last appended character to the result and append it.\nRepeat step 5 until you cannot pick more characters.\nRepeat the steps from 1 to 6 until you pick all characters from s.\nIn each step, If the smallest or the largest character appears more than once you can choose any occurrence and append it to the result.\nReturn the result string after sorting s with this algorithm.\n","376":"Given head which is a reference node to a singly-linked list. The value of each node in the linked list is either 0 or 1. The linked list holds the binary representation of a number.\nReturn the decimal value of the number in the linked list.\nThe most significant bit is at the head of the linked list.\n","377":"You are given an array of strings nums and an integer k. Each string in nums represents an integer without leading zeros.\nReturn the string that represents the kth largest integer in nums.\nNote: Duplicate numbers should be counted distinctly. For example, if nums is [\"1\",\"2\",\"2\"], \"2\" is the first largest integer, \"2\" is the second-largest integer, and \"1\" is the third-largest integer.\n","378":"Given the root of a perfect binary tree, reverse the node values at each odd level of the tree.\nFor example, suppose the node values at level 3 are [2,1,3,4,7,11,29,18], then it should become [18,29,11,7,4,3,1,2].\nReturn the root of the reversed tree.\nA binary tree is perfect if all parent nodes have two children and all leaves are on the same level.\nThe level of a node is the number of edges along the path between it and the root node.\n","379":"Given an integer array nums of size n, return the minimum number of moves required to make all array elements equal.\nIn one move, you can increment or decrement an element of the array by 1.\nTest cases are designed so that the answer will fit in a 32-bit integer.\n","380":"A Range Module is a module that tracks ranges of numbers. Design a data structure to track the ranges represented as half-open intervals and query about them.\nA half-open interval [left, right) denotes all the real numbers x where left <= x < right.\nImplement the RangeModule class:\nRangeModule() Initializes the object of the data structure.\nvoid addRange(int left, int right) Adds the half-open interval [left, right), tracking every real number in that interval. Adding an interval that partially overlaps with currently tracked numbers should add any numbers in the interval [left, right) that are not already tracked.\nboolean queryRange(int left, int right) Returns true if every real number in the interval [left, right) is currently being tracked, and false otherwise.\nvoid removeRange(int left, int right) Stops tracking every real number currently being tracked in the half-open interval [left, right).\n","381":"Anti-theft security devices are activated inside a bank. You are given a 0-indexed binary string array bank representing the floor plan of the bank, which is an m x n 2D matrix. bank[i] represents the ith row, consisting of '0's and '1's. '0' means the cell is empty, while'1' means the cell has a security device.\nThere is one laser beam between any two security devices if both conditions are met:\nThe two devices are located on two different rows: r1 and r2, where r1 < r2.\nFor each row i where r1 < i < r2, there are no security devices in the ith row.\nLaser beams are independent, i.e., one beam does not interfere nor join with another.\nReturn the total number of laser beams in the bank.\n","382":"You are given a binary string s, and a 2D integer array queries where queries[i] = [firsti, secondi].\nFor the ith query, find the shortest substring of s whose decimal value, val, yields secondi when bitwise XORed with firsti. In other words, val ^ firsti == secondi.\nThe answer to the ith query is the endpoints (0-indexed) of the substring [lefti, righti] or [-1, -1] if no such substring exists. If there are multiple answers, choose the one with the minimum lefti.\nReturn an array ans where ans[i] = [lefti, righti] is the answer to the ith query.\nA substring is a contiguous non-empty sequence of characters within a string.\n","383":"Given an integer array nums sorted in non-decreasing order, return an array of the squares of each number sorted in non-decreasing order.\n","384":"You are given an integer n indicating there are n people numbered from 0 to n - 1. You are also given a 0-indexed 2D integer array meetings where meetings[i] = [xi, yi, timei] indicates that person xi and person yi have a meeting at timei. A person may attend multiple meetings at the same time. Finally, you are given an integer firstPerson.\nPerson 0 has a secret and initially shares the secret with a person firstPerson at time 0. This secret is then shared every time a meeting takes place with a person that has the secret. More formally, for every meeting, if a person xi has the secret at timei, then they will share the secret with person yi, and vice versa.\nThe secrets are shared instantaneously. That is, a person may receive the secret and share it with people in other meetings within the same time frame.\nReturn a list of all the people that have the secret after all the meetings have taken place. You may return the answer in any order.\n","385":"You have a 2-D grid of size m x n representing a box, and you have n balls. The box is open on the top and bottom sides.\nEach cell in the box has a diagonal board spanning two corners of the cell that can redirect a ball to the right or to the left.\nA board that redirects the ball to the right spans the top-left corner to the bottom-right corner and is represented in the grid as 1.\nA board that redirects the ball to the left spans the top-right corner to the bottom-left corner and is represented in the grid as -1.\nWe drop one ball at the top of each column of the box. Each ball can get stuck in the box or fall out of the bottom. A ball gets stuck if it hits a \"V\" shaped pattern between two boards or if a board redirects the ball into either wall of the box.\nReturn an array answer of size n where answer[i] is the column that the ball falls out of at the bottom after dropping the ball from the ith column at the top, or -1 if the ball gets stuck in the box.\n","386":"SQL Schema\nTable: Customer\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| customer_id | int     |\n| product_key | int     |\n+-------------+---------+\nThere is no primary key for this table. It may contain duplicates. customer_id is not NULL.\nproduct_key is a foreign key to Product table.\n  Table: Product\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| product_key | int     |\n+-------------+---------+\nproduct_key is the primary key column for this table.\n  Write an SQL query to report the customer ids from the Customer table that bought all the products in the Product table.\nReturn the result table in any order.\nThe query result format is in the following example.\n","387":"You are given an integer num. You will apply the following steps exactly two times:\nPick a digit x (0 <= x <= 9).\nPick another digit y (0 <= y <= 9). The digit y can be equal to x.\nReplace all the occurrences of x in the decimal representation of num by y.\nThe new integer cannot have any leading zeros, also the new integer cannot be 0.\nLet a and b be the results of applying the operations to num the first and second times, respectively.\nReturn the max difference between a and b.\n","388":"You are given an integer array target. You have an integer array initial of the same size as target with all elements initially zeros.\nIn one operation you can choose any subarray from initial and increment each value by one.\nReturn the minimum number of operations to form a target array from initial.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n","389":"Find all valid combinations of k numbers that sum up to n such that the following conditions are true:\nOnly numbers 1 through 9 are used.\nEach number is used at most once.\nReturn a list of all possible valid combinations. The list must not contain the same combination twice, and the combinations may be returned in any order.\n","390":"Given an integer num, find the closest two integers in absolute difference whose product equals num + 1 or num + 2.\nReturn the two integers in any order.\n","391":"You have n coins and you want to build a staircase with these coins. The staircase consists of k rows where the ith row has exactly i coins. The last row of the staircase may be incomplete.\nGiven the integer n, return the number of complete rows of the staircase you will build.\n","392":"Design your implementation of the linked list. You can choose to use a singly or doubly linked list.\nA node in a singly linked list should have two attributes: val and next. val is the value of the current node, and next is a pointer\/reference to the next node.\nIf you want to use the doubly linked list, you will need one more attribute prev to indicate the previous node in the linked list. Assume all nodes in the linked list are 0-indexed.\nImplement the MyLinkedList class:\nMyLinkedList() Initializes the MyLinkedList object.\nint get(int index) Get the value of the indexth node in the linked list. If the index is invalid, return -1.\nvoid addAtHead(int val) Add a node of value val before the first element of the linked list. After the insertion, the new node will be the first node of the linked list.\nvoid addAtTail(int val) Append a node of value val as the last element of the linked list.\nvoid addAtIndex(int index, int val) Add a node of value val before the indexth node in the linked list. If index equals the length of the linked list, the node will be appended to the end of the linked list. If index is greater than the length, the node will not be inserted.\nvoid deleteAtIndex(int index) Delete the indexth node in the linked list, if the index is valid.\n","393":"You have a keyboard layout as shown above in the X-Y plane, where each English uppercase letter is located at some coordinate.\nFor example, the letter 'A' is located at coordinate (0, 0), the letter 'B' is located at coordinate (0, 1), the letter 'P' is located at coordinate (2, 3) and the letter 'Z' is located at coordinate (4, 1).\nGiven the string word, return the minimum total distance to type such string using only two fingers.\nThe distance between coordinates (x1, y1) and (x2, y2) is |x1 - x2| + |y1 - y2|.\nNote that the initial positions of your two fingers are considered free so do not count towards your total distance, also your two fingers do not have to start at the first letter or the first two letters.\n","394":"You are given a list of strings of the same length words and a string target.\nYour task is to form target using the given words under the following rules:\ntarget should be formed from left to right.\nTo form the ith character (0-indexed) of target, you can choose the kth character of the jth string in words if target[i] = words[j][k].\nOnce you use the kth character of the jth string of words, you can no longer use the xth character of any string in words where x <= k. In other words, all characters to the left of or at index k become unusuable for every string.\nRepeat the process until you form the string target.\nNotice that you can use multiple characters from the same string in words provided the conditions above are met.\nReturn the number of ways to form target from words. Since the answer may be too large, return it modulo 109 + 7.\n","395":"An additive number is a string whose digits can form an additive sequence.\nA valid additive sequence should contain at least three numbers. Except for the first two numbers, each subsequent number in the sequence must be the sum of the preceding two.\nGiven a string containing only digits, return true if it is an additive number or false otherwise.\nNote: Numbers in the additive sequence cannot have leading zeros, so sequence 1, 2, 03 or 1, 02, 3 is invalid.\n","396":"You are given a 0-indexed integer array candies. Each element in the array denotes a pile of candies of size candies[i]. You can divide each pile into any number of sub piles, but you cannot merge two piles together.\nYou are also given an integer k. You should allocate piles of candies to k children such that each child gets the same number of candies. Each child can take at most one pile of candies and some piles of candies may go unused.\nReturn the maximum number of candies each child can get.\n","397":"Given a string s, return the number of segments in the string.\nA segment is defined to be a contiguous sequence of non-space characters.\n","398":"Write a program to count the number of days between two dates.\nThe two dates are given as strings, their format is YYYY-MM-DD as shown in the examples.\n","399":"You are given a 0-indexed m x n binary matrix matrix and an integer numSelect, which denotes the number of distinct columns you must select from matrix.\nLet us consider s = {c1, c2, ...., cnumSelect} as the set of columns selected by you. A row row is covered by s if:\nFor each cell matrix[row][col] (0 <= col <= n - 1) where matrix[row][col] == 1, col is present in s or,\nNo cell in row has a value of 1.\nYou need to choose numSelect columns such that the number of rows that are covered is maximized.\nReturn the maximum number of rows that can be covered by a set of numSelect columns.\n","400":"A valid IP address consists of exactly four integers separated by single dots. Each integer is between 0 and 255 (inclusive) and cannot have leading zeros.\nFor example, \"0.1.2.201\" and \"192.168.1.1\" are valid IP addresses, but \"0.011.255.245\", \"192.168.1.312\" and \"192.168@1.1\" are invalid IP addresses.\nGiven a string s containing only digits, return all possible valid IP addresses that can be formed by inserting dots into s. You are not allowed to reorder or remove any digits in s. You may return the valid IP addresses in any order.\n","401":"Given an m x n board of characters and a list of strings words, return all words on the board.\nEach word must be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once in a word.\n","402":"Given the root of a binary tree, return the postorder traversal of its nodes' values.\n","403":"A digit string is good if the digits (0-indexed) at even indices are even and the digits at odd indices are prime (2, 3, 5, or 7).\nFor example, \"2582\" is good because the digits (2 and 8) at even positions are even and the digits (5 and 2) at odd positions are prime. However, \"3245\" is not good because 3 is at an even index but is not even.\nGiven an integer n, return the total number of good digit strings of length n. Since the answer may be large, return it modulo 109 + 7.\nA digit string is a string consisting of digits 0 through 9 that may contain leading zeros.\n","404":"Given an array nums of integers, return the length of the longest arithmetic subsequence in nums.\nNote that:\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\nA sequence seq is arithmetic if seq[i + 1] - seq[i] are all the same value (for 0 <= i < seq.length - 1).\n","405":"You are given two 0-indexed integer arrays fronts and backs of length n, where the ith card has the positive integer fronts[i] printed on the front and backs[i] printed on the back. Initially, each card is placed on a table such that the front number is facing up and the other is facing down. You may flip over any number of cards (possibly zero).\nAfter flipping the cards, an integer is considered good if it is facing down on some card and not facing up on any card.\nReturn the minimum possible good integer after flipping the cards. If there are no good integers, return 0.\n","406":"You are given the root of a binary tree with n nodes. Each node is assigned a unique value from 1 to n. You are also given an array queries of size m.\nYou have to perform m independent queries on the tree where in the ith query you do the following:\nRemove the subtree rooted at the node with the value queries[i] from the tree. It is guaranteed that queries[i] will not be equal to the value of the root.\nReturn an array answer of size m where answer[i] is the height of the tree after performing the ith query.\nNote:\nThe queries are independent, so the tree returns to its initial state after each query.\nThe height of a tree is the number of edges in the longest simple path from the root to some node in the tree.\n","407":"A cell (r, c) of an excel sheet is represented as a string \"<col><row>\" where:\n<col> denotes the column number c of the cell. It is represented by alphabetical letters.\nFor example, the 1st column is denoted by 'A', the 2nd by 'B', the 3rd by 'C', and so on.\n<row> is the row number r of the cell. The rth row is represented by the integer r.\nYou are given a string s in the format \"<col1><row1>:<col2><row2>\", where <col1> represents the column c1, <row1> represents the row r1, <col2> represents the column c2, and <row2> represents the row r2, such that r1 <= r2 and c1 <= c2.\nReturn the list of cells (x, y) such that r1 <= x <= r2 and c1 <= y <= c2. The cells should be represented as strings in the format mentioned above and be sorted in non-decreasing order first by columns and then by rows.\n","408":"You are given a string num, which represents a large integer. You are also given a 0-indexed integer array change of length 10 that maps each digit 0-9 to another digit. More formally, digit d maps to digit change[d].\nYou may choose to mutate a single substring of num. To mutate a substring, replace each digit num[i] with the digit it maps to in change (i.e. replace num[i] with change[num[i]]).\nReturn a string representing the largest possible integer after mutating (or choosing not to) a single substring of num.\nA substring is a contiguous sequence of characters within the string.\n","409":"Given an integer array nums and an integer k, return the number of pairs (i, j) where i < j such that |nums[i] - nums[j]| == k.\nThe value of |x| is defined as:\nx if x >= 0.\n-x if x < 0.\n","410":"You are given an array nums. You can rotate it by a non-negative integer k so that the array becomes [nums[k], nums[k + 1], ... nums[nums.length - 1], nums[0], nums[1], ..., nums[k-1]]. Afterward, any entries that are less than or equal to their index are worth one point.\nFor example, if we have nums = [2,4,1,3,0], and we rotate by k = 2, it becomes [1,3,0,2,4]. This is worth 3 points because 1 > 0 [no points], 3 > 1 [no points], 0 <= 2 [one point], 2 <= 3 [one point], 4 <= 4 [one point].\nReturn the rotation index k that corresponds to the highest score we can achieve if we rotated nums by it. If there are multiple answers, return the smallest such index k.\n","411":"Given an array nums, return true if the array was originally sorted in non-decreasing order, then rotated some number of positions (including zero). Otherwise, return false.\nThere may be duplicates in the original array.\nNote: An array A rotated by x positions results in an array B of the same length such that A[i] == B[(i+x) % A.length], where % is the modulo operation.\n","412":"Given a palindromic string of lowercase English letters palindrome, replace exactly one character with any lowercase English letter so that the resulting string is not a palindrome and that it is the lexicographically smallest one possible.\nReturn the resulting string. If there is no way to replace a character to make it not a palindrome, return an empty string.\nA string a is lexicographically smaller than a string b (of the same length) if in the first position where a and b differ, a has a character strictly smaller than the corresponding character in b. For example, \"abcc\" is lexicographically smaller than \"abcd\" because the first position they differ is at the fourth character, and 'c' is smaller than 'd'.\n","413":"You are given a 2D integer array rectangles where rectangles[i] = [li, hi] indicates that ith rectangle has a length of li and a height of hi. You are also given a 2D integer array points where points[j] = [xj, yj] is a point with coordinates (xj, yj).\nThe ith rectangle has its bottom-left corner point at the coordinates (0, 0) and its top-right corner point at (li, hi).\nReturn an integer array count of length points.length where count[j] is the number of rectangles that contain the jth point.\nThe ith rectangle contains the jth point if 0 <= xj <= li and 0 <= yj <= hi. Note that points that lie on the edges of a rectangle are also considered to be contained by that rectangle.\n","414":"Alice and Bob take turns playing a game, with Alice starting first.\nInitially, there are n stones in a pile. On each player's turn, that player makes a move consisting of removing any non-zero square number of stones in the pile.\nAlso, if a player cannot make a move, he\/she loses the game.\nGiven a positive integer n, return true if and only if Alice wins the game otherwise return false, assuming both players play optimally.\n","415":"Given two integers left and right, return the count of numbers in the inclusive range [left, right] having a prime number of set bits in their binary representation.\nRecall that the number of set bits an integer has is the number of 1's present when written in binary.\nFor example, 21 written in binary is 10101, which has 3 set bits.\n","416":"International Morse Code defines a standard encoding where each letter is mapped to a series of dots and dashes, as follows:\n'a' maps to \".-\",\n'b' maps to \"-...\",\n'c' maps to \"-.-.\", and so on.\nFor convenience, the full table for the 26 letters of the English alphabet is given below:\n[\".-\",\"-...\",\"-.-.\",\"-..\",\".\",\"..-.\",\"--.\",\"....\",\"..\",\".---\",\"-.-\",\".-..\",\"--\",\"-.\",\"---\",\".--.\",\"--.-\",\".-.\",\"...\",\"-\",\"..-\",\"...-\",\".--\",\"-..-\",\"-.--\",\"--..\"]\nGiven an array of strings words where each word can be written as a concatenation of the Morse code of each letter.\nFor example, \"cab\" can be written as \"-.-..--...\", which is the concatenation of \"-.-.\", \".-\", and \"-...\". We will call such a concatenation the transformation of a word.\nReturn the number of different transformations among all words we have.\n","417":"You are given the head of a linked list.\nThe nodes in the linked list are sequentially assigned to non-empty groups whose lengths form the sequence of the natural numbers (1, 2, 3, 4, ...). The length of a group is the number of nodes assigned to it. In other words,\nThe 1st node is assigned to the first group.\nThe 2nd and the 3rd nodes are assigned to the second group.\nThe 4th, 5th, and 6th nodes are assigned to the third group, and so on.\nNote that the length of the last group may be less than or equal to 1 + the length of the second to last group.\nReverse the nodes in each group with an even length, and return the head of the modified linked list.\n","418":"Given a positive integer millis, write an asyncronous function that sleeps for millis milliseconds. It can resolve any value.\n","419":"Given an integer array nums and two integers firstLen and secondLen, return the maximum sum of elements in two non-overlapping subarrays with lengths firstLen and secondLen.\nThe array with length firstLen could occur before or after the array with length secondLen, but they have to be non-overlapping.\nA subarray is a contiguous part of an array.\n","420":"You are given an array of equal-length strings words. Assume that the length of each string is n.\nEach string words[i] can be converted into a difference integer array difference[i] of length n - 1 where difference[i][j] = words[i][j+1] - words[i][j] where 0 <= j <= n - 2. Note that the difference between two letters is the difference between their positions in the alphabet i.e. the position of 'a' is 0, 'b' is 1, and 'z' is 25.\nFor example, for the string \"acb\", the difference integer array is [2 - 0, 1 - 2] = [2, -1].\nAll the strings in words have the same difference integer array, except one. You should find that string.\nReturn the string in words that has different difference integer array.\n","421":"You are given a binary string s. You are allowed to perform two types of operations on the string in any sequence:\nType-1: Remove the character at the start of the string s and append it to the end of the string.\nType-2: Pick any character in s and flip its value, i.e., if its value is '0' it becomes '1' and vice-versa.\nReturn the minimum number of type-2 operations you need to perform such that s becomes alternating.\nThe string is called alternating if no two adjacent characters are equal.\nFor example, the strings \"010\" and \"1010\" are alternating, while the string \"0100\" is not.\n","422":"Given a string columnTitle that represents the column title as appears in an Excel sheet, return its corresponding column number.\nFor example:\nA -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28 \n...\n","423":"You are given a string text of words that are placed among some number of spaces. Each word consists of one or more lowercase English letters and are separated by at least one space. It's guaranteed that text contains at least one word.\nRearrange the spaces so that there is an equal number of spaces between every pair of adjacent words and that number is maximized. If you cannot redistribute all the spaces equally, place the extra spaces at the end, meaning the returned string should be the same length as text.\nReturn the string after rearranging the spaces.\n","424":"The bitwise AND of an array nums is the bitwise AND of all integers in nums.\nFor example, for nums = [1, 5, 3], the bitwise AND is equal to 1 & 5 & 3 = 1.\nAlso, for nums = [7], the bitwise AND is 7.\nYou are given an array of positive integers candidates. Evaluate the bitwise AND of every combination of numbers of candidates. Each number in candidates may only be used once in each combination.\nReturn the size of the largest combination of candidates with a bitwise AND greater than 0.\n","425":"There are n people standing in a queue, and they numbered from 0 to n - 1 in left to right order. You are given an array heights of distinct integers where heights[i] represents the height of the ith person.\nA person can see another person to their right in the queue if everybody in between is shorter than both of them. More formally, the ith person can see the jth person if i < j and min(heights[i], heights[j]) > max(heights[i+1], heights[i+2], ..., heights[j-1]).\nReturn an array answer of length n where answer[i] is the number of people the ith person can see to their right in the queue.\n","426":"There are n piles of stones arranged in a row. The ith pile has stones[i] stones.\nA move consists of merging exactly k consecutive piles into one pile, and the cost of this move is equal to the total number of stones in these k piles.\nReturn the minimum cost to merge all piles of stones into one pile. If it is impossible, return -1.\n","427":"There is a rooted tree consisting of n nodes numbered 0 to n - 1. Each node's number denotes its unique genetic value (i.e. the genetic value of node x is x). The genetic difference between two genetic values is defined as the bitwise-XOR of their values. You are given the integer array parents, where parents[i] is the parent for node i. If node x is the root of the tree, then parents[x] == -1.\nYou are also given the array queries where queries[i] = [nodei, vali]. For each query i, find the maximum genetic difference between vali and pi, where pi is the genetic value of any node that is on the path between nodei and the root (including nodei and the root). More formally, you want to maximize vali XOR pi.\nReturn an array ans where ans[i] is the answer to the ith query.\n","428":"Given a sentence text (A sentence is a string of space-separated words) in the following format:\nFirst letter is in upper case.\nEach word in text are separated by a single space.\nYour task is to rearrange the words in text such that all words are rearranged in an increasing order of their lengths. If two words have the same length, arrange them in their original order.\nReturn the new text following the format shown above.\n","429":"Given two positive integers left and right, find the two integers num1 and num2 such that:\nleft <= nums1 < nums2 <= right .\nnums1 and nums2 are both prime numbers.\nnums2 - nums1 is the minimum amongst all other pairs satisfying the above conditions.\nReturn the positive integer array ans = [nums1, nums2]. If there are multiple pairs satisfying these conditions, return the one with the minimum nums1 value or [-1, -1] if such numbers do not exist.\nA number greater than 1 is called prime if it is only divisible by 1 and itself.\n","430":"There is a strange printer with the following two special properties:\nThe printer can only print a sequence of the same character each time.\nAt each turn, the printer can print new characters starting from and ending at any place and will cover the original existing characters.\nGiven a string s, return the minimum number of turns the printer needed to print it.\n","431":"You are given an integer n. There is an undirected graph with n vertices, numbered from 0 to n - 1. You are given a 2D integer array edges where edges[i] = [ai, bi] denotes that there exists an undirected edge connecting vertices ai and bi.\nReturn the number of complete connected components of the graph.\nA connected component is a subgraph of a graph in which there exists a path between any two vertices, and no vertex of the subgraph shares an edge with a vertex outside of the subgraph.\nA connected component is said to be complete if there exists an edge between every pair of its vertices.\n","432":"You have a convex n-sided polygon where each vertex has an integer value. You are given an integer array values where values[i] is the value of the ith vertex (i.e., clockwise order).\nYou will triangulate the polygon into n - 2 triangles. For each triangle, the value of that triangle is the product of the values of its vertices, and the total score of the triangulation is the sum of these values over all n - 2 triangles in the triangulation.\nReturn the smallest possible total score that you can achieve with some triangulation of the polygon.\n","433":"Given two strings s and t, each of which represents a non-negative rational number, return true if and only if they represent the same number. The strings may use parentheses to denote the repeating part of the rational number.\nA rational number can be represented using up to three parts: <IntegerPart>, <NonRepeatingPart>, and a <RepeatingPart>. The number will be represented in one of the following three ways:\n<IntegerPart>\nFor example, 12, 0, and 123.\n<IntegerPart><.><NonRepeatingPart>\nFor example, 0.5, 1., 2.12, and 123.0001.\n<IntegerPart><.><NonRepeatingPart><(><RepeatingPart><)>\nFor example, 0.1(6), 1.(9), 123.00(1212).\nThe repeating portion of a decimal expansion is conventionally denoted within a pair of round brackets. For example:\n1\/6 = 0.16666666... = 0.1(6) = 0.1666(6) = 0.166(66).\n","434":"Given an array arr of 4 digits, find the latest 24-hour time that can be made using each digit exactly once.\n24-hour times are formatted as \"HH:MM\", where HH is between 00 and 23, and MM is between 00 and 59. The earliest 24-hour time is 00:00, and the latest is 23:59.\nReturn the latest 24-hour time in \"HH:MM\" format. If no valid time can be made, return an empty string.\n","435":"You are given a 0-indexed integer array nums of length n.\nA split at an index i where 0 <= i <= n - 2 is called valid if the product of the first i + 1 elements and the product of the remaining elements are coprime.\nFor example, if nums = [2, 3, 3], then a split at the index i = 0 is valid because 2 and 9 are coprime, while a split at the index i = 1 is not valid because 6 and 3 are not coprime. A split at the index i = 2 is not valid because i == n - 1.\nReturn the smallest index i at which the array can be split validly or -1 if there is no such split.\nTwo values val1 and val2 are coprime if gcd(val1, val2) == 1 where gcd(val1, val2) is the greatest common divisor of val1 and val2.\n","436":"The median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value. So the median is the mean of the two middle values.\nFor examples, if arr = [2,3,4], the median is 3.\nFor examples, if arr = [1,2,3,4], the median is (2 + 3) \/ 2 = 2.5.\nYou are given an integer array nums and an integer k. There is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.\nReturn the median array for each window in the original array. Answers within 10-5 of the actual value will be accepted.\n","437":"You are climbing a staircase. It takes n steps to reach the top.\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\n","438":"There are some robots and factories on the X-axis. You are given an integer array robot where robot[i] is the position of the ith robot. You are also given a 2D integer array factory where factory[j] = [positionj, limitj] indicates that positionj is the position of the jth factory and that the jth factory can repair at most limitj robots.\nThe positions of each robot are unique. The positions of each factory are also unique. Note that a robot can be in the same position as a factory initially.\nAll the robots are initially broken; they keep moving in one direction. The direction could be the negative or the positive direction of the X-axis. When a robot reaches a factory that did not reach its limit, the factory repairs the robot, and it stops moving.\nAt any moment, you can set the initial direction of moving for some robot. Your target is to minimize the total distance traveled by all the robots.\nReturn the minimum total distance traveled by all the robots. The test cases are generated such that all the robots can be repaired.\nNote that\nAll robots move at the same speed.\nIf two robots move in the same direction, they will never collide.\nIf two robots move in opposite directions and they meet at some point, they do not collide. They cross each other.\nIf a robot passes by a factory that reached its limits, it crosses it as if it does not exist.\nIf the robot moved from a position x to a position y, the distance it moved is |y - x|.\n","439":"You have observations of n + m 6-sided dice rolls with each face numbered from 1 to 6. n of the observations went missing, and you only have the observations of m rolls. Fortunately, you have also calculated the average value of the n + m rolls.\nYou are given an integer array rolls of length m where rolls[i] is the value of the ith observation. You are also given the two integers mean and n.\nReturn an array of length n containing the missing observations such that the average value of the n + m rolls is exactly mean. If there are multiple valid answers, return any of them. If no such array exists, return an empty array.\nThe average value of a set of k numbers is the sum of the numbers divided by k.\nNote that mean is an integer, so the sum of the n + m rolls should be divisible by n + m.\n","440":"Given an integer num, return the number of digits in num that divide num.\nAn integer val divides nums if nums % val == 0.\n","441":"There exists an undirected and unrooted tree with n nodes indexed from 0 to n - 1. You are given an integer n and a 2D integer array edges of length n - 1, where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree. You are also given an array coins of size n where coins[i] can be either 0 or 1, where 1 indicates the presence of a coin in the vertex i.\nInitially, you choose to start at any vertex in the tree. Then, you can perform the following operations any number of times: \nCollect all the coins that are at a distance of at most 2 from the current vertex, or\nMove to any adjacent vertex in the tree.\nFind the minimum number of edges you need to go through to collect all the coins and go back to the initial vertex.\nNote that if you pass an edge several times, you need to count it into the answer several times.\n","442":"Given an integer array nums of length n, you want to create an array ans of length 2n where ans[i] == nums[i] and ans[i + n] == nums[i] for 0 <= i < n (0-indexed).\nSpecifically, ans is the concatenation of two nums arrays.\nReturn the array ans.\n","443":"Given a string s, return true if s is a good string, or false otherwise.\nA string s is good if all the characters that appear in s have the same number of occurrences (i.e., the same frequency).\n","444":"Note: This is a companion problem to the System Design problem: Design TinyURL.\nTinyURL is a URL shortening service where you enter a URL such as https:\/\/leetcode.com\/problems\/design-tinyurl and it returns a short URL such as http:\/\/tinyurl.com\/4e9iAk. Design a class to encode a URL and decode a tiny URL.\nThere is no restriction on how your encode\/decode algorithm should work. You just need to ensure that a URL can be encoded to a tiny URL and the tiny URL can be decoded to the original URL.\nImplement the Solution class:\nSolution() Initializes the object of the system.\nString encode(String longUrl) Returns a tiny URL for the given longUrl.\nString decode(String shortUrl) Returns the original long URL for the given shortUrl. It is guaranteed that the given shortUrl was encoded by the same object.\n","445":"You are given a binary array nums (0-indexed).\nWe define xi as the number whose binary representation is the subarray nums[0..i] (from most-significant-bit to least-significant-bit).\nFor example, if nums = [1,0,1], then x0 = 1, x1 = 2, and x2 = 5.\nReturn an array of booleans answer where answer[i] is true if xi is divisible by 5.\n","446":"Given an integer n, you must transform it into 0 using the following operations any number of times:\nChange the rightmost (0th) bit in the binary representation of n.\nChange the ith bit in the binary representation of n if the (i-1)th bit is set to 1 and the (i-2)th through 0th bits are set to 0.\nReturn the minimum number of operations to transform n into 0.\n","447":"Given an integer array nums and an integer k, return true if it is possible to divide this array into k non-empty subsets whose sums are all equal.\n","448":"You are given an n x n integer matrix board where the cells are labeled from 1 to n2 in a Boustrophedon style starting from the bottom left of the board (i.e. board[n - 1][0]) and alternating direction each row.\nYou start on square 1 of the board. In each move, starting from square curr, do the following:\nChoose a destination square next with a label in the range [curr + 1, min(curr + 6, n2)].\nThis choice simulates the result of a standard 6-sided die roll: i.e., there are always at most 6 destinations, regardless of the size of the board.\nIf next has a snake or ladder, you must move to the destination of that snake or ladder. Otherwise, you move to next.\nThe game ends when you reach the square n2.\nA board square on row r and column c has a snake or ladder if board[r][c] != -1. The destination of that snake or ladder is board[r][c]. Squares 1 and n2 do not have a snake or ladder.\nNote that you only take a snake or ladder at most once per move. If the destination to a snake or ladder is the start of another snake or ladder, you do not follow the subsequent snake or ladder.\nFor example, suppose the board is [[-1,4],[-1,3]], and on the first move, your destination square is 2. You follow the ladder to square 3, but do not follow the subsequent ladder to 4.\nReturn the least number of moves required to reach the square n2. If it is not possible to reach the square, return -1.\n","449":"You are given two arrays of integers nums1 and nums2, possibly of different lengths. The values in the arrays are between 1 and 6, inclusive.\nIn one operation, you can change any integer's value in any of the arrays to any value between 1 and 6, inclusive.\nReturn the minimum number of operations required to make the sum of values in nums1 equal to the sum of values in nums2. Return -1 if it is not possible to make the sum of the two arrays equal.\n","450":"A robot on an infinite XY-plane starts at point (0, 0) facing north. The robot can receive a sequence of these three possible types of commands:\n-2: Turn left 90 degrees.\n-1: Turn right 90 degrees.\n1 <= k <= 9: Move forward k units, one unit at a time.\nSome of the grid squares are obstacles. The ith obstacle is at grid point obstacles[i] = (xi, yi). If the robot runs into an obstacle, then it will instead stay in its current location and move on to the next command.\nReturn the maximum Euclidean distance that the robot ever gets from the origin squared (i.e. if the distance is 5, return 25).\nNote:\nNorth means +Y direction.\nEast means +X direction.\nSouth means -Y direction.\nWest means -X direction.\n","451":"Given a 0-indexed integer array nums, find the leftmost middleIndex (i.e., the smallest amongst all the possible ones).\nA middleIndex is an index where nums[0] + nums[1] + ... + nums[middleIndex-1] == nums[middleIndex+1] + nums[middleIndex+2] + ... + nums[nums.length-1].\nIf middleIndex == 0, the left side sum is considered to be 0. Similarly, if middleIndex == nums.length - 1, the right side sum is considered to be 0.\nReturn the leftmost middleIndex that satisfies the condition, or -1 if there is no such index.\n","452":"Given a string s, partition the string into one or more substrings such that the characters in each substring are unique. That is, no letter appears in a single substring more than once.\nReturn the minimum number of substrings in such a partition.\nNote that each character should belong to exactly one substring in a partition.\n","453":"Given a single positive integer x, we will write an expression of the form x (op1) x (op2) x (op3) x ... where each operator op1, op2, etc. is either addition, subtraction, multiplication, or division (+, -, *, or \/). For example, with x = 3, we might write 3 * 3 \/ 3 + 3 - 3 which is a value of 3.\nWhen writing such an expression, we adhere to the following conventions:\nThe division operator (\/) returns rational numbers.\nThere are no parentheses placed anywhere.\nWe use the usual order of operations: multiplication and division happen before addition and subtraction.\nIt is not allowed to use the unary negation operator (-). For example, \"x - x\" is a valid expression as it only uses subtraction, but \"-x + x\" is not because it uses negation.\nWe would like to write an expression with the least number of operators such that the expression equals the given target. Return the least number of operators used.\n","454":"You are given two integer arrays nums1 and nums2, sorted in non-decreasing order, and two integers m and n, representing the number of elements in nums1 and nums2 respectively.\nMerge nums1 and nums2 into a single array sorted in non-decreasing order.\nThe final sorted array should not be returned by the function, but instead be stored inside the array nums1. To accommodate this, nums1 has a length of m + n, where the first m elements denote the elements that should be merged, and the last n elements are set to 0 and should be ignored. nums2 has a length of n.\n","455":"Given an array of digits digits, return the largest multiple of three that can be formed by concatenating some of the given digits in any order. If there is no answer return an empty string.\nSince the answer may not fit in an integer data type, return the answer as a string. Note that the returning answer must not contain unnecessary leading zeros.\n","456":"You have an inventory of different colored balls, and there is a customer that wants orders balls of any color.\nThe customer weirdly values the colored balls. Each colored ball's value is the number of balls of that color you currently have in your inventory. For example, if you own 6 yellow balls, the customer would pay 6 for the first yellow ball. After the transaction, there are only 5 yellow balls left, so the next yellow ball is then valued at 5 (i.e., the value of the balls decreases as you sell more to the customer).\nYou are given an integer array, inventory, where inventory[i] represents the number of balls of the ith color that you initially own. You are also given an integer orders, which represents the total number of balls that the customer wants. You can sell the balls in any order.\nReturn the maximum total value that you can attain after selling orders colored balls. As the answer may be too large, return it modulo 109 + 7.\n","457":"You have k bags. You are given a 0-indexed integer array weights where weights[i] is the weight of the ith marble. You are also given the integer k.\nDivide the marbles into the k bags according to the following rules:\nNo bag is empty.\nIf the ith marble and jth marble are in a bag, then all marbles with an index between the ith and jth indices should also be in that same bag.\nIf a bag consists of all the marbles with an index from i to j inclusively, then the cost of the bag is weights[i] + weights[j].\nThe score after distributing the marbles is the sum of the costs of all the k bags.\nReturn the difference between the maximum and minimum scores among marble distributions.\n","458":"You are given an array people where people[i] is the weight of the ith person, and an infinite number of boats where each boat can carry a maximum weight of limit. Each boat carries at most two people at the same time, provided the sum of the weight of those people is at most limit.\nReturn the minimum number of boats to carry every given person.\n","459":"You are given a positive integer array skill of even length n where skill[i] denotes the skill of the ith player. Divide the players into n \/ 2 teams of size 2 such that the total skill of each team is equal.\nThe chemistry of a team is equal to the product of the skills of the players on that team.\nReturn the sum of the chemistry of all the teams, or return -1 if there is no way to divide the players into teams such that the total skill of each team is equal.\n","460":"A sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each word consists of lowercase and uppercase English letters.\nA sentence can be shuffled by appending the 1-indexed word position to each word then rearranging the words in the sentence.\nFor example, the sentence \"This is a sentence\" can be shuffled as \"sentence4 a3 is2 This1\" or \"is2 sentence4 This1 a3\".\nGiven a shuffled sentence s containing no more than 9 words, reconstruct and return the original sentence.\n","461":"You are given two strings start and target, both of length n. Each string consists only of the characters 'L', 'R', and '_' where:\nThe characters 'L' and 'R' represent pieces, where a piece 'L' can move to the left only if there is a blank space directly to its left, and a piece 'R' can move to the right only if there is a blank space directly to its right.\nThe character '_' represents a blank space that can be occupied by any of the 'L' or 'R' pieces.\nReturn true if it is possible to obtain the string target by moving the pieces of the string start any number of times. Otherwise, return false.\n","462":"Given two integers a and b, return any string s such that:\ns has length a + b and contains exactly a 'a' letters, and exactly b 'b' letters,\nThe substring 'aaa' does not occur in s, and\nThe substring 'bbb' does not occur in s.\n","463":"You are given an integer array nums.\nYou should move each element of nums into one of the two arrays A and B such that A and B are non-empty, and average(A) == average(B).\nReturn true if it is possible to achieve that and false otherwise.\nNote that for an array arr, average(arr) is the sum of all the elements of arr over the length of arr.\n","464":"There are two types of soup: type A and type B. Initially, we have n ml of each type of soup. There are four kinds of operations:\nServe 100 ml of soup A and 0 ml of soup B,\nServe 75 ml of soup A and 25 ml of soup B,\nServe 50 ml of soup A and 50 ml of soup B, and\nServe 25 ml of soup A and 75 ml of soup B.\nWhen we serve some soup, we give it to someone, and we no longer have it. Each turn, we will choose from the four operations with an equal probability 0.25. If the remaining volume of soup is not enough to complete the operation, we will serve as much as possible. We stop once we no longer have some quantity of both types of soup.\nNote that we do not have an operation where all 100 ml's of soup B are used first.\nReturn the probability that soup A will be empty first, plus half the probability that A and B become empty at the same time. Answers within 10-5 of the actual answer will be accepted.\n","465":"You are given an m x n binary matrix grid where each cell is either 0 (empty) or 1 (occupied).\nYou are then given stamps of size stampHeight x stampWidth. We want to fit the stamps such that they follow the given restrictions and requirements:\nCover all the empty cells.\nDo not cover any of the occupied cells.\nWe can put as many stamps as we want.\nStamps can overlap with each other.\nStamps are not allowed to be rotated.\nStamps must stay completely inside the grid.\nReturn true if it is possible to fit the stamps while following the given restrictions and requirements. Otherwise, return false.\n","466":"You are given a m x n matrix grid. Initially, you are located at the top-left corner (0, 0), and in each step, you can only move right or down in the matrix.\nAmong all possible paths starting from the top-left corner (0, 0) and ending in the bottom-right corner (m - 1, n - 1), find the path with the maximum non-negative product. The product of a path is the product of all integers in the grid cells visited along the path.\nReturn the maximum non-negative product modulo 109 + 7. If the maximum product is negative, return -1.\nNotice that the modulo is performed after getting the maximum product.\n","467":"You are given n tasks labeled from 0 to n - 1 represented by a 2D integer array tasks, where tasks[i] = [enqueueTimei, processingTimei] means that the ith task will be available to process at enqueueTimei and will take processingTimei to finish processing.\nYou have a single-threaded CPU that can process at most one task at a time and will act in the following way:\nIf the CPU is idle and there are no available tasks to process, the CPU remains idle.\nIf the CPU is idle and there are available tasks, the CPU will choose the one with the shortest processing time. If multiple tasks have the same shortest processing time, it will choose the task with the smallest index.\nOnce a task is started, the CPU will process the entire task without stopping.\nThe CPU can finish a task then start a new one instantly.\nReturn the order in which the CPU will process the tasks.\n","468":"There are n children standing in a line. Each child is assigned a rating value given in the integer array ratings.\nYou are giving candies to these children subjected to the following requirements:\nEach child must have at least one candy.\nChildren with a higher rating get more candies than their neighbors.\nReturn the minimum number of candies you need to have to distribute the candies to the children.\n","469":"You are given two positive integer arrays spells and potions, of length n and m respectively, where spells[i] represents the strength of the ith spell and potions[j] represents the strength of the jth potion.\nYou are also given an integer success. A spell and potion pair is considered successful if the product of their strengths is at least success.\nReturn an integer array pairs of length n where pairs[i] is the number of potions that will form a successful pair with the ith spell.\n","470":"Given a positive integer n, find the sum of all integers in the range [1, n] inclusive that are divisible by 3, 5, or 7.\nReturn an integer denoting the sum of all numbers in the given range satisfying the constraint.\n","471":"You are given a 0-indexed integer array tasks, where tasks[i] represents the difficulty level of a task. In each round, you can complete either 2 or 3 tasks of the same difficulty level.\nReturn the minimum rounds required to complete all the tasks, or -1 if it is not possible to complete all the tasks.\n","472":"You are given a 0-indexed integer array nums and an integer value.\nIn one operation, you can add or subtract value from any element of nums.\nFor example, if nums = [1,2,3] and value = 2, you can choose to subtract value from nums[0] to make nums = [-1,2,3].\nThe MEX (minimum excluded) of an array is the smallest missing non-negative integer in it.\nFor example, the MEX of [-1,2,3] is 0 while the MEX of [1,0,3] is 2.\nReturn the maximum MEX of nums after applying the mentioned operation any number of times.\n","473":"We stack glasses in a pyramid, where the first row has 1 glass, the second row has 2 glasses, and so on until the 100th row.  Each glass holds one cup of champagne.\nThen, some champagne is poured into the first glass at the top.  When the topmost glass is full, any excess liquid poured will fall equally to the glass immediately to the left and right of it.  When those glasses become full, any excess champagne will fall equally to the left and right of those glasses, and so on.  (A glass at the bottom row has its excess champagne fall on the floor.)\nFor example, after one cup of champagne is poured, the top most glass is full.  After two cups of champagne are poured, the two glasses on the second row are half full.  After three cups of champagne are poured, those two cups become full - there are 3 full glasses total now.  After four cups of champagne are poured, the third row has the middle glass half full, and the two outside glasses are a quarter full, as pictured below.\nNow after pouring some non-negative integer cups of champagne, return how full the jth glass in the ith row is (both i and j are 0-indexed.)\n","474":"You are given a 0-indexed integer array nums. You can rearrange the elements of nums to any order (including the given order).\nLet prefix be the array containing the prefix sums of nums after rearranging it. In other words, prefix[i] is the sum of the elements from 0 to i in nums after rearranging it. The score of nums is the number of positive integers in the array prefix.\nReturn the maximum score you can achieve.\n","475":"Solve a given equation and return the value of 'x' in the form of a string \"x=#value\". The equation contains only '+', '-' operation, the variable 'x' and its coefficient. You should return \"No solution\" if there is no solution for the equation, or \"Infinite solutions\" if there are infinite solutions for the equation.\nIf there is exactly one solution for the equation, we ensure that the value of 'x' is an integer.\n","476":"Given a pattern and a string s, find if s follows the same pattern.\nHere follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.\n","477":"You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a triple booking.\nA triple booking happens when three events have some non-empty intersection (i.e., some moment is common to all the three events.).\nThe event can be represented as a pair of integers start and end that represents a booking on the half-open interval [start, end), the range of real numbers x such that start <= x < end.\nImplement the MyCalendarTwo class:\nMyCalendarTwo() Initializes the calendar object.\nboolean book(int start, int end) Returns true if the event can be added to the calendar successfully without causing a triple booking. Otherwise, return false and do not add the event to the calendar.\n","478":"A k-mirror number is a positive integer without leading zeros that reads the same both forward and backward in base-10 as well as in base-k.\nFor example, 9 is a 2-mirror number. The representation of 9 in base-10 and base-2 are 9 and 1001 respectively, which read the same both forward and backward.\nOn the contrary, 4 is not a 2-mirror number. The representation of 4 in base-2 is 100, which does not read the same both forward and backward.\nGiven the base k and the number n, return the sum of the n smallest k-mirror numbers.\n","479":"Given a string s, return the maximum number of unique substrings that the given string can be split into.\nYou can split string s into any list of non-empty substrings, where the concatenation of the substrings forms the original string. However, you must split the substrings such that all of them are unique.\nA substring is a contiguous sequence of characters within a string.\n","480":"Given the root of a binary search tree and the lowest and highest boundaries as low and high, trim the tree so that all its elements lies in [low, high]. Trimming the tree should not change the relative structure of the elements that will remain in the tree (i.e., any node's descendant should remain a descendant). It can be proven that there is a unique answer.\nReturn the root of the trimmed binary search tree. Note that the root may change depending on the given bounds.\n","481":"There is a special typewriter with lowercase English letters 'a' to 'z' arranged in a circle with a pointer. A character can only be typed if the pointer is pointing to that character. The pointer is initially pointing to the character 'a'.\nEach second, you may perform one of the following operations:\nMove the pointer one character counterclockwise or clockwise.\nType the character the pointer is currently on.\nGiven a string word, return the minimum number of seconds to type out the characters in word.\n","482":"You may recall that an array arr is a mountain array if and only if:\narr.length >= 3\nThere exists some index i (0-indexed) with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\nGiven an integer array nums, return the minimum number of elements to remove to make nums a mountain array.\n","483":"The variance of a string is defined as the largest difference between the number of occurrences of any 2 characters present in the string. Note the two characters may or may not be the same.\nGiven a string s consisting of lowercase English letters only, return the largest variance possible among all substrings of s.\nA substring is a contiguous sequence of characters within a string.\n","484":"You are given an array of integers nums. You are also given an integer original which is the first number that needs to be searched for in nums.\nYou then do the following steps:\nIf original is found in nums, multiply it by two (i.e., set original = 2 * original).\nOtherwise, stop the process.\nRepeat this process with the new number as long as you keep finding the number.\nReturn the final value of original.\n","485":"A pangram is a sentence where every letter of the English alphabet appears at least once.\nGiven a string sentence containing only lowercase English letters, return true if sentence is a pangram, or false otherwise.\n","486":"Given an integer n, return a string array answer (1-indexed) where:\nanswer[i] == \"FizzBuzz\" if i is divisible by 3 and 5.\nanswer[i] == \"Fizz\" if i is divisible by 3.\nanswer[i] == \"Buzz\" if i is divisible by 5.\nanswer[i] == i (as a string) if none of the above conditions are true.\n","487":"Given an integer n, return all the structurally unique BST's (binary search trees), which has exactly n nodes of unique values from 1 to n. Return the answer in any order.\n","488":"Given a binary string s, return the number of substrings with all characters 1's. Since the answer may be too large, return it modulo 109 + 7.\n","489":"Given a 0-indexed integer array nums, return the smallest index i of nums such that i mod 10 == nums[i], or -1 if such index does not exist.\nx mod y denotes the remainder when x is divided by y.\n","490":"Given two integers left and right that represent the range [left, right], return the bitwise AND of all numbers in this range, inclusive.\n","491":"Given four integers length, width, height, and mass, representing the dimensions and mass of a box, respectively, return a string representing the category of the box.\nThe box is \"Bulky\" if:\nAny of the dimensions of the box is greater or equal to 104.\nOr, the volume of the box is greater or equal to 109.\nIf the mass of the box is greater or equal to 100, it is \"Heavy\".\nIf the box is both \"Bulky\" and \"Heavy\", then its category is \"Both\".\nIf the box is neither \"Bulky\" nor \"Heavy\", then its category is \"Neither\".\nIf the box is \"Bulky\" but not \"Heavy\", then its category is \"Bulky\".\nIf the box is \"Heavy\" but not \"Bulky\", then its category is \"Heavy\".\nNote that the volume of the box is the product of its length, width and height.\n","492":"Given the root of a binary tree, invert the tree, and return its root.\n","493":"Given the root of a binary tree, return the length of the longest path, where each node in the path has the same value. This path may or may not pass through the root.\nThe length of the path between two nodes is represented by the number of edges between them.\n","494":"You are given an integer array nums of length n where nums is a permutation of the numbers in the range [0, n - 1].\nYou should build a set s[k] = {nums[k], nums[nums[k]], nums[nums[nums[k]]], ... } subjected to the following rule:\nThe first element in s[k] starts with the selection of the element nums[k] of index = k.\nThe next element in s[k] should be nums[nums[k]], and then nums[nums[nums[k]]], and so on.\nWe stop adding right before a duplicate element occurs in s[k].\nReturn the longest length of a set s[k].\n","495":"You are given a very large integer n, represented as a string, and an integer digit x. The digits in n and the digit x are in the inclusive range [1, 9], and n may represent a negative number.\nYou want to maximize n's numerical value by inserting x anywhere in the decimal representation of n. You cannot insert x to the left of the negative sign.\nFor example, if n = 73 and x = 6, it would be best to insert it between 7 and 3, making n = 763.\nIf n = -55 and x = 2, it would be best to insert it before the first 5, making n = -255.\nReturn a string representing the maximum value of n after the insertion.\n","496":"You are given a string num, representing a large integer. Return the largest-valued odd integer (as a string) that is a non-empty substring of num, or an empty string \"\" if no odd integer exists.\nA substring is a contiguous sequence of characters within a string.\n","497":"","498":"You are given two 0-indexed strings word1 and word2.\nA move consists of choosing two indices i and j such that 0 <= i < word1.length and 0 <= j < word2.length and swapping word1[i] with word2[j].\nReturn true if it is possible to get the number of distinct characters in word1 and word2 to be equal with exactly one move. Return false otherwise.\n","499":"You are given two positive integer arrays nums1 and nums2, both of length n.\nThe absolute sum difference of arrays nums1 and nums2 is defined as the sum of |nums1[i] - nums2[i]| for each 0 <= i < n (0-indexed).\nYou can replace at most one element of nums1 with any other element in nums1 to minimize the absolute sum difference.\nReturn the minimum absolute sum difference after replacing at most one element in the array nums1. Since the answer may be large, return it modulo 109 + 7.\n|x| is defined as:\nx if x >= 0, or\n-x if x < 0.\n","500":"A scenic location is represented by its name and attractiveness score, where name is a unique string among all locations and score is an integer. Locations can be ranked from the best to the worst. The higher the score, the better the location. If the scores of two locations are equal, then the location with the lexicographically smaller name is better.\nYou are building a system that tracks the ranking of locations with the system initially starting with no locations. It supports:\nAdding scenic locations, one at a time.\nQuerying the ith best location of all locations already added, where i is the number of times the system has been queried (including the current query).\nFor example, when the system is queried for the 4th time, it returns the 4th best location of all locations already added.\nNote that the test data are generated so that at any time, the number of queries does not exceed the number of locations added to the system.\nImplement the SORTracker class:\nSORTracker() Initializes the tracker system.\nvoid add(string name, int score) Adds a scenic location with name and score to the system.\nstring get() Queries and returns the ith best location, where i is the number of times this method has been invoked (including this invocation).\n","501":"Given a positive integer num, return the number of positive integers less than or equal to num whose digit sums are even.\nThe digit sum of a positive integer is the sum of all its digits.\n","502":"There are n gas stations along a circular route, where the amount of gas at the ith station is gas[i].\nYou have a car with an unlimited gas tank and it costs cost[i] of gas to travel from the ith station to its next (i + 1)th station. You begin the journey with an empty tank at one of the gas stations.\nGiven two integer arrays gas and cost, return the starting gas station's index if you can travel around the circuit once in the clockwise direction, otherwise return -1. If there exists a solution, it is guaranteed to be unique\n","503":"You are given an m x n binary grid, where each 1 represents a brick and 0 represents an empty space. A brick is stable if:\nIt is directly connected to the top of the grid, or\nAt least one other brick in its four adjacent cells is stable.\nYou are also given an array hits, which is a sequence of erasures we want to apply. Each time we want to erase the brick at the location hits[i] = (rowi, coli). The brick on that location (if it exists) will disappear. Some other bricks may no longer be stable because of that erasure and will fall. Once a brick falls, it is immediately erased from the grid (i.e., it does not land on other stable bricks).\nReturn an array result, where each result[i] is the number of bricks that will fall after the ith erasure is applied.\nNote that an erasure may refer to a location with no brick, and if it does, no bricks drop.\n","504":"Given two integer arrays pushed and popped each with distinct values, return true if this could have been the result of a sequence of push and pop operations on an initially empty stack, or false otherwise.\n","505":"Given the root of a binary tree, return the lowest common ancestor of its deepest leaves.\nRecall that:\nThe node of a binary tree is a leaf if and only if it has no children\nThe depth of the root of the tree is 0. if the depth of a node is d, the depth of each of its children is d + 1.\nThe lowest common ancestor of a set S of nodes, is the node A with the largest depth such that every node in S is in the subtree with root A.\n","506":"You are given two strings s and t.\nString t is generated by random shuffling string s and then add one more letter at a random position.\nReturn the letter that was added to t.\n","507":"We are given an array asteroids of integers representing asteroids in a row.\nFor each asteroid, the absolute value represents its size, and the sign represents its direction (positive meaning right, negative meaning left). Each asteroid moves at the same speed.\nFind out the state of the asteroids after all collisions. If two asteroids meet, the smaller one will explode. If both are the same size, both will explode. Two asteroids moving in the same direction will never meet.\n","508":"You are given a positive integer n, you can do the following operation any number of times:\nAdd or subtract a power of 2 from n.\nReturn the minimum number of operations to make n equal to 0.\nA number x is power of 2 if x == 2i where i >= 0.\n","509":"The set [1, 2, 3, ..., n] contains a total of n! unique permutations.\nBy listing and labeling all of the permutations in order, we get the following sequence for n = 3:\n\"123\"\n\"132\"\n\"213\"\n\"231\"\n\"312\"\n\"321\"\nGiven n and k, return the kth permutation sequence.\n","510":"Given a binary array nums and an integer goal, return the number of non-empty subarrays with a sum goal.\nA subarray is a contiguous part of the array.\n","511":"You are given an integer array nums and an integer k. You can partition the array into at most k non-empty adjacent subarrays. The score of a partition is the sum of the averages of each subarray.\nNote that the partition must use every integer in nums, and that the score is not necessarily an integer.\nReturn the maximum score you can achieve of all the possible partitions. Answers within 10-6 of the actual answer will be accepted.\n","512":"You are given the root of a binary search tree (BST) and an integer val.\nFind the node in the BST that the node's value equals val and return the subtree rooted with that node. If such a node does not exist, return null.\n","513":"You are given a 2D array of integers envelopes where envelopes[i] = [wi, hi] represents the width and the height of an envelope.\nOne envelope can fit into another if and only if both the width and height of one envelope are greater than the other envelope's width and height.\nReturn the maximum number of envelopes you can Russian doll (i.e., put one inside the other).\nNote: You cannot rotate an envelope.\n","514":"You are given a 0-indexed integer array nums of even length.\nAs long as nums is not empty, you must repetitively:\nFind the minimum number in nums and remove it.\nFind the maximum number in nums and remove it.\nCalculate the average of the two removed numbers.\nThe average of two numbers a and b is (a + b) \/ 2.\nFor example, the average of 2 and 3 is (2 + 3) \/ 2 = 2.5.\nReturn the number of distinct averages calculated using the above process.\nNote that when there is a tie for a minimum or maximum number, any can be removed.\n","515":"A sentence is a list of words that are separated by a single space with no leading or trailing spaces.\nYou are given an array of strings sentences, where each sentences[i] represents a single sentence.\nReturn the maximum number of words that appear in a single sentence.\n","516":"You are given an array of strings of the same length words.\nIn one move, you can swap any two even indexed characters or any two odd indexed characters of a string words[i].\nTwo strings words[i] and words[j] are special-equivalent if after any number of moves, words[i] == words[j].\nFor example, words[i] = \"zzxy\" and words[j] = \"xyzz\" are special-equivalent because we may make the moves \"zzxy\" -> \"xzzy\" -> \"xyzz\".\nA group of special-equivalent strings from words is a non-empty subset of words such that:\nEvery pair of strings in the group are special equivalent, and\nThe group is the largest size possible (i.e., there is not a string words[i] not in the group such that words[i] is special-equivalent to every string in the group).\nReturn the number of groups of special-equivalent strings from words.\n","517":"A transformation sequence from word beginWord to word endWord using a dictionary wordList is a sequence of words beginWord -> s1 -> s2 -> ... -> sk such that:\nEvery adjacent pair of words differs by a single letter.\nEvery si for 1 <= i <= k is in wordList. Note that beginWord does not need to be in wordList.\nsk == endWord\nGiven two words, beginWord and endWord, and a dictionary wordList, return the number of words in the shortest transformation sequence from beginWord to endWord, or 0 if no such sequence exists.\n","518":"Alice and Bob have a different total number of candies. You are given two integer arrays aliceSizes and bobSizes where aliceSizes[i] is the number of candies of the ith box of candy that Alice has and bobSizes[j] is the number of candies of the jth box of candy that Bob has.\nSince they are friends, they would like to exchange one candy box each so that after the exchange, they both have the same total amount of candy. The total amount of candy a person has is the sum of the number of candies in each box they have.\nReturn an integer array answer where answer[0] is the number of candies in the box that Alice must exchange, and answer[1] is the number of candies in the box that Bob must exchange. If there are multiple answers, you may return any one of them. It is guaranteed that at least one answer exists.\n","519":"SQL Schema\nTable: Activity\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | int     |\n| session_id    | int     |\n| activity_date | date    |\n| activity_type | enum    |\n+---------------+---------+\nThere is no primary key for this table, it may have duplicate rows.\nThe activity_type column is an ENUM of type ('open_session', 'end_session', 'scroll_down', 'send_message').\nThe table shows the user activities for a social media website. \nNote that each session belongs to exactly one user.\n  Write an SQL query to find the daily active user count for a period of 30 days ending 2019-07-27 inclusively. A user was active on someday if they made at least one activity on that day.\nReturn the result table in any order.\nThe query result format is in the following example.\n","520":"Given an integer array arr, and an integer target, return the number of tuples i, j, k such that i < j < k and arr[i] + arr[j] + arr[k] == target.\nAs the answer can be very large, return it modulo 109 + 7.\n","521":"There is a bi-directional graph with n vertices, where each vertex is labeled from 0 to n - 1 (inclusive). The edges in the graph are represented as a 2D integer array edges, where each edges[i] = [ui, vi] denotes a bi-directional edge between vertex ui and vertex vi. Every vertex pair is connected by at most one edge, and no vertex has an edge to itself.\nYou want to determine if there is a valid path that exists from vertex source to vertex destination.\nGiven edges and the integers n, source, and destination, return true if there is a valid path from source to destination, or false otherwise.\n","522":"You are given a 0-indexed string hamsters where hamsters[i] is either:\n'H' indicating that there is a hamster at index i, or\n'.' indicating that index i is empty.\nYou will add some number of food buckets at the empty indices in order to feed the hamsters. A hamster can be fed if there is at least one food bucket to its left or to its right. More formally, a hamster at index i can be fed if you place a food bucket at index i - 1 and\/or at index i + 1.\nReturn the minimum number of food buckets you should place at empty indices to feed all the hamsters or -1 if it is impossible to feed all of them.\n","523":"You are given an array nums and an integer k. The XOR of a segment [left, right] where left <= right is the XOR of all the elements with indices between left and right, inclusive: nums[left] XOR nums[left+1] XOR ... XOR nums[right].\nReturn the minimum number of elements to change in the array such that the XOR of all segments of size k is equal to zero.\n","524":"A positive integer is magical if it is divisible by either a or b.\nGiven the three integers n, a, and b, return the nth magical number. Since the answer may be very large, return it modulo 109 + 7.\n","525":"Given a non-negative integer c, decide whether there're two integers a and b such that a2 + b2 = c.\n","526":"Given an array nums of n integers, return an array of all the unique quadruplets [nums[a], nums[b], nums[c], nums[d]] such that:\n0 <= a, b, c, d < n\na, b, c, and d are distinct.\nnums[a] + nums[b] + nums[c] + nums[d] == target\nYou may return the answer in any order.\n","527":"You are given an m x n matrix maze (0-indexed) with empty cells (represented as '.') and walls (represented as '+'). You are also given the entrance of the maze, where entrance = [entrancerow, entrancecol] denotes the row and column of the cell you are initially standing at.\nIn one step, you can move one cell up, down, left, or right. You cannot step into a cell with a wall, and you cannot step outside the maze. Your goal is to find the nearest exit from the entrance. An exit is defined as an empty cell that is at the border of the maze. The entrance does not count as an exit.\nReturn the number of steps in the shortest path from the entrance to the nearest exit, or -1 if no such path exists.\n","528":"Return the number of distinct non-empty substrings of text that can be written as the concatenation of some string with itself (i.e. it can be written as a + a where a is some string).\n","529":"A bus has n stops numbered from 0 to n - 1 that form a circle. We know the distance between all pairs of neighboring stops where distance[i] is the distance between the stops number i and (i + 1) % n.\nThe bus goes along both directions i.e. clockwise and counterclockwise.\nReturn the shortest distance between the given start and destination stops.\n","530":"Given an array of asyncronous functions functions and a pool limit n, return an asyncronous function promisePool. It should return a promise that resolves when all the input functions resolve.\nPool limit is defined as the maximum number promises that can be pending at once. promisePool should begin execution of as many functions as possible and continue executing new functions when old promises resolve. promisePool should execute functions[i] then functions[i + 1] then functions[i + 2], etc. When the last promise resolves, promisePool should also resolve.\nFor example, if n = 1, promisePool will execute one function at a time in series. However, if n = 2, it first executes two functions. When either of the two functions resolve, a 3rd function should be executed (if available), and so on until there are no functions left to execute.\nYou can assume all functions never reject. It is acceptable for promisePool to return a promise that resolves any value.\n","531":"You are given several boxes with different colors represented by different positive numbers.\nYou may experience several rounds to remove boxes until there is no box left. Each time you can choose some continuous boxes with the same color (i.e., composed of k boxes, k >= 1), remove them and get k * k points.\nReturn the maximum points you can get.\n","532":"You are given a 2D matrix of size m x n, consisting of non-negative integers. You are also given an integer k.\nThe value of coordinate (a, b) of the matrix is the XOR of all matrix[i][j] where 0 <= i <= a < m and 0 <= j <= b < n (0-indexed).\nFind the kth largest value (1-indexed) of all the coordinates of matrix.\n","533":"SQL Schema\nTable: Students\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| student_id    | int     |\n| student_name  | varchar |\n+---------------+---------+\nstudent_id is the primary key for this table.\nEach row of this table contains the ID and the name of one student in the school.\n  Table: Subjects\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| subject_name | varchar |\n+--------------+---------+\nsubject_name is the primary key for this table.\nEach row of this table contains the name of one subject in the school.\n  Table: Examinations\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| student_id   | int     |\n| subject_name | varchar |\n+--------------+---------+\nThere is no primary key for this table. It may contain duplicates.\nEach student from the Students table takes every course from the Subjects table.\nEach row of this table indicates that a student with ID student_id attended the exam of subject_name.\n  Write an SQL query to find the number of times each student attended each exam.\nReturn the result table ordered by student_id and subject_name.\nThe query result format is in the following example.\n","534":"You are given an array target of n integers. From a starting array arr consisting of n 1's, you may perform the following procedure :\nlet x be the sum of all elements currently in your array.\nchoose index i, such that 0 <= i < n and set the value of arr at index i to x.\nYou may repeat this procedure as many times as needed.\nReturn true if it is possible to construct the target array from arr, otherwise, return false.\n","535":"Given an integer rowIndex, return the rowIndexth (0-indexed) row of the Pascal's triangle.\nIn Pascal's triangle, each number is the sum of the two numbers directly above it as shown:\n","536":"Design a food rating system that can do the following:\nModify the rating of a food item listed in the system.\nReturn the highest-rated food item for a type of cuisine in the system.\nImplement the FoodRatings class:\nFoodRatings(String[] foods, String[] cuisines, int[] ratings) Initializes the system. The food items are described by foods, cuisines and ratings, all of which have a length of n.\nfoods[i] is the name of the ith food,\ncuisines[i] is the type of cuisine of the ith food, and\nratings[i] is the initial rating of the ith food.\nvoid changeRating(String food, int newRating) Changes the rating of the food item with the name food.\nString highestRated(String cuisine) Returns the name of the food item that has the highest rating for the given type of cuisine. If there is a tie, return the item with the lexicographically smaller name.\nNote that a string x is lexicographically smaller than string y if x comes before y in dictionary order, that is, either x is a prefix of y, or if i is the first position such that x[i] != y[i], then x[i] comes before y[i] in alphabetic order.\n","537":"The complement of an integer is the integer you get when you flip all the 0's to 1's and all the 1's to 0's in its binary representation.\nFor example, The integer 5 is \"101\" in binary and its complement is \"010\" which is the integer 2.\nGiven an integer num, return its complement.\n","538":"Given the head of a singly linked list, return true if it is a\npalindrome\nor false otherwise.\n","539":"There is a family tree rooted at 0 consisting of n nodes numbered 0 to n - 1. You are given a 0-indexed integer array parents, where parents[i] is the parent for node i. Since node 0 is the root, parents[0] == -1.\nThere are 105 genetic values, each represented by an integer in the inclusive range [1, 105]. You are given a 0-indexed integer array nums, where nums[i] is a distinct genetic value for node i.\nReturn an array ans of length n where ans[i] is the smallest genetic value that is missing from the subtree rooted at node i.\nThe subtree rooted at a node x contains node x and all of its descendant nodes.\n","540":"You are given an integer n representing the size of a 0-indexed memory array. All memory units are initially free.\nYou have a memory allocator with the following functionalities:\nAllocate a block of size consecutive free memory units and assign it the id mID.\nFree all memory units with the given id mID.\nNote that:\nMultiple blocks can be allocated to the same mID.\nYou should free all the memory units with mID, even if they were allocated in different blocks.\nImplement the Allocator class:\nAllocator(int n) Initializes an Allocator object with a memory array of size n.\nint allocate(int size, int mID) Find the leftmost block of size consecutive free memory units and allocate it with the id mID. Return the block's first index. If such a block does not exist, return -1.\nint free(int mID) Free all memory units with the id mID. Return the number of memory units you have freed.\n","541":"You are given a string title consisting of one or more words separated by a single space, where each word consists of English letters. Capitalize the string by changing the capitalization of each word such that:\nIf the length of the word is 1 or 2 letters, change all letters to lowercase.\nOtherwise, change the first letter to uppercase and the remaining letters to lowercase.\nReturn the capitalized title.\n","542":"You are given a string s of length n where s[i] is either:\n'D' means decreasing, or\n'I' means increasing.\nA permutation perm of n + 1 integers of all the integers in the range [0, n] is called a valid permutation if for all valid i:\nIf s[i] == 'D', then perm[i] > perm[i + 1], and\nIf s[i] == 'I', then perm[i] < perm[i + 1].\nReturn the number of valid permutations perm. Since the answer may be large, return it modulo 109 + 7.\n","543":"You are given two positive integers n and k. A factor of an integer n is defined as an integer i where n % i == 0.\nConsider a list of all factors of n sorted in ascending order, return the kth factor in this list or return -1 if n has less than k factors.\n","544":"A concert hall has n rows numbered from 0 to n - 1, each with m seats, numbered from 0 to m - 1. You need to design a ticketing system that can allocate seats in the following cases:\nIf a group of k spectators can sit together in a row.\nIf every member of a group of k spectators can get a seat. They may or may not sit together.\nNote that the spectators are very picky. Hence:\nThey will book seats only if each member of their group can get a seat with row number less than or equal to maxRow. maxRow can vary from group to group.\nIn case there are multiple rows to choose from, the row with the smallest number is chosen. If there are multiple seats to choose in the same row, the seat with the smallest number is chosen.\nImplement the BookMyShow class:\nBookMyShow(int n, int m) Initializes the object with n as number of rows and m as number of seats per row.\nint[] gather(int k, int maxRow) Returns an array of length 2 denoting the row and seat number (respectively) of the first seat being allocated to the k members of the group, who must sit together. In other words, it returns the smallest possible r and c such that all [c, c + k - 1] seats are valid and empty in row r, and r <= maxRow. Returns [] in case it is not possible to allocate seats to the group.\nboolean scatter(int k, int maxRow) Returns true if all k members of the group can be allocated seats in rows 0 to maxRow, who may or may not sit together. If the seats can be allocated, it allocates k seats to the group with the smallest row numbers, and the smallest possible seat numbers in each row. Otherwise, returns false.\n","545":"Given the array favoriteCompanies where favoriteCompanies[i] is the list of favorites companies for the ith person (indexed from 0).\nReturn the indices of people whose list of favorite companies is not a subset of any other list of favorites companies. You must return the indices in increasing order.\n","546":"You are given a 2D integer array tiles where tiles[i] = [li, ri] represents that every tile j in the range li <= j <= ri is colored white.\nYou are also given an integer carpetLen, the length of a single carpet that can be placed anywhere.\nReturn the maximum number of white tiles that can be covered by the carpet.\n","547":"Given a string expression of numbers and operators, return all possible results from computing all the different possible ways to group numbers and operators. You may return the answer in any order.\nThe test cases are generated such that the output values fit in a 32-bit integer and the number of different results does not exceed 104.\n","548":"You have n super washing machines on a line. Initially, each washing machine has some dresses or is empty.\nFor each move, you could choose any m (1 <= m <= n) washing machines, and pass one dress of each washing machine to one of its adjacent washing machines at the same time.\nGiven an integer array machines representing the number of dresses in each washing machine from left to right on the line, return the minimum number of moves to make all the washing machines have the same number of dresses. If it is not possible to do it, return -1.\n","549":"Given the integers zero, one, low, and high, we can construct a string by starting with an empty string, and then at each step perform either of the following:\nAppend the character '0' zero times.\nAppend the character '1' one times.\nThis can be performed any number of times.\nA good string is a string constructed by the above process having a length between low and high (inclusive).\nReturn the number of different good strings that can be constructed satisfying these properties. Since the answer can be large, return it modulo 109 + 7.\n","550":"You are given a personal information string s, representing either an email address or a phone number. Return the masked personal information using the below rules.\nEmail address:\nAn email address is:\nA name consisting of uppercase and lowercase English letters, followed by\nThe '@' symbol, followed by\nThe domain consisting of uppercase and lowercase English letters with a dot '.' somewhere in the middle (not the first or last character).\nTo mask an email:\nThe uppercase letters in the name and domain must be converted to lowercase letters.\nThe middle letters of the name (i.e., all but the first and last letters) must be replaced by 5 asterisks \"*****\".\nPhone number:\nA phone number is formatted as follows:\nThe phone number contains 10-13 digits.\nThe last 10 digits make up the local number.\nThe remaining 0-3 digits, in the beginning, make up the country code.\nSeparation characters from the set {'+', '-', '(', ')', ' '} separate the above digits in some way.\nTo mask a phone number:\nRemove all separation characters.\nThe masked phone number should have the form:\n\"***-***-XXXX\" if the country code has 0 digits.\n\"+*-***-***-XXXX\" if the country code has 1 digit.\n\"+**-***-***-XXXX\" if the country code has 2 digits.\n\"+***-***-***-XXXX\" if the country code has 3 digits.\n\"XXXX\" is the last 4 digits of the local number.\n","551":"A password is considered strong if the below conditions are all met:\nIt has at least 6 characters and at most 20 characters.\nIt contains at least one lowercase letter, at least one uppercase letter, and at least one digit.\nIt does not contain three repeating characters in a row (i.e., \"Baaabb0\" is weak, but \"Baaba0\" is strong).\nGiven a string password, return the minimum number of steps required to make password strong. if password is already strong, return 0.\nIn one step, you can:\nInsert one character to password,\nDelete one character from password, or\nReplace one character of password with another character.\n","552":"You are given a 0-indexed 2D integer array of events where events[i] = [startTimei, endTimei, valuei]. The ith event starts at startTimei and ends at endTimei, and if you attend this event, you will receive a value of valuei. You can choose at most two non-overlapping events to attend such that the sum of their values is maximized.\nReturn this maximum sum.\nNote that the start time and end time is inclusive: that is, you cannot attend two events where one of them starts and the other ends at the same time. More specifically, if you attend an event with end time t, the next event must start at or after t + 1.\n","553":"Given an array of distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target. You may return the combinations in any order.\nThe same number may be chosen from candidates an unlimited number of times. Two combinations are unique if the\nfrequency\nof at least one of the chosen numbers is different.\nThe test cases are generated such that the number of unique combinations that sum up to target is less than 150 combinations for the given input.\n","554":"You are given a 0-indexed 2D integer array transactions, where transactions[i] = [costi, cashbacki].\nThe array describes transactions, where each transaction must be completed exactly once in some order. At any given moment, you have a certain amount of money. In order to complete transaction i, money >= costi must hold true. After performing a transaction, money becomes money - costi + cashbacki.\nReturn the minimum amount of money required before any transaction so that all of the transactions can be completed regardless of the order of the transactions.\n","555":"You are given a 0-indexed integer array nums, where nums[i] represents the score of the ith student. You are also given an integer k.\nPick the scores of any k students from the array so that the difference between the highest and the lowest of the k scores is minimized.\nReturn the minimum possible difference.\n","556":"SQL Schema\nTable: Logs\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| num         | varchar |\n+-------------+---------+\nid is the primary key for this table.\nid is an autoincrement column.\n  Write an SQL query to find all numbers that appear at least three times consecutively.\nReturn the result table in any order.\nThe query result format is in the following example.\n","557":"Given an array of integers arr.\nWe want to select three indices i, j and k where (0 <= i < j <= k < arr.length).\nLet's define a and b as follows:\na = arr[i] ^ arr[i + 1] ^ ... ^ arr[j - 1]\nb = arr[j] ^ arr[j + 1] ^ ... ^ arr[k]\nNote that ^ denotes the bitwise-xor operation.\nReturn the number of triplets (i, j and k) Where a == b.\n","558":"Given the head of a sorted linked list, delete all nodes that have duplicate numbers, leaving only distinct numbers from the original list. Return the linked list sorted as well.\n","559":"There are buckets buckets of liquid, where exactly one of the buckets is poisonous. To figure out which one is poisonous, you feed some number of (poor) pigs the liquid to see whether they will die or not. Unfortunately, you only have minutesToTest minutes to determine which bucket is poisonous.\nYou can feed the pigs according to these steps:\nChoose some live pigs to feed.\nFor each pig, choose which buckets to feed it. The pig will consume all the chosen buckets simultaneously and will take no time. Each pig can feed from any number of buckets, and each bucket can be fed from by any number of pigs.\nWait for minutesToDie minutes. You may not feed any other pigs during this time.\nAfter minutesToDie minutes have passed, any pigs that have been fed the poisonous bucket will die, and all others will survive.\nRepeat this process until you run out of time.\nGiven buckets, minutesToDie, and minutesToTest, return the minimum number of pigs needed to figure out which bucket is poisonous within the allotted time.\n","560":"You are given an n x n grid where you have placed some 1 x 1 x 1 cubes. Each value v = grid[i][j] represents a tower of v cubes placed on top of cell (i, j).\nAfter placing these cubes, you have decided to glue any directly adjacent cubes to each other, forming several irregular 3D shapes.\nReturn the total surface area of the resulting shapes.\nNote: The bottom face of each shape counts toward its surface area.\n","561":"You are given an array of intervals, where intervals[i] = [starti, endi] and each starti is unique.\nThe right interval for an interval i is an interval j such that startj >= endi and startj is minimized. Note that i may equal j.\nReturn an array of right interval indices for each interval i. If no right interval exists for interval i, then put -1 at index i.\n","562":"You are given an array words of size n consisting of non-empty strings.\nWe define the score of a string word as the number of strings words[i] such that word is a prefix of words[i].\nFor example, if words = [\"a\", \"ab\", \"abc\", \"cab\"], then the score of \"ab\" is 2, since \"ab\" is a prefix of both \"ab\" and \"abc\".\nReturn an array answer of size n where answer[i] is the sum of scores of every non-empty prefix of words[i].\nNote that a string is considered as a prefix of itself.\n","563":"There are n people and 40 types of hats labeled from 1 to 40.\nGiven a 2D integer array hats, where hats[i] is a list of all hats preferred by the ith person.\nReturn the number of ways that the n people wear different hats to each other.\nSince the answer may be too large, return it modulo 109 + 7.\n","564":"There are n cities connected by some number of flights. You are given an array flights where flights[i] = [fromi, toi, pricei] indicates that there is a flight from city fromi to city toi with cost pricei.\nYou are also given three integers src, dst, and k, return the cheapest price from src to dst with at most k stops. If there is no such route, return -1.\n","565":"There is an integer array nums sorted in non-decreasing order (not necessarily with distinct values).\nBefore being passed to your function, nums is rotated at an unknown pivot index k (0 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,4,4,5,6,6,7] might be rotated at pivot index 5 and become [4,5,6,6,7,0,1,2,4,4].\nGiven the array nums after the rotation and an integer target, return true if target is in nums, or false if it is not in nums.\nYou must decrease the overall operation steps as much as possible.\n","566":"You and a gang of thieves are planning on robbing a bank. You are given a 0-indexed integer array security, where security[i] is the number of guards on duty on the ith day. The days are numbered starting from 0. You are also given an integer time.\nThe ith day is a good day to rob the bank if:\nThere are at least time days before and after the ith day,\nThe number of guards at the bank for the time days before i are non-increasing, and\nThe number of guards at the bank for the time days after i are non-decreasing.\nMore formally, this means day i is a good day to rob the bank if and only if security[i - time] >= security[i - time + 1] >= ... >= security[i] <= ... <= security[i + time - 1] <= security[i + time].\nReturn a list of all days (0-indexed) that are good days to rob the bank. The order that the days are returned in does not matter.\n","567":"You are given an integer array nums consisting of 2 * n integers.\nYou need to divide nums into n pairs such that:\nEach element belongs to exactly one pair.\nThe elements present in a pair are equal.\nReturn true if nums can be divided into n pairs, otherwise return false.\n","568":"You are given an array nums consisting of positive integers.\nWe call a subarray of nums nice if the bitwise AND of every pair of elements that are in different positions in the subarray is equal to 0.\nReturn the length of the longest nice subarray.\nA subarray is a contiguous part of an array.\nNote that subarrays of length 1 are always considered nice.\n","569":"Given an m x n matrix board containing 'X' and 'O', capture all regions that are 4-directionally surrounded by 'X'.\nA region is captured by flipping all 'O's into 'X's in that surrounded region.\n","570":"Given a 0-indexed integer array nums of length n and an integer k, return the number of pairs (i, j) such that:\n0 <= i < j <= n - 1 and\nnums[i] * nums[j] is divisible by k.\n","571":"You are given a 2D integer array grid of size m x n, where each cell contains a positive integer.\nA cornered path is defined as a set of adjacent cells with at most one turn. More specifically, the path should exclusively move either horizontally or vertically up to the turn (if there is one), without returning to a previously visited cell. After the turn, the path will then move exclusively in the alternate direction: move vertically if it moved horizontally, and vice versa, also without returning to a previously visited cell.\nThe product of a path is defined as the product of all the values in the path.\nReturn the maximum number of trailing zeros in the product of a cornered path found in grid.\nNote:\nHorizontal movement means moving in either the left or right direction.\nVertical movement means moving in either the up or down direction.\n","572":"There is a room with n bulbs labeled from 1 to n that all are turned on initially, and four buttons on the wall. Each of the four buttons has a different functionality where:\nButton 1: Flips the status of all the bulbs.\nButton 2: Flips the status of all the bulbs with even labels (i.e., 2, 4, ...).\nButton 3: Flips the status of all the bulbs with odd labels (i.e., 1, 3, ...).\nButton 4: Flips the status of all the bulbs with a label j = 3k + 1 where k = 0, 1, 2, ... (i.e., 1, 4, 7, 10, ...).\nYou must make exactly presses button presses in total. For each press, you may pick any of the four buttons to press.\nGiven the two integers n and presses, return the number of different possible statuses after performing all presses button presses.\n","573":"Design a queue that supports push and pop operations in the front, middle, and back.\nImplement the FrontMiddleBack class:\nFrontMiddleBack() Initializes the queue.\nvoid pushFront(int val) Adds val to the front of the queue.\nvoid pushMiddle(int val) Adds val to the middle of the queue.\nvoid pushBack(int val) Adds val to the back of the queue.\nint popFront() Removes the front element of the queue and returns it. If the queue is empty, return -1.\nint popMiddle() Removes the middle element of the queue and returns it. If the queue is empty, return -1.\nint popBack() Removes the back element of the queue and returns it. If the queue is empty, return -1.\nNotice that when there are two middle position choices, the operation is performed on the frontmost middle position choice. For example:\nPushing 6 into the middle of [1, 2, 3, 4, 5] results in [1, 2, 6, 3, 4, 5].\nPopping the middle from [1, 2, 3, 4, 5, 6] returns 3 and results in [1, 2, 4, 5, 6].\n","574":"Given an integer array arr, return true if there are three consecutive odd numbers in the array. Otherwise, return false.\n","575":"You are given an array nums of positive integers and a positive integer k.\nA subset of nums is beautiful if it does not contain two integers with an absolute difference equal to k.\nReturn the number of non-empty beautiful subsets of the array nums.\nA subset of nums is an array that can be obtained by deleting some (possibly none) elements from nums. Two subsets are different if and only if the chosen indices to delete are different.\n","576":"Given a binary string s, return the number of non-empty substrings that have the same number of 0's and 1's, and all the 0's and all the 1's in these substrings are grouped consecutively.\nSubstrings that occur multiple times are counted the number of times they occur.\n","577":"Given a string word to which you can insert letters \"a\", \"b\" or \"c\" anywhere and any number of times, return the minimum number of letters that must be inserted so that word becomes valid.\nA string is called valid if it can be formed by concatenating the string \"abc\" several times.\n","578":"You are given coordinates, a string that represents the coordinates of a square of the chessboard. Below is a chessboard for your reference.\nReturn true if the square is white, and false if the square is black.\nThe coordinate will always represent a valid chessboard square. The coordinate will always have the letter first, and the number second.\n","579":"Given string num representing a non-negative integer num, and an integer k, return the smallest possible integer after removing k digits from num.\n","580":"You are given two integers m and n. Consider an m x n grid where each cell is initially white. You can paint each cell red, green, or blue. All cells must be painted.\nReturn the number of ways to color the grid with no two adjacent cells having the same color. Since the answer can be very large, return it modulo 109 + 7.\n","581":"Given a positive integer n, return the number of the integers in the range [0, n] whose binary representations do not contain consecutive ones.\n","582":"Design your implementation of the circular queue. The circular queue is a linear data structure in which the operations are performed based on FIFO (First In First Out) principle, and the last position is connected back to the first position to make a circle. It is also called \"Ring Buffer\".\nOne of the benefits of the circular queue is that we can make use of the spaces in front of the queue. In a normal queue, once the queue becomes full, we cannot insert the next element even if there is a space in front of the queue. But using the circular queue, we can use the space to store new values.\nImplement the MyCircularQueue class:\nMyCircularQueue(k) Initializes the object with the size of the queue to be k.\nint Front() Gets the front item from the queue. If the queue is empty, return -1.\nint Rear() Gets the last item from the queue. If the queue is empty, return -1.\nboolean enQueue(int value) Inserts an element into the circular queue. Return true if the operation is successful.\nboolean deQueue() Deletes an element from the circular queue. Return true if the operation is successful.\nboolean isEmpty() Checks whether the circular queue is empty or not.\nboolean isFull() Checks whether the circular queue is full or not.\nYou must solve the problem without using the built-in queue data structure in your programming language. \n","583":"Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.\nReturn the sorted string. If there are multiple answers, return any of them.\n","584":"A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.\nGiven a string s, return true if it is a palindrome, or false otherwise.\n","585":"An n-bit gray code sequence is a sequence of 2n integers where:\nEvery integer is in the inclusive range [0, 2n - 1],\nThe first integer is 0,\nAn integer appears no more than once in the sequence,\nThe binary representation of every pair of adjacent integers differs by exactly one bit, and\nThe binary representation of the first and last integers differs by exactly one bit.\nGiven an integer n, return any valid n-bit gray code sequence.\n","586":"You are given an integer array nums (0-indexed). In one operation, you can choose an element of the array and increment it by 1.\nFor example, if nums = [1,2,3], you can choose to increment nums[1] to make nums = [1,3,3].\nReturn the minimum number of operations needed to make nums strictly increasing.\nAn array nums is strictly increasing if nums[i] < nums[i+1] for all 0 <= i < nums.length - 1. An array of length 1 is trivially strictly increasing.\n","587":"Given an integer array nums of size n, return the number with the value closest to 0 in nums. If there are multiple answers, return the number with the largest value.\n","588":"Given a sentence that consists of some words separated by a single space, and a searchWord, check if searchWord is a prefix of any word in sentence.\nReturn the index of the word in sentence (1-indexed) where searchWord is a prefix of this word. If searchWord is a prefix of more than one word, return the index of the first word (minimum index). If there is no such word return -1.\nA prefix of a string s is any leading contiguous substring of s.\n","589":"You are given an m x n grid where each cell can have one of three values:\n0 representing an empty cell,\n1 representing a fresh orange, or\n2 representing a rotten orange.\nEvery minute, any fresh orange that is 4-directionally adjacent to a rotten orange becomes rotten.\nReturn the minimum number of minutes that must elapse until no cell has a fresh orange. If this is impossible, return -1.\n","590":"You are given n points in the plane that are all distinct, where points[i] = [xi, yi]. A boomerang is a tuple of points (i, j, k) such that the distance between i and j equals the distance between i and k (the order of the tuple matters).\nReturn the number of boomerangs.\n","591":"Given an array nums of integers, return how many of them contain an even number of digits.\n","592":"Given an integer array nums, return true if you can partition the array into two subsets such that the sum of the elements in both subsets is equal or false otherwise.\n","593":"You are given an array of points in the X-Y plane points where points[i] = [xi, yi].\nReturn the minimum area of any rectangle formed from these points, with sides not necessarily parallel to the X and Y axes. If there is not any such rectangle, return 0.\nAnswers within 10-5 of the actual answer will be accepted.\n","594":"Given an integer n, return true if it is a power of three. Otherwise, return false.\nAn integer n is a power of three, if there exists an integer x such that n == 3x.\n","595":"The XOR sum of a list is the bitwise XOR of all its elements. If the list only contains one element, then its XOR sum will be equal to this element.\nFor example, the XOR sum of [1,2,3,4] is equal to 1 XOR 2 XOR 3 XOR 4 = 4, and the XOR sum of [3] is equal to 3.\nYou are given two 0-indexed arrays arr1 and arr2 that consist only of non-negative integers.\nConsider the list containing the result of arr1[i] AND arr2[j] (bitwise AND) for every (i, j) pair where 0 <= i < arr1.length and 0 <= j < arr2.length.\nReturn the XOR sum of the aforementioned list.\n","596":"Given a string s represents the serialization of a nested list, implement a parser to deserialize it and return the deserialized NestedInteger.\nEach element is either an integer or a list whose elements may also be integers or other lists.\n","597":"Given an n x n matrix where each of the rows and columns is sorted in ascending order, return the kth smallest element in the matrix.\nNote that it is the kth smallest element in the sorted order, not the kth distinct element.\nYou must find a solution with a memory complexity better than O(n2).\n","598":"You are given a 0-indexed integer array nums. The array nums is beautiful if:\nnums.length is even.\nnums[i] != nums[i + 1] for all i % 2 == 0.\nNote that an empty array is considered beautiful.\nYou can delete any number of elements from nums. When you delete an element, all the elements to the right of the deleted element will be shifted one unit to the left to fill the gap created and all the elements to the left of the deleted element will remain unchanged.\nReturn the minimum number of elements to delete from nums to make it beautiful.\n","599":"You are given the array nums consisting of n positive integers. You computed the sum of all non-empty continuous subarrays from the array and then sorted them in non-decreasing order, creating a new array of n * (n + 1) \/ 2 numbers.\nReturn the sum of the numbers from index left to index right (indexed from 1), inclusive, in the new array. Since the answer can be a huge number return it modulo 109 + 7.\n","600":"You are given the logs for users' actions on LeetCode, and an integer k. The logs are represented by a 2D integer array logs where each logs[i] = [IDi, timei] indicates that the user with IDi performed an action at the minute timei.\nMultiple users can perform actions simultaneously, and a single user can perform multiple actions in the same minute.\nThe user active minutes (UAM) for a given user is defined as the number of unique minutes in which the user performed an action on LeetCode. A minute can only be counted once, even if multiple actions occur during it.\nYou are to calculate a 1-indexed array answer of size k such that, for each j (1 <= j <= k), answer[j] is the number of users whose UAM equals j.\nReturn the array answer as described above.\n","601":"Given a binary tree root and an integer target, delete all the leaf nodes with value target.\nNote that once you delete a leaf node with value target, if its parent node becomes a leaf node and has the value target, it should also be deleted (you need to continue doing that until you cannot).\n","602":"There is a supermarket that is frequented by many customers. The products sold at the supermarket are represented as two parallel integer arrays products and prices, where the ith product has an ID of products[i] and a price of prices[i].\nWhen a customer is paying, their bill is represented as two parallel integer arrays product and amount, where the jth product they purchased has an ID of product[j], and amount[j] is how much of the product they bought. Their subtotal is calculated as the sum of each amount[j] * (price of the jth product).\nThe supermarket decided to have a sale. Every nth customer paying for their groceries will be given a percentage discount. The discount amount is given by discount, where they will be given discount percent off their subtotal. More formally, if their subtotal is bill, then they would actually pay bill * ((100 - discount) \/ 100).\nImplement the Cashier class:\nCashier(int n, int discount, int[] products, int[] prices) Initializes the object with n, the discount, and the products and their prices.\ndouble getBill(int[] product, int[] amount) Returns the final total of the bill with the discount applied (if any). Answers within 10-5 of the actual value will be accepted.\n","603":"Given the coordinates of four points in 2D space p1, p2, p3 and p4, return true if the four points construct a square.\nThe coordinate of a point pi is represented as [xi, yi]. The input is not given in any order.\nA valid square has four equal sides with positive length and four equal angles (90-degree angles).\n","604":"Given the head of a linked list, remove the nth node from the end of the list and return its head.\n","605":"You are given an integer array arr. You can choose a set of integers and remove all the occurrences of these integers in the array.\nReturn the minimum size of the set so that at least half of the integers of the array are removed.\n","606":"A sequence of numbers is called arithmetic if it consists of at least two elements, and the difference between every two consecutive elements is the same. More formally, a sequence s is arithmetic if and only if s[i+1] - s[i] == s[1] - s[0] for all valid i.\nFor example, these are arithmetic sequences:\n1, 3, 5, 7, 9\n7, 7, 7, 7\n3, -1, -5, -9\nThe following sequence is not arithmetic:\n1, 1, 2, 5, 7\nYou are given an array of n integers, nums, and two arrays of m integers each, l and r, representing the m range queries, where the ith query is the range [l[i], r[i]]. All the arrays are 0-indexed.\nReturn a list of boolean elements answer, where answer[i] is true if the subarray nums[l[i]], nums[l[i]+1], ... , nums[r[i]] can be rearranged to form an arithmetic sequence, and false otherwise.\n","607":"You are given a 0-indexed m x n integer matrix grid and an integer k. You are currently at position (0, 0) and you want to reach position (m - 1, n - 1) moving only down or right.\nReturn the number of paths where the sum of the elements on the path is divisible by k. Since the answer may be very large, return it modulo 109 + 7.\n","608":"Given a string s, partition s such that every\nsubstring\nof the partition is a\npalindrome\n.\nReturn the minimum cuts needed for a palindrome partitioning of s.\n","609":"Design and implement a data structure for a Least Frequently Used (LFU) cache.\nImplement the LFUCache class:\nLFUCache(int capacity) Initializes the object with the capacity of the data structure.\nint get(int key) Gets the value of the key if the key exists in the cache. Otherwise, returns -1.\nvoid put(int key, int value) Update the value of the key if present, or inserts the key if not already present. When the cache reaches its capacity, it should invalidate and remove the least frequently used key before inserting a new item. For this problem, when there is a tie (i.e., two or more keys with the same frequency), the least recently used key would be invalidated.\nTo determine the least frequently used key, a use counter is maintained for each key in the cache. The key with the smallest use counter is the least frequently used key.\nWhen a key is first inserted into the cache, its use counter is set to 1 (due to the put operation). The use counter for a key in the cache is incremented either a get or put operation is called on it.\nThe functions get and put must each run in O(1) average time complexity.\n","610":"You are given a string s that consists of lower case English letters and brackets.\nReverse the strings in each pair of matching parentheses, starting from the innermost one.\nYour result should not contain any brackets.\n","611":"You are given a positive integer 0-indexed array nums.\nA subset of the array nums is square-free if the product of its elements is a square-free integer.\nA square-free integer is an integer that is divisible by no square number other than 1.\nReturn the number of square-free non-empty subsets of the array nums. Since the answer may be too large, return it modulo 109 + 7.\nA non-empty subset of nums is an array that can be obtained by deleting some (possibly none but not all) elements from nums. Two subsets are different if and only if the chosen indices to delete are different.\n","612":"Given an array points where points[i] = [xi, yi] represents a point on the X-Y plane, return true if these points are a boomerang.\nA boomerang is a set of three points that are all distinct and not in a straight line.\n","613":"Given an integer array nums, move all the even integers at the beginning of the array followed by all the odd integers.\nReturn any array that satisfies this condition.\n","614":"A string is called a happy prefix if is a non-empty prefix which is also a suffix (excluding itself).\nGiven a string s, return the longest happy prefix of s. Return an empty string \"\" if no such prefix exists.\n","615":"You are given a 0-indexed circular string array words and a string target. A circular array means that the array's end connects to the array's beginning.\nFormally, the next element of words[i] is words[(i + 1) % n] and the previous element of words[i] is words[(i - 1 + n) % n], where n is the length of words.\nStarting from startIndex, you can move to either the next word or the previous word with 1 step at a time.\nReturn the shortest distance needed to reach the string target. If the string target does not exist in words, return -1.\n","616":"There are n people standing in a line labeled from 1 to n. The first person in the line is holding a pillow initially. Every second, the person holding the pillow passes it to the next person standing in the line. Once the pillow reaches the end of the line, the direction changes, and people continue passing the pillow in the opposite direction.\nFor example, once the pillow reaches the nth person they pass it to the n - 1th person, then to the n - 2th person and so on.\nGiven the two positive integers n and time, return the index of the person holding the pillow after time seconds.\n","617":"Given an integer array nums and an integer k, return the number of subarrays of nums where the greatest common divisor of the subarray's elements is k.\nA subarray is a contiguous non-empty sequence of elements within an array.\nThe greatest common divisor of an array is the largest integer that evenly divides all the array elements.\n","618":"Given a m * n matrix seats  that represent seats distributions in a classroom. If a seat is broken, it is denoted by '#' character otherwise it is denoted by a '.' character.\nStudents can see the answers of those sitting next to the left, right, upper left and upper right, but he cannot see the answers of the student sitting directly in front or behind him. Return the maximum number of students that can take the exam together without any cheating being possible..\nStudents must be placed in seats in good condition.\n","619":"You want to build some obstacle courses. You are given a 0-indexed integer array obstacles of length n, where obstacles[i] describes the height of the ith obstacle.\nFor every index i between 0 and n - 1 (inclusive), find the length of the longest obstacle course in obstacles such that:\nYou choose any number of obstacles between 0 and i inclusive.\nYou must include the ith obstacle in the course.\nYou must put the chosen obstacles in the same order as they appear in obstacles.\nEvery obstacle (except the first) is taller than or the same height as the obstacle immediately before it.\nReturn an array ans of length n, where ans[i] is the length of the longest obstacle course for index i as described above.\n","620":"A triplet is an array of three integers. You are given a 2D integer array triplets, where triplets[i] = [ai, bi, ci] describes the ith triplet. You are also given an integer array target = [x, y, z] that describes the triplet you want to obtain.\nTo obtain target, you may apply the following operation on triplets any number of times (possibly zero):\nChoose two indices (0-indexed) i and j (i != j) and update triplets[j] to become [max(ai, aj), max(bi, bj), max(ci, cj)].\nFor example, if triplets[i] = [2, 5, 3] and triplets[j] = [1, 7, 5], triplets[j] will be updated to [max(2, 1), max(5, 7), max(3, 5)] = [2, 7, 5].\nReturn true if it is possible to obtain the target triplet [x, y, z] as an element of triplets, or false otherwise.\n","621":"Koko loves to eat bananas. There are n piles of bananas, the ith pile has piles[i] bananas. The guards have gone and will come back in h hours.\nKoko can decide her bananas-per-hour eating speed of k. Each hour, she chooses some pile of bananas and eats k bananas from that pile. If the pile has less than k bananas, she eats all of them instead and will not eat any more bananas during this hour.\nKoko likes to eat slowly but still wants to finish eating all the bananas before the guards return.\nReturn the minimum integer k such that she can eat all the bananas within h hours.\n","622":"Given an array nums and an integer target, return the maximum number of non-empty non-overlapping subarrays such that the sum of values in each subarray is equal to target.\n","623":"The frequency of an element is the number of times it occurs in an array.\nYou are given an integer array nums and an integer k. In one operation, you can choose an index of nums and increment the element at that index by 1.\nReturn the maximum possible frequency of an element after performing at most k operations.\n","624":"Given a zero-based permutation nums (0-indexed), build an array ans of the same length where ans[i] = nums[nums[i]] for each 0 <= i < nums.length and return it.\nA zero-based permutation nums is an array of distinct integers from 0 to nums.length - 1 (inclusive).\n","625":"Given a C++ program, remove comments from it. The program source is an array of strings source where source[i] is the ith line of the source code. This represents the result of splitting the original source code string by the newline character '\\n'.\nIn C++, there are two types of comments, line comments, and block comments.\nThe string \"\/\/\" denotes a line comment, which represents that it and the rest of the characters to the right of it in the same line should be ignored.\nThe string \"\/*\" denotes a block comment, which represents that all characters until the next (non-overlapping) occurrence of \"*\/\" should be ignored. (Here, occurrences happen in reading order: line by line from left to right.) To be clear, the string \"\/*\/\" does not yet end the block comment, as the ending would be overlapping the beginning.\nThe first effective comment takes precedence over others.\nFor example, if the string \"\/\/\" occurs in a block comment, it is ignored.\nSimilarly, if the string \"\/*\" occurs in a line or block comment, it is also ignored.\nIf a certain line of code is empty after removing comments, you must not output that line: each string in the answer list will be non-empty.\nThere will be no control characters, single quote, or double quote characters.\nFor example, source = \"string s = \"\/* Not a comment. *\/\";\" will not be a test case.\nAlso, nothing else such as defines or macros will interfere with the comments.\nIt is guaranteed that every open block comment will eventually be closed, so \"\/*\" outside of a line or block comment always starts a new comment.\nFinally, implicit newline characters can be deleted by block comments. Please see the examples below for details.\nAfter removing the comments from the source code, return the source code in the same format.\n","626":"You are given a 0-indexed string word, consisting of lowercase English letters. You need to select one index and remove the letter at that index from word so that the frequency of every letter present in word is equal.\nReturn true if it is possible to remove one letter so that the frequency of all letters in word are equal, and false otherwise.\nNote:\nThe frequency of a letter x is the number of times it occurs in the string.\nYou must remove exactly one letter and cannot chose to do nothing.\n","627":"We can use run-length encoding (i.e., RLE) to encode a sequence of integers. In a run-length encoded array of even length encoding (0-indexed), for all even i, encoding[i] tells us the number of times that the non-negative integer value encoding[i + 1] is repeated in the sequence.\nFor example, the sequence arr = [8,8,8,5,5] can be encoded to be encoding = [3,8,2,5]. encoding = [3,8,0,9,2,5] and encoding = [2,8,1,8,2,5] are also valid RLE of arr.\nGiven a run-length encoded array, design an iterator that iterates through it.\nImplement the RLEIterator class:\nRLEIterator(int[] encoded) Initializes the object with the encoded array encoded.\nint next(int n) Exhausts the next n elements and returns the last element exhausted in this way. If there is no element left to exhaust, return -1 instead.\n","628":"There are 3n piles of coins of varying size, you and your friends will take piles of coins as follows:\nIn each step, you will choose any 3 piles of coins (not necessarily consecutive).\nOf your choice, Alice will pick the pile with the maximum number of coins.\nYou will pick the next pile with the maximum number of coins.\nYour friend Bob will pick the last pile.\nRepeat until there are no more piles of coins.\nGiven an array of integers piles where piles[i] is the number of coins in the ith pile.\nReturn the maximum number of coins that you can have.\n","629":"Given the root of a binary tree, return the number of nodes where the value of the node is equal to the average of the values in its subtree.\nNote:\nThe average of n elements is the sum of the n elements divided by n and rounded down to the nearest integer.\nA subtree of root is a tree consisting of root and all of its descendants.\n","630":"You are given a list of bombs. The range of a bomb is defined as the area where its effect can be felt. This area is in the shape of a circle with the center as the location of the bomb.\nThe bombs are represented by a 0-indexed 2D integer array bombs where bombs[i] = [xi, yi, ri]. xi and yi denote the X-coordinate and Y-coordinate of the location of the ith bomb, whereas ri denotes the radius of its range.\nYou may choose to detonate a single bomb. When a bomb is detonated, it will detonate all bombs that lie in its range. These bombs will further detonate the bombs that lie in their ranges.\nGiven the list of bombs, return the maximum number of bombs that can be detonated if you are allowed to detonate only one bomb.\n","631":"Given a string licensePlate and an array of strings words, find the shortest completing word in words.\nA completing word is a word that contains all the letters in licensePlate. Ignore numbers and spaces in licensePlate, and treat letters as case insensitive. If a letter appears more than once in licensePlate, then it must appear in the word the same number of times or more.\nFor example, if licensePlate = \"aBc 12c\", then it contains letters 'a', 'b' (ignoring case), and 'c' twice. Possible completing words are \"abccdef\", \"caaacab\", and \"cbca\".\nReturn the shortest completing word in words. It is guaranteed an answer exists. If there are multiple shortest completing words, return the first one that occurs in words.\n","632":"Given two strings s and t, determine if they are isomorphic.\nTwo strings s and t are isomorphic if the characters in s can be replaced to get t.\nAll occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.\n","633":"Given the root of a binary tree with unique values and the values of two different nodes of the tree x and y, return true if the nodes corresponding to the values x and y in the tree are cousins, or false otherwise.\nTwo nodes of a binary tree are cousins if they have the same depth with different parents.\nNote that in a binary tree, the root node is at the depth 0, and children of each depth k node are at the depth k + 1.\n","634":"You are given an integer n, which indicates that there are n courses labeled from 1 to n. You are also given a 2D integer array relations where relations[j] = [prevCoursej, nextCoursej] denotes that course prevCoursej has to be completed before course nextCoursej (prerequisite relationship). Furthermore, you are given a 0-indexed integer array time where time[i] denotes how many months it takes to complete the (i+1)th course.\nYou must find the minimum number of months needed to complete all the courses following these rules:\nYou may start taking a course at any time if the prerequisites are met.\nAny number of courses can be taken at the same time.\nReturn the minimum number of months needed to complete all the courses.\nNote: The test cases are generated such that it is possible to complete every course (i.e., the graph is a directed acyclic graph).\n","635":"You are given a floating-point number hour, representing the amount of time you have to reach the office. To commute to the office, you must take n trains in sequential order. You are also given an integer array dist of length n, where dist[i] describes the distance (in kilometers) of the ith train ride.\nEach train can only depart at an integer hour, so you may need to wait in between each train ride.\nFor example, if the 1st train ride takes 1.5 hours, you must wait for an additional 0.5 hours before you can depart on the 2nd train ride at the 2 hour mark.\nReturn the minimum positive integer speed (in kilometers per hour) that all the trains must travel at for you to reach the office on time, or -1 if it is impossible to be on time.\nTests are generated such that the answer will not exceed 107 and hour will have at most two digits after the decimal point.\n","636":"You are given an integer array nums of 2 * n integers. You need to partition nums into two arrays of length n to minimize the absolute difference of the sums of the arrays. To partition nums, put each element of nums into one of the two arrays.\nReturn the minimum possible absolute difference.\n","637":"Given the root of a binary tree, return the length of the diameter of the tree.\nThe diameter of a binary tree is the length of the longest path between any two nodes in a tree. This path may or may not pass through the root.\nThe length of a path between two nodes is represented by the number of edges between them.\n","638":"You are given a square board of characters. You can move on the board starting at the bottom right square marked with the character 'S'.\nYou need to reach the top left square marked with the character 'E'. The rest of the squares are labeled either with a numeric character 1, 2, ..., 9 or with an obstacle 'X'. In one move you can go up, left or up-left (diagonally) only if there is no obstacle there.\nReturn a list of two integers: the first integer is the maximum sum of numeric characters you can collect, and the second is the number of such paths that you can take to get that maximum sum, taken modulo 10^9 + 7.\nIn case there is no path, return [0, 0].\n","639":"You are given a 0-indexed array of integers nums of length n. You are initially positioned at nums[0].\nEach element nums[i] represents the maximum length of a forward jump from index i. In other words, if you are at nums[i], you can jump to any nums[i + j] where:\n0 <= j <= nums[i] and\ni + j < n\nReturn the minimum number of jumps to reach nums[n - 1]. The test cases are generated such that you can reach nums[n - 1].\n","640":"Given a string s of zeros and ones, return the maximum score after splitting the string into two non-empty substrings (i.e. left substring and right substring).\nThe score after splitting a string is the number of zeros in the left substring plus the number of ones in the right substring.\n","641":"Given a 0-indexed integer array nums of size n and two integers lower and upper, return the number of fair pairs.\nA pair (i, j) is fair if:\n0 <= i < j < n, and\nlower <= nums[i] + nums[j] <= upper\n","642":"Given the root of a binary search tree, rearrange the tree in in-order so that the leftmost node in the tree is now the root of the tree, and every node has no left child and only one right child.\n","643":"You are given an integer array nums with the following properties:\nnums.length == 2 * n.\nnums contains n + 1 unique elements.\nExactly one element of nums is repeated n times.\nReturn the element that is repeated n times.\n","644":"SQL Schema\nTable: MyNumbers\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| num         | int  |\n+-------------+------+\nThere is no primary key for this table. It may contain duplicates.\nEach row of this table contains an integer.\n  A single number is a number that appeared only once in the MyNumbers table.\nWrite an SQL query to report the largest single number. If there is no single number, report null.\nThe query result format is in the following example.\n","645":"Given the roots of two binary trees root and subRoot, return true if there is a subtree of root with the same structure and node values of subRoot and false otherwise.\nA subtree of a binary tree tree is a tree that consists of a node in tree and all of this node's descendants. The tree tree could also be considered as a subtree of itself.\n","646":"Given a string of English letters s, return the greatest English letter which occurs as both a lowercase and uppercase letter in s. The returned letter should be in uppercase. If no such letter exists, return an empty string.\nAn English letter b is greater than another letter a if b appears after a in the English alphabet.\n","647":"You are given n BST (binary search tree) root nodes for n separate BSTs stored in an array trees (0-indexed). Each BST in trees has at most 3 nodes, and no two roots have the same value. In one operation, you can:\nSelect two distinct indices i and j such that the value stored at one of the leaves of trees[i] is equal to the root value of trees[j].\nReplace the leaf node in trees[i] with trees[j].\nRemove trees[j] from trees.\nReturn the root of the resulting BST if it is possible to form a valid BST after performing n - 1 operations, or null if it is impossible to create a valid BST.\nA BST (binary search tree) is a binary tree where each node satisfies the following property:\nEvery node in the node's left subtree has a value strictly less than the node's value.\nEvery node in the node's right subtree has a value strictly greater than the node's value.\nA leaf is a node that has no children.\n","648":"Given a n-ary tree, find its maximum depth.\nThe maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n","649":"Given an integer columnNumber, return its corresponding column title as it appears in an Excel sheet.\nFor example:\nA -> 1\nB -> 2\nC -> 3\n...\nZ -> 26\nAA -> 27\nAB -> 28 \n...\n","650":"You are given an integer array nums and two integers limit and goal. The array nums has an interesting property that abs(nums[i]) <= limit.\nReturn the minimum number of elements you need to add to make the sum of the array equal to goal. The array must maintain its property that abs(nums[i]) <= limit.\nNote that abs(x) equals x if x >= 0, and -x otherwise.\n","651":"Given an integer array nums, return an array answer such that answer[i] is equal to the product of all the elements of nums except nums[i].\nThe product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.\nYou must write an algorithm that runs in O(n) time and without using the division operation.\n","652":"Every valid email consists of a local name and a domain name, separated by the '@' sign. Besides lowercase letters, the email may contain one or more '.' or '+'.\nFor example, in \"alice@leetcode.com\", \"alice\" is the local name, and \"leetcode.com\" is the domain name.\nIf you add periods '.' between some characters in the local name part of an email address, mail sent there will be forwarded to the same address without dots in the local name. Note that this rule does not apply to domain names.\nFor example, \"alice.z@leetcode.com\" and \"alicez@leetcode.com\" forward to the same email address.\nIf you add a plus '+' in the local name, everything after the first plus sign will be ignored. This allows certain emails to be filtered. Note that this rule does not apply to domain names.\nFor example, \"m.y+name@email.com\" will be forwarded to \"my@email.com\".\nIt is possible to use both of these rules at the same time.\nGiven an array of strings emails where we send one email to each emails[i], return the number of different addresses that actually receive mails.\n","653":"Given a positive integer k, you need to find the length of the smallest positive integer n such that n is divisible by k, and n only contains the digit 1.\nReturn the length of n. If there is no such n, return -1.\nNote: n may not fit in a 64-bit signed integer.\n","654":"There is an undirected graph consisting of n nodes numbered from 0 to n - 1. You are given a 0-indexed integer array vals of length n where vals[i] denotes the value of the ith node.\nYou are also given a 2D integer array edges where edges[i] = [ai, bi] denotes that there exists an undirected edge connecting nodes ai and bi.\nA star graph is a subgraph of the given graph having a center node containing 0 or more neighbors. In other words, it is a subset of edges of the given graph such that there exists a common node for all edges.\nThe image below shows star graphs with 3 and 4 neighbors respectively, centered at the blue node.\nThe star sum is the sum of the values of all the nodes present in the star graph.\nGiven an integer k, return the maximum star sum of a star graph containing at most k edges.\n","655":"A frog is crossing a river. The river is divided into some number of units, and at each unit, there may or may not exist a stone. The frog can jump on a stone, but it must not jump into the water.\nGiven a list of stones' positions (in units) in sorted ascending order, determine if the frog can cross the river by landing on the last stone. Initially, the frog is on the first stone and assumes the first jump must be 1 unit.\nIf the frog's last jump was k units, its next jump must be either k - 1, k, or k + 1 units. The frog can only jump in the forward direction.\n","656":"Given an array nums of size n, return the majority element.\nThe majority element is the element that appears more than \u230an \/ 2\u230b times. You may assume that the majority element always exists in the array.\n","657":"A sentence is a list of words that are separated by a single space with no leading or trailing spaces. Each of the words consists of only uppercase and lowercase English letters (no punctuation).\nFor example, \"Hello World\", \"HELLO\", and \"hello world hello world\" are all sentences.\nYou are given a sentence s and an integer k. You want to truncate s such that it contains only the first k words. Return s after truncating it.\n","658":"Given an integer array nums sorted in non-decreasing order, remove some duplicates in-place such that each unique element appears at most twice. The relative order of the elements should be kept the same.\nSince it is impossible to change the length of the array in some languages, you must instead have the result be placed in the first part of the array nums. More formally, if there are k elements after removing the duplicates, then the first k elements of nums should hold the final result. It does not matter what you leave beyond the first k elements.\nReturn k after placing the final result in the first k slots of nums.\nDo not allocate extra space for another array. You must do this by modifying the input array in-place with O(1) extra memory.\nCustom Judge:\nThe judge will test your solution with the following code:\nint[] nums = [...]; \/\/ Input array\nint[] expectedNums = [...]; \/\/ The expected answer with correct length\n\nint k = removeDuplicates(nums); \/\/ Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i < k; i++) {\n    assert nums[i] == expectedNums[i];\n}\nIf all assertions pass, then your solution will be accepted.\n","659":"There are n houses evenly lined up on the street, and each house is beautifully painted. You are given a 0-indexed integer array colors of length n, where colors[i] represents the color of the ith house.\nReturn the maximum distance between two houses with different colors.\nThe distance between the ith and jth houses is abs(i - j), where abs(x) is the absolute value of x.\n","660":"Given an integer array arr and a filtering function fn, return a new array with a fewer or equal number of elements.\nThe returned array should only contain elements where fn(arr[i], i) evaluated to a truthy value.\nPlease solve it without the built-in Array.filter method.\n","661":"On a single-threaded CPU, we execute a program containing n functions. Each function has a unique ID between 0 and n-1.\nFunction calls are stored in a call stack: when a function call starts, its ID is pushed onto the stack, and when a function call ends, its ID is popped off the stack. The function whose ID is at the top of the stack is the current function being executed. Each time a function starts or ends, we write a log with the ID, whether it started or ended, and the timestamp.\nYou are given a list logs, where logs[i] represents the ith log message formatted as a string \"{function_id}:{\"start\" | \"end\"}:{timestamp}\". For example, \"0:start:3\" means a function call with function ID 0 started at the beginning of timestamp 3, and \"1:end:2\" means a function call with function ID 1 ended at the end of timestamp 2. Note that a function can be called multiple times, possibly recursively.\nA function's exclusive time is the sum of execution times for all function calls in the program. For example, if a function is called twice, one call executing for 2 time units and another call executing for 1 time unit, the exclusive time is 2 + 1 = 3.\nReturn the exclusive time of each function in an array, where the value at the ith index represents the exclusive time for the function with ID i.\n","662":"You are given two integers m and n representing a 0-indexed m x n grid. You are also given two 2D integer arrays guards and walls where guards[i] = [rowi, coli] and walls[j] = [rowj, colj] represent the positions of the ith guard and jth wall respectively.\nA guard can see every cell in the four cardinal directions (north, east, south, or west) starting from their position unless obstructed by a wall or another guard. A cell is guarded if there is at least one guard that can see it.\nReturn the number of unoccupied cells that are not guarded.\n","663":"HTML entity parser is the parser that takes HTML code as input and replace all the entities of the special characters by the characters itself.\nThe special characters and their entities for HTML are:\nQuotation Mark: the entity is &quot; and symbol character is \".\nSingle Quote Mark: the entity is &apos; and symbol character is '.\nAmpersand: the entity is &amp; and symbol character is &.\nGreater Than Sign: the entity is &gt; and symbol character is >.\nLess Than Sign: the entity is &lt; and symbol character is <.\nSlash: the entity is &frasl; and symbol character is \/.\nGiven the input text string to the HTML parser, you have to implement the entity parser.\nReturn the text after replacing the entities by the special characters.\n","664":"Given the root of a binary tree, the level of its root is 1, the level of its children is 2, and so on.\nReturn the smallest level x such that the sum of all the values of nodes at level x is maximal.\n","665":"You are given two 0-indexed arrays of strings startWords and targetWords. Each string consists of lowercase English letters only.\nFor each string in targetWords, check if it is possible to choose a string from startWords and perform a conversion operation on it to be equal to that from targetWords.\nThe conversion operation is described in the following two steps:\nAppend any lowercase letter that is not present in the string to its end.\nFor example, if the string is \"abc\", the letters 'd', 'e', or 'y' can be added to it, but not 'a'. If 'd' is added, the resulting string will be \"abcd\".\nRearrange the letters of the new string in any arbitrary order.\nFor example, \"abcd\" can be rearranged to \"acbd\", \"bacd\", \"cbda\", and so on. Note that it can also be rearranged to \"abcd\" itself.\nReturn the number of strings in targetWords that can be obtained by performing the operations on any string of startWords.\nNote that you will only be verifying if the string in targetWords can be obtained from a string in startWords by performing the operations. The strings in startWords do not actually change during this process.\n","666":"Given two arrays of integers with equal lengths, return the maximum value of:\n|arr1[i] - arr1[j]| + |arr2[i] - arr2[j]| + |i - j|\nwhere the maximum is taken over all 0 <= i, j < arr1.length.\n","667":"You are given two 0-indexed arrays nums1 and nums2 and a 2D array queries of queries. There are three types of queries:\nFor a query of type 1, queries[i] = [1, l, r]. Flip the values from 0 to 1 and from 1 to 0 in nums1 from index l to index r. Both l and r are 0-indexed.\nFor a query of type 2, queries[i] = [2, p, 0]. For every index 0 <= i < n, set nums2[i] = nums2[i] + nums1[i] * p.\nFor a query of type 3, queries[i] = [3, 0, 0]. Find the sum of the elements in nums2.\nReturn an array containing all the answers to the third type queries.\n","668":"Given two binary trees original and cloned and given a reference to a node target in the original tree.\nThe cloned tree is a copy of the original tree.\nReturn a reference to the same node in the cloned tree.\nNote that you are not allowed to change any of the two trees or the target node and the answer must be a reference to a node in the cloned tree.\n","669":"Given a (0-indexed) integer array nums and two integers low and high, return the number of nice pairs.\nA nice pair is a pair (i, j) where 0 <= i < j < nums.length and low <= (nums[i] XOR nums[j]) <= high.\n","670":"Fruits are available at some positions on an infinite x-axis. You are given a 2D integer array fruits where fruits[i] = [positioni, amounti] depicts amounti fruits at the position positioni. fruits is already sorted by positioni in ascending order, and each positioni is unique.\nYou are also given an integer startPos and an integer k. Initially, you are at the position startPos. From any position, you can either walk to the left or right. It takes one step to move one unit on the x-axis, and you can walk at most k steps in total. For every position you reach, you harvest all the fruits at that position, and the fruits will disappear from that position.\nReturn the maximum total number of fruits you can harvest.\n","671":"You are given an array of n strings strs, all of the same length.\nWe may choose any deletion indices, and we delete all the characters in those indices for each string.\nFor example, if we have strs = [\"abcdef\",\"uvwxyz\"] and deletion indices {0, 2, 3}, then the final array after deletions is [\"bef\", \"vyz\"].\nSuppose we chose a set of deletion indices answer such that after deletions, the final array has its elements in lexicographic order (i.e., strs[0] <= strs[1] <= strs[2] <= ... <= strs[n - 1]). Return the minimum possible value of answer.length.\n","672":"SQL Schema\nTable: Employees\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| employee_id | int     |\n| name        | varchar |\n| salary      | int     |\n+-------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates the employee ID, employee name, and salary.\n  Write an SQL query to calculate the bonus of each employee. The bonus of an employee is 100% of their salary if the ID of the employee is an odd number and the employee name does not start with the character 'M'. The bonus of an employee is 0 otherwise.\nReturn the result table ordered by employee_id.\nThe query result format is in the following example.\n","673":"Given a sorted integer array arr, two integers k and x, return the k closest integers to x in the array. The result should also be sorted in ascending order.\nAn integer a is closer to x than an integer b if:\n|a - x| < |b - x|, or\n|a - x| == |b - x| and a < b\n","674":"You are given a string s that contains some bracket pairs, with each pair containing a non-empty key.\nFor example, in the string \"(name)is(age)yearsold\", there are two bracket pairs that contain the keys \"name\" and \"age\".\nYou know the values of a wide range of keys. This is represented by a 2D string array knowledge where each knowledge[i] = [keyi, valuei] indicates that key keyi has a value of valuei.\nYou are tasked to evaluate all of the bracket pairs. When you evaluate a bracket pair that contains some key keyi, you will:\nReplace keyi and the bracket pair with the key's corresponding valuei.\nIf you do not know the value of the key, you will replace keyi and the bracket pair with a question mark \"?\" (without the quotation marks).\nEach key will appear at most once in your knowledge. There will not be any nested brackets in s.\nReturn the resulting string after evaluating all of the bracket pairs.\n","675":"There are n flights that are labeled from 1 to n.\nYou are given an array of flight bookings bookings, where bookings[i] = [firsti, lasti, seatsi] represents a booking for flights firsti through lasti (inclusive) with seatsi seats reserved for each flight in the range.\nReturn an array answer of length n, where answer[i] is the total number of seats reserved for flight i.\n","676":"There is a tree (i.e., a connected, undirected graph that has no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges. Each node has a value associated with it, and the root of the tree is node 0.\nTo represent this tree, you are given an integer array nums and a 2D array edges. Each nums[i] represents the ith node's value, and each edges[j] = [uj, vj] represents an edge between nodes uj and vj in the tree.\nTwo values x and y are coprime if gcd(x, y) == 1 where gcd(x, y) is the greatest common divisor of x and y.\nAn ancestor of a node i is any other node on the shortest path from node i to the root. A node is not considered an ancestor of itself.\nReturn an array ans of size n, where ans[i] is the closest ancestor to node i such that nums[i] and nums[ans[i]] are coprime, or -1 if there is no such ancestor.\n","677":"Given an equation, represented by words on the left side and the result on the right side.\nYou need to check if the equation is solvable under the following rules:\nEach character is decoded as one digit (0 - 9).\nNo two characters can map to the same digit.\nEach words[i] and result are decoded as one number without leading zeros.\nSum of numbers on the left side (words) will equal to the number on the right side (result).\nReturn true if the equation is solvable, otherwise return false.\n","678":"Given an integer array nums where every element appears three times except for one, which appears exactly once. Find the single element and return it.\nYou must implement a solution with a linear runtime complexity and use only constant extra space.\n","679":"Given a 2D array of characters grid of size m x n, you need to find if there exists any cycle consisting of the same value in grid.\nA cycle is a path of length 4 or more in the grid that starts and ends at the same cell. From a given cell, you can move to one of the cells adjacent to it - in one of the four directions (up, down, left, or right), if it has the same value of the current cell.\nAlso, you cannot move to the cell that you visited in your last move. For example, the cycle (1, 1) -> (1, 2) -> (1, 1) is invalid because from (1, 2) we visited (1, 1) which was the last visited cell.\nReturn true if any cycle of the same value exists in grid, otherwise, return false.\n","680":"(This problem is an interactive problem.)\nYou may recall that an array arr is a mountain array if and only if:\narr.length >= 3\nThere exists some i with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\nGiven a mountain array mountainArr, return the minimum index such that mountainArr.get(index) == target. If such an index does not exist, return -1.\nYou cannot access the mountain array directly. You may only access the array using a MountainArray interface:\nMountainArray.get(k) returns the element of the array at index k (0-indexed).\nMountainArray.length() returns the length of the array.\nSubmissions making more than 100 calls to MountainArray.get will be judged Wrong Answer. Also, any solutions that attempt to circumvent the judge will result in disqualification.\n","681":"You are given a string num representing a large integer. An integer is good if it meets the following conditions:\nIt is a substring of num with length 3.\nIt consists of only one unique digit.\nReturn the maximum good integer as a string or an empty string \"\" if no such integer exists.\nNote:\nA substring is a contiguous sequence of characters within a string.\nThere may be leading zeroes in num or a good integer.\n","682":"SQL Schema\nTable: Products\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| product_id    | int     |\n| new_price     | int     |\n| change_date   | date    |\n+---------------+---------+\n(product_id, change_date) is the primary key of this table.\nEach row of this table indicates that the price of some product was changed to a new price at some date.\n  Write an SQL query to find the prices of all products on 2019-08-16. Assume the price of all products before any change is 10.\nReturn the result table in any order.\nThe query result format is in the following example.\n","683":"SQL Schema\nTable: Users\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| user_id        | int     |\n| name           | varchar |\n+----------------+---------+\nuser_id is the primary key for this table.\nThis table contains the ID and the name of the user. The name consists of only lowercase and uppercase characters.\n  Write an SQL query to fix the names so that only the first character is uppercase and the rest are lowercase.\nReturn the result table ordered by user_id.\nThe query result format is in the following example.\n","684":"Given a binary tree\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\nInitially, all next pointers are set to NULL.\n","685":"You are given two non-increasing 0-indexed integer arrays nums1 and nums2.\nA pair of indices (i, j), where 0 <= i < nums1.length and 0 <= j < nums2.length, is valid if both i <= j and nums1[i] <= nums2[j]. The distance of the pair is j - i.\nReturn the maximum distance of any valid pair (i, j). If there are no valid pairs, return 0.\nAn array arr is non-increasing if arr[i-1] >= arr[i] for every 1 <= i < arr.length.\n","686":"Given a non-empty array of non-negative integers nums, the degree of this array is defined as the maximum frequency of any one of its elements.\nYour task is to find the smallest possible length of a (contiguous) subarray of nums, that has the same degree as nums.\n","687":"Given an integer array nums, return an integer array counts where counts[i] is the number of smaller elements to the right of nums[i].\n","688":"You are given a positive integer num consisting only of digits 6 and 9.\nReturn the maximum number you can get by changing at most one digit (6 becomes 9, and 9 becomes 6).\n","689":"You have n tasks and m workers. Each task has a strength requirement stored in a 0-indexed integer array tasks, with the ith task requiring tasks[i] strength to complete. The strength of each worker is stored in a 0-indexed integer array workers, with the jth worker having workers[j] strength. Each worker can only be assigned to a single task and must have a strength greater than or equal to the task's strength requirement (i.e., workers[j] >= tasks[i]).\nAdditionally, you have pills magical pills that will increase a worker's strength by strength. You can decide which workers receive the magical pills, however, you may only give each worker at most one magical pill.\nGiven the 0-indexed integer arrays tasks and workers and the integers pills and strength, return the maximum number of tasks that can be completed.\n","690":"Given n orders, each order consist in pickup and delivery services. \nCount all valid pickup\/delivery possible sequences such that delivery(i) is always after of pickup(i). \nSince the answer may be too large, return it modulo 10^9 + 7.\n","691":"Given a string s and an integer k, return the length of the longest substring of s such that the frequency of each character in this substring is greater than or equal to k.\n","692":"You are given a 0-indexed array nums consisting of n positive integers.\nThe array nums is called alternating if:\nnums[i - 2] == nums[i], where 2 <= i <= n - 1.\nnums[i - 1] != nums[i], where 1 <= i <= n - 1.\nIn one operation, you can choose an index i and change nums[i] into any positive integer.\nReturn the minimum number of operations required to make the array alternating.\n","693":"A 0-indexed array derived with length n is derived by computing the bitwise XOR (\u2295) of adjacent values in a binary array original of length n.\nSpecifically, for each index i in the range [0, n - 1]:\nIf i = n - 1, then derived[i] = original[i] \u2295 original[0].\nOtherwise, derived[i] = original[i] \u2295 original[i + 1].\nGiven an array derived, your task is to determine whether there exists a valid binary array original that could have formed derived.\nReturn true if such an array exists or false otherwise.\nA binary array is an array containing only 0's and 1's\n","694":"Given two strings s and goal, return true if you can swap two letters in s so the result is equal to goal, otherwise, return false.\nSwapping letters is defined as taking two indices i and j (0-indexed) such that i != j and swapping the characters at s[i] and s[j].\nFor example, swapping at indices 0 and 2 in \"abcd\" results in \"cbad\".\n","695":"Given an integer n, return all the numbers in the range [1, n] sorted in lexicographical order.\nYou must write an algorithm that runs in O(n) time and uses O(1) extra space. \n","696":"We have an array of integers, nums, and an array of requests where requests[i] = [starti, endi]. The ith request asks for the sum of nums[starti] + nums[starti + 1] + ... + nums[endi - 1] + nums[endi]. Both starti and endi are 0-indexed.\nReturn the maximum total sum of all requests among all permutations of nums.\nSince the answer may be too large, return it modulo 109 + 7.\n","697":"We run a preorder depth-first search (DFS) on the root of a binary tree.\nAt each node in this traversal, we output D dashes (where D is the depth of this node), then we output the value of this node.  If the depth of a node is D, the depth of its immediate child is D + 1.  The depth of the root node is 0.\nIf a node has only one child, that child is guaranteed to be the left child.\nGiven the output traversal of this traversal, recover the tree and return its root.\n","698":"There is an integer array nums sorted in ascending order (with distinct values).\nPrior to being passed to your function, nums is possibly rotated at an unknown pivot index k (1 <= k < nums.length) such that the resulting array is [nums[k], nums[k+1], ..., nums[n-1], nums[0], nums[1], ..., nums[k-1]] (0-indexed). For example, [0,1,2,4,5,6,7] might be rotated at pivot index 3 and become [4,5,6,7,0,1,2].\nGiven the array nums after the possible rotation and an integer target, return the index of target if it is in nums, or -1 if it is not in nums.\nYou must write an algorithm with O(log n) runtime complexity.\n","699":"There is an undirected graph consisting of n nodes numbered from 1 to n. You are given the integer n and a 2D array edges where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi. The graph can be disconnected.\nYou can add at most two additional edges (possibly none) to this graph so that there are no repeated edges and no self-loops.\nReturn true if it is possible to make the degree of each node in the graph even, otherwise return false.\nThe degree of a node is the number of edges connected to it.\n","700":"You are given a string s consisting of digits from 1 to 9 and an integer k.\nA partition of a string s is called good if:\nEach digit of s is part of exactly one substring.\nThe value of each substring is less than or equal to k.\nReturn the minimum number of substrings in a good partition of s. If no good partition of s exists, return -1.\nNote that:\nThe value of a string is its result when interpreted as an integer. For example, the value of \"123\" is 123 and the value of \"1\" is 1.\nA substring is a contiguous sequence of characters within a string.\n","701":"Given a 2D matrix matrix, handle multiple queries of the following type:\nCalculate the sum of the elements of matrix inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\nImplement the NumMatrix class:\nNumMatrix(int[][] matrix) Initializes the object with the integer matrix matrix.\nint sumRegion(int row1, int col1, int row2, int col2) Returns the sum of the elements of matrix inside the rectangle defined by its upper left corner (row1, col1) and lower right corner (row2, col2).\nYou must design an algorithm where sumRegion works on O(1) time complexity.\n","702":"You are given an integer array coins of length n which represents the n coins that you own. The value of the ith coin is coins[i]. You can make some value x if you can choose some of your n coins such that their values sum up to x.\nReturn the maximum number of consecutive integer values that you can make with your coins starting from and including 0.\nNote that you may have multiple coins of the same value.\n","703":"There is a biker going on a road trip. The road trip consists of n + 1 points at different altitudes. The biker starts his trip on point 0 with altitude equal 0.\nYou are given an integer array gain of length n where gain[i] is the net gain in altitude between points i and i + 1 for all (0 <= i < n). Return the highest altitude of a point.\n","704":"Given a text file file.txt, print just the 10th line of the file.\n","705":"You are given two integer arrays nums1 and nums2 of length n.\nThe XOR sum of the two integer arrays is (nums1[0] XOR nums2[0]) + (nums1[1] XOR nums2[1]) + ... + (nums1[n - 1] XOR nums2[n - 1]) (0-indexed).\nFor example, the XOR sum of [1,2,3] and [3,2,1] is equal to (1 XOR 3) + (2 XOR 2) + (3 XOR 1) = 2 + 0 + 2 = 4.\nRearrange the elements of nums2 such that the resulting XOR sum is minimized.\nReturn the XOR sum after the rearrangement.\n","706":"You are given a 0-indexed array of n integers differences, which describes the differences between each pair of consecutive integers of a hidden sequence of length (n + 1). More formally, call the hidden sequence hidden, then we have that differences[i] = hidden[i + 1] - hidden[i].\nYou are further given two integers lower and upper that describe the inclusive range of values [lower, upper] that the hidden sequence can contain.\nFor example, given differences = [1, -3, 4], lower = 1, upper = 6, the hidden sequence is a sequence of length 4 whose elements are in between 1 and 6 (inclusive).\n[3, 4, 1, 5] and [4, 5, 2, 6] are possible hidden sequences.\n[5, 6, 3, 7] is not possible since it contains an element greater than 6.\n[1, 2, 3, 4] is not possible since the differences are not correct.\nReturn the number of possible hidden sequences there are. If there are no possible sequences, return 0.\n","707":"A car travels from a starting position to a destination which is target miles east of the starting position.\nThere are gas stations along the way. The gas stations are represented as an array stations where stations[i] = [positioni, fueli] indicates that the ith gas station is positioni miles east of the starting position and has fueli liters of gas.\nThe car starts with an infinite tank of gas, which initially has startFuel liters of fuel in it. It uses one liter of gas per one mile that it drives. When the car reaches a gas station, it may stop and refuel, transferring all the gas from the station into the car.\nReturn the minimum number of refueling stops the car must make in order to reach its destination. If it cannot reach the destination, return -1.\nNote that if the car reaches a gas station with 0 fuel left, the car can still refuel there. If the car reaches the destination with 0 fuel left, it is still considered to have arrived.\n","708":"Given an empty set of intervals, implement a data structure that can:\nAdd an interval to the set of intervals.\nCount the number of integers that are present in at least one interval.\nImplement the CountIntervals class:\nCountIntervals() Initializes the object with an empty set of intervals.\nvoid add(int left, int right) Adds the interval [left, right] to the set of intervals.\nint count() Returns the number of integers that are present in at least one interval.\nNote that an interval [left, right] denotes all the integers x where left <= x <= right.\n","709":"SQL Schema\nTable: Salary\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| id          | int      |\n| name        | varchar  |\n| sex         | ENUM     |\n| salary      | int      |\n+-------------+----------+\nid is the primary key for this table.\nThe sex column is ENUM value of type ('m', 'f').\nThe table contains information about an employee.\n  Write an SQL query to swap all 'f' and 'm' values (i.e., change all 'f' values to 'm' and vice versa) with a single update statement and no intermediate temporary tables.\nNote that you must write a single update statement, do not write any select statement for this problem.\nThe query result format is in the following example.\n","710":"Given an array nums of positive integers, return the longest possible length of an array prefix of nums, such that it is possible to remove exactly one element from this prefix so that every number that has appeared in it will have the same number of occurrences.\nIf after removing one element there are no remaining elements, it's still considered that every appeared number has the same number of ocurrences (0).\n","711":"Given the root of a binary tree, check whether it is a mirror of itself (i.e., symmetric around its center).\n","712":"You have k lists of sorted integers in non-decreasing order. Find the smallest range that includes at least one number from each of the k lists.\nWe define the range [a, b] is smaller than range [c, d] if b - a < d - c or a < c if b - a == d - c.\n","713":"Given an expression such as expression = \"e + 8 - a + 5\" and an evaluation map such as {\"e\": 1} (given in terms of evalvars = [\"e\"] and evalints = [1]), return a list of tokens representing the simplified expression, such as [\"-1*a\",\"14\"]\nAn expression alternates chunks and symbols, with a space separating each chunk and symbol.\nA chunk is either an expression in parentheses, a variable, or a non-negative integer.\nA variable is a string of lowercase letters (not including digits.) Note that variables can be multiple letters, and note that variables never have a leading coefficient or unary operator like \"2x\" or \"-x\".\nExpressions are evaluated in the usual order: brackets first, then multiplication, then addition and subtraction.\nFor example, expression = \"1 + 2 * 3\" has an answer of [\"7\"].\nThe format of the output is as follows:\nFor each term of free variables with a non-zero coefficient, we write the free variables within a term in sorted order lexicographically.\nFor example, we would never write a term like \"b*a*c\", only \"a*b*c\".\nTerms have degrees equal to the number of free variables being multiplied, counting multiplicity. We write the largest degree terms of our answer first, breaking ties by lexicographic order ignoring the leading coefficient of the term.\nFor example, \"a*a*b*c\" has degree 4.\nThe leading coefficient of the term is placed directly to the left with an asterisk separating it from the variables (if they exist.) A leading coefficient of 1 is still printed.\nAn example of a well-formatted answer is [\"-2*a*a*a\", \"3*a*a*b\", \"3*b*b\", \"4*a\", \"5*c\", \"-6\"].\nTerms (including constant terms) with coefficient 0 are not included.\nFor example, an expression of \"0\" has an output of [].\nNote: You may assume that the given expression is always valid. All intermediate results will be in the range of [-231, 231 - 1].\n","714":"You have a list arr of all integers in the range [1, n] sorted in a strictly increasing order. Apply the following algorithm on arr:\nStarting from left to right, remove the first number and every other number afterward until you reach the end of the list.\nRepeat the previous step again, but this time from right to left, remove the rightmost number and every other number from the remaining numbers.\nKeep repeating the steps again, alternating left to right and right to left, until a single number remains.\nGiven the integer n, return the last number that remains in arr.\n","715":"Given the root of a Binary Search Tree (BST), return the minimum absolute difference between the values of any two different nodes in the tree.\n","716":"SQL Schema\nTable: SalesPerson\n+-----------------+---------+\n| Column Name     | Type    |\n+-----------------+---------+\n| sales_id        | int     |\n| name            | varchar |\n| salary          | int     |\n| commission_rate | int     |\n| hire_date       | date    |\n+-----------------+---------+\nsales_id is the primary key column for this table.\nEach row of this table indicates the name and the ID of a salesperson alongside their salary, commission rate, and hire date.\n  Table: Company\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| com_id      | int     |\n| name        | varchar |\n| city        | varchar |\n+-------------+---------+\ncom_id is the primary key column for this table.\nEach row of this table indicates the name and the ID of a company and the city in which the company is located.\n  Table: Orders\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| order_id    | int  |\n| order_date  | date |\n| com_id      | int  |\n| sales_id    | int  |\n| amount      | int  |\n+-------------+------+\norder_id is the primary key column for this table.\ncom_id is a foreign key to com_id from the Company table.\nsales_id is a foreign key to sales_id from the SalesPerson table.\nEach row of this table contains information about one order. This includes the ID of the company, the ID of the salesperson, the date of the order, and the amount paid.\n  Write an SQL query to report the names of all the salespersons who did not have any orders related to the company with the name \"RED\".\nReturn the result table in any order.\nThe query result format is in the following example.\n","717":"You are given an integer array nums. You can choose exactly one index (0-indexed) and remove the element. Notice that the index of the elements may change after the removal.\nFor example, if nums = [6,1,7,4,1]:\nChoosing to remove index 1 results in nums = [6,7,4,1].\nChoosing to remove index 2 results in nums = [6,1,4,1].\nChoosing to remove index 4 results in nums = [6,1,7,4].\nAn array is fair if the sum of the odd-indexed values equals the sum of the even-indexed values.\nReturn the number of indices that you could choose such that after the removal, nums is fair.\n","718":"There are n rooms you need to visit, labeled from 0 to n - 1. Each day is labeled, starting from 0. You will go in and visit one room a day.\nInitially on day 0, you visit room 0. The order you visit the rooms for the coming days is determined by the following rules and a given 0-indexed array nextVisit of length n:\nAssuming that on a day, you visit room i,\nif you have been in room i an odd number of times (including the current visit), on the next day you will visit a room with a lower or equal room number specified by nextVisit[i] where 0 <= nextVisit[i] <= i;\nif you have been in room i an even number of times (including the current visit), on the next day you will visit room (i + 1) mod n.\nReturn the label of the first day where you have been in all the rooms. It can be shown that such a day exists. Since the answer may be very large, return it modulo 109 + 7.\n","719":"You are given the root of a binary tree and a positive integer k.\nThe level sum in the tree is the sum of the values of the nodes that are on the same level.\nReturn the kth largest level sum in the tree (not necessarily distinct). If there are fewer than k levels in the tree, return -1.\nNote that two nodes are on the same level if they have the same distance from the root.\n","720":"A binary string is monotone increasing if it consists of some number of 0's (possibly none), followed by some number of 1's (also possibly none).\nYou are given a binary string s. You can flip s[i] changing it from 0 to 1 or from 1 to 0.\nReturn the minimum number of flips to make s monotone increasing.\n","721":"You are given a string s consisting of lowercase English letters. A duplicate removal consists of choosing two adjacent and equal letters and removing them.\nWe repeatedly make duplicate removals on s until we no longer can.\nReturn the final string after all such duplicate removals have been made. It can be proven that the answer is unique.\n","722":"You are given an m x n integer matrix grid.\nA rhombus sum is the sum of the elements that form the border of a regular rhombus shape in grid. The rhombus must have the shape of a square rotated 45 degrees with each of the corners centered in a grid cell. Below is an image of four valid rhombus shapes with the corresponding colored cells that should be included in each rhombus sum:\nNote that the rhombus can have an area of 0, which is depicted by the purple rhombus in the bottom right corner.\nReturn the biggest three distinct rhombus sums in the grid in descending order. If there are less than three distinct values, return all of them.\n","723":"You are given a 0-indexed array of strings details. Each element of details provides information about a given passenger compressed into a string of length 15. The system is such that:\nThe first ten characters consist of the phone number of passengers.\nThe next character denotes the gender of the person.\nThe following two characters are used to indicate the age of the person.\nThe last two characters determine the seat allotted to that person.\nReturn the number of passengers who are strictly more than 60 years old.\n","724":"You own a Goal Parser that can interpret a string command. The command consists of an alphabet of \"G\", \"()\" and\/or \"(al)\" in some order. The Goal Parser will interpret \"G\" as the string \"G\", \"()\" as the string \"o\", and \"(al)\" as the string \"al\". The interpreted strings are then concatenated in the original order.\nGiven the string command, return the Goal Parser's interpretation of command.\n","725":"You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once.\nReturn the single element that appears only once.\nYour solution must run in O(log n) time and O(1) space.\n","726":"SQL Schema\nTable: Employee\n+---------------+---------+\n| Column Name   |  Type   |\n+---------------+---------+\n| employee_id   | int     |\n| department_id | int     |\n| primary_flag  | varchar |\n+---------------+---------+\n(employee_id, department_id) is the primary key for this table.\nemployee_id is the id of the employee.\ndepartment_id is the id of the department to which the employee belongs.\nprimary_flag is an ENUM of type ('Y', 'N'). If the flag is 'Y', the department is the primary department for the employee. If the flag is 'N', the department is not the primary.\n  Employees can belong to multiple departments. When the employee joins other departments, they need to decide which department is their primary department. Note that when an employee belongs to only one department, their primary column is 'N'.\nWrite an SQL query to report all the employees with their primary department. For employees who belong to one department, report their only department.\nReturn the result table in any order.\nThe query result format is in the following example.\n","727":"A permutation of an array of integers is an arrangement of its members into a sequence or linear order.\nFor example, for arr = [1,2,3], the following are all the permutations of arr: [1,2,3], [1,3,2], [2, 1, 3], [2, 3, 1], [3,1,2], [3,2,1].\nThe next permutation of an array of integers is the next lexicographically greater permutation of its integer. More formally, if all the permutations of the array are sorted in one container according to their lexicographical order, then the next permutation of that array is the permutation that follows it in the sorted container. If such arrangement is not possible, the array must be rearranged as the lowest possible order (i.e., sorted in ascending order).\nFor example, the next permutation of arr = [1,2,3] is [1,3,2].\nSimilarly, the next permutation of arr = [2,3,1] is [3,1,2].\nWhile the next permutation of arr = [3,2,1] is [1,2,3] because [3,2,1] does not have a lexicographical larger rearrangement.\nGiven an array of integers nums, find the next permutation of nums.\nThe replacement must be in place and use only constant extra memory.\n","728":"There are several consecutive houses along a street, each of which has some money inside. There is also a robber, who wants to steal money from the homes, but he refuses to steal from adjacent homes.\nThe capability of the robber is the maximum amount of money he steals from one house of all the houses he robbed.\nYou are given an integer array nums representing how much money is stashed in each house. More formally, the ith house from the left has nums[i] dollars.\nYou are also given an integer k, representing the minimum number of houses the robber will steal from. It is always possible to steal at least k houses.\nReturn the minimum capability of the robber out of all the possible ways to steal at least k houses.\n","729":"You are given an integer array nums containing distinct numbers, and you can perform the following operations until the array is empty:\nIf the first element has the smallest value, remove it\nOtherwise, put the first element at the end of the array.\nReturn an integer denoting the number of operations it takes to make nums empty.\n","730":"We want to split a group of n people (labeled from 1 to n) into two groups of any size. Each person may dislike some other people, and they should not go into the same group.\nGiven the integer n and the array dislikes where dislikes[i] = [ai, bi] indicates that the person labeled ai does not like the person labeled bi, return true if it is possible to split everyone into two groups in this way.\n","731":"Given an array of integers arr, a lucky integer is an integer that has a frequency in the array equal to its value.\nReturn the largest lucky integer in the array. If there is no lucky integer return -1.\n","732":"An image is represented by an m x n integer grid image where image[i][j] represents the pixel value of the image.\nYou are also given three integers sr, sc, and color. You should perform a flood fill on the image starting from the pixel image[sr][sc].\nTo perform a flood fill, consider the starting pixel, plus any pixels connected 4-directionally to the starting pixel of the same color as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color), and so on. Replace the color of all of the aforementioned pixels with color.\nReturn the modified image after performing the flood fill.\n","733":"You are given an integer array nums. The value of this array is defined as the sum of |nums[i] - nums[i + 1]| for all 0 <= i < nums.length - 1.\nYou are allowed to select any subarray of the given array and reverse it. You can perform this operation only once.\nFind maximum possible value of the final array.\n","734":"Given an integer array nums, return the greatest common divisor of the smallest number and largest number in nums.\nThe greatest common divisor of two numbers is the largest positive integer that evenly divides both numbers.\n","735":"An integer array original is transformed into a doubled array changed by appending twice the value of every element in original, and then randomly shuffling the resulting array.\nGiven an array changed, return original if changed is a doubled array. If changed is not a doubled array, return an empty array. The elements in original may be returned in any order.\n","736":"LeetCode company workers use key-cards to unlock office doors. Each time a worker uses their key-card, the security system saves the worker's name and the time when it was used. The system emits an alert if any worker uses the key-card three or more times in a one-hour period.\nYou are given a list of strings keyName and keyTime where [keyName[i], keyTime[i]] corresponds to a person's name and the time when their key-card was used in a single day.\nAccess times are given in the 24-hour time format \"HH:MM\", such as \"23:51\" and \"09:49\".\nReturn a list of unique worker names who received an alert for frequent keycard use. Sort the names in ascending order alphabetically.\nNotice that \"10:00\" - \"11:00\" is considered to be within a one-hour period, while \"22:51\" - \"23:52\" is not considered to be within a one-hour period.\n","737":"As the ruler of a kingdom, you have an army of wizards at your command.\nYou are given a 0-indexed integer array strength, where strength[i] denotes the strength of the ith wizard. For a contiguous group of wizards (i.e. the wizards' strengths form a subarray of strength), the total strength is defined as the product of the following two values:\nThe strength of the weakest wizard in the group.\nThe total of all the individual strengths of the wizards in the group.\nReturn the sum of the total strengths of all contiguous groups of wizards. Since the answer may be very large, return it modulo 109 + 7.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","738":"There exists an undirected and unrooted tree with n nodes indexed from 0 to n - 1. You are given the integer n and a 2D integer array edges of length n - 1, where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nEach node has an associated price. You are given an integer array price, where price[i] is the price of the ith node.\nThe price sum of a given path is the sum of the prices of all nodes lying on that path.\nAdditionally, you are given a 2D integer array trips, where trips[i] = [starti, endi] indicates that you start the ith trip from the node starti and travel to the node endi by any path you like.\nBefore performing your first trip, you can choose some non-adjacent nodes and halve the prices.\nReturn the minimum total price sum to perform all the given trips.\n","739":"Given an array of strings queries and a string pattern, return a boolean array answer where answer[i] is true if queries[i] matches pattern, and false otherwise.\nA query word queries[i] matches pattern if you can insert lowercase English letters pattern so that it equals the query. You may insert each character at any position and you may not insert any characters.\n","740":"Given a wordlist, we want to implement a spellchecker that converts a query word into a correct word.\nFor a given query word, the spell checker handles two categories of spelling mistakes:\nCapitalization: If the query matches a word in the wordlist (case-insensitive), then the query word is returned with the same case as the case in the wordlist.\n","741":"You are given a 0-indexed integer array nums. A pair of indices (i, j) is a bad pair if i < j and j - i != nums[j] - nums[i].\nReturn the total number of bad pairs in nums.\n","742":"A linked list of length n is given such that each node contains an additional random pointer, which could point to any node in the list, or null.\nConstruct a deep copy of the list. The deep copy should consist of exactly n brand new nodes, where each new node has its value set to the value of its corresponding original node. Both the next and random pointer of the new nodes should point to new nodes in the copied list such that the pointers in the original list and copied list represent the same list state. None of the pointers in the new list should point to nodes in the original list.\nFor example, if there are two nodes X and Y in the original list, where X.random --> Y, then for the corresponding two nodes x and y in the copied list, x.random --> y.\nReturn the head of the copied linked list.\nThe linked list is represented in the input\/output as a list of n nodes. Each node is represented as a pair of [val, random_index] where:\nval: an integer representing Node.val\nrandom_index: the index of the node (range from 0 to n-1) that the random pointer points to, or null if it does not point to any node.\nYour code will only be given the head of the original linked list.\n","743":"At a lemonade stand, each lemonade costs $5. Customers are standing in a queue to buy from you and order one at a time (in the order specified by bills). Each customer will only buy one lemonade and pay with either a $5, $10, or $20 bill. You must provide the correct change to each customer so that the net transaction is that the customer pays $5.\nNote that you do not have any change in hand at first.\nGiven an integer array bills where bills[i] is the bill the ith customer pays, return true if you can provide every customer with the correct change, or false otherwise.\n","744":"A city's skyline is the outer contour of the silhouette formed by all the buildings in that city when viewed from a distance. Given the locations and heights of all the buildings, return the skyline formed by these buildings collectively.\nThe geometric information of each building is given in the array buildings where buildings[i] = [lefti, righti, heighti]:\nlefti is the x coordinate of the left edge of the ith building.\nrighti is the x coordinate of the right edge of the ith building.\nheighti is the height of the ith building.\nYou may assume all buildings are perfect rectangles grounded on an absolutely flat surface at height 0.\nThe skyline should be represented as a list of \"key points\" sorted by their x-coordinate in the form [[x1,y1],[x2,y2],...]. Each key point is the left endpoint of some horizontal segment in the skyline except the last point in the list, which always has a y-coordinate 0 and is used to mark the skyline's termination where the rightmost building ends. Any ground between the leftmost and rightmost buildings should be part of the skyline's contour.\nNote: There must be no consecutive horizontal lines of equal height in the output skyline. For instance, [...,[2 3],[4 5],[7 5],[11 5],[12 7],...] is not acceptable; the three lines of height 5 should be merged into one in the final output as such: [...,[2 3],[4 5],[12 7],...]\n","745":"Given an integer array nums and an integer k, return true if there are two distinct indices i and j in the array such that nums[i] == nums[j] and abs(i - j) <= k.\n","746":"You are given a 0-indexed 2D integer array grid of size m x n. Each cell has one of two values:\n0 represents an empty cell,\n1 represents an obstacle that may be removed.\nYou can move up, down, left, or right from and to an empty cell.\nReturn the minimum number of obstacles to remove so you can move from the upper left corner (0, 0) to the lower right corner (m - 1, n - 1).\n","747":"There are n employees, each with a unique id from 0 to n - 1.\nYou are given a 2D integer array logs where logs[i] = [idi, leaveTimei] where:\nidi is the id of the employee that worked on the ith task, and\nleaveTimei is the time at which the employee finished the ith task. All the values leaveTimei are unique.\nNote that the ith task starts the moment right after the (i - 1)th task ends, and the 0th task starts at time 0.\nReturn the id of the employee that worked the task with the longest time. If there is a tie between two or more employees, return the smallest id among them.\n","748":"The n-queens puzzle is the problem of placing n queens on an n x n chessboard such that no two queens attack each other.\nGiven an integer n, return all distinct solutions to the n-queens puzzle. You may return the answer in any order.\nEach solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space, respectively.\n","749":"Alice and Bob want to water n plants in their garden. The plants are arranged in a row and are labeled from 0 to n - 1 from left to right where the ith plant is located at x = i.\nEach plant needs a specific amount of water. Alice and Bob have a watering can each, initially full. They water the plants in the following way:\nAlice waters the plants in order from left to right, starting from the 0th plant. Bob waters the plants in order from right to left, starting from the (n - 1)th plant. They begin watering the plants simultaneously.\nIt takes the same amount of time to water each plant regardless of how much water it needs.\nAlice\/Bob must water the plant if they have enough in their can to fully water it. Otherwise, they first refill their can (instantaneously) then water the plant.\nIn case both Alice and Bob reach the same plant, the one with more water currently in his\/her watering can should water this plant. If they have the same amount of water, then Alice should water this plant.\nGiven a 0-indexed integer array plants of n integers, where plants[i] is the amount of water the ith plant needs, and two integers capacityA and capacityB representing the capacities of Alice's and Bob's watering cans respectively, return the number of times they have to refill to water all the plants.\n","750":"You are given an array trees where trees[i] = [xi, yi] represents the location of a tree in the garden.\nFence the entire garden using the minimum length of rope, as it is expensive. The garden is well-fenced only if all the trees are enclosed.\nReturn the coordinates of trees that are exactly located on the fence perimeter. You may return the answer in any order.\n","751":"You are given a 0-indexed array of strings words. Each string consists of lowercase English letters only. No letter occurs more than once in any string of words.\nTwo strings s1 and s2 are said to be connected if the set of letters of s2 can be obtained from the set of letters of s1 by any one of the following operations:\nAdding exactly one letter to the set of the letters of s1.\nDeleting exactly one letter from the set of the letters of s1.\nReplacing exactly one letter from the set of the letters of s1 with any letter, including itself.\nThe array words can be divided into one or more non-intersecting groups. A string belongs to a group if any one of the following is true:\nIt is connected to at least one other string of the group.\nIt is the only string present in the group.\nNote that the strings in words should be grouped in such a manner that a string belonging to a group cannot be connected to a string present in any other group. It can be proved that such an arrangement is always unique.\nReturn an array ans of size 2 where:\nans[0] is the maximum number of groups words can be divided into, and\nans[1] is the size of the largest group.\n","752":"You are given two strings current and correct representing two 24-hour times.\n24-hour times are formatted as \"HH:MM\", where HH is between 00 and 23, and MM is between 00 and 59. The earliest 24-hour time is 00:00, and the latest is 23:59.\nIn one operation you can increase the time current by 1, 5, 15, or 60 minutes. You can perform this operation any number of times.\nReturn the minimum number of operations needed to convert current to correct.\n","753":"Given an m x n matrix, return all elements of the matrix in spiral order.\n","754":"You are given a 0-indexed binary string s which represents the types of buildings along a street where:\ns[i] = '0' denotes that the ith building is an office and\ns[i] = '1' denotes that the ith building is a restaurant.\nAs a city official, you would like to select 3 buildings for random inspection. However, to ensure variety, no two consecutive buildings out of the selected buildings can be of the same type.\nFor example, given s = \"001101\", we cannot select the 1st, 3rd, and 5th buildings as that would form \"011\" which is not allowed due to having two consecutive buildings of the same type.\nReturn the number of valid ways to select 3 buildings.\n","755":"You are given two groups of points where the first group has size1 points, the second group has size2 points, and size1 >= size2.\nThe cost of the connection between any two points are given in an size1 x size2 matrix where cost[i][j] is the cost of connecting point i of the first group and point j of the second group. The groups are connected if each point in both groups is connected to one or more points in the opposite group. In other words, each point in the first group must be connected to at least one point in the second group, and each point in the second group must be connected to at least one point in the first group.\nReturn the minimum cost it takes to connect the two groups.\n","756":"You are given a 0-indexed integer array players, where players[i] represents the ability of the ith player. You are also given a 0-indexed integer array trainers, where trainers[j] represents the training capacity of the jth trainer.\nThe ith player can match with the jth trainer if the player's ability is less than or equal to the trainer's training capacity. Additionally, the ith player can be matched with at most one trainer, and the jth trainer can be matched with at most one player.\nReturn the maximum number of matchings between players and trainers that satisfy these conditions.\n","757":"Given the head of a linked list, reverse the nodes of the list k at a time, and return the modified list.\nk is a positive integer and is less than or equal to the length of the linked list. If the number of nodes is not a multiple of k then left-out nodes, in the end, should remain as it is.\nYou may not alter the values in the list's nodes, only nodes themselves may be changed.\n","758":"You are given a 0-indexed integer array nums.\nWe say that an integer x is expressible from nums if there exist some integers 0 <= index1 < index2 < ... < indexk < nums.length for which nums[index1] | nums[index2] | ... | nums[indexk] = x. In other words, an integer is expressible if it can be written as the bitwise OR of some subsequence of nums.\nReturn the minimum positive non-zero integer that is not expressible from nums.\n","759":"There is an n x n grid, with the top-left cell at (0, 0) and the bottom-right cell at (n - 1, n - 1). You are given the integer n and an integer array startPos where startPos = [startrow, startcol] indicates that a robot is initially at cell (startrow, startcol).\nYou are also given a 0-indexed string s of length m where s[i] is the ith instruction for the robot: 'L' (move left), 'R' (move right), 'U' (move up), and 'D' (move down).\nThe robot can begin executing from any ith instruction in s. It executes the instructions one by one towards the end of s but it stops if either of these conditions is met:\nThe next instruction will move the robot off the grid.\nThere are no more instructions left to execute.\nReturn an array answer of length m where answer[i] is the number of instructions the robot can execute if the robot begins executing from the ith instruction in s.\n","760":"There is a tournament where n players are participating. The players are standing in a single row and are numbered from 1 to n based on their initial standing position (player 1 is the first player in the row, player 2 is the second player in the row, etc.).\nThe tournament consists of multiple rounds (starting from round number 1). In each round, the ith player from the front of the row competes against the ith player from the end of the row, and the winner advances to the next round. When the number of players is odd for the current round, the player in the middle automatically advances to the next round.\nFor example, if the row consists of players 1, 2, 4, 6, 7\nPlayer 1 competes against player 7.\nPlayer 2 competes against player 6.\nPlayer 4 automatically advances to the next round.\nAfter each round is over, the winners are lined back up in the row based on the original ordering assigned to them initially (ascending order).\nThe players numbered firstPlayer and secondPlayer are the best in the tournament. They can win against any other player before they compete against each other. If any two other players compete against each other, either of them might win, and thus you may choose the outcome of this round.\nGiven the integers n, firstPlayer, and secondPlayer, return an integer array containing two values, the earliest possible round number and the latest possible round number in which these two players will compete against each other, respectively.\n","761":"Given the head of a singly linked list where elements are sorted in ascending order, convert it to a\nheight-balanced\nbinary search tree.\n","762":"Given an asyncronous function fn and a time t in milliseconds, return a new time limited version of the input function.\nA time limited function is a function that is identical to the original unless it takes longer than t milliseconds to fullfill. In that case, it will reject with \"Time Limit Exceeded\".  Note that it should reject with a string, not an Error.\n","763":"You are given a string s of lowercase English letters and an array widths denoting how many pixels wide each lowercase English letter is. Specifically, widths[0] is the width of 'a', widths[1] is the width of 'b', and so on.\nYou are trying to write s across several lines, where each line is no longer than 100 pixels. Starting at the beginning of s, write as many letters on the first line such that the total width does not exceed 100 pixels. Then, from where you stopped in s, continue writing as many letters as you can on the second line. Continue this process until you have written all of s.\nReturn an array result of length 2 where:\nresult[0] is the total number of lines.\nresult[1] is the width of the last line in pixels.\n","764":"You are given a 0-indexed integer array nums. You are allowed to permute nums into a new array perm of your choosing.\nWe define the greatness of nums be the number of indices 0 <= i < nums.length for which perm[i] > nums[i].\nReturn the maximum possible greatness you can achieve after permuting nums.\n","765":"We have n cities labeled from 1 to n. Two different cities with labels x and y are directly connected by a bidirectional road if and only if x and y share a common divisor strictly greater than some threshold. More formally, cities with labels x and y have a road between them if there exists an integer z such that all of the following are true:\nx % z == 0,\ny % z == 0, and\nz > threshold.\nGiven the two integers, n and threshold, and an array of queries, you must determine for each queries[i] = [ai, bi] if cities ai and bi are connected directly or indirectly. (i.e. there is some path between them).\nReturn an array answer, where answer.length == queries.length and answer[i] is true if for the ith query, there is a path between ai and bi, or answer[i] is false if there is no path.\n","766":"Given the root of a binary tree and an integer targetSum, return the number of paths where the sum of the values along the path equals targetSum.\nThe path does not need to start or end at the root or a leaf, but it must go downwards (i.e., traveling only from parent nodes to child nodes).\n","767":"Given an integer array nums, your goal is to make all elements in nums equal. To complete one operation, follow these steps:\nFind the largest value in nums. Let its index be i (0-indexed) and its value be largest. If there are multiple elements with the largest value, pick the smallest i.\nFind the next largest value in nums strictly smaller than largest. Let its value be nextLargest.\nReduce nums[i] to nextLargest.\nReturn the number of operations to make all elements in nums equal.\n","768":"You are given an array of characters letters that is sorted in non-decreasing order, and a character target. There are at least two different characters in letters.\nReturn the smallest character in letters that is lexicographically greater than target. If such a character does not exist, return the first character in letters.\n","769":"A sequence x1, x2, ..., xn is Fibonacci-like if:\nn >= 3\nxi + xi+1 == xi+2 for all i + 2 <= n\nGiven a strictly increasing array arr of positive integers forming a sequence, return the length of the longest Fibonacci-like subsequence of arr. If one does not exist, return 0.\nA subsequence is derived from another sequence arr by deleting any number of elements (including none) from arr, without changing the order of the remaining elements. For example, [3, 5, 8] is a subsequence of [3, 4, 5, 6, 7, 8].\n","770":"You are given two 0-indexed integer arrays servers and tasks of lengths n and m respectively. servers[i] is the weight of the ith server, and tasks[j] is the time needed to process the jth task in seconds.\nTasks are assigned to the servers using a task queue. Initially, all servers are free, and the queue is empty.\nAt second j, the jth task is inserted into the queue (starting with the 0th task being inserted at second 0). As long as there are free servers and the queue is not empty, the task in the front of the queue will be assigned to a free server with the smallest weight, and in case of a tie, it is assigned to a free server with the smallest index.\nIf there are no free servers and the queue is not empty, we wait until a server becomes free and immediately assign the next task. If multiple servers become free at the same time, then multiple tasks from the queue will be assigned in order of insertion following the weight and index priorities above.\nA server that is assigned task j at second t will be free again at second t + tasks[j].\nBuild an array ans of length m, where ans[j] is the index of the server the jth task will be assigned to.\nReturn the array ans.\n","771":"Given a string s, return the longest\npalindromic\nsubstring\nin s.\n","772":"SQL Schema\nTable: DailySales\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| date_id     | date    |\n| make_name   | varchar |\n| lead_id     | int     |\n| partner_id  | int     |\n+-------------+---------+\nThis table does not have a primary key.\nThis table contains the date and the name of the product sold and the IDs of the lead and partner it was sold to.\nThe name consists of only lowercase English letters.\n  Write an SQL query that will, for each date_id and make_name, return the number of distinct lead_id's and distinct partner_id's.\nReturn the result table in any order.\nThe query result format is in the following example.\n","773":"You are given an array of strings products and a string searchWord.\nDesign a system that suggests at most three product names from products after each character of searchWord is typed. Suggested products should have common prefix with searchWord. If there are more than three products with a common prefix return the three lexicographically minimums products.\nReturn a list of lists of the suggested products after each character of searchWord is typed.\n","774":"You are given a 0-indexed array of positive integers w where w[i] describes the weight of the ith index.\nYou need to implement the function pickIndex(), which randomly picks an index in the range [0, w.length - 1] (inclusive) and returns it. The probability of picking an index i is w[i] \/ sum(w).\nFor example, if w = [1, 3], the probability of picking index 0 is 1 \/ (1 + 3) = 0.25 (i.e., 25%), and the probability of picking index 1 is 3 \/ (1 + 3) = 0.75 (i.e., 75%).\n","775":"Implement a SnapshotArray that supports the following interface:\nSnapshotArray(int length) initializes an array-like data structure with the given length. Initially, each element equals 0.\nvoid set(index, val) sets the element at the given index to be equal to val.\nint snap() takes a snapshot of the array and returns the snap_id: the total number of times we called snap() minus 1.\nint get(index, snap_id) returns the value at the given index, at the time we took the snapshot with the given snap_id\n","776":"Given an integer num, return the number of steps to reduce it to zero.\nIn one step, if the current number is even, you have to divide it by 2, otherwise, you have to subtract 1 from it.\n","777":"A tree is an undirected graph in which any two vertices are connected by exactly one path. In other words, any connected graph without simple cycles is a tree.\nGiven a tree of n nodes labelled from 0 to n - 1, and an array of n - 1 edges where edges[i] = [ai, bi] indicates that there is an undirected edge between the two nodes ai and bi in the tree, you can choose any node of the tree as the root. When you select a node x as the root, the result tree has height h. Among all possible rooted trees, those with minimum height (i.e. min(h))  are called minimum height trees (MHTs).\nReturn a list of all MHTs' root labels. You can return the answer in any order.\nThe height of a rooted tree is the number of edges on the longest downward path between the root and a leaf.\n","778":"Given an array arr of integers, check if there exist two indices i and j such that :\ni != j\n0 <= i, j < arr.length\narr[i] == 2 * arr[j]\n","779":"You are given an m x n integer array grid. There is a robot initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.\nAn obstacle and space are marked as 1 or 0 respectively in grid. A path that the robot takes cannot include any square that is an obstacle.\nReturn the number of possible unique paths that the robot can take to reach the bottom-right corner.\nThe testcases are generated so that the answer will be less than or equal to 2 * 109.\n","780":"SQL Schema\nTable: Employee\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| id          | int  |\n| salary      | int  |\n+-------------+------+\nid is the primary key column for this table.\nEach row of this table contains information about the salary of an employee.\n  Write an SQL query to report the nth highest salary from the Employee table. If there is no nth highest salary, the query should report null.\nThe query result format is in the following example.\n","781":"You are given an array rectangles where rectangles[i] = [li, wi] represents the ith rectangle of length li and width wi.\nYou can cut the ith rectangle to form a square with a side length of k if both k <= li and k <= wi. For example, if you have a rectangle [4,6], you can cut it to get a square with a side length of at most 4.\nLet maxLen be the side length of the largest square you can obtain from any of the given rectangles.\nReturn the number of rectangles that can make a square with a side length of maxLen.\n","782":"Given a string s, return true if the s can be palindrome after deleting at most one character from it.\n","783":"Given an array of integers nums containing n + 1 integers where each integer is in the range [1, n] inclusive.\nThere is only one repeated number in nums, return this repeated number.\nYou must solve the problem without modifying the array nums and uses only constant extra space.\n","784":"Given an array of digit strings nums and a digit string target, return the number of pairs of indices (i, j) (where i != j) such that the concatenation of nums[i] + nums[j] equals target.\n","785":"Under the grammar given below, strings can represent a set of lowercase words. Let R(expr) denote the set of words the expression represents.\nThe grammar can best be understood through simple examples:\nSingle letters represent a singleton set containing that word.\nR(\"a\") = {\"a\"}\nR(\"w\") = {\"w\"}\nWhen we take a comma-delimited list of two or more expressions, we take the union of possibilities.\nR(\"{a,b,c}\") = {\"a\",\"b\",\"c\"}\nR(\"{{a,b},{b,c}}\") = {\"a\",\"b\",\"c\"} (notice the final set only contains each word at most once)\nWhen we concatenate two expressions, we take the set of possible concatenations between two words where the first word comes from the first expression and the second word comes from the second expression.\nR(\"{a,b}{c,d}\") = {\"ac\",\"ad\",\"bc\",\"bd\"}\nR(\"a{b,c}{d,e}f{g,h}\") = {\"abdfg\", \"abdfh\", \"abefg\", \"abefh\", \"acdfg\", \"acdfh\", \"acefg\", \"acefh\"}\nFormally, the three rules for our grammar:\nFor every lowercase letter x, we have R(x) = {x}.\nFor expressions e1, e2, ... , ek with k >= 2, we have R({e1, e2, ...}) = R(e1) \u222a R(e2) \u222a ...\nFor expressions e1 and e2, we have R(e1 + e2) = {a + b for (a, b) in R(e1) \u00d7 R(e2)}, where + denotes concatenation, and \u00d7 denotes the cartesian product.\nGiven an expression representing a set of words under the given grammar, return the sorted list of words that the expression represents.\n","786":"Given a matrix and a target, return the number of non-empty submatrices that sum to target.\nA submatrix x1, y1, x2, y2 is the set of all cells matrix[x][y] with x1 <= x <= x2 and y1 <= y <= y2.\nTwo submatrices (x1, y1, x2, y2) and (x1', y1', x2', y2') are different if they have some coordinate that is different: for example, if x1 != x1'.\n","787":"There is a rectangular brick wall in front of you with n rows of bricks. The ith row has some number of bricks each of the same height (i.e., one unit) but they can be of different widths. The total width of each row is the same.\nDraw a vertical line from the top to the bottom and cross the least bricks. If your line goes through the edge of a brick, then the brick is not considered as crossed. You cannot draw a line just along one of the two vertical edges of the wall, in which case the line will obviously cross no bricks.\nGiven the 2D array wall that contains the information about the wall, return the minimum number of crossed bricks after drawing such a vertical line.\n","788":"There is an m x n binary grid matrix with all the values set 0 initially. Design an algorithm to randomly pick an index (i, j) where matrix[i][j] == 0 and flips it to 1. All the indices (i, j) where matrix[i][j] == 0 should be equally likely to be returned.\nOptimize your algorithm to minimize the number of calls made to the built-in random function of your language and optimize the time and space complexity.\nImplement the Solution class:\nSolution(int m, int n) Initializes the object with the size of the binary matrix m and n.\nint[] flip() Returns a random index [i, j] of the matrix where matrix[i][j] == 0 and flips it to 1.\nvoid reset() Resets all the values of the matrix to be 0.\n","789":"Given an integer n, return true if it is a power of two. Otherwise, return false.\nAn integer n is a power of two, if there exists an integer x such that n == 2x.\n","790":"You have n bags numbered from 0 to n - 1. You are given two 0-indexed integer arrays capacity and rocks. The ith bag can hold a maximum of capacity[i] rocks and currently contains rocks[i] rocks. You are also given an integer additionalRocks, the number of additional rocks you can place in any of the bags.\nReturn the maximum number of bags that could have full capacity after placing the additional rocks in some bags.\n","791":"Implement a last-in-first-out (LIFO) stack using only two queues. The implemented stack should support all the functions of a normal stack (push, top, pop, and empty).\nImplement the MyStack class:\nvoid push(int x) Pushes element x to the top of the stack.\nint pop() Removes the element on the top of the stack and returns it.\nint top() Returns the element on the top of the stack.\nboolean empty() Returns true if the stack is empty, false otherwise.\nNotes:\nYou must use only standard operations of a queue, which means that only push to back, peek\/pop from front, size and is empty operations are valid.\nDepending on your language, the queue may not be supported natively. You may simulate a queue using a list or deque (double-ended queue) as long as you use only a queue's standard operations.\n","792":"You are given a 2D integer array descriptions where descriptions[i] = [parenti, childi, isLefti] indicates that parenti is the parent of childi in a binary tree of unique values. Furthermore,\nIf isLefti == 1, then childi is the left child of parenti.\nIf isLefti == 0, then childi is the right child of parenti.\nConstruct the binary tree described by descriptions and return its root.\nThe test cases will be generated such that the binary tree is valid.\n","793":"You are given a 0-indexed m x n integer matrix grid consisting of distinct integers from 0 to m * n - 1. You can move in this matrix from a cell to any other cell in the next row. That is, if you are in cell (x, y) such that x < m - 1, you can move to any of the cells (x + 1, 0), (x + 1, 1), ..., (x + 1, n - 1). Note that it is not possible to move from cells in the last row.\nEach possible move has a cost given by a 0-indexed 2D array moveCost of size (m * n) x n, where moveCost[i][j] is the cost of moving from a cell with value i to a cell in column j of the next row. The cost of moving from cells in the last row of grid can be ignored.\nThe cost of a path in grid is the sum of all values of cells visited plus the sum of costs of all the moves made. Return the minimum cost of a path that starts from any cell in the first row and ends at any cell in the last row.\n","794":"Given a string s representing a valid expression, implement a basic calculator to evaluate it, and return the result of the evaluation.\nNote: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().\n","795":"Given a binary tree, find its minimum depth.\nThe minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.\nNote: A leaf is a node with no children.\n","796":"You are given an n x n binary grid board. In each move, you can swap any two rows with each other, or any two columns with each other.\nReturn the minimum number of moves to transform the board into a chessboard board. If the task is impossible, return -1.\nA chessboard board is a board where no 0's and no 1's are 4-directionally adjacent.\n","797":"Given two objects o1 and o2, check if they are deeply equal.\nFor two objects to be deeply equal, they must contain the same keys, and the associated values must also be deeply equal. Two objects are also considered deeply equal if they pass the === equality check.\nYou may assume both objects are the output of JSON.parse. In other words, they are valid JSON.\nPlease solve it without using lodash's _.isEqual() function.\n","798":"Given a string s, determine if it is valid.\nA string s is valid if, starting with an empty string t = \"\", you can transform t into s after performing the following operation any number of times:\nInsert string \"abc\" into any position in t. More formally, t becomes tleft + \"abc\" + tright, where t == tleft + tright. Note that tleft and tright may be empty.\nReturn true if s is a valid string, otherwise, return false.\n","799":"Given an m x n binary matrix filled with 0's and 1's, find the largest square containing only 1's and return its area.\n","800":"You are given a directed graph of n nodes numbered from 0 to n - 1, where each node has at most one outgoing edge.\nThe graph is represented with a given 0-indexed array edges of size n, indicating that there is a directed edge from node i to node edges[i]. If there is no outgoing edge from node i, then edges[i] == -1.\nReturn the length of the longest cycle in the graph. If no cycle exists, return -1.\nA cycle is a path that starts and ends at the same node.\n","801":"You are keeping the scores for a baseball game with strange rules. At the beginning of the game, you start with an empty record.\nYou are given a list of strings operations, where operations[i] is the ith operation you must apply to the record and is one of the following:\nAn integer x.\nRecord a new score of x.\n'+'.\nRecord a new score that is the sum of the previous two scores.\n'D'.\nRecord a new score that is the double of the previous score.\n'C'.\nInvalidate the previous score, removing it from the record.\nReturn the sum of all the scores on the record after applying all the operations.\nThe test cases are generated such that the answer and all intermediate calculations fit in a 32-bit integer and that all operations are valid.\n","802":"You are given an array of people, people, which are the attributes of some people in a queue (not necessarily in order). Each people[i] = [hi, ki] represents the ith person of height hi with exactly ki other people in front who have a height greater than or equal to hi.\nReconstruct and return the queue that is represented by the input array people. The returned queue should be formatted as an array queue, where queue[j] = [hj, kj] is the attributes of the jth person in the queue (queue[0] is the person at the front of the queue).\n","803":"Given the root of a binary tree, split the binary tree into two subtrees by removing one edge such that the product of the sums of the subtrees is maximized.\nReturn the maximum product of the sums of the two subtrees. Since the answer may be too large, return it modulo 109 + 7.\nNote that you need to maximize the answer before taking the mod and not after taking it.\n","804":"You are given an n x n integer matrix. You can do the following operation any number of times:\nChoose any two adjacent elements of matrix and multiply each of them by -1.\nTwo elements are considered adjacent if and only if they share a border.\nYour goal is to maximize the summation of the matrix's elements. Return the maximum sum of the matrix's elements using the operation mentioned above.\n","805":"Given a m x n matrix mat and an integer k, return a matrix answer where each answer[i][j] is the sum of all elements mat[r][c] for:\ni - k <= r <= i + k,\nj - k <= c <= j + k, and\n(r, c) is a valid position in the matrix.\n","806":"You are given two positive integer arrays nums and numsDivide. You can delete any number of elements from nums.\nReturn the minimum number of deletions such that the smallest element in nums divides all the elements of numsDivide. If this is not possible, return -1.\nNote that an integer x divides y if y % x == 0.\n","807":"Design a time-based key-value data structure that can store multiple values for the same key at different time stamps and retrieve the key's value at a certain timestamp.\nImplement the TimeMap class:\nTimeMap() Initializes the object of the data structure.\nvoid set(String key, String value, int timestamp) Stores the key key with the value value at the given time timestamp.\nString get(String key, int timestamp) Returns a value such that set was called previously, with timestamp_prev <= timestamp. If there are multiple such values, it returns the value associated with the largest timestamp_prev. If there are no values, it returns \"\".\n","808":"You are given an integer array nums and a positive integer k. You can choose any subsequence of the array and sum all of its elements together.\nWe define the K-Sum of the array as the kth largest subsequence sum that can be obtained (not necessarily distinct).\nReturn the K-Sum of the array.\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\nNote that the empty subsequence is considered to have a sum of 0.\n","809":"Given an integer array nums and an integer k, return the kth largest element in the array.\nNote that it is the kth largest element in the sorted order, not the kth distinct element.\nYou must solve it in O(n) time complexity.\n","810":"Given an integer numRows, return the first numRows of Pascal's triangle.\nIn Pascal's triangle, each number is the sum of the two numbers directly above it as shown:\n","811":"Given a binary string s and a positive integer n, return true if the binary representation of all the integers in the range [1, n] are substrings of s, or false otherwise.\nA substring is a contiguous sequence of characters within a string.\n","812":"A kingdom consists of a king, his children, his grandchildren, and so on. Every once in a while, someone in the family dies or a child is born.\nThe kingdom has a well-defined order of inheritance that consists of the king as the first member. Let's define the recursive function Successor(x, curOrder), which given a person x and the inheritance order so far, returns who should be the next person after x in the order of inheritance.\nSuccessor(x, curOrder):\n    if x has no children or all of x's children are in curOrder:\n        if x is the king return null\n        else return Successor(x's parent, curOrder)\n    else return x's oldest child who's not in curOrder\nFor example, assume we have a kingdom that consists of the king, his children Alice and Bob (Alice is older than Bob), and finally Alice's son Jack.\nIn the beginning, curOrder will be [\"king\"].\nCalling Successor(king, curOrder) will return Alice, so we append to curOrder to get [\"king\", \"Alice\"].\nCalling Successor(Alice, curOrder) will return Jack, so we append to curOrder to get [\"king\", \"Alice\", \"Jack\"].\nCalling Successor(Jack, curOrder) will return Bob, so we append to curOrder to get [\"king\", \"Alice\", \"Jack\", \"Bob\"].\nCalling Successor(Bob, curOrder) will return null. Thus the order of inheritance will be [\"king\", \"Alice\", \"Jack\", \"Bob\"].\nUsing the above function, we can always obtain a unique order of inheritance.\nImplement the ThroneInheritance class:\nThroneInheritance(string kingName) Initializes an object of the ThroneInheritance class. The name of the king is given as part of the constructor.\nvoid birth(string parentName, string childName) Indicates that parentName gave birth to childName.\nvoid death(string name) Indicates the death of name. The death of the person doesn't affect the Successor function nor the current inheritance order. You can treat it as just marking the person as dead.\nstring[] getInheritanceOrder() Returns a list representing the current order of inheritance excluding dead people.\n","813":"You are given two integer arrays persons and times. In an election, the ith vote was cast for persons[i] at time times[i].\nFor each query at a time t, find the person that was leading the election at time t. Votes cast at time t will count towards our query. In the case of a tie, the most recent vote (among tied candidates) wins.\nImplement the TopVotedCandidate class:\nTopVotedCandidate(int[] persons, int[] times) Initializes the object with the persons and times arrays.\nint q(int t) Returns the number of the person that was leading the election at time t according to the mentioned rules.\n","814":"Given a function fn, return a memoized version of that function.\nA memoized function is a function that will never be called twice with the same inputs. Instead it will return a cached value.\nYou can assume there are 3 possible input functions: sum, fib, and factorial.\nsum accepts two integers a and b and returns a + b.\nfib accepts a single integer n and returns 1 if n <= 1 or fib(n - 1) + fib(n - 2) otherwise.\nfactorial accepts a single integer n and returns 1 if n <= 1 or factorial(n - 1) * n otherwise.\n","815":"The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\nGiven two integers x and y, return the Hamming distance between them.\n","816":"Given an integer array nums and an integer k, return the number of non-empty subarrays that have a sum divisible by k.\nA subarray is a contiguous part of an array.\n","817":"Given an array arr of positive integers sorted in a strictly increasing order, and an integer k.\nReturn the kth positive integer that is missing from this array.\n","818":"Alice and Bob continue their games with piles of stones. There are several stones arranged in a row, and each stone has an associated value which is an integer given in the array stoneValue.\nAlice and Bob take turns, with Alice starting first. On each player's turn, that player can take 1, 2, or 3 stones from the first remaining stones in the row.\nThe score of each player is the sum of the values of the stones taken. The score of each player is 0 initially.\nThe objective of the game is to end with the highest score, and the winner is the player with the highest score and there could be a tie. The game continues until all the stones have been taken.\nAssume Alice and Bob play optimally.\nReturn \"Alice\" if Alice will win, \"Bob\" if Bob will win, or \"Tie\" if they will end the game with the same score.\n","819":"You are given a 0-indexed string array words, where words[i] consists of lowercase English letters.\nIn one operation, select any index i such that 0 < i < words.length and words[i - 1] and words[i] are anagrams, and delete words[i] from words. Keep performing this operation as long as you can select an index that satisfies the conditions.\nReturn words after performing all operations. It can be shown that selecting the indices for each operation in any arbitrary order will lead to the same result.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase using all the original letters exactly once. For example, \"dacb\" is an anagram of \"abdc\".\n","820":"A sequence is special if it consists of a positive number of 0s, followed by a positive number of 1s, then a positive number of 2s.\nFor example, [0,1,2] and [0,0,1,1,1,2] are special.\nIn contrast, [2,1,0], [1], and [0,1,2,0] are not special.\nGiven an array nums (consisting of only integers 0, 1, and 2), return the number of different subsequences that are special. Since the answer may be very large, return it modulo 109 + 7.\nA subsequence of an array is a sequence that can be derived from the array by deleting some or no elements without changing the order of the remaining elements. Two subsequences are different if the set of indices chosen are different.\n","821":"You are given a 0-indexed array nums consisting of positive integers, representing targets on a number line. You are also given an integer space.\nYou have a machine which can destroy targets. Seeding the machine with some nums[i] allows it to destroy all targets with values that can be represented as nums[i] + c * space, where c is any non-negative integer. You want to destroy the maximum number of targets in nums.\nReturn the minimum value of nums[i] you can seed the machine with to destroy the maximum number of targets.\n","822":"Given two integers n and k, return an array of all the integers of length n where the difference between every two consecutive digits is k. You may return the answer in any order.\nNote that the integers should not have leading zeros. Integers as 02 and 043 are not allowed.\n","823":"Given a list of accounts where each element accounts[i] is a list of strings, where the first element accounts[i][0] is a name, and the rest of the elements are emails representing emails of the account.\nNow, we would like to merge these accounts. Two accounts definitely belong to the same person if there is some common email to both accounts. Note that even if two accounts have the same name, they may belong to different people as people could have the same name. A person can have any number of accounts initially, but all of their accounts definitely have the same name.\nAfter merging the accounts, return the accounts in the following format: the first element of each account is the name, and the rest of the elements are emails in sorted order. The accounts themselves can be returned in any order.\n","824":"In a special ranking system, each voter gives a rank from highest to lowest to all teams participating in the competition.\nThe ordering of teams is decided by who received the most position-one votes. If two or more teams tie in the first position, we consider the second position to resolve the conflict, if they tie again, we continue this process until the ties are resolved. If two or more teams are still tied after considering all positions, we rank them alphabetically based on their team letter.\nYou are given an array of strings votes which is the votes of all voters in the ranking systems. Sort all teams according to the ranking system described above.\nReturn a string of all teams sorted by the ranking system.\n","825":"There are two types of persons:\nThe good person: The person who always tells the truth.\nThe bad person: The person who might tell the truth and might lie.\nYou are given a 0-indexed 2D integer array statements of size n x n that represents the statements made by n people about each other. More specifically, statements[i][j] could be one of the following:\n0 which represents a statement made by person i that person j is a bad person.\n1 which represents a statement made by person i that person j is a good person.\n2 represents that no statement is made by person i about person j.\nAdditionally, no person ever makes a statement about themselves. Formally, we have that statements[i][i] = 2 for all 0 <= i < n.\nReturn the maximum number of people who can be good based on the statements made by the n people.\n","826":"You are given an m x n matrix board, representing the current state of a crossword puzzle. The crossword contains lowercase English letters (from solved words), ' ' to represent any empty cells, and '#' to represent any blocked cells.\nA word can be placed horizontally (left to right or right to left) or vertically (top to bottom or bottom to top) in the board if:\nIt does not occupy a cell containing the character '#'.\nThe cell each letter is placed in must either be ' ' (empty) or match the letter already on the board.\nThere must not be any empty cells ' ' or other lowercase letters directly left or right of the word if the word was placed horizontally.\nThere must not be any empty cells ' ' or other lowercase letters directly above or below the word if the word was placed vertically.\nGiven a string word, return true if word can be placed in board, or false otherwise.\n","827":"You are given an integer n denoting the number of nodes of a weighted directed graph. The nodes are numbered from 0 to n - 1.\nYou are also given a 2D integer array edges where edges[i] = [fromi, toi, weighti] denotes that there exists a directed edge from fromi to toi with weight weighti.\nLastly, you are given three distinct integers src1, src2, and dest denoting three distinct nodes of the graph.\nReturn the minimum weight of a subgraph of the graph such that it is possible to reach dest from both src1 and src2 via a set of edges of this subgraph. In case such a subgraph does not exist, return -1.\nA subgraph is a graph whose vertices and edges are subsets of the original graph. The weight of a subgraph is the sum of weights of its constituent edges.\n","828":"Given an n x n binary grid, in one step you can choose two adjacent rows of the grid and swap them.\nA grid is said to be valid if all the cells above the main diagonal are zeros.\nReturn the minimum number of steps needed to make the grid valid, or -1 if the grid cannot be valid.\nThe main diagonal of a grid is the diagonal that starts at cell (1, 1) and ends at cell (n, n).\n","829":"Write a class that allows getting and setting key-value pairs, however a time until expiration is associated with each key.\nThe class has three public methods:\nset(key, value, duration): accepts an integer key, an integer value, and a duration in milliseconds. Once the duration has elapsed, the key should be inaccessible. The method should return true if the same un-expired key already exists and false otherwise. Both the value and duration should be overwritten if the key already exists.\nget(key): if an un-expired key exists, it should return the associated value. Otherwise it should return -1.\ncount(): returns the count of un-expired keys.\n","830":"You are given an array nums of size n consisting of distinct integers from 1 to n and a positive integer k.\nReturn the number of non-empty subarrays in nums that have a median equal to k.\nNote:\nThe median of an array is the middle element after sorting the array in ascending order. If the array is of even length, the median is the left middle element.\nFor example, the median of [2,3,1,4] is 2, and the median of [8,4,3,5,1] is 4.\nA subarray is a contiguous part of an array.\n","831":"Let's play the minesweeper game (Wikipedia, online game)!\nYou are given an m x n char matrix board representing the game board where:\n'M' represents an unrevealed mine,\n'E' represents an unrevealed empty square,\n'B' represents a revealed blank square that has no adjacent mines (i.e., above, below, left, right, and all 4 diagonals),\ndigit ('1' to '8') represents how many mines are adjacent to this revealed square, and\n'X' represents a revealed mine.\nYou are also given an integer array click where click = [clickr, clickc] represents the next click position among all the unrevealed squares ('M' or 'E').\nReturn the board after revealing this position according to the following rules:\nIf a mine 'M' is revealed, then the game is over. You should change it to 'X'.\nIf an empty square 'E' with no adjacent mines is revealed, then change it to a revealed blank 'B' and all of its adjacent unrevealed squares should be revealed recursively.\nIf an empty square 'E' with at least one adjacent mine is revealed, then change it to a digit ('1' to '8') representing the number of adjacent mines.\nReturn the board when no more squares will be revealed.\n","832":"You are given an integer array nums and an integer k. Find the maximum subarray sum of all the subarrays of nums that meet the following conditions:\nThe length of the subarray is k, and\nAll the elements of the subarray are distinct.\nReturn the maximum subarray sum of all the subarrays that meet the conditions. If no subarray meets the conditions, return 0.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","833":"You are given the head of a linked list, which contains a series of integers separated by 0's. The beginning and end of the linked list will have Node.val == 0.\nFor every two consecutive 0's, merge all the nodes lying in between them into a single node whose value is the sum of all the merged nodes. The modified list should not contain any 0's.\nReturn the head of the modified linked list.\n","834":"The numeric value of a lowercase character is defined as its position (1-indexed) in the alphabet, so the numeric value of a is 1, the numeric value of b is 2, the numeric value of c is 3, and so on.\nThe numeric value of a string consisting of lowercase characters is defined as the sum of its characters' numeric values. For example, the numeric value of the string \"abe\" is equal to 1 + 2 + 5 = 8.\nYou are given two integers n and k. Return the lexicographically smallest string with length equal to n and numeric value equal to k.\nNote that a string x is lexicographically smaller than string y if x comes before y in dictionary order, that is, either x is a prefix of y, or if i is the first position such that x[i] != y[i], then x[i] comes before y[i] in alphabetic order.\n","835":"You are given a 0-indexed integer array nums of length n.\nnums contains a valid split at index i if the following are true:\nThe sum of the first i + 1 elements is greater than or equal to the sum of the last n - i - 1 elements.\nThere is at least one element to the right of i. That is, 0 <= i < n - 1.\nReturn the number of valid splits in nums.\n","836":"Given an integer array nums that may contain duplicates, return all possible\nsubsets\n(the power set).\nThe solution set must not contain duplicate subsets. Return the solution in any order.\n","837":"Given an integer array arr, return the number of distinct bitwise ORs of all the non-empty subarrays of arr.\nThe bitwise OR of a subarray is the bitwise OR of each integer in the subarray. The bitwise OR of a subarray of one integer is that integer.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","838":"Your car starts at position 0 and speed +1 on an infinite number line. Your car can go into negative positions. Your car drives automatically according to a sequence of instructions 'A' (accelerate) and 'R' (reverse):\nWhen you get an instruction 'A', your car does the following:\nposition += speed\nspeed *= 2\nWhen you get an instruction 'R', your car does the following:\nIf your speed is positive then speed = -1\notherwise speed = 1\nYour position stays the same.\nFor example, after commands \"AAR\", your car goes to positions 0 --> 1 --> 3 --> 3, and your speed goes to 1 --> 2 --> 4 --> -1.\nGiven a target position target, return the length of the shortest sequence of instructions to get there.\n","839":"A sentence consists of lowercase letters ('a' to 'z'), digits ('0' to '9'), hyphens ('-'), punctuation marks ('!', '.', and ','), and spaces (' ') only. Each sentence can be broken down into one or more tokens separated by one or more spaces ' '.\nA token is a valid word if all three of the following are true:\nIt only contains lowercase letters, hyphens, and\/or punctuation (no digits).\nThere is at most one hyphen '-'. If present, it must be surrounded by lowercase characters (\"a-b\" is valid, but \"-ab\" and \"ab-\" are not valid).\nThere is at most one punctuation mark. If present, it must be at the end of the token (\"ab,\", \"cd!\", and \".\" are valid, but \"a!b\" and \"c.,\" are not valid).\n","840":"You are given an integer array nums. You want to maximize the number of points you get by performing the following operation any number of times:\nPick any nums[i] and delete it to earn nums[i] points. Afterwards, you must delete every element equal to nums[i] - 1 and every element equal to nums[i] + 1.\nReturn the maximum number of points you can earn by applying the above operation some number of times.\n","841":"Given an array arr and a chunk size size, return a chunked array. A chunked array contains the original elements in arr, but consists of subarrays each of length size. The length of the last subarray may be less than size if arr.length is not evenly divisible by size.\nYou may assume the array is the output of JSON.parse. In other words, it is valid JSON.\nPlease solve it without using lodash's _.chunk function.\n","842":"Given an integer array nums, design an algorithm to randomly shuffle the array. All permutations of the array should be equally likely as a result of the shuffling.\nImplement the Solution class:\nSolution(int[] nums) Initializes the object with the integer array nums.\nint[] reset() Resets the array to its original configuration and returns it.\nint[] shuffle() Returns a random shuffling of the array.\n","843":"You are given an integer array nums of length n, and an integer array queries of length m.\nReturn an array answer of length m where answer[i] is the maximum size of a subsequence that you can take from nums such that the sum of its elements is less than or equal to queries[i].\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n","844":"A parentheses string is a non-empty string consisting only of '(' and ')'. It is valid if any of the following conditions is true:\nIt is ().\nIt can be written as AB (A concatenated with B), where A and B are valid parentheses strings.\nIt can be written as (A), where A is a valid parentheses string.\nYou are given an m x n matrix of parentheses grid. A valid parentheses string path in the grid is a path satisfying all of the following conditions:\nThe path starts from the upper left cell (0, 0).\nThe path ends at the bottom-right cell (m - 1, n - 1).\nThe path only ever moves down or right.\nThe resulting parentheses string formed by the path is valid.\nReturn true if there exists a valid parentheses string path in the grid. Otherwise, return false.\n","845":"Given the root of a binary tree and an integer targetSum, return true if the tree has a root-to-leaf path such that adding up all the values along the path equals targetSum.\nA leaf is a node with no children.\n","846":"You have n flower seeds. Every seed must be planted first before it can begin to grow, then bloom. Planting a seed takes time and so does the growth of a seed. You are given two 0-indexed integer arrays plantTime and growTime, of length n each:\nplantTime[i] is the number of full days it takes you to plant the ith seed. Every day, you can work on planting exactly one seed. You do not have to work on planting the same seed on consecutive days, but the planting of a seed is not complete until you have worked plantTime[i] days on planting it in total.\ngrowTime[i] is the number of full days it takes the ith seed to grow after being completely planted. After the last day of its growth, the flower blooms and stays bloomed forever.\nFrom the beginning of day 0, you can plant the seeds in any order.\nReturn the earliest possible day where all seeds are blooming.\n","847":"Given a string s, reverse the string according to the following rules:\nAll the characters that are not English letters remain in the same position.\nAll the English letters (lowercase or uppercase) should be reversed.\nReturn s after reversing it.\n","848":"You are given a string s containing one or more words. Every consecutive pair of words is separated by a single space ' '.\nA string t is an anagram of string s if the ith word of t is a permutation of the ith word of s.\nFor example, \"acb dfe\" is an anagram of \"abc def\", but \"def cab\" and \"adc bef\" are not.\nReturn the number of distinct anagrams of s. Since the answer may be very large, return it modulo 109 + 7.\n","849":"Given two string arrays word1 and word2, return true if the two arrays represent the same string, and false otherwise.\nA string is represented by an array if the array elements concatenated in order forms the string.\n","850":"You are given an integer array nums and an integer threshold.\nFind any subarray of nums of length k such that every element in the subarray is greater than threshold \/ k.\nReturn the size of any such subarray. If there is no such subarray, return -1.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","851":"There is an authentication system that works with authentication tokens. For each session, the user will receive a new authentication token that will expire timeToLive seconds after the currentTime. If the token is renewed, the expiry time will be extended to expire timeToLive seconds after the (potentially different) currentTime.\nImplement the AuthenticationManager class:\nAuthenticationManager(int timeToLive) constructs the AuthenticationManager and sets the timeToLive.\ngenerate(string tokenId, int currentTime) generates a new token with the given tokenId at the given currentTime in seconds.\nrenew(string tokenId, int currentTime) renews the unexpired token with the given tokenId at the given currentTime in seconds. If there are no unexpired tokens with the given tokenId, the request is ignored, and nothing happens.\ncountUnexpiredTokens(int currentTime) returns the number of unexpired tokens at the given currentTime.\nNote that if a token expires at time t, and another action happens on time t (renew or countUnexpiredTokens), the expiration takes place before the other actions.\n","852":"Given a 2D grid consists of 0s (land) and 1s (water).  An island is a maximal 4-directionally connected group of 0s and a closed island is an island totally (all left, top, right, bottom) surrounded by 1s.\nReturn the number of closed islands.\n","853":"You are playing the following Nim Game with your friend:\nInitially, there is a heap of stones on the table.\nYou and your friend will alternate taking turns, and you go first.\nOn each turn, the person whose turn it is will remove 1 to 3 stones from the heap.\nThe one who removes the last stone is the winner.\nGiven n, the number of stones in the heap, return true if you can win the game assuming both you and your friend play optimally, otherwise return false.\n","854":"Given the array nums, obtain a subsequence of the array whose sum of elements is strictly greater than the sum of the non included elements in such subsequence. \nIf there are multiple solutions, return the subsequence with minimum size and if there still exist multiple solutions, return the subsequence with the maximum total sum of all its elements. A subsequence of an array can be obtained by erasing some (possibly zero) elements from the array. \nNote that the solution with the given constraints is guaranteed to be unique. Also return the answer sorted in non-increasing order.\n","855":"Assume you are an awesome parent and want to give your children some cookies. But, you should give each child at most one cookie.\nEach child i has a greed factor g[i], which is the minimum size of a cookie that the child will be content with; and each cookie j has a size s[j]. If s[j] >= g[i], we can assign the cookie j to the child i, and the child i will be content. Your goal is to maximize the number of your content children and output the maximum number.\n","856":"You are given two integer arrays nums1 and nums2. You are tasked to implement a data structure that supports queries of two types:\nAdd a positive integer to an element of a given index in the array nums2.\nCount the number of pairs (i, j) such that nums1[i] + nums2[j] equals a given value (0 <= i < nums1.length and 0 <= j < nums2.length).\nImplement the FindSumPairs class:\nFindSumPairs(int[] nums1, int[] nums2) Initializes the FindSumPairs object with two integer arrays nums1 and nums2.\nvoid add(int index, int val) Adds val to nums2[index], i.e., apply nums2[index] += val.\nint count(int tot) Returns the number of pairs (i, j) such that nums1[i] + nums2[j] == tot.\n","857":"The Fibonacci numbers, commonly denoted F(n) form a sequence, called the Fibonacci sequence, such that each number is the sum of the two preceding ones, starting from 0 and 1. That is,\nF(0) = 0, F(1) = 1\nF(n) = F(n - 1) + F(n - 2), for n > 1.\nGiven n, calculate F(n).\n","858":"Given an integer array nums and an integer k, split nums into k non-empty subarrays such that the largest sum of any subarray is minimized.\nReturn the minimized largest sum of the split.\nA subarray is a contiguous part of the array.\n","859":"Given the root of a binary tree, construct a 0-indexed m x n string matrix res that represents a formatted layout of the tree. The formatted layout matrix should be constructed using the following rules:\nThe height of the tree is height and the number of rows m should be equal to height + 1.\nThe number of columns n should be equal to 2height+1 - 1.\nPlace the root node in the middle of the top row (more formally, at location res[0][(n-1)\/2]).\nFor each node that has been placed in the matrix at position res[r][c], place its left child at res[r+1][c-2height-r-1] and its right child at res[r+1][c+2height-r-1].\nContinue this process until all the nodes in the tree have been placed.\nAny empty cells should contain the empty string \"\".\nReturn the constructed matrix res.\n","860":"Given an integer n, break it into the sum of k positive integers, where k >= 2, and maximize the product of those integers.\nReturn the maximum product you can get.\n","861":"You are given a 0-indexed integer array nums. For each index i (1 <= i <= nums.length - 2) the beauty of nums[i] equals:\n2, if nums[j] < nums[i] < nums[k], for all 0 <= j < i and for all i < k <= nums.length - 1.\n1, if nums[i - 1] < nums[i] < nums[i + 1], and the previous condition is not satisfied.\n0, if none of the previous conditions holds.\nReturn the sum of beauty of all nums[i] where 1 <= i <= nums.length - 2.\n","862":"SQL Schema\nTable: Followers\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| user_id     | int  |\n| follower_id | int  |\n+-------------+------+\n(user_id, follower_id) is the primary key for this table.\nThis table contains the IDs of a user and a follower in a social media app where the follower follows the user.\n  Write an SQL query that will, for each user, return the number of followers.\nReturn the result table ordered by user_id in ascending order.\nThe query result format is in the following example.\n","863":"On day 1, one person discovers a secret.\nYou are given an integer delay, which means that each person will share the secret with a new person every day, starting from delay days after discovering the secret. You are also given an integer forget, which means that each person will forget the secret forget days after discovering it. A person cannot share the secret on the same day they forgot it, or on any day afterwards.\nGiven an integer n, return the number of people who know the secret at the end of day n. Since the answer may be very large, return it modulo 109 + 7.\n","864":"There are n kids with candies. You are given an integer array candies, where each candies[i] represents the number of candies the ith kid has, and an integer extraCandies, denoting the number of extra candies that you have.\nReturn a boolean array result of length n, where result[i] is true if, after giving the ith kid all the extraCandies, they will have the greatest number of candies among all the kids, or false otherwise.\nNote that multiple kids can have the greatest number of candies.\n","865":"A complete binary tree is a binary tree in which every level, except possibly the last, is completely filled, and all nodes are as far left as possible.\nDesign an algorithm to insert a new node to a complete binary tree keeping it complete after the insertion.\nImplement the CBTInserter class:\nCBTInserter(TreeNode root) Initializes the data structure with the root of the complete binary tree.\nint insert(int v) Inserts a TreeNode into the tree with value Node.val == val so that the tree remains complete, and returns the value of the parent of the inserted TreeNode.\nTreeNode get_root() Returns the root node of the tree.\n","866":"Given two strings first and second, consider occurrences in some text of the form \"first second third\", where second comes immediately after first, and third comes immediately after second.\nReturn an array of all the words third for each occurrence of \"first second third\".\n","867":"Serialization is converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.\nDesign an algorithm to serialize and deserialize a binary search tree. There is no restriction on how your serialization\/deserialization algorithm should work. You need to ensure that a binary search tree can be serialized to a string, and this string can be deserialized to the original tree structure.\nThe encoded string should be as compact as possible.\n","868":"A valid number can be split up into these components (in order):\nA decimal number or an integer.\n(Optional) An 'e' or 'E', followed by an integer.\nA decimal number can be split up into these components (in order):\n(Optional) A sign character (either '+' or '-').\nOne of the following formats:\nOne or more digits, followed by a dot '.'.\nOne or more digits, followed by a dot '.', followed by one or more digits.\nA dot '.', followed by one or more digits.\nAn integer can be split up into these components (in order):\n(Optional) A sign character (either '+' or '-').\nOne or more digits.\nFor example, all the following are valid numbers: [\"2\", \"0089\", \"-0.1\", \"+3.14\", \"4.\", \"-.9\", \"2e10\", \"-90E3\", \"3e+7\", \"+6e-1\", \"53.5e93\", \"-123.456e789\"], while the following are not valid numbers: [\"abc\", \"1a\", \"1e\", \"e3\", \"99e2.5\", \"--6\", \"-+3\", \"95a54e53\"].\nGiven a string s, return true if s is a valid number.\n","869":"Given an m x n integer matrix heightMap representing the height of each unit cell in a 2D elevation map, return the volume of water it can trap after raining.\n","870":"Given an array of integers arr, you are initially positioned at the first index of the array.\nIn one step you can jump from index i to index:\ni + 1 where: i + 1 < arr.length.\ni - 1 where: i - 1 >= 0.\nj where: arr[i] == arr[j] and i != j.\nReturn the minimum number of steps to reach the last index of the array.\nNotice that you can not jump outside of the array at any time.\n","871":"There is a test that has n types of questions. You are given an integer target and a 0-indexed 2D integer array types where types[i] = [counti, marksi] indicates that there are counti questions of the ith type, and each one of them is worth marksi points.\nReturn the number of ways you can earn exactly target points in the exam. Since the answer may be too large, return it modulo 109 + 7.\nNote that questions of the same type are indistinguishable.\nFor example, if there are 3 questions of the same type, then solving the 1st and 2nd questions is the same as solving the 1st and 3rd questions, or the 2nd and 3rd questions.\n","872":"Given the root of a binary tree, flatten the tree into a \"linked list\":\nThe \"linked list\" should use the same TreeNode class where the right child pointer points to the next node in the list and the left child pointer is always null.\nThe \"linked list\" should be in the same order as a pre-order traversal of the binary tree.\n","873":"SQL Schema\nTable: ActorDirector\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| actor_id    | int     |\n| director_id | int     |\n| timestamp   | int     |\n+-------------+---------+\ntimestamp is the primary key column for this table.\n  Write a SQL query for a report that provides the pairs (actor_id, director_id) where the actor has cooperated with the director at least three times.\nReturn the result table in any order.\nThe query result format is in the following example.\n","874":"You are given a positive integer primeFactors. You are asked to construct a positive integer n that satisfies the following conditions:\nThe number of prime factors of n (not necessarily distinct) is at most primeFactors.\nThe number of nice divisors of n is maximized. Note that a divisor of n is nice if it is divisible by every prime factor of n. For example, if n = 12, then its prime factors are [2,2,3], then 6 and 12 are nice divisors, while 3 and 4 are not.\nReturn the number of nice divisors of n. Since that number can be too large, return it modulo 109 + 7.\nNote that a prime number is a natural number greater than 1 that is not a product of two smaller natural numbers. The prime factors of a number n is a list of prime numbers such that their product equals n.\n","875":"A generic microwave supports cooking times for:\nat least 1 second.\nat most 99 minutes and 99 seconds.\nTo set the cooking time, you push at most four digits. The microwave normalizes what you push as four digits by prepending zeroes. It interprets the first two digits as the minutes and the last two digits as the seconds. It then adds them up as the cooking time. For example,\nYou push 9 5 4 (three digits). It is normalized as 0954 and interpreted as 9 minutes and 54 seconds.\nYou push 0 0 0 8 (four digits). It is interpreted as 0 minutes and 8 seconds.\nYou push 8 0 9 0. It is interpreted as 80 minutes and 90 seconds.\nYou push 8 1 3 0. It is interpreted as 81 minutes and 30 seconds.\nYou are given integers startAt, moveCost, pushCost, and targetSeconds. Initially, your finger is on the digit startAt. Moving the finger above any specific digit costs moveCost units of fatigue. Pushing the digit below the finger once costs pushCost units of fatigue.\nThere can be multiple ways to set the microwave to cook for targetSeconds seconds but you are interested in the way with the minimum cost.\nReturn the minimum cost to set targetSeconds seconds of cooking time.\nRemember that one minute consists of 60 seconds.\n","876":"Design an algorithm that collects daily price quotes for some stock and returns the span of that stock's price for the current day.\nThe span of the stock's price in one day is the maximum number of consecutive days (starting from that day and going backward) for which the stock price was less than or equal to the price of that day.\nFor example, if the prices of the stock in the last four days is [7,2,1,2] and the price of the stock today is 2, then the span of today is 4 because starting from today, the price of the stock was less than or equal 2 for 4 consecutive days.\nAlso, if the prices of the stock in the last four days is [7,34,1,2] and the price of the stock today is 8, then the span of today is 3 because starting from today, the price of the stock was less than or equal 8 for 3 consecutive days.\nImplement the StockSpanner class:\nStockSpanner() Initializes the object of the class.\nint next(int price) Returns the span of the stock's price given that today's price is price.\n","877":"There are n workers. You are given two integer arrays quality and wage where quality[i] is the quality of the ith worker and wage[i] is the minimum wage expectation for the ith worker.\nWe want to hire exactly k workers to form a paid group. To hire a group of k workers, we must pay them according to the following rules:\nEvery worker in the paid group should be paid in the ratio of their quality compared to other workers in the paid group.\nEvery worker in the paid group must be paid at least their minimum wage expectation.\nGiven the integer k, return the least amount of money needed to form a paid group satisfying the above conditions. Answers within 10-5 of the actual answer will be accepted.\n","878":"You are given two strings of the same length s and t. In one step you can choose any character of t and replace it with another character.\nReturn the minimum number of steps to make t an anagram of s.\nAn Anagram of a string is a string that contains the same characters with a different (or the same) ordering.\n","879":"Given an m x n binary matrix mat, return the number of submatrices that have all ones.\n","880":"You are given an array of non-negative integers nums and an integer k. In one operation, you may choose any element from nums and increment it by 1.\nReturn the maximum product of nums after at most k operations. Since the answer may be very large, return it modulo 109 + 7. Note that you should maximize the product before taking the modulo. \n","881":"You are given an integer array score of size n, where score[i] is the score of the ith athlete in a competition. All the scores are guaranteed to be unique.\nThe athletes are placed based on their scores, where the 1st place athlete has the highest score, the 2nd place athlete has the 2nd highest score, and so on. The placement of each athlete determines their rank:\nThe 1st place athlete's rank is \"Gold Medal\".\nThe 2nd place athlete's rank is \"Silver Medal\".\nThe 3rd place athlete's rank is \"Bronze Medal\".\nFor the 4th place to the nth place athlete, their rank is their placement number (i.e., the xth place athlete's rank is \"x\").\nReturn an array answer of size n where answer[i] is the rank of the ith athlete.\n","882":"You are given a 0-indexed string text and another 0-indexed string pattern of length 2, both of which consist of only lowercase English letters.\nYou can add either pattern[0] or pattern[1] anywhere in text exactly once. Note that the character can be added even at the beginning or at the end of text.\nReturn the maximum number of times pattern can occur as a subsequence of the modified text.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n","883":"Given an integer n, return true if n has exactly three positive divisors. Otherwise, return false.\nAn integer m is a divisor of n if there exists an integer k such that n = k * m.\n","884":"Given an array of integers nums and an integer threshold, we will choose a positive integer divisor, divide all the array by it, and sum the division's result. Find the smallest divisor such that the result mentioned above is less than or equal to threshold.\nEach result of the division is rounded to the nearest integer greater than or equal to that element. (For example: 7\/3 = 3 and 10\/2 = 5).\nThe test cases are generated so that there will be an answer.\n","885":"Given an integer n, count the total number of digit 1 appearing in all non-negative integers less than or equal to n.\n","886":"You are given an m x n binary matrix matrix.\nYou can choose any number of columns in the matrix and flip every cell in that column (i.e., Change the value of the cell from 0 to 1 or vice versa).\nReturn the maximum number of rows that have all values equal after some number of flips.\n","887":"SQL Schema\nTable: Product\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| product_id   | int     |\n| product_name | varchar |\n| unit_price   | int     |\n+--------------+---------+\nproduct_id is the primary key of this table.\nEach row of this table indicates the name and the price of each product.\nTable: Sales\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| seller_id   | int     |\n| product_id  | int     |\n| buyer_id    | int     |\n| sale_date   | date    |\n| quantity    | int     |\n| price       | int     |\n+-------------+---------+\nThis table has no primary key, it can have repeated rows.\nproduct_id is a foreign key to the Product table.\nEach row of this table contains some information about one sale.\n  Write an SQL query that reports the products that were only sold in the first quarter of 2019. That is, between 2019-01-01 and 2019-03-31 inclusive.\nReturn the result table in any order.\nThe query result format is in the following example.\n","888":"You are given the root of a binary tree where each node has a value in the range [0, 25] representing the letters 'a' to 'z'.\nReturn the lexicographically smallest string that starts at a leaf of this tree and ends at the root.\nAs a reminder, any shorter prefix of a string is lexicographically smaller.\nFor example, \"ab\" is lexicographically smaller than \"aba\".\nA leaf of a node is a node that has no children.\n","889":"You are implementing a program to use as your calendar. We can add a new event if adding the event will not cause a double booking.\nA double booking happens when two events have some non-empty intersection (i.e., some moment is common to both events.).\nThe event can be represented as a pair of integers start and end that represents a booking on the half-open interval [start, end), the range of real numbers x such that start <= x < end.\nImplement the MyCalendar class:\nMyCalendar() Initializes the calendar object.\nboolean book(int start, int end) Returns true if the event can be added to the calendar successfully without causing a double booking. Otherwise, return false and do not add the event to the calendar.\n","890":"You are given an integer array nums and an integer k. Append k unique positive integers that do not appear in nums to nums such that the resulting total sum is minimum.\nReturn the sum of the k integers appended to nums.\n","891":"In the \"100 game\" two players take turns adding, to a running total, any integer from 1 to 10. The player who first causes the running total to reach or exceed 100 wins.\nWhat if we change the game so that players cannot re-use integers?\nFor example, two players might take turns drawing from a common pool of numbers from 1 to 15 without replacement until they reach a total >= 100.\nGiven two integers maxChoosableInteger and desiredTotal, return true if the first player to move can force a win, otherwise, return false. Assume both players play optimally.\n","892":"Given an array of integers preorder, which represents the preorder traversal of a BST (i.e., binary search tree), construct the tree and return its root.\nIt is guaranteed that there is always possible to find a binary search tree with the given requirements for the given test cases.\nA binary search tree is a binary tree where for every node, any descendant of Node.left has a value strictly less than Node.val, and any descendant of Node.right has a value strictly greater than Node.val.\nA preorder traversal of a binary tree displays the value of the node first, then traverses Node.left, then traverses Node.right.\n","893":"You are given a 0-indexed array nums of length n.\nThe distinct difference array of nums is an array diff of length n such that diff[i] is equal to the number of distinct elements in the suffix nums[i + 1, ..., n - 1] subtracted from the number of distinct elements in the prefix nums[0, ..., i].\nReturn the distinct difference array of nums.\nNote that nums[i, ..., j] denotes the subarray of nums starting at index i and ending at index j inclusive. Particularly, if i > j then nums[i, ..., j] denotes an empty subarray.\n","894":"You are given a string s representing an attendance record for a student where each character signifies whether the student was absent, late, or present on that day. The record only contains the following three characters:\n'A': Absent.\n'L': Late.\n'P': Present.\nThe student is eligible for an attendance award if they meet both of the following criteria:\nThe student was absent ('A') for strictly fewer than 2 days total.\nThe student was never late ('L') for 3 or more consecutive days.\nReturn true if the student is eligible for an attendance award, or false otherwise.\n","895":"On an 8 x 8 chessboard, there is exactly one white rook 'R' and some number of white bishops 'B', black pawns 'p', and empty squares '.'.\nWhen the rook moves, it chooses one of four cardinal directions (north, east, south, or west), then moves in that direction until it chooses to stop, reaches the edge of the board, captures a black pawn, or is blocked by a white bishop. A rook is considered attacking a pawn if the rook can capture the pawn on the rook's turn. The number of available captures for the white rook is the number of pawns that the rook is attacking.\nReturn the number of available captures for the white rook.\n","896":"There are n people that are split into some unknown number of groups. Each person is labeled with a unique ID from 0 to n - 1.\nYou are given an integer array groupSizes, where groupSizes[i] is the size of the group that person i is in. For example, if groupSizes[1] = 3, then person 1 must be in a group of size 3.\nReturn a list of groups such that each person i is in a group of size groupSizes[i].\nEach person should appear in exactly one group, and every person must be in a group. If there are multiple answers, return any of them. It is guaranteed that there will be at least one valid solution for the given input.\n","897":"There is a function signFunc(x) that returns:\n1 if x is positive.\n-1 if x is negative.\n0 if x is equal to 0.\nYou are given an integer array nums. Let product be the product of all values in the array nums.\nReturn signFunc(product).\n","898":"A Bitset is a data structure that compactly stores bits.\nImplement the Bitset class:\nBitset(int size) Initializes the Bitset with size bits, all of which are 0.\nvoid fix(int idx) Updates the value of the bit at the index idx to 1. If the value was already 1, no change occurs.\nvoid unfix(int idx) Updates the value of the bit at the index idx to 0. If the value was already 0, no change occurs.\nvoid flip() Flips the values of each bit in the Bitset. In other words, all bits with value 0 will now have value 1 and vice versa.\nboolean all() Checks if the value of each bit in the Bitset is 1. Returns true if it satisfies the condition, false otherwise.\nboolean one() Checks if there is at least one bit in the Bitset with value 1. Returns true if it satisfies the condition, false otherwise.\nint count() Returns the total number of bits in the Bitset which have value 1.\nString toString() Returns the current composition of the Bitset. Note that in the resultant string, the character at the ith index should coincide with the value at the ith bit of the Bitset.\n","899":"You are given the root of a binary tree containing digits from 0 to 9 only.\nEach root-to-leaf path in the tree represents a number.\nFor example, the root-to-leaf path 1 -> 2 -> 3 represents the number 123.\nReturn the total sum of all root-to-leaf numbers. Test cases are generated so that the answer will fit in a 32-bit integer.\nA leaf node is a node with no children.\n","900":"SQL Schema\nTable: Trips\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| id          | int      |\n| client_id   | int      |\n| driver_id   | int      |\n| city_id     | int      |\n| status      | enum     |\n| request_at  | date     |     \n+-------------+----------+\nid is the primary key for this table.\nThe table holds all taxi trips. Each trip has a unique id, while client_id and driver_id are foreign keys to the users_id at the Users table.\nStatus is an ENUM type of ('completed', 'cancelled_by_driver', 'cancelled_by_client').\n  Table: Users\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| users_id    | int      |\n| banned      | enum     |\n| role        | enum     |\n+-------------+----------+\nusers_id is the primary key for this table.\nThe table holds all users. Each user has a unique users_id, and role is an ENUM type of ('client', 'driver', 'partner').\nbanned is an ENUM type of ('Yes', 'No').\n  The cancellation rate is computed by dividing the number of canceled (by client or driver) requests with unbanned users by the total number of requests with unbanned users on that day.\nWrite a SQL query to find the cancellation rate of requests with unbanned users (both client and driver must not be banned) each day between \"2013-10-01\" and \"2013-10-03\". Round Cancellation Rate to two decimal points.\nReturn the result table in any order.\nThe query result format is in the following example.\n","901":"Given strings s1, s2, and s3, find whether s3 is formed by an interleaving of s1 and s2.\nAn interleaving of two strings s and t is a configuration where s and t are divided into n and m\nsubstrings\nrespectively, such that:\ns = s1 + s2 + ... + sn\nt = t1 + t2 + ... + tm\n|n - m| <= 1\nThe interleaving is s1 + t1 + s2 + t2 + s3 + t3 + ... or t1 + s1 + t2 + s2 + t3 + s3 + ...\nNote: a + b is the concatenation of strings a and b.\n","902":"Design an iterator that supports the peek operation on an existing iterator in addition to the hasNext and the next operations.\nImplement the PeekingIterator class:\nPeekingIterator(Iterator<int> nums) Initializes the object with the given integer iterator iterator.\nint next() Returns the next element in the array and moves the pointer to the next element.\nboolean hasNext() Returns true if there are still elements in the array.\nint peek() Returns the next element in the array without moving the pointer.\nNote: Each language may have a different implementation of the constructor and Iterator, but they all support the int next() and boolean hasNext() functions.\n","903":"There are some prizes on the X-axis. You are given an integer array prizePositions that is sorted in non-decreasing order, where prizePositions[i] is the position of the ith prize. There could be different prizes at the same position on the line. You are also given an integer k.\nYou are allowed to select two segments with integer endpoints. The length of each segment must be k. You will collect all prizes whose position falls within at least one of the two selected segments (including the endpoints of the segments). The two selected segments may intersect.\nFor example if k = 2, you can choose segments [1, 3] and [2, 4], and you will win any prize i that satisfies 1 <= prizePositions[i] <= 3 or 2 <= prizePositions[i] <= 4.\nReturn the maximum number of prizes you can win if you choose the two segments optimally.\n","904":"Given an undirected tree consisting of n vertices numbered from 1 to n. A frog starts jumping from vertex 1. In one second, the frog jumps from its current vertex to another unvisited vertex if they are directly connected. The frog can not jump back to a visited vertex. In case the frog can jump to several vertices, it jumps randomly to one of them with the same probability. Otherwise, when the frog can not jump to any unvisited vertex, it jumps forever on the same vertex.\nThe edges of the undirected tree are given in the array edges, where edges[i] = [ai, bi] means that exists an edge connecting the vertices ai and bi.\nReturn the probability that after t seconds the frog is on the vertex target. Answers within 10-5 of the actual answer will be accepted.\n","905":"Given the root of a Binary Search Tree (BST), return the minimum difference between the values of any two different nodes in the tree.\n","906":"Alice has n candies, where the ith candy is of type candyType[i]. Alice noticed that she started to gain weight, so she visited a doctor.\nThe doctor advised Alice to only eat n \/ 2 of the candies she has (n is always even). Alice likes her candies very much, and she wants to eat the maximum number of different types of candies while still following the doctor's advice.\nGiven the integer array candyType of length n, return the maximum number of different types of candies she can eat if she only eats n \/ 2 of them.\n","907":"There is a group of n members, and a list of various crimes they could commit. The ith crime generates a profit[i] and requires group[i] members to participate in it. If a member participates in one crime, that member can't participate in another crime.\nLet's call a profitable scheme any subset of these crimes that generates at least minProfit profit, and the total number of members participating in that subset of crimes is at most n.\nReturn the number of schemes that can be chosen. Since the answer may be very large, return it modulo 109 + 7.\n","908":"Given a singly linked list, return a random node's value from the linked list. Each node must have the same probability of being chosen.\nImplement the Solution class:\nSolution(ListNode head) Initializes the object with the head of the singly-linked list head.\nint getRandom() Chooses a node randomly from the list and returns its value. All the nodes of the list should be equally likely to be chosen.\n","909":"You are given an array of positive integers arr. Perform some operations (possibly none) on arr so that it satisfies these conditions:\nThe value of the first element in arr must be 1.\nThe absolute difference between any 2 adjacent elements must be less than or equal to 1. In other words, abs(arr[i] - arr[i - 1]) <= 1 for each i where 1 <= i < arr.length (0-indexed). abs(x) is the absolute value of x.\nThere are 2 types of operations that you can perform any number of times:\nDecrease the value of any element of arr to a smaller positive integer.\nRearrange the elements of arr to be in any order.\nReturn the maximum possible value of an element in arr after performing the operations to satisfy the conditions.\n","910":"Hercy wants to save money for his first car. He puts money in the Leetcode bank every day.\nHe starts by putting in $1 on Monday, the first day. Every day from Tuesday to Sunday, he will put in $1 more than the day before. On every subsequent Monday, he will put in $1 more than the previous Monday.\nGiven n, return the total amount of money he will have in the Leetcode bank at the end of the nth day.\n","911":"The score of an array is defined as the product of its sum and its length.\nFor example, the score of [1, 2, 3, 4, 5] is (1 + 2 + 3 + 4 + 5) * 5 = 75.\nGiven a positive integer array nums and an integer k, return the number of non-empty subarrays of nums whose score is strictly less than k.\nA subarray is a contiguous sequence of elements within an array.\n","912":"You are given a directed graph of n nodes numbered from 0 to n - 1, where each node has at most one outgoing edge.\nThe graph is represented with a given 0-indexed array edges of size n, indicating that there is a directed edge from node i to node edges[i]. If there is no outgoing edge from i, then edges[i] == -1.\nYou are also given two integers node1 and node2.\nReturn the index of the node that can be reached from both node1 and node2, such that the maximum between the distance from node1 to that node, and from node2 to that node is minimized. If there are multiple answers, return the node with the smallest index, and if no possible answer exists, return -1.\nNote that edges may contain cycles.\n","913":"A string s is nice if, for every letter of the alphabet that s contains, it appears both in uppercase and lowercase. For example, \"abABB\" is nice because 'A' and 'a' appear, and 'B' and 'b' appear. However, \"abA\" is not because 'b' appears, but 'B' does not.\nGiven a string s, return the longest substring of s that is nice. If there are multiple, return the substring of the earliest occurrence. If there are none, return an empty string.\n","914":"Given an integer array nums, return the number of triplets chosen from the array that can make triangles if we take them as side lengths of a triangle.\n","915":"You are given a positive integer n representing n cities numbered from 1 to n. You are also given a 2D array roads where roads[i] = [ai, bi, distancei] indicates that there is a bidirectional road between cities ai and bi with a distance equal to distancei. The cities graph is not necessarily connected.\nThe score of a path between two cities is defined as the minimum distance of a road in this path.\nReturn the minimum possible score of a path between cities 1 and n.\nNote:\nA path is a sequence of roads between two cities.\nIt is allowed for a path to contain the same road multiple times, and you can visit cities 1 and n multiple times along the path.\nThe test cases are generated such that there is at least one path between 1 and n.\n","916":"For a stream of integers, implement a data structure that checks if the last k integers parsed in the stream are equal to value.\nImplement the DataStream class:\nDataStream(int value, int k) Initializes the object with an empty integer stream and the two integers value and k.\nboolean consec(int num) Adds num to the stream of integers. Returns true if the last k integers are equal to value, and false otherwise. If there are less than k integers, the condition does not hold true, so returns false.\n","917":"Design a HashMap without using any built-in hash table libraries.\nImplement the MyHashMap class:\nMyHashMap() initializes the object with an empty map.\nvoid put(int key, int value) inserts a (key, value) pair into the HashMap. If the key already exists in the map, update the corresponding value.\nint get(int key) returns the value to which the specified key is mapped, or -1 if this map contains no mapping for the key.\nvoid remove(key) removes the key and its corresponding value if the map contains the mapping for the key.\n","918":"You are given an array of positive integers nums and want to erase a subarray containing unique elements. The score you get by erasing the subarray is equal to the sum of its elements.\nReturn the maximum score you can get by erasing exactly one subarray.\nAn array b is called to be a subarray of a if it forms a contiguous subsequence of a, that is, if it is equal to a[l],a[l+1],...,a[r] for some (l,r).\n","919":"SQL Schema\nTable: Seat\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| student     | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the name and the ID of a student.\nid is a continuous increment.\n  Write an SQL query to swap the seat id of every two consecutive students. If the number of students is odd, the id of the last student is not swapped.\nReturn the result table ordered by id in ascending order.\nThe query result format is in the following example.\n","920":"You are given two 0-indexed integer arrays nums1 and nums2, both of length n.\nYou can choose two integers left and right where 0 <= left <= right < n and swap the subarray nums1[left...right] with the subarray nums2[left...right].\nFor example, if nums1 = [1,2,3,4,5] and nums2 = [11,12,13,14,15] and you choose left = 1 and right = 2, nums1 becomes [1,12,13,4,5] and nums2 becomes [11,2,3,14,15].\nYou may choose to apply the mentioned operation once or not do anything.\nThe score of the arrays is the maximum of sum(nums1) and sum(nums2), where sum(arr) is the sum of all the elements in the array arr.\nReturn the maximum possible score.\nA subarray is a contiguous sequence of elements within an array. arr[left...right] denotes the subarray that contains the elements of nums between indices left and right (inclusive).\n","921":"Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.\n","922":"Given the root of a binary tree, determine if it is a complete binary tree.\nIn a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n","923":"SQL Schema\nTable Activities:\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| sell_date   | date    |\n| product     | varchar |\n+-------------+---------+\nThere is no primary key for this table, it may contain duplicates.\nEach row of this table contains the product name and the date it was sold in a market.\n  Write an SQL query to find for each date the number of different products sold and their names.\nThe sold products names for each date should be sorted lexicographically.\nReturn the result table ordered by sell_date.\nThe query result format is in the following example.\n","924":"We define the lcp matrix of any 0-indexed string word of n lowercase English letters as an n x n grid such that:\nlcp[i][j] is equal to the length of the longest common prefix between the substrings word[i,n-1] and word[j,n-1].\nGiven an n x n matrix lcp, return the alphabetically smallest string word that corresponds to lcp. If there is no such string, return an empty string.\nA string a is lexicographically smaller than a string b (of the same length) if in the first position where a and b differ, string a has a letter that appears earlier in the alphabet than the corresponding letter in b. For example, \"aabd\" is lexicographically smaller than \"aaca\" because the first position they differ is at the third letter, and 'b' comes before 'c'.\n","925":"There are n pieces arranged in a line, and each piece is colored either by 'A' or by 'B'. You are given a string colors of length n where colors[i] is the color of the ith piece.\nAlice and Bob are playing a game where they take alternating turns removing pieces from the line. In this game, Alice moves first.\nAlice is only allowed to remove a piece colored 'A' if both its neighbors are also colored 'A'. She is not allowed to remove pieces that are colored 'B'.\nBob is only allowed to remove a piece colored 'B' if both its neighbors are also colored 'B'. He is not allowed to remove pieces that are colored 'A'.\nAlice and Bob cannot remove pieces from the edge of the line.\nIf a player cannot make a move on their turn, that player loses and the other player wins.\nAssuming Alice and Bob play optimally, return true if Alice wins, or return false if Bob wins.\n","926":"SQL Schema\nTable: Users\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| name          | varchar |\n+---------------+---------+\nid is the primary key for this table.\nname is the name of the user.\n  Table: Rides\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| user_id       | int     |\n| distance      | int     |\n+---------------+---------+\nid is the primary key for this table.\nuser_id is the id of the user who traveled the distance \"distance\".\n  Write an SQL query to report the distance traveled by each user.\nReturn the result table ordered by travelled_distance in descending order, if two or more users traveled the same distance, order them by their name in ascending order.\nThe query result format is in the following example.\n","927":"You are given a 0-indexed string s and a 0-indexed integer array spaces that describes the indices in the original string where spaces will be added. Each space should be inserted before the character at the given index.\nFor example, given s = \"EnjoyYourCoffee\" and spaces = [5, 9], we place spaces before 'Y' and 'C', which are at indices 5 and 9 respectively. Thus, we obtain \"Enjoy Your Coffee\".\nReturn the modified string after the spaces have been added.\n","928":"You are given an array of strings ideas that represents a list of names to be used in the process of naming a company. The process of naming a company is as follows:\nChoose 2 distinct names from ideas, call them ideaA and ideaB.\nSwap the first letters of ideaA and ideaB with each other.\nIf both of the new names are not found in the original ideas, then the name ideaA ideaB (the concatenation of ideaA and ideaB, separated by a space) is a valid company name.\nOtherwise, it is not a valid name.\nReturn the number of distinct valid names for the company.\n","929":"SQL Schema\nTable: Users\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| account      | int     |\n| name         | varchar |\n+--------------+---------+\naccount is the primary key for this table.\nEach row of this table contains the account number of each user in the bank.\nThere will be no two users having the same name in the table.\n  Table: Transactions\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| trans_id      | int     |\n| account       | int     |\n| amount        | int     |\n| transacted_on | date    |\n+---------------+---------+\ntrans_id is the primary key for this table.\nEach row of this table contains all changes made to all accounts.\namount is positive if the user received money and negative if they transferred money.\nAll accounts start with a balance of 0.\n  Write an SQL query to report the name and balance of users with a balance higher than 10000. The balance of an account is equal to the sum of the amounts of all transactions involving that account.\nReturn the result table in any order.\nThe query result format is in the following example.\n","930":"Given an array of integers, return the maximum sum for a non-empty subarray (contiguous elements) with at most one element deletion. In other words, you want to choose a subarray and optionally delete one element from it so that there is still at least one element left and the sum of the remaining elements is maximum possible.\nNote that the subarray needs to be non-empty after deleting one element.\n","931":"Given a weighted undirected connected graph with n vertices numbered from 0 to n - 1, and an array edges where edges[i] = [ai, bi, weighti] represents a bidirectional and weighted edge between nodes ai and bi. A minimum spanning tree (MST) is a subset of the graph's edges that connects all vertices without cycles and with the minimum possible total edge weight.\nFind all the critical and pseudo-critical edges in the given graph's minimum spanning tree (MST). An MST edge whose deletion from the graph would cause the MST weight to increase is called a critical edge. On the other hand, a pseudo-critical edge is that which can appear in some MSTs but not all.\nNote that you can return the indices of the edges in any order.\n","932":"You are given an array items, where each items[i] = [typei, colori, namei] describes the type, color, and name of the ith item. You are also given a rule represented by two strings, ruleKey and ruleValue.\nThe ith item is said to match the rule if one of the following is true:\nruleKey == \"type\" and ruleValue == typei.\nruleKey == \"color\" and ruleValue == colori.\nruleKey == \"name\" and ruleValue == namei.\nReturn the number of items that match the given rule.\n","933":"Given two integers a and b, return the sum of the two integers without using the operators + and -.\n","934":"There is an undirected connected tree with n nodes labeled from 0 to n - 1 and n - 1 edges.\nYou are given the integer n and the array edges where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nReturn an array answer of length n where answer[i] is the sum of the distances between the ith node in the tree and all other nodes.\n","935":"A company is planning to interview 2n people. Given the array costs where costs[i] = [aCosti, bCosti], the cost of flying the ith person to city a is aCosti, and the cost of flying the ith person to city b is bCosti.\nReturn the minimum cost to fly every person to a city such that exactly n people arrive in each city.\n","936":"Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10-5 of the actual answer will be accepted.\n","937":"Given an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].\nReturn true if there is a 132 pattern in nums, otherwise, return false.\n","938":"Given a 2D grid of size m x n and an integer k. You need to shift the grid k times.\nIn one shift operation:\nElement at grid[i][j] moves to grid[i][j + 1].\nElement at grid[i][n - 1] moves to grid[i + 1][0].\nElement at grid[m - 1][n - 1] moves to grid[0][0].\nReturn the 2D grid after applying shift operation k times.\n","939":"You are given an undirected weighted graph of n nodes (0-indexed), represented by an edge list where edges[i] = [a, b] is an undirected edge connecting the nodes a and b with a probability of success of traversing that edge succProb[i].\nGiven two nodes start and end, find the path with the maximum probability of success to go from start to end and return its success probability.\nIf there is no path from start to end, return 0. Your answer will be accepted if it differs from the correct answer by at most 1e-5.\n","940":"Alice is throwing n darts on a very large wall. You are given an array darts where darts[i] = [xi, yi] is the position of the ith dart that Alice threw on the wall.\nBob knows the positions of the n darts on the wall. He wants to place a dartboard of radius r on the wall so that the maximum number of darts that Alice throws lies on the dartboard.\nGiven the integer r, return the maximum number of darts that can lie on the dartboard.\n","941":"Given the root of a binary tree, return the leftmost value in the last row of the tree.\n","942":"You are given a 0-indexed string s that you must perform k replacement operations on. The replacement operations are given as three 0-indexed parallel arrays, indices, sources, and targets, all of length k.\nTo complete the ith replacement operation:\nCheck if the substring sources[i] occurs at index indices[i] in the original string s.\nIf it does not occur, do nothing.\nOtherwise if it does occur, replace that substring with targets[i].\nFor example, if s = \"abcd\", indices[i] = 0, sources[i] = \"ab\", and targets[i] = \"eee\", then the result of this replacement will be \"eeecd\".\nAll replacement operations must occur simultaneously, meaning the replacement operations should not affect the indexing of each other. The testcases will be generated such that the replacements will not overlap.\nFor example, a testcase with s = \"abc\", indices = [0, 1], and sources = [\"ab\",\"bc\"] will not be generated because the \"ab\" and \"bc\" replacements overlap.\nReturn the resulting string after performing all replacement operations on s.\nA substring is a contiguous sequence of characters in a string.\n","943":"You are given a 0-indexed m x n integer matrix grid. Your initial position is at the top-left cell (0, 0).\nStarting from the cell (i, j), you can move to one of the following cells:\nCells (i, k) with j < k <= grid[i][j] + j (rightward movement), or\nCells (k, j) with i < k <= grid[i][j] + i (downward movement).\nReturn the minimum number of cells you need to visit to reach the bottom-right cell (m - 1, n - 1). If there is no valid path, return -1.\n","944":"You are given an integer array nums. A subsequence of nums is called a square streak if:\nThe length of the subsequence is at least 2, and\nafter sorting the subsequence, each element (except the first element) is the square of the previous number.\nReturn the length of the longest square streak in nums, or return -1 if there is no square streak.\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n","945":"An integer x is a good if after rotating each digit individually by 180 degrees, we get a valid number that is different from x. Each digit must be rotated - we cannot choose to leave it alone.\nA number is valid if each digit remains a digit after rotation. For example:\n0, 1, and 8 rotate to themselves,\n2 and 5 rotate to each other (in this case they are rotated in a different direction, in other words, 2 or 5 gets mirrored),\n6 and 9 rotate to each other, and\nthe rest of the numbers do not rotate to any other number and become invalid.\nGiven an integer n, return the number of good integers in the range [1, n].\n","946":"You are given an integer array nums and an integer k.\nFind the longest subsequence of nums that meets the following requirements:\nThe subsequence is strictly increasing and\nThe difference between adjacent elements in the subsequence is at most k.\nReturn the length of the longest subsequence that meets the requirements.\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n","947":"A binary watch has 4 LEDs on the top to represent the hours (0-11), and 6 LEDs on the bottom to represent the minutes (0-59). Each LED represents a zero or one, with the least significant bit on the right.\nFor example, the below binary watch reads \"4:51\".\nGiven an integer turnedOn which represents the number of LEDs that are currently on (ignoring the PM), return all possible times the watch could represent. You may return the answer in any order.\nThe hour must not contain a leading zero.\nFor example, \"01:00\" is not valid. It should be \"1:00\".\nThe minute must be consist of two digits and may contain a leading zero.\nFor example, \"10:2\" is not valid. It should be \"10:02\".\n","948":"Given a string s, find the length of the longest\nsubstring\nwithout repeating characters.\n","949":"You are given a non-negative integer array nums. In one operation, you must:\nChoose a positive integer x such that x is less than or equal to the smallest non-zero element in nums.\nSubtract x from every positive element in nums.\nReturn the minimum number of operations to make every element in nums equal to 0.\n","950":"Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.\n","951":"The beauty of a string is the difference in frequencies between the most frequent and least frequent characters.\nFor example, the beauty of \"abaacc\" is 3 - 1 = 2.\nGiven a string s, return the sum of beauty of all of its substrings.\n","952":"Write a generator function that returns a generator object which yields the fibonacci sequence.\nThe fibonacci sequence is defined by the relation Xn = Xn-1 + Xn-2.\nThe first few numbers of the series are 0, 1, 1, 2, 3, 5, 8, 13.\n","953":"Given an integer array arr, return the length of a maximum size turbulent subarray of arr.\nA subarray is turbulent if the comparison sign flips between each adjacent pair of elements in the subarray.\nMore formally, a subarray [arr[i], arr[i + 1], ..., arr[j]] of arr is said to be turbulent if and only if:\nFor i <= k < j:\narr[k] > arr[k + 1] when k is odd, and\narr[k] < arr[k + 1] when k is even.\nOr, for i <= k < j:\narr[k] > arr[k + 1] when k is even, and\narr[k] < arr[k + 1] when k is odd.\n","954":"We have a wooden plank of the length n units. Some ants are walking on the plank, each ant moves with a speed of 1 unit per second. Some of the ants move to the left, the other move to the right.\nWhen two ants moving in two different directions meet at some point, they change their directions and continue moving again. Assume changing directions does not take any additional time.\nWhen an ant reaches one end of the plank at a time t, it falls out of the plank immediately.\nGiven an integer n and two integer arrays left and right, the positions of the ants moving to the left and the right, return the moment when the last ant(s) fall out of the plank.\n","955":"You are given an array nums consisting of positive integers.\nStarting with score = 0, apply the following algorithm:\nChoose the smallest integer of the array that is not marked. If there is a tie, choose the one with the smallest index.\nAdd the value of the chosen integer to score.\nMark the chosen element and its two adjacent elements if they exist.\nRepeat until all the array elements are marked.\nReturn the score you get after applying the above algorithm.\n","956":"Given an array of strings words, return the first palindromic string in the array. If there is no such string, return an empty string \"\".\nA string is palindromic if it reads the same forward and backward.\n","957":"Given an integer n, return a counter function. This counter function initially returns n and then returns 1 more than the previous value every subsequent time it is called (n, n + 1, n + 2, etc).\n","958":"You are given three integers n, m and k. Consider the following algorithm to find the maximum element of an array of positive integers:\nYou should build the array arr which has the following properties:\narr has exactly n integers.\n1 <= arr[i] <= m where (0 <= i < n).\nAfter applying the mentioned algorithm to arr, the value search_cost is equal to k.\nReturn the number of ways to build the array arr under the mentioned conditions. As the answer may grow large, the answer must be computed modulo 109 + 7.\n","959":"You are given an integer array gifts denoting the number of gifts in various piles. Every second, you do the following:\nChoose the pile with the maximum number of gifts.\nIf there is more than one pile with the maximum number of gifts, choose any.\nLeave behind the floor of the square root of the number of gifts in the pile. Take the rest of the gifts.\nReturn the number of gifts remaining after k seconds.\n","960":"Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.\nA shift on s consists of moving the leftmost character of s to the rightmost position.\nFor example, if s = \"abcde\", then it will be \"bcdea\" after one shift.\n","961":"Given an integer array nums and an integer k, modify the array in the following way:\nchoose an index i and replace nums[i] with -nums[i].\nYou should apply this process exactly k times. You may choose the same index i multiple times.\nReturn the largest possible sum of the array after modifying it in this way.\n","962":"A delivery company wants to build a new service center in a new city. The company knows the positions of all the customers in this city on a 2D-Map and wants to build the new center in a position such that the sum of the euclidean distances to all customers is minimum.\nGiven an array positions where positions[i] = [xi, yi] is the position of the ith customer on the map, return the minimum sum of the euclidean distances to all customers.\nIn other words, you need to choose the position of the service center [xcentre, ycentre] such that the following formula is minimized:\nAnswers within 10-5 of the actual value will be accepted.\n","963":"You are given an array tasks where tasks[i] = [actuali, minimumi]:\nactuali is the actual amount of energy you spend to finish the ith task.\nminimumi is the minimum amount of energy you require to begin the ith task.\nFor example, if the task is [10, 12] and your current energy is 11, you cannot start this task. However, if your current energy is 13, you can complete this task, and your energy will be 3 after finishing it.\nYou can finish the tasks in any order you like.\nReturn the minimum initial amount of energy you will need to finish all the tasks.\n","964":"Given an integer array nums, handle multiple queries of the following type:\nCalculate the sum of the elements of nums between indices left and right inclusive where left <= right.\nImplement the NumArray class:\nNumArray(int[] nums) Initializes the object with the integer array nums.\nint sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right]).\n","965":"You have k servers numbered from 0 to k-1 that are being used to handle multiple requests simultaneously. Each server has infinite computational capacity but cannot handle more than one request at a time. The requests are assigned to servers according to a specific algorithm:\nThe ith (0-indexed) request arrives.\nIf all servers are busy, the request is dropped (not handled at all).\nIf the (i % k)th server is available, assign the request to that server.\nOtherwise, assign the request to the next available server (wrapping around the list of servers and starting from 0 if necessary). For example, if the ith server is busy, try to assign the request to the (i+1)th server, then the (i+2)th server, and so on.\nYou are given a strictly increasing array arrival of positive integers, where arrival[i] represents the arrival time of the ith request, and another array load, where load[i] represents the load of the ith request (the time it takes to complete). Your goal is to find the busiest server(s). A server is considered busiest if it handled the most number of requests successfully among all the servers.\nReturn a list containing the IDs (0-indexed) of the busiest server(s). You may return the IDs in any order.\n","966":"Given an integer num, return three consecutive integers (as a sorted array) that sum to num. If num cannot be expressed as the sum of three consecutive integers, return an empty array.\n","967":"An n x n grid is composed of 1 x 1 squares where each 1 x 1 square consists of a '\/', '\\', or blank space ' '. These characters divide the square into contiguous regions.\nGiven the grid grid represented as a string array, return the number of regions.\nNote that backslash characters are escaped, so a '\\' is represented as '\\\\'.\n","968":"There are several cards arranged in a row, and each card has an associated number of points. The points are given in the integer array cardPoints.\nIn one step, you can take one card from the beginning or from the end of the row. You have to take exactly k cards.\nYour score is the sum of the points of the cards you have taken.\nGiven the integer array cardPoints and the integer k, return the maximum score you can obtain.\n","969":"We call a positive integer special if all of its digits are distinct.\nGiven a positive integer n, return the number of special integers that belong to the interval [1, n].\n","970":"You have two types of tiles: a 2 x 1 domino shape and a tromino shape. You may rotate these shapes.\nGiven an integer n, return the number of ways to tile an 2 x n board. Since the answer may be very large, return it modulo 109 + 7.\nIn a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.\n","971":"You are given an integer finalSum. Split it into a sum of a maximum number of unique positive even integers.\nFor example, given finalSum = 12, the following splits are valid (unique positive even integers summing up to finalSum): (12), (2 + 10), (2 + 4 + 6), and (4 + 8). Among them, (2 + 4 + 6) contains the maximum number of integers. Note that finalSum cannot be split into (2 + 2 + 4 + 4) as all the numbers should be unique.\nReturn a list of integers that represent a valid split containing a maximum number of integers. If no valid split exists for finalSum, return an empty list. You may return the integers in any order.\n","972":"Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n","973":"You are given an array points, an integer angle, and your location, where location = [posx, posy] and points[i] = [xi, yi] both denote integral coordinates on the X-Y plane.\nInitially, you are facing directly east from your position. You cannot move from your position, but you can rotate. In other words, posx and posy cannot be changed. Your field of view in degrees is represented by angle, determining how wide you can see from any given view direction. Let d be the amount in degrees that you rotate counterclockwise. Then, your field of view is the inclusive range of angles [d - angle\/2, d + angle\/2].\nYour browser does not support the video tag or this video format.\nYou can see some set of points if, for each point, the angle formed by the point, your position, and the immediate east direction from your position is in your field of view.\nThere can be multiple points at one coordinate. There may be points at your location, and you can always see these points regardless of your rotation. Points do not obstruct your vision to other points.\nReturn the maximum number of points you can see.\n","974":"Suppose you are given the following code:\nclass FooBar {\n  public void foo() {\n    for (int i = 0; i < n; i++) {\n      print(\"foo\");\n    }\n  }\n\n  public void bar() {\n    for (int i = 0; i < n; i++) {\n      print(\"bar\");\n    }\n  }\n}\nThe same instance of FooBar will be passed to two different threads:\nthread A will call foo(), while\nthread B will call bar().\nModify the given program to output \"foobar\" n times.\n","975":"You have n boxes labeled from 0 to n - 1. You are given four arrays: status, candies, keys, and containedBoxes where:\nstatus[i] is 1 if the ith box is open and 0 if the ith box is closed,\ncandies[i] is the number of candies in the ith box,\nkeys[i] is a list of the labels of the boxes you can open after opening the ith box.\ncontainedBoxes[i] is a list of the boxes you found inside the ith box.\nYou are given an integer array initialBoxes that contains the labels of the boxes you initially have. You can take all the candies in any open box and you can use the keys in it to open new boxes and you also can use the boxes you find in it.\nReturn the maximum number of candies you can get following the rules above.\n","976":"You are given a non-negative floating point number rounded to two decimal places celsius, that denotes the temperature in Celsius.\nYou should convert Celsius into Kelvin and Fahrenheit and return it as an array ans = [kelvin, fahrenheit].\nReturn the array ans. Answers within 10-5 of the actual answer will be accepted.\nNote that:\nKelvin = Celsius + 273.15\nFahrenheit = Celsius * 1.80 + 32.00\n","977":"You are given a 0-indexed integer array nums. In one operation, select any non-negative integer x and an index i, then update nums[i] to be equal to nums[i] AND (nums[i] XOR x).\nNote that AND is the bitwise AND operation and XOR is the bitwise XOR operation.\nReturn the maximum possible bitwise XOR of all elements of nums after applying the operation any number of times.\n","978":"You are given an integer array nums. You have an integer array arr of the same length with all values set to 0 initially. You also have the following modify function:\nYou want to use the modify function to convert arr to nums using the minimum number of calls.\nReturn the minimum number of function calls to make nums from arr.\nThe test cases are generated so that the answer fits in a 32-bit signed integer.\n","979":"There is a one-dimensional garden on the x-axis. The garden starts at the point 0 and ends at the point n. (i.e The length of the garden is n).\nThere are n + 1 taps located at points [0, 1, ..., n] in the garden.\nGiven an integer n and an integer array ranges of length n + 1 where ranges[i] (0-indexed) means the i-th tap can water the area [i - ranges[i], i + ranges[i]] if it was open.\nReturn the minimum number of taps that should be open to water the whole garden, If the garden cannot be watered return -1.\n","980":"Given two string arrays words1 and words2, return the number of strings that appear exactly once in each of the two arrays.\n","981":"Given an array of integers arr, and three integers a, b and c. You need to find the number of good triplets.\nA triplet (arr[i], arr[j], arr[k]) is good if the following conditions are true:\n0 <= i < j < k < arr.length\n|arr[i] - arr[j]| <= a\n|arr[j] - arr[k]| <= b\n|arr[i] - arr[k]| <= c\nWhere |x| denotes the absolute value of x.\nReturn the number of good triplets.\n","982":"For a string sequence, a string word is k-repeating if word concatenated k times is a substring of sequence. The word's maximum k-repeating value is the highest value k where word is k-repeating in sequence. If word is not a substring of sequence, word's maximum k-repeating value is 0.\nGiven strings sequence and word, return the maximum k-repeating value of word in sequence.\n","983":"Alice and Bob take turns playing a game, with Alice starting first.\nYou are given a string num of even length consisting of digits and '?' characters. On each turn, a player will do the following if there is still at least one '?' in num:\nChoose an index i where num[i] == '?'.\nReplace num[i] with any digit between '0' and '9'.\nThe game ends when there are no more '?' characters in num.\nFor Bob to win, the sum of the digits in the first half of num must be equal to the sum of the digits in the second half. For Alice to win, the sums must not be equal.\nFor example, if the game ended with num = \"243801\", then Bob wins because 2+4+3 = 8+0+1. If the game ended with num = \"243803\", then Alice wins because 2+4+3 != 8+0+3.\nAssuming Alice and Bob play optimally, return true if Alice will win and false if Bob will win.\n","984":"You are given a tree (i.e. a connected, undirected graph that has no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges. The root of the tree is the node 0, and each node of the tree has a label which is a lower-case character given in the string labels (i.e. The node with the number i has the label labels[i]).\nThe edges array is given on the form edges[i] = [ai, bi], which means there is an edge between nodes ai and bi in the tree.\nReturn an array of size n where ans[i] is the number of nodes in the subtree of the ith node which have the same label as node i.\nA subtree of a tree T is the tree consisting of a node in T and all of its descendant nodes.\n","985":"In a row of dominoes, tops[i] and bottoms[i] represent the top and bottom halves of the ith domino. (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)\nWe may rotate the ith domino, so that tops[i] and bottoms[i] swap values.\nReturn the minimum number of rotations so that all the values in tops are the same, or all the values in bottoms are the same.\nIf it cannot be done, return -1.\n","986":"Given two strings s and t, your goal is to convert s into t in k moves or less.\nDuring the ith (1 <= i <= k) move you can:\nChoose any index j (1-indexed) from s, such that 1 <= j <= s.length and j has not been chosen in any previous move, and shift the character at that index i times.\nDo nothing.\nShifting a character means replacing it by the next letter in the alphabet (wrapping around so that 'z' becomes 'a'). Shifting a character by i means applying the shift operations i times.\nRemember that any index j can be picked at most once.\nReturn true if it's possible to convert s into t in no more than k moves, otherwise return false.\n","987":"Given the root of a binary tree, find the maximum value v for which there exist different nodes a and b where v = |a.val - b.val| and a is an ancestor of b.\nA node a is an ancestor of b if either: any child of a is equal to b or any child of a is an ancestor of b.\n","988":"A happy string is a string that:\nconsists only of letters of the set ['a', 'b', 'c'].\ns[i] != s[i + 1] for all values of i from 1 to s.length - 1 (string is 1-indexed).\nFor example, strings \"abc\", \"ac\", \"b\" and \"abcbabcbcb\" are all happy strings and strings \"aa\", \"baa\" and \"ababbc\" are not happy strings.\nGiven two integers n and k, consider a list of all happy strings of length n sorted in lexicographical order.\nReturn the kth string of this list or return an empty string if there are less than k happy strings of length n.\n","989":"There are n persons on a social media website. You are given an integer array ages where ages[i] is the age of the ith person.\nA Person x will not send a friend request to a person y (x != y) if any of the following conditions is true:\nage[y] <= 0.5 * age[x] + 7\nage[y] > age[x]\nage[y] > 100 && age[x] < 100\nOtherwise, x will send a friend request to y.\nNote that if x sends a request to y, y will not necessarily send a request to x. Also, a person will not send a friend request to themself.\nReturn the total number of friend requests made.\n","990":"There is a tree (i.e. a connected, undirected graph with no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges.\nYou are given a 0-indexed integer array vals of length n where vals[i] denotes the value of the ith node. You are also given a 2D integer array edges where edges[i] = [ai, bi] denotes that there exists an undirected edge connecting nodes ai and bi.\nA good path is a simple path that satisfies the following conditions:\nThe starting node and the ending node have the same value.\nAll nodes between the starting node and the ending node have values less than or equal to the starting node (i.e. the starting node's value should be the maximum value along the path).\nReturn the number of distinct good paths.\nNote that a path and its reverse are counted as the same path. For example, 0 -> 1 is considered to be the same as 1 -> 0. A single node is also considered as a valid path.\n","991":"A school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in non-decreasing order by height. Let this ordering be represented by the integer array expected where expected[i] is the expected height of the ith student in line.\nYou are given an integer array heights representing the current order that the students are standing in. Each heights[i] is the height of the ith student in line (0-indexed).\nReturn the number of indices where heights[i] != expected[i].\n","992":"Given the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high].\n","993":"You are given an array start where start = [startX, startY] represents your initial position (startX, startY) in a 2D space. You are also given the array target where target = [targetX, targetY] represents your target position (targetX, targetY).\nThe cost of going from a position (x1, y1) to any other position in the space (x2, y2) is |x2 - x1| + |y2 - y1|.\nThere are also some special roads. You are given a 2D array specialRoads where specialRoads[i] = [x1i, y1i, x2i, y2i, costi] indicates that the ith special road can take you from (x1i, y1i) to (x2i, y2i) with a cost equal to costi. You can use each special road any number of times.\nReturn the minimum cost required to go from (startX, startY) to (targetX, targetY).\n","994":"The minimum absolute difference of an array a is defined as the minimum value of |a[i] - a[j]|, where 0 <= i < j < a.length and a[i] != a[j]. If all elements of a are the same, the minimum absolute difference is -1.\nFor example, the minimum absolute difference of the array [5,2,3,7,2] is |2 - 3| = 1. Note that it is not 0 because a[i] and a[j] must be different.\nYou are given an integer array nums and the array queries where queries[i] = [li, ri]. For each query i, compute the minimum absolute difference of the subarray nums[li...ri] containing the elements of nums between the 0-based indices li and ri (inclusive).\nReturn an array ans where ans[i] is the answer to the ith query.\nA subarray is a contiguous sequence of elements in an array.\nThe value of |x| is defined as:\nx if x >= 0.\n-x if x < 0.\n","995":"You are given a 0-indexed array arr consisting of n positive integers, and a positive integer k.\nThe array arr is called K-increasing if arr[i-k] <= arr[i] holds for every index i, where k <= i <= n-1.\nFor example, arr = [4, 1, 5, 2, 6, 2] is K-increasing for k = 2 because:\narr[0] <= arr[2] (4 <= 5)\narr[1] <= arr[3] (1 <= 2)\narr[2] <= arr[4] (5 <= 6)\narr[3] <= arr[5] (2 <= 2)\nHowever, the same arr is not K-increasing for k = 1 (because arr[0] > arr[1]) or k = 3 (because arr[0] > arr[3]).\nIn one operation, you can choose an index i and change arr[i] into any positive integer.\nReturn the minimum number of operations required to make the array K-increasing for the given k.\n","996":"You are given a string time in the form of  hh:mm, where some of the digits in the string are hidden (represented by ?).\nThe valid times are those inclusively between 00:00 and 23:59.\nReturn the latest valid time you can get from time by replacing the hidden digits.\n","997":"You are given a positive integer array grades which represents the grades of students in a university. You would like to enter all these students into a competition in ordered non-empty groups, such that the ordering meets the following conditions:\nThe sum of the grades of students in the ith group is less than the sum of the grades of students in the (i + 1)th group, for all groups (except the last).\nThe total number of students in the ith group is less than the total number of students in the (i + 1)th group, for all groups (except the last).\nReturn the maximum number of groups that can be formed.\n","998":"Given the root of an n-ary tree, return the preorder traversal of its nodes' values.\nNary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)\n","999":"You are given an integer array nums. The range of a subarray of nums is the difference between the largest and smallest element in the subarray.\nReturn the sum of all subarray ranges of nums.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","1000":"Given an array of integers arr and an integer k. Find the least number of unique integers after removing exactly k elements.\n","1001":"Write a function that reverses a string. The input string is given as an array of characters s.\nYou must do this by modifying the input array in-place with O(1) extra memory.\n","1002":"We define the string base to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so base will look like this:\n\"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\nGiven a string s, return the number of unique non-empty substrings of s are present in base.\n","1003":"Given a string s of '(' , ')' and lowercase English characters.\nYour task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string.\nFormally, a parentheses string is valid if and only if:\nIt is the empty string, contains only lowercase characters, or\nIt can be written as AB (A concatenated with B), where A and B are valid strings, or\nIt can be written as (A), where A is a valid string.\n","1004":"Design your implementation of the circular double-ended queue (deque).\nImplement the MyCircularDeque class:\nMyCircularDeque(int k) Initializes the deque with a maximum size of k.\nboolean insertFront() Adds an item at the front of Deque. Returns true if the operation is successful, or false otherwise.\nboolean insertLast() Adds an item at the rear of Deque. Returns true if the operation is successful, or false otherwise.\nboolean deleteFront() Deletes an item from the front of Deque. Returns true if the operation is successful, or false otherwise.\nboolean deleteLast() Deletes an item from the rear of Deque. Returns true if the operation is successful, or false otherwise.\nint getFront() Returns the front item from the Deque. Returns -1 if the deque is empty.\nint getRear() Returns the last item from Deque. Returns -1 if the deque is empty.\nboolean isEmpty() Returns true if the deque is empty, or false otherwise.\nboolean isFull() Returns true if the deque is full, or false otherwise.\n","1005":"Given a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible.\nYou can use each character in text at most once. Return the maximum number of instances that can be formed.\n","1006":"Alice has an undirected tree with n nodes labeled from 0 to n - 1. The tree is represented as a 2D integer array edges of length n - 1 where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nAlice wants Bob to find the root of the tree. She allows Bob to make several guesses about her tree. In one guess, he does the following:\nChooses two distinct integers u and v such that there exists an edge [u, v] in the tree.\nHe tells Alice that u is the parent of v in the tree.\nBob's guesses are represented by a 2D integer array guesses where guesses[j] = [uj, vj] indicates Bob guessed uj to be the parent of vj.\nAlice being lazy, does not reply to each of Bob's guesses, but just says that at least k of his guesses are true.\nGiven the 2D integer arrays edges, guesses and the integer k, return the number of possible nodes that can be the root of Alice's tree. If there is no such tree, return 0.\n","1007":"Given an array of integers nums and an integer limit, return the size of the longest non-empty subarray such that the absolute difference between any two elements of this subarray is less than or equal to limit.\n","1008":"You are given an m x n integer array grid where grid[i][j] could be:\n1 representing the starting square. There is exactly one starting square.\n2 representing the ending square. There is exactly one ending square.\n0 representing empty squares we can walk over.\n-1 representing obstacles that we cannot walk over.\nReturn the number of 4-directional walks from the starting square to the ending square, that walk over every non-obstacle square exactly once.\n","1009":"Given an array of integers nums, you start with an initial positive value startValue.\nIn each iteration, you calculate the step by step sum of startValue plus elements in nums (from left to right).\nReturn the minimum positive value of startValue such that the step by step sum is never less than 1.\n","1010":"Given a binary string s without leading zeros, return true if s contains at most one contiguous segment of ones. Otherwise, return false.\n","1011":"Given an integer array arr, partition the array into (contiguous) subarrays of length at most k. After partitioning, each subarray has their values changed to become the maximum value of that subarray.\nReturn the largest sum of the given array after partitioning. Test cases are generated so that the answer fits in a 32-bit integer.\n","1012":"You are given a string num, representing a large integer, and an integer k.\nWe call some integer wonderful if it is a permutation of the digits in num and is greater in value than num. There can be many wonderful integers. However, we only care about the smallest-valued ones.\nFor example, when num = \"5489355142\":\nThe 1st smallest wonderful integer is \"5489355214\".\nThe 2nd smallest wonderful integer is \"5489355241\".\nThe 3rd smallest wonderful integer is \"5489355412\".\nThe 4th smallest wonderful integer is \"5489355421\".\nReturn the minimum number of adjacent digit swaps that needs to be applied to num to reach the kth smallest wonderful integer.\nThe tests are generated in such a way that kth smallest wonderful integer exists.\n","1013":"You are given an array representing a row of seats where seats[i] = 1 represents a person sitting in the ith seat, and seats[i] = 0 represents that the ith seat is empty (0-indexed).\nThere is at least one empty seat, and at least one person sitting.\nAlex wants to sit in the seat such that the distance between him and the closest person to him is maximized. \nReturn that maximum distance to the closest person.\n","1014":"You are given an array of strings equations that represent relationships between variables where each string equations[i] is of length 4 and takes one of two different forms: \"xi==yi\" or \"xi!=yi\".Here, xi and yi are lowercase letters (not necessarily different) that represent one-letter variable names.\nReturn true if it is possible to assign integers to variable names so as to satisfy all the given equations, or false otherwise.\n","1015":"You are given two 2D integer arrays, items1 and items2, representing two sets of items. Each array items has the following properties:\nitems[i] = [valuei, weighti] where valuei represents the value and weighti represents the weight of the ith item.\nThe value of each item in items is unique.\nReturn a 2D integer array ret where ret[i] = [valuei, weighti], with weighti being the sum of weights of all items with value valuei.\nNote: ret should be returned in ascending order by value.\n","1016":"You are given an integer array ranks and a character array suits. You have 5 cards where the ith card has a rank of ranks[i] and a suit of suits[i].\nThe following are the types of poker hands you can make from best to worst:\n\"Flush\": Five cards of the same suit.\n\"Three of a Kind\": Three cards of the same rank.\n\"Pair\": Two cards of the same rank.\n\"High Card\": Any single card.\nReturn a string representing the best type of poker hand you can make with the given cards.\nNote that the return values are case-sensitive.\n","1017":"You are given an encoded string s. To decode the string to a tape, the encoded string is read one character at a time and the following steps are taken:\nIf the character read is a letter, that letter is written onto the tape.\nIf the character read is a digit d, the entire current tape is repeatedly written d - 1 more times in total.\nGiven an integer k, return the kth letter (1-indexed) in the decoded string.\n","1018":"Given the root of a binary tree, replace the value of each node in the tree with the sum of all its cousins' values.\nTwo nodes of a binary tree are cousins if they have the same depth with different parents.\nReturn the root of the modified tree.\nNote that the depth of a node is the number of edges in the path from the root node to it.\n","1019":"Given a string n representing an integer, return the closest integer (not including itself), which is a palindrome. If there is a tie, return the smaller one.\nThe closest is defined as the absolute difference minimized between two integers.\n","1020":"Given an array of strings words, return the words that can be typed using letters of the alphabet on only one row of American keyboard like the image below.\nIn the American keyboard:\nthe first row consists of the characters \"qwertyuiop\",\nthe second row consists of the characters \"asdfghjkl\", and\nthe third row consists of the characters \"zxcvbnm\".\n","1021":"You are given a 0-indexed string pattern of length n consisting of the characters 'I' meaning increasing and 'D' meaning decreasing.\nA 0-indexed string num of length n + 1 is created using the following conditions:\nnum consists of the digits '1' to '9', where each digit is used at most once.\nIf pattern[i] == 'I', then num[i] < num[i + 1].\nIf pattern[i] == 'D', then num[i] > num[i + 1].\nReturn the lexicographically smallest possible string num that meets the conditions.\n","1022":"Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.\n","1023":"You are given two strings word1 and word2. You want to construct a string merge in the following way: while either word1 or word2 are non-empty, choose one of the following options:\nIf word1 is non-empty, append the first character in word1 to merge and delete it from word1.\nFor example, if word1 = \"abc\" and merge = \"dv\", then after choosing this operation, word1 = \"bc\" and merge = \"dva\".\nIf word2 is non-empty, append the first character in word2 to merge and delete it from word2.\nFor example, if word2 = \"abc\" and merge = \"\", then after choosing this operation, word2 = \"bc\" and merge = \"a\".\nReturn the lexicographically largest merge you can construct.\nA string a is lexicographically larger than a string b (of the same length) if in the first position where a and b differ, a has a character strictly larger than the corresponding character in b. For example, \"abcd\" is lexicographically larger than \"abcc\" because the first position they differ is at the fourth character, and d is greater than c.\n","1024":"You are given two 0-indexed strings s and target. You can take some letters from s and rearrange them to form new strings.\nReturn the maximum number of copies of target that can be formed by taking letters from s and rearranging them.\n","1025":"You are given a string num consisting of digits only.\nReturn the largest palindromic integer (in the form of a string) that can be formed using digits taken from num. It should not contain leading zeroes.\nNotes:\nYou do not need to use all the digits of num, but you must use at least one digit.\nThe digits can be reordered.\n","1026":"You are given two 0-indexed integer arrays nums1 and nums2 of equal length n and a positive integer k. You must choose a subsequence of indices from nums1 of length k.\nFor chosen indices i0, i1, ..., ik - 1, your score is defined as:\nThe sum of the selected elements from nums1 multiplied with the minimum of the selected elements from nums2.\nIt can defined simply as: (nums1[i0] + nums1[i1] +...+ nums1[ik - 1]) * min(nums2[i0] , nums2[i1], ... ,nums2[ik - 1]).\nReturn the maximum possible score.\nA subsequence of indices of an array is a set that can be derived from the set {0, 1, ..., n-1} by deleting some or no elements.\n","1027":"You are given an integer array of unique positive integers nums. Consider the following graph:\nThere are nums.length nodes, labeled nums[0] to nums[nums.length - 1],\nThere is an undirected edge between nums[i] and nums[j] if nums[i] and nums[j] share a common factor greater than 1.\nReturn the size of the largest connected component in the graph.\n","1028":"Given an array arr that represents a permutation of numbers from 1 to n.\nYou have a binary string of size n that initially has all its bits set to zero. At each step i (assuming both the binary string and arr are 1-indexed) from 1 to n, the bit at position arr[i] is set to 1.\nYou are also given an integer m. Find the latest step at which there exists a group of ones of length m. A group of ones is a contiguous substring of 1's such that it cannot be extended in either direction.\nReturn the latest step at which there exists a group of ones of length exactly m. If no such group exists, return -1.\n","1029":"Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.\nReturn the sum of the three integers.\nYou may assume that each input would have exactly one solution.\n","1030":"You are given a 0-indexed binary string floor, which represents the colors of tiles on a floor:\nfloor[i] = '0' denotes that the ith tile of the floor is colored black.\nOn the other hand, floor[i] = '1' denotes that the ith tile of the floor is colored white.\nYou are also given numCarpets and carpetLen. You have numCarpets black carpets, each of length carpetLen tiles. Cover the tiles with the given carpets such that the number of white tiles still visible is minimum. Carpets may overlap one another.\nReturn the minimum number of white tiles still visible.\n","1031":"You are playing a solitaire game with three piles of stones of sizes a, b, and c respectively. Each turn you choose two different non-empty piles, take one stone from each, and add 1 point to your score. The game stops when there are fewer than two non-empty piles (meaning there are no more available moves).\nGiven three integers a, b, and c, return the maximum score you can get.\n","1032":"You are given a 0-indexed array nums consisiting of positive integers. You can do the following operation on the array any number of times:\nSelect an index i such that 0 <= i < n - 1 and replace either of nums[i] or nums[i+1] with their gcd value.\nReturn the minimum number of operations to make all elements of nums equal to 1. If it is impossible, return -1.\nThe gcd of two integers is the greatest common divisor of the two integers.\n","1033":"SQL Schema\nTable: Weather\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| recordDate    | date    |\n| temperature   | int     |\n+---------------+---------+\nid is the primary key for this table.\nThis table contains information about the temperature on a certain day.\n  Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).\nReturn the result table in any order.\nThe query result format is in the following example.\n","1034":"Given an integer array arr and a mapping function fn, return a new array with a transformation applied to each element.\nThe returned array should be created such that returnedArray[i] = fn(arr[i], i).\nPlease solve it without the built-in Array.map method.\n","1035":"Your friend is typing his name into a keyboard. Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times.\nYou examine the typed characters of the keyboard. Return True if it is possible that it was your friends name, with some characters (possibly none) being long pressed.\n","1036":"Given a string formula representing a chemical formula, return the count of each atom.\nThe atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.\nOne or more digits representing that element's count may follow if the count is greater than 1. If the count is 1, no digits will follow.\nFor example, \"H2O\" and \"H2O2\" are possible, but \"H1O2\" is impossible.\nTwo formulas are concatenated together to produce another formula.\nFor example, \"H2O2He3Mg4\" is also a formula.\nA formula placed in parentheses, and a count (optionally added) is also a formula.\nFor example, \"(H2O2)\" and \"(H2O2)3\" are formulas.\nReturn the count of all elements as a string in the following form: the first name (in sorted order), followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.\nThe test cases are generated so that all the values in the output fit in a 32-bit integer.\n","1037":"You are given a positive integer k. You are also given:\na 2D integer array rowConditions of size n where rowConditions[i] = [abovei, belowi], and\na 2D integer array colConditions of size m where colConditions[i] = [lefti, righti].\nThe two arrays contain integers from 1 to k.\nYou have to build a k x k matrix that contains each of the numbers from 1 to k exactly once. The remaining cells should have the value 0.\nThe matrix should also satisfy the following conditions:\nThe number abovei should appear in a row that is strictly above the row at which the number belowi appears for all i from 0 to n - 1.\nThe number lefti should appear in a column that is strictly left of the column at which the number righti appears for all i from 0 to m - 1.\nReturn any matrix that satisfies the conditions. If no answer exists, return an empty matrix.\n","1038":"Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.\nA k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:\n0 <= i, j < nums.length\ni != j\n|nums[i] - nums[j]| == k\nNotice that |val| denotes the absolute value of val.\n","1039":"You are given a 0-indexed array nums of size n consisting of non-negative integers.\nYou need to apply n - 1 operations to this array where, in the ith operation (0-indexed), you will apply the following on the ith element of nums:\nIf nums[i] == nums[i + 1], then multiply nums[i] by 2 and set nums[i + 1] to 0. Otherwise, you skip this operation.\nAfter performing all the operations, shift all the 0's to the end of the array.\nFor example, the array [1,0,2,0,0,1] after shifting all its 0's to the end, is [1,2,1,0,0,0].\nReturn the resulting array.\nNote that the operations are applied sequentially, not all at once.\n","1040":"Given a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i.e., nums[j] - nums[i]), such that 0 <= i < j < n and nums[i] < nums[j].\nReturn the maximum difference. If no such i and j exists, return -1.\n","1041":"You are given an array of n strings strs, all of the same length.\nThe strings can be arranged such that there is one on each line, making a grid.\nFor example, strs = [\"abc\", \"bce\", \"cae\"] can be arranged as follows:\nabc\nbce\ncae\nYou want to delete the columns that are not sorted lexicographically. In the above example (0-indexed), columns 0 ('a', 'b', 'c') and 2 ('c', 'e', 'e') are sorted, while column 1 ('b', 'c', 'a') is not, so you would delete column 1.\nReturn the number of columns that you will delete.\n","1042":"You are given a 0-indexed array of positive integers tasks, representing tasks that need to be completed in order, where tasks[i] represents the type of the ith task.\nYou are also given a positive integer space, which represents the minimum number of days that must pass after the completion of a task before another task of the same type can be performed.\nEach day, until all tasks have been completed, you must either:\nComplete the next task from tasks, or\nTake a break.\nReturn the minimum number of days needed to complete all tasks.\n","1043":"You are given a string s formed by digits and '#'. We want to map s to English lowercase characters as follows:\nCharacters ('a' to 'i') are represented by ('1' to '9') respectively.\nCharacters ('j' to 'z') are represented by ('10#' to '26#') respectively.\nReturn the string formed after mapping.\nThe test cases are generated so that a unique mapping will always exist.\n","1044":"You are given a stream of n videos, each represented by a distinct number from 1 to n that you need to \"upload\" to a server. You need to implement a data structure that calculates the length of the longest uploaded prefix at various points in the upload process.\nWe consider i to be an uploaded prefix if all videos in the range 1 to i (inclusive) have been uploaded to the server. The longest uploaded prefix is the maximum value of i that satisfies this definition.\n\nImplement the LUPrefix class:\nLUPrefix(int n) Initializes the object for a stream of n videos.\nvoid upload(int video) Uploads video to the server.\nint longest() Returns the length of the longest uploaded prefix defined above.\n","1045":"There is a country of n cities numbered from 0 to n - 1. In this country, there is a road connecting every pair of cities.\nThere are m friends numbered from 0 to m - 1 who are traveling through the country. Each one of them will take a path consisting of some cities. Each path is represented by an integer array that contains the visited cities in order. The path may contain a city more than once, but the same city will not be listed consecutively.\nGiven an integer n and a 2D integer array paths where paths[i] is an integer array representing the path of the ith friend, return the length of the longest common subpath that is shared by every friend's path, or 0 if there is no common subpath at all.\nA subpath of a path is a contiguous sequence of cities within that path.\n","1046":"You have a pointer at index 0 in an array of size arrLen. At each step, you can move 1 position to the left, 1 position to the right in the array, or stay in the same place (The pointer should not be placed outside the array at any time).\nGiven two integers steps and arrLen, return the number of ways such that your pointer is still at index 0 after exactly steps steps. Since the answer may be too large, return it modulo 109 + 7.\n","1047":"You are given a series of video clips from a sporting event that lasted time seconds. These video clips can be overlapping with each other and have varying lengths.\nEach video clip is described by an array clips where clips[i] = [starti, endi] indicates that the ith clip started at starti and ended at endi.\nWe can cut these clips into segments freely.\nFor example, a clip [0, 7] can be cut into segments [0, 1] + [1, 3] + [3, 7].\nReturn the minimum number of clips needed so that we can cut the clips into segments that cover the entire sporting event [0, time]. If the task is impossible, return -1.\n","1048":"SQL Schema\nTable: Customer\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| referee_id  | int     |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the id of a customer, their name, and the id of the customer who referred them.\n  Write an SQL query to report the names of the customer that are not referred by the customer with id = 2.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1049":"You are given a network of n nodes represented as an n x n adjacency matrix graph, where the ith node is directly connected to the jth node if graph[i][j] == 1.\nSome nodes initial are initially infected by malware. Whenever two nodes are directly connected, and at least one of those two nodes is infected by malware, both nodes will be infected by malware. This spread of malware will continue until no more nodes can be infected in this manner.\nSuppose M(initial) is the final number of nodes infected with malware in the entire network after the spread of malware stops.\nWe will remove exactly one node from initial, completely removing it and any connections from this node to any other node.\nReturn the node that, if removed, would minimize M(initial). If multiple nodes could be removed to minimize M(initial), return such a node with the smallest index.\n","1050":"You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the ith customer has in the jth bank. Return the wealth that the richest customer has.\nA customer's wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth.\n","1051":"Given an integer array arr, remove a subarray (can be empty) from arr such that the remaining elements in arr are non-decreasing.\nReturn the length of the shortest subarray to remove.\nA subarray is a contiguous subsequence of the array.\n","1052":"You are given two string arrays, queries and dictionary. All words in each array comprise of lowercase English letters and have the same length.\nIn one edit you can take a word from queries, and change any letter in it to any other letter. Find all words from queries that, after a maximum of two edits, equal some word from dictionary.\nReturn a list of all words from queries, that match with some word from dictionary after a maximum of two edits. Return the words in the same order they appear in queries.\n","1053":"Given three integers x, y, and bound, return a list of all the powerful integers that have a value less than or equal to bound.\nAn integer is powerful if it can be represented as xi + yj for some integers i >= 0 and j >= 0.\nYou may return the answer in any order. In your answer, each value should occur at most once.\n","1054":"Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.\n","1055":"You are given an n x n grid representing a field of cherries, each cell is one of three possible integers.\n0 means the cell is empty, so you can pass through,\n1 means the cell contains a cherry that you can pick up and pass through, or\n-1 means the cell contains a thorn that blocks your way.\nReturn the maximum number of cherries you can collect by following the rules below:\nStarting at the position (0, 0) and reaching (n - 1, n - 1) by moving right or down through valid path cells (cells with value 0 or 1).\nAfter reaching (n - 1, n - 1), returning to (0, 0) by moving left or up through valid path cells.\nWhen passing through a path cell containing a cherry, you pick it up, and the cell becomes an empty cell 0.\nIf there is no valid path between (0, 0) and (n - 1, n - 1), then no cherries can be collected.\n","1056":"Given an n x n grid containing only values 0 and 1, where 0 represents water and 1 represents land, find a water cell such that its distance to the nearest land cell is maximized, and return the distance. If no land or water exists in the grid, return -1.\nThe distance used in this problem is the Manhattan distance: the distance between two cells (x0, y0) and (x1, y1) is |x0 - x1| + |y0 - y1|.\n","1057":"You are given an undirected graph. You are given an integer n which is the number of nodes in the graph and an array edges, where each edges[i] = [ui, vi] indicates that there is an undirected edge between ui and vi.\nA connected trio is a set of three nodes where there is an edge between every pair of them.\nThe degree of a connected trio is the number of edges where one endpoint is in the trio, and the other is not.\nReturn the minimum degree of a connected trio in the graph, or -1 if the graph has no connected trios.\n","1058":"There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.\nFor example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.\nReturn the ordering of courses you should take to finish all courses. If there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array.\n","1059":"A string is a valid parentheses string (denoted VPS) if and only if it consists of \"(\" and \")\" characters only, and:\nIt is the empty string, or\nIt can be written as AB (A concatenated with B), where A and B are VPS's, or\nIt can be written as (A), where A is a VPS.\nWe can similarly define the nesting depth depth(S) of any VPS S as follows:\ndepth(\"\") = 0\ndepth(A + B) = max(depth(A), depth(B)), where A and B are VPS's\ndepth(\"(\" + A + \")\") = 1 + depth(A), where A is a VPS.\nFor example,  \"\", \"()()\", and \"()(()())\" are VPS's (with nesting depths 0, 1, and 2), and \")(\" and \"(()\" are not VPS's.\n  Given a VPS seq, split it into two disjoint subsequences A and B, such that A and B are VPS's (and A.length + B.length = seq.length).\nNow choose any such A and B such that max(depth(A), depth(B)) is the minimum possible value.\nReturn an answer array (of length seq.length) that encodes such a choice of A and B:  answer[i] = 0 if seq[i] is part of A, else answer[i] = 1.  Note that even though multiple answers may exist, you may return any of them.\n","1060":"Given a positive integer n, there exists a 0-indexed array called powers, composed of the minimum number of powers of 2 that sum to n. The array is sorted in non-decreasing order, and there is only one way to form the array.\nYou are also given a 0-indexed 2D integer array queries, where queries[i] = [lefti, righti]. Each queries[i] represents a query where you have to find the product of all powers[j] with lefti <= j <= righti.\nReturn an array answers, equal in length to queries, where answers[i] is the answer to the ith query. Since the answer to the ith query may be too large, each answers[i] should be returned modulo 109 + 7.\n","1061":"Write a function that checks if a given value is an instance of a given class or superclass. For this problem, an object is considered an instance of a given class if that object has access to that class's methods.\nThere are no constraints on the data types that can be passed to the function. For example, the value or the class could be undefined.\n","1062":"The factorial of a positive integer n is the product of all positive integers less than or equal to n.\nFor example, factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1.\nWe make a clumsy factorial using the integers in decreasing order by swapping out the multiply operations for a fixed rotation of operations with multiply '*', divide '\/', add '+', and subtract '-' in this order.\nFor example, clumsy(10) = 10 * 9 \/ 8 + 7 - 6 * 5 \/ 4 + 3 - 2 * 1.\nHowever, these operations are still applied using the usual order of operations of arithmetic. We do all multiplication and division steps before any addition or subtraction steps, and multiplication and division steps are processed left to right.\nAdditionally, the division that we use is floor division such that 10 * 9 \/ 8 = 90 \/ 8 = 11.\nGiven an integer n, return the clumsy factorial of n.\n","1063":"You are given an array of non-overlapping axis-aligned rectangles rects where rects[i] = [ai, bi, xi, yi] indicates that (ai, bi) is the bottom-left corner point of the ith rectangle and (xi, yi) is the top-right corner point of the ith rectangle. Design an algorithm to pick a random integer point inside the space covered by one of the given rectangles. A point on the perimeter of a rectangle is included in the space covered by the rectangle.\nAny integer point inside the space covered by one of the given rectangles should be equally likely to be returned.\nNote that an integer point is a point that has integer coordinates.\nImplement the Solution class:\nSolution(int[][] rects) Initializes the object with the given rectangles rects.\nint[] pick() Returns a random integer point [u, v] inside the space covered by one of the given rectangles.\n","1064":"You are given an integer array deck where deck[i] represents the number written on the ith card.\nPartition the cards into one or more groups such that:\nEach group has exactly x cards where x > 1, and\nAll the cards in one group have the same integer written on them.\nReturn true if such partition is possible, or false otherwise.\n","1065":"You are stacking blocks to form a pyramid. Each block has a color, which is represented by a single letter. Each row of blocks contains one less block than the row beneath it and is centered on top.\nTo make the pyramid aesthetically pleasing, there are only specific triangular patterns that are allowed. A triangular pattern consists of a single block stacked on top of two blocks. The patterns are given as a list of three-letter strings allowed, where the first two characters of a pattern represent the left and right bottom blocks respectively, and the third character is the top block.\nFor example, \"ABC\" represents a triangular pattern with a 'C' block stacked on top of an 'A' (left) and 'B' (right) block. Note that this is different from \"BAC\" where 'B' is on the left bottom and 'A' is on the right bottom.\nYou start with a bottom row of blocks bottom, given as a single string, that you must use as the base of the pyramid.\nGiven bottom and allowed, return true if you can build the pyramid all the way to the top such that every triangular pattern in the pyramid is in allowed, or false otherwise.\n","1066":"Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.\nReturn the sorted array.\n","1067":"You are given two 2D integer arrays nums1 and nums2.\nnums1[i] = [idi, vali] indicate that the number with the id idi has a value equal to vali.\nnums2[i] = [idi, vali] indicate that the number with the id idi has a value equal to vali.\nEach array contains unique ids and is sorted in ascending order by id.\nMerge the two arrays into one array that is sorted in ascending order by id, respecting the following conditions:\nOnly ids that appear in at least one of the two arrays should be included in the resulting array.\nEach id should be included only once and its value should be the sum of the values of this id in the two arrays. If the id does not exist in one of the two arrays then its value in that array is considered to be 0.\nReturn the resulting array. The returned array must be sorted in ascending order by id.\n","1068":"Given two integers n and k, construct a list answer that contains n different positive integers ranging from 1 to n and obeys the following requirement:\nSuppose this list is answer = [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers.\nReturn the list answer. If there multiple valid answers, return any of them.\n","1069":"You are currently designing a dynamic array. You are given a 0-indexed integer array nums, where nums[i] is the number of elements that will be in the array at time i. In addition, you are given an integer k, the maximum number of times you can resize the array (to any size).\nThe size of the array at time t, sizet, must be at least nums[t] because there needs to be enough space in the array to hold all the elements. The space wasted at time t is defined as sizet - nums[t], and the total space wasted is the sum of the space wasted across every time t where 0 <= t < nums.length.\nReturn the minimum total space wasted if you can resize the array at most k times.\nNote: The array can have any size at the start and does not count towards the number of resizing operations.\n","1070":"You are given the root node of a binary search tree (BST) and a value to insert into the tree. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST.\nNotice that there may exist multiple valid ways for the insertion, as long as the tree remains a BST after insertion. You can return any of them.\n","1071":"Given an integer array nums, you need to find one continuous subarray such that if you only sort this subarray in non-decreasing order, then the whole array will be sorted in non-decreasing order.\nReturn the shortest such subarray and output its length.\n","1072":"There are 8 prison cells in a row and each cell is either occupied or vacant.\nEach day, whether the cell is occupied or vacant changes according to the following rules:\nIf a cell has two adjacent neighbors that are both occupied or both vacant, then the cell becomes occupied.\nOtherwise, it becomes vacant.\nNote that because the prison is a row, the first and the last cells in the row can't have two adjacent neighbors.\nYou are given an integer array cells where cells[i] == 1 if the ith cell is occupied and cells[i] == 0 if the ith cell is vacant, and you are given an integer n.\nReturn the state of the prison after n days (i.e., n such changes described above).\n","1073":"You are given an integer n. We reorder the digits in any order (including the original order) such that the leading digit is not zero.\nReturn true if and only if we can do this so that the resulting number is a power of two.\n","1074":"You are given an array of positive integers beans, where each integer represents the number of magic beans found in a particular magic bag.\nRemove any number of beans (possibly none) from each bag such that the number of beans in each remaining non-empty bag (still containing at least one bean) is equal. Once a bean has been removed from a bag, you are not allowed to return it to any of the bags.\nReturn the minimum number of magic beans that you have to remove.\n","1075":"You are given two positive integers n and target.\nAn integer is considered beautiful if the sum of its digits is less than or equal to target.\nReturn the minimum non-negative integer x such that n + x is beautiful. The input will be generated such that it is always possible to make n beautiful.\n","1076":"Given an array of integers nums, calculate the pivot index of this array.\nThe pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right.\nIf the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array.\nReturn the leftmost pivot index. If no such index exists, return -1.\n","1077":"You are given a 0-indexed integer array nums.\nInitially, all of the indices are unmarked. You are allowed to make this operation any number of times:\nPick two different unmarked indices i and j such that 2 * nums[i] <= nums[j], then mark i and j.\nReturn the maximum possible number of marked indices in nums using the above operation any number of times.\n","1078":"Write a function createCounter. It should accept an initial integer init. It should return an object with three functions.\nThe three functions are:\nincrement() increases the current value by 1 and then returns it.\ndecrement() reduces the current value by 1 and then returns it.\nreset() sets the current value to init and then returns it.\n","1079":"Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.\n","1080":"A string s is called happy if it satisfies the following conditions:\ns only contains the letters 'a', 'b', and 'c'.\ns does not contain any of \"aaa\", \"bbb\", or \"ccc\" as a substring.\ns contains at most a occurrences of the letter 'a'.\ns contains at most b occurrences of the letter 'b'.\ns contains at most c occurrences of the letter 'c'.\nGiven three integers a, b, and c, return the longest possible happy string. If there are multiple longest happy strings, return any of them. If there is no such string, return the empty string \"\".\nA substring is a contiguous sequence of characters within a string.\n","1081":"Given an array of functions [f1, f2, f3, ..., fn], return a new function fn that is the function composition of the array of functions.\nThe function composition of [f(x), g(x), h(x)] is fn(x) = f(g(h(x))).\nThe function composition of an empty list of functions is the identity function f(x) = x.\nYou may assume each function in the array accepts one integer as input and returns one integer as output.\n","1082":"Given a 0-indexed integer array nums, return true if it can be made strictly increasing after removing exactly one element, or false otherwise. If the array is already strictly increasing, return true.\nThe array nums is strictly increasing if nums[i - 1] < nums[i] for each index (1 <= i < nums.length).\n","1083":"You are given a 0-indexed string s. You are also given a 0-indexed string queryCharacters of length k and a 0-indexed array of integer indices queryIndices of length k, both of which are used to describe k queries.\nThe ith query updates the character in s at index queryIndices[i] to the character queryCharacters[i].\nReturn an array lengths of length k where lengths[i] is the length of the longest substring of s consisting of only one repeating character after the ith query is performed.\n","1084":"SQL Schema\nTable: Delivery\n+-----------------------------+---------+\n| Column Name                 | Type    |\n+-----------------------------+---------+\n| delivery_id                 | int     |\n| customer_id                 | int     |\n| order_date                  | date    |\n| customer_pref_delivery_date | date    |\n+-----------------------------+---------+\ndelivery_id is the primary key of this table.\nThe table holds information about food delivery to customers that make orders at some date and specify a preferred delivery date (on the same order date or after it).\n  If the customer's preferred delivery date is the same as the order date, then the order is called immediate; otherwise, it is called scheduled.\nThe first order of a customer is the order with the earliest order date that the customer made. It is guaranteed that a customer has precisely one first order.\nWrite an SQL query to find the percentage of immediate orders in the first orders of all customers, rounded to 2 decimal places.\nThe query result format is in the following example.\n","1085":"Given an integer array nums, return the number of subarrays filled with 0.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","1086":"A string is a valid parentheses string (denoted VPS) if it meets one of the following:\nIt is an empty string \"\", or a single character not equal to \"(\" or \")\",\nIt can be written as AB (A concatenated with B), where A and B are VPS's, or\nIt can be written as (A), where A is a VPS.\nWe can similarly define the nesting depth depth(S) of any VPS S as follows:\ndepth(\"\") = 0\ndepth(C) = 0, where C is a string with a single character not equal to \"(\" or \")\".\ndepth(A + B) = max(depth(A), depth(B)), where A and B are VPS's.\ndepth(\"(\" + A + \")\") = 1 + depth(A), where A is a VPS.\nFor example, \"\", \"()()\", and \"()(()())\" are VPS's (with nesting depths 0, 1, and 2), and \")(\" and \"(()\" are not VPS's.\nGiven a VPS represented as string s, return the nesting depth of s.\n","1087":"Design a number container system that can do the following:\nInsert or Replace a number at the given index in the system.\nReturn the smallest index for the given number in the system.\nImplement the NumberContainers class:\nNumberContainers() Initializes the number container system.\nvoid change(int index, int number) Fills the container at index with the number. If there is already a number at that index, replace it.\nint find(int number) Returns the smallest index for the given number, or -1 if there is no index that is filled by number in the system.\n","1088":"There is an infrastructure of n cities with some number of roads connecting these cities. Each roads[i] = [ai, bi] indicates that there is a bidirectional road between cities ai and bi.\nThe network rank of two different cities is defined as the total number of directly connected roads to either city. If a road is directly connected to both cities, it is only counted once.\nThe maximal network rank of the infrastructure is the maximum network rank of all pairs of different cities.\nGiven the integer n and the array roads, return the maximal network rank of the entire infrastructure.\n","1089":"You are given two linked lists: list1 and list2 of sizes n and m respectively.\nRemove list1's nodes from the ath node to the bth node, and put list2 in their place.\nThe blue edges and nodes in the following figure indicate the result:\nBuild the result list and return its head.\n","1090":"Given a string s and an integer k, return true if you can use all the characters in s to construct k palindrome strings or false otherwise.\n","1091":"You are given a 0-indexed integer array nums and a target element target.\nA target index is an index i such that nums[i] == target.\nReturn a list of the target indices of nums after sorting nums in non-decreasing order. If there are no target indices, return an empty list. The returned list must be sorted in increasing order.\n","1092":"Given an array of integers arr of even length n and an integer k.\nWe want to divide the array into exactly n \/ 2 pairs such that the sum of each pair is divisible by k.\nReturn true If you can find a way to do that or false otherwise.\n","1093":"The alternating sum of a 0-indexed array is defined as the sum of the elements at even indices minus the sum of the elements at odd indices.\nFor example, the alternating sum of [4,2,5,3] is (4 + 5) - (2 + 3) = 4.\nGiven an array nums, return the maximum alternating sum of any subsequence of nums (after reindexing the elements of the subsequence).\nA subsequence of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the remaining elements' relative order. For example, [2,7,4] is a subsequence of [4,2,3,7,2,1,4] (the underlined elements), while [2,4,2] is not.\n","1094":"Implement pow(x, n), which calculates x raised to the power n (i.e., xn).\n","1095":"You are given an integer num. You know that Danny Mittal will sneakily remap one of the 10 possible digits (0 to 9) to another digit.\nReturn the difference between the maximum and minimum values Danny can make by remapping exactly one digit in num.\nNotes:\nWhen Danny remaps a digit d1 to another digit d2, Danny replaces all occurrences of d1 in num with d2.\nDanny can remap a digit to itself, in which case num does not change.\nDanny can remap different digits for obtaining minimum and maximum values respectively.\nThe resulting number after remapping can contain leading zeroes.\nWe mentioned \"Danny Mittal\" to congratulate him on being in the top 10 in Weekly Contest 326.\n","1096":"You are given an n x n grid where we place some 1 x 1 x 1 cubes that are axis-aligned with the x, y, and z axes.\nEach value v = grid[i][j] represents a tower of v cubes placed on top of the cell (i, j).\nWe view the projection of these cubes onto the xy, yz, and zx planes.\nA projection is like a shadow, that maps our 3-dimensional figure to a 2-dimensional plane. We are viewing the \"shadow\" when looking at the cubes from the top, the front, and the side.\nReturn the total area of all three projections.\n","1097":"Given a string date representing a Gregorian calendar date formatted as YYYY-MM-DD, return the day number of the year.\n","1098":"You are given an integer n. There are n rooms numbered from 0 to n - 1.\nYou are given a 2D integer array meetings where meetings[i] = [starti, endi] means that a meeting will be held during the half-closed time interval [starti, endi). All the values of starti are unique.\nMeetings are allocated to rooms in the following manner:\nEach meeting will take place in the unused room with the lowest number.\nIf there are no available rooms, the meeting will be delayed until a room becomes free. The delayed meeting should have the same duration as the original meeting.\nWhen a room becomes unused, meetings that have an earlier original start time should be given the room.\nReturn the number of the room that held the most meetings. If there are multiple rooms, return the room with the lowest number.\nA half-closed interval [a, b) is the interval between a and b including a and not including b.\n","1099":"Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).\n","1100":"Given a string s of lowercase letters, you need to find the maximum number of non-empty substrings of s that meet the following conditions:\nThe substrings do not overlap, that is for any two substrings s[i..j] and s[x..y], either j < x or i > y is true.\nA substring that contains a certain character c must also contain all occurrences of c.\nFind the maximum number of substrings that meet the above conditions. If there are multiple solutions with the same number of substrings, return the one with minimum total length. It can be shown that there exists a unique solution of minimum total length.\nNotice that you can return the substrings in any order.\n","1101":"You are given an m x n integer matrix grid and an array queries of size k.\nFind an array answer of size k such that for each integer queries[i] you start in the top left cell of the matrix and repeat the following process:\nIf queries[i] is strictly greater than the value of the current cell that you are in, then you get one point if it is your first time visiting this cell, and you can move to any adjacent cell in all 4 directions: up, down, left, and right.\nOtherwise, you do not get any points, and you end this process.\nAfter the process, answer[i] is the maximum number of points you can get. Note that for each query you are allowed to visit the same cell multiple times.\nReturn the resulting array answer.\n","1102":"SQL Schema\nTable: RequestAccepted\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| requester_id   | int     |\n| accepter_id    | int     |\n| accept_date    | date    |\n+----------------+---------+\n(requester_id, accepter_id) is the primary key for this table.\nThis table contains the ID of the user who sent the request, the ID of the user who received the request, and the date when the request was accepted.\n  Write an SQL query to find the people who have the most friends and the most friends number.\nThe test cases are generated so that only one person has the most friends.\nThe query result format is in the following example.\n","1103":"Given a 0-indexed integer array nums, find a 0-indexed integer array answer where:\nanswer.length == nums.length.\nanswer[i] = |leftSum[i] - rightSum[i]|.\nWhere:\nleftSum[i] is the sum of elements to the left of the index i in the array nums. If there is no such element, leftSum[i] = 0.\nrightSum[i] is the sum of elements to the right of the index i in the array nums. If there is no such element, rightSum[i] = 0.\nReturn the array answer.\n","1104":"Given two strings s and t, return the number of distinct\nsubsequences\nof s which equals t.\nThe test cases are generated so that the answer fits on a 32-bit signed integer.\n","1105":"Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.\n","1106":"You are given an m x n integer matrix grid, where m and n are both even integers, and an integer k.\nThe matrix is composed of several layers, which is shown in the below image, where each color is its own layer:\nA cyclic rotation of the matrix is done by cyclically rotating each layer in the matrix. To cyclically rotate a layer once, each element in the layer will take the place of the adjacent element in the counter-clockwise direction. An example rotation is shown below:\nReturn the matrix after applying k cyclic rotations to it.\n","1107":"You are given a 0-indexed integer array nums of even length consisting of an equal number of positive and negative integers.\nYou should rearrange the elements of nums such that the modified array follows the given conditions:\nEvery consecutive pair of integers have opposite signs.\nFor all integers with the same sign, the order in which they were present in nums is preserved.\nThe rearranged array begins with a positive integer.\nReturn the modified array after rearranging the elements to satisfy the aforementioned conditions.\n","1108":"A decimal number is called deci-binary if each of its digits is either 0 or 1 without any leading zeros. For example, 101 and 1100 are deci-binary, while 112 and 3001 are not.\nGiven a string n that represents a positive decimal integer, return the minimum number of positive deci-binary numbers needed so that they sum up to n.\n","1109":"You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.\nReturn true if you can reach the last index, or false otherwise.\n","1110":"Given an integer n, return the decimal value of the binary string formed by concatenating the binary representations of 1 to n in order, modulo 109 + 7.\n","1111":"You are given two 0-indexed integer arrays nums and divisors.\nThe divisibility score of divisors[i] is the number of indices j such that nums[j] is divisible by divisors[i].\nReturn the integer divisors[i] with the maximum divisibility score. If there is more than one integer with the maximum score, return the minimum of them.\n","1112":"There exists an undirected and initially unrooted tree with n nodes indexed from 0 to n - 1. You are given the integer n and a 2D integer array edges of length n - 1, where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nEach node has an associated price. You are given an integer array price, where price[i] is the price of the ith node.\nThe price sum of a given path is the sum of the prices of all nodes lying on that path.\nThe tree can be rooted at any node root of your choice. The incurred cost after choosing root is the difference between the maximum and minimum price sum amongst all paths starting at root.\nReturn the maximum possible cost amongst all possible root choices.\n","1113":"You are given a map of a server center, represented as a m * n integer matrix grid, where 1 means that on that cell there is a server and 0 means that it is no server. Two servers are said to communicate if they are on the same row or on the same column.\n\nReturn the number of servers that communicate with any other server.\n","1114":"You are given an integer n.\nEach number from 1 to n is grouped according to the sum of its digits.\nReturn the number of groups that have the largest size.\n","1115":"You are given a 2D integer array ranges and two integers left and right. Each ranges[i] = [starti, endi] represents an inclusive interval between starti and endi.\nReturn true if each integer in the inclusive range [left, right] is covered by at least one interval in ranges. Return false otherwise.\nAn integer x is covered by an interval ranges[i] = [starti, endi] if starti <= x <= endi.\n","1116":"A city is represented as a bi-directional connected graph with n vertices where each vertex is labeled from 1 to n (inclusive). The edges in the graph are represented as a 2D integer array edges, where each edges[i] = [ui, vi] denotes a bi-directional edge between vertex ui and vertex vi. Every vertex pair is connected by at most one edge, and no vertex has an edge to itself. The time taken to traverse any edge is time minutes.\nEach vertex has a traffic signal which changes its color from green to red and vice versa every change minutes. All signals change at the same time. You can enter a vertex at any time, but can leave a vertex only when the signal is green. You cannot wait at a vertex if the signal is green.\nThe second minimum value is defined as the smallest value strictly larger than the minimum value.\nFor example the second minimum value of [2, 3, 4] is 3, and the second minimum value of [2, 2, 4] is 4.\nGiven n, edges, time, and change, return the second minimum time it will take to go from vertex 1 to vertex n.\nNotes:\nYou can go through any vertex any number of times, including 1 and n.\nYou can assume that when the journey starts, all signals have just turned green.\n","1117":"You are given a string s. You can convert s to a\npalindrome\nby adding characters in front of it.\nReturn the shortest palindrome you can find by performing this transformation.\n","1118":"Given an integer array nums and an integer k, find three non-overlapping subarrays of length k with maximum sum and return them.\nReturn the result as a list of indices representing the starting position of each interval (0-indexed). If there are multiple answers, return the lexicographically smallest one.\n","1119":"Write code that enhances all arrays such that you can call the array.groupBy(fn) method on any array and it will return a grouped version of the array.\nA grouped array is an object where each key is the output of fn(arr[i]) and each value is an array containing all items in the original array with that key.\nThe provided callback fn will accept an item in the array and return a string key.\nThe order of each value list should be the order the items appear in the array. Any order of keys is acceptable.\nPlease solve it without lodash's _.groupBy function.\n","1120":"Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is\nthe smallest in lexicographical order\namong all possible results.\n","1121":"You are given an array nums of non-negative integers. nums is considered special if there exists a number x such that there are exactly x numbers in nums that are greater than or equal to x.\nNotice that x does not have to be an element in nums.\nReturn x if the array is special, otherwise, return -1. It can be proven that if nums is special, the value for x is unique.\n","1122":"You are given an array routes representing bus routes where routes[i] is a bus route that the ith bus repeats forever.\nFor example, if routes[0] = [1, 5, 7], this means that the 0th bus travels in the sequence 1 -> 5 -> 7 -> 1 -> 5 -> 7 -> 1 -> ... forever.\nYou will start at the bus stop source (You are not on any bus initially), and you want to go to the bus stop target. You can travel between bus stops by buses only.\nReturn the least number of buses you must take to travel from source to target. Return -1 if it is not possible.\n","1123":"Given an integer array nums, find the\nsubarray\nwith the largest sum, and return its sum.\n","1124":"Given the root of a binary tree, return the sum of values of nodes with an even-valued grandparent. If there are no nodes with an even-valued grandparent, return 0.\nA grandparent of a node is the parent of its parent if it exists.\n","1125":"You are given an array arr which consists of only zeros and ones, divide the array into three non-empty parts such that all of these parts represent the same binary value.\nIf it is possible, return any [i, j] with i + 1 < j, such that:\narr[0], arr[1], ..., arr[i] is the first part,\narr[i + 1], arr[i + 2], ..., arr[j - 1] is the second part, and\narr[j], arr[j + 1], ..., arr[arr.length - 1] is the third part.\nAll three parts have equal binary values.\nIf it is not possible, return [-1, -1].\nNote that the entire part is used when considering what binary value it represents. For example, [1,1,0] represents 6 in decimal, not 3. Also, leading zeros are allowed, so [0,1,1] and [1,1] represent the same value.\n","1126":"Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.\nIn other words, return true if one of s1's permutations is the substring of s2.\n","1127":"Alice and Bob are opponents in an archery competition. The competition has set the following rules:\nAlice first shoots numArrows arrows and then Bob shoots numArrows arrows.\nThe points are then calculated as follows:\nThe target has integer scoring sections ranging from 0 to 11 inclusive.\nFor each section of the target with score k (in between 0 to 11), say Alice and Bob have shot ak and bk arrows on that section respectively. If ak >= bk, then Alice takes k points. If ak < bk, then Bob takes k points.\nHowever, if ak == bk == 0, then nobody takes k points.\nFor example, if Alice and Bob both shot 2 arrows on the section with score 11, then Alice takes 11 points. On the other hand, if Alice shot 0 arrows on the section with score 11 and Bob shot 2 arrows on that same section, then Bob takes 11 points.\nYou are given the integer numArrows and an integer array aliceArrows of size 12, which represents the number of arrows Alice shot on each scoring section from 0 to 11. Now, Bob wants to maximize the total number of points he can obtain.\nReturn the array bobArrows which represents the number of arrows Bob shot on each scoring section from 0 to 11. The sum of the values in bobArrows should equal numArrows.\nIf there are multiple ways for Bob to earn the maximum total points, return any one of them.\n","1128":"Given an integer array nums, return the sum of floor(nums[i] \/ nums[j]) for all pairs of indices 0 <= i, j < nums.length in the array. Since the answer may be too large, return it modulo 109 + 7.\nThe floor() function returns the integer part of the division.\n","1129":"Given two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:\nFind the leftmost occurrence of the substring part and remove it from s.\nReturn s after removing all occurrences of part.\nA substring is a contiguous sequence of characters in a string.\n","1130":"The distance of a pair of integers a and b is defined as the absolute difference between a and b.\nGiven an integer array nums and an integer k, return the kth smallest distance among all the pairs nums[i] and nums[j] where 0 <= i < j < nums.length.\n","1131":"Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.\nThe distance between two adjacent cells is 1.\n","1132":"A k-booking happens when k events have some non-empty intersection (i.e., there is some time that is common to all k events.)\nYou are given some events [startTime, endTime), after each given event, return an integer k representing the maximum k-booking between all the previous events.\nImplement the MyCalendarThree class:\nMyCalendarThree() Initializes the object.\nint book(int startTime, int endTime) Returns an integer k representing the largest integer such that there exists a k-booking in the calendar.\n","1133":"You are given an integer n and an integer p in the range [0, n - 1]. Representing a 0-indexed array arr of length n where all positions are set to 0's, except position p which is set to 1.\nYou are also given an integer array banned containing some positions from the array. For the ith position in banned, arr[banned[i]] = 0, and banned[i] != p.\nYou can perform multiple operations on arr. In an operation, you can choose a subarray with size k and reverse the subarray. However, the 1 in arr should never go to any of the positions in banned. In other words, after each operation arr[banned[i]] remains 0.\nReturn an array ans where for each i from [0, n - 1], ans[i] is the minimum number of reverse operations needed to bring the 1 to position i in arr, or -1 if it is impossible.\nA subarray is a contiguous non-empty sequence of elements within an array.\nThe values of ans[i] are independent for all i's.\nThe reverse of an array is an array containing the values in reverse order.\n","1134":"You are given a 0-indexed array of distinct integers nums.\nThere is an element in nums that has the lowest value and an element that has the highest value. We call them the minimum and maximum respectively. Your goal is to remove both these elements from the array.\nA deletion is defined as either removing an element from the front of the array or removing an element from the back of the array.\nReturn the minimum number of deletions it would take to remove both the minimum and maximum element from the array.\n","1135":"Given the root of a binary tree, return the sum of values of its deepest leaves.\n","1136":"Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.\nNote: You must not use any built-in BigInteger library or convert the inputs to integer directly.\n","1137":"Given an array of strings names of size n. You will create n folders in your file system such that, at the ith minute, you will create a folder with the name names[i].\nSince two files cannot have the same name, if you enter a folder name that was previously used, the system will have a suffix addition to its name in the form of (k), where, k is the smallest positive integer such that the obtained name remains unique.\nReturn an array of strings of length n where ans[i] is the actual name the system will assign to the ith folder when you create it.\n","1138":"An array arr a mountain if the following properties hold:\narr.length >= 3\nThere exists some i with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < arr[i] \narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\nGiven a mountain array arr, return the index i such that arr[0] < arr[1] < ... < arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1].\nYou must solve it in O(log(arr.length)) time complexity.\n","1139":"Given a binary array nums, you should delete one element from it.\nReturn the size of the longest non-empty subarray containing only 1's in the resulting array. Return 0 if there is no such subarray.\n","1140":"You are given a string s consisting of the characters 'a', 'b', and 'c' and a non-negative integer k. Each minute, you may take either the leftmost character of s, or the rightmost character of s.\nReturn the minimum number of minutes needed for you to take at least k of each character, or return -1 if it is not possible to take k of each character.\n","1141":"Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.\n","1142":"Given an integer array nums and an integer k, return the length of the shortest non-empty subarray of nums with a sum of at least k. If there is no such subarray, return -1.\nA subarray is a contiguous part of an array.\n","1143":"Given a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string.\nIf there are fewer than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and leave the other as original.\n","1144":"Given an array of integers temperatures represents the daily temperatures, return an array answer such that answer[i] is the number of days you have to wait after the ith day to get a warmer temperature. If there is no future day for which this is possible, keep answer[i] == 0 instead.\n","1145":"Given the root of a binary tree, determine if it is a complete binary tree.\nIn a complete binary tree, every level, except possibly the last, is completely filled, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\n","1146":"SQL Schema\nTable Activities:\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| sell_date   | date    |\n| product     | varchar |\n+-------------+---------+\nThere is no primary key for this table, it may contain duplicates.\nEach row of this table contains the product name and the date it was sold in a market.\n  Write an SQL query to find for each date the number of different products sold and their names.\nThe sold products names for each date should be sorted lexicographically.\nReturn the result table ordered by sell_date.\nThe query result format is in the following example.\n","1147":"We define the lcp matrix of any 0-indexed string word of n lowercase English letters as an n x n grid such that:\nlcp[i][j] is equal to the length of the longest common prefix between the substrings word[i,n-1] and word[j,n-1].\nGiven an n x n matrix lcp, return the alphabetically smallest string word that corresponds to lcp. If there is no such string, return an empty string.\nA string a is lexicographically smaller than a string b (of the same length) if in the first position where a and b differ, string a has a letter that appears earlier in the alphabet than the corresponding letter in b. For example, \"aabd\" is lexicographically smaller than \"aaca\" because the first position they differ is at the third letter, and 'b' comes before 'c'.\n","1148":"There are n pieces arranged in a line, and each piece is colored either by 'A' or by 'B'. You are given a string colors of length n where colors[i] is the color of the ith piece.\nAlice and Bob are playing a game where they take alternating turns removing pieces from the line. In this game, Alice moves first.\nAlice is only allowed to remove a piece colored 'A' if both its neighbors are also colored 'A'. She is not allowed to remove pieces that are colored 'B'.\nBob is only allowed to remove a piece colored 'B' if both its neighbors are also colored 'B'. He is not allowed to remove pieces that are colored 'A'.\nAlice and Bob cannot remove pieces from the edge of the line.\nIf a player cannot make a move on their turn, that player loses and the other player wins.\nAssuming Alice and Bob play optimally, return true if Alice wins, or return false if Bob wins.\n","1149":"SQL Schema\nTable: Users\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| name          | varchar |\n+---------------+---------+\nid is the primary key for this table.\nname is the name of the user.\n  Table: Rides\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| user_id       | int     |\n| distance      | int     |\n+---------------+---------+\nid is the primary key for this table.\nuser_id is the id of the user who traveled the distance \"distance\".\n  Write an SQL query to report the distance traveled by each user.\nReturn the result table ordered by travelled_distance in descending order, if two or more users traveled the same distance, order them by their name in ascending order.\nThe query result format is in the following example.\n","1150":"You are given a 0-indexed string s and a 0-indexed integer array spaces that describes the indices in the original string where spaces will be added. Each space should be inserted before the character at the given index.\nFor example, given s = \"EnjoyYourCoffee\" and spaces = [5, 9], we place spaces before 'Y' and 'C', which are at indices 5 and 9 respectively. Thus, we obtain \"Enjoy Your Coffee\".\nReturn the modified string after the spaces have been added.\n","1151":"You are given an array of strings ideas that represents a list of names to be used in the process of naming a company. The process of naming a company is as follows:\nChoose 2 distinct names from ideas, call them ideaA and ideaB.\nSwap the first letters of ideaA and ideaB with each other.\nIf both of the new names are not found in the original ideas, then the name ideaA ideaB (the concatenation of ideaA and ideaB, separated by a space) is a valid company name.\nOtherwise, it is not a valid name.\nReturn the number of distinct valid names for the company.\n","1152":"SQL Schema\nTable: Users\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| account      | int     |\n| name         | varchar |\n+--------------+---------+\naccount is the primary key for this table.\nEach row of this table contains the account number of each user in the bank.\nThere will be no two users having the same name in the table.\n  Table: Transactions\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| trans_id      | int     |\n| account       | int     |\n| amount        | int     |\n| transacted_on | date    |\n+---------------+---------+\ntrans_id is the primary key for this table.\nEach row of this table contains all changes made to all accounts.\namount is positive if the user received money and negative if they transferred money.\nAll accounts start with a balance of 0.\n  Write an SQL query to report the name and balance of users with a balance higher than 10000. The balance of an account is equal to the sum of the amounts of all transactions involving that account.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1153":"Given an array of integers, return the maximum sum for a non-empty subarray (contiguous elements) with at most one element deletion. In other words, you want to choose a subarray and optionally delete one element from it so that there is still at least one element left and the sum of the remaining elements is maximum possible.\nNote that the subarray needs to be non-empty after deleting one element.\n","1154":"Given a weighted undirected connected graph with n vertices numbered from 0 to n - 1, and an array edges where edges[i] = [ai, bi, weighti] represents a bidirectional and weighted edge between nodes ai and bi. A minimum spanning tree (MST) is a subset of the graph's edges that connects all vertices without cycles and with the minimum possible total edge weight.\nFind all the critical and pseudo-critical edges in the given graph's minimum spanning tree (MST). An MST edge whose deletion from the graph would cause the MST weight to increase is called a critical edge. On the other hand, a pseudo-critical edge is that which can appear in some MSTs but not all.\nNote that you can return the indices of the edges in any order.\n","1155":"You are given an array items, where each items[i] = [typei, colori, namei] describes the type, color, and name of the ith item. You are also given a rule represented by two strings, ruleKey and ruleValue.\nThe ith item is said to match the rule if one of the following is true:\nruleKey == \"type\" and ruleValue == typei.\nruleKey == \"color\" and ruleValue == colori.\nruleKey == \"name\" and ruleValue == namei.\nReturn the number of items that match the given rule.\n","1156":"Given two integers a and b, return the sum of the two integers without using the operators + and -.\n","1157":"There is an undirected connected tree with n nodes labeled from 0 to n - 1 and n - 1 edges.\nYou are given the integer n and the array edges where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nReturn an array answer of length n where answer[i] is the sum of the distances between the ith node in the tree and all other nodes.\n","1158":"A company is planning to interview 2n people. Given the array costs where costs[i] = [aCosti, bCosti], the cost of flying the ith person to city a is aCosti, and the cost of flying the ith person to city b is bCosti.\nReturn the minimum cost to fly every person to a city such that exactly n people arrive in each city.\n","1159":"Given the root of a binary tree, return the average value of the nodes on each level in the form of an array. Answers within 10-5 of the actual answer will be accepted.\n","1160":"Given an array of n integers nums, a 132 pattern is a subsequence of three integers nums[i], nums[j] and nums[k] such that i < j < k and nums[i] < nums[k] < nums[j].\nReturn true if there is a 132 pattern in nums, otherwise, return false.\n","1161":"Given a 2D grid of size m x n and an integer k. You need to shift the grid k times.\nIn one shift operation:\nElement at grid[i][j] moves to grid[i][j + 1].\nElement at grid[i][n - 1] moves to grid[i + 1][0].\nElement at grid[m - 1][n - 1] moves to grid[0][0].\nReturn the 2D grid after applying shift operation k times.\n","1162":"You are given an undirected weighted graph of n nodes (0-indexed), represented by an edge list where edges[i] = [a, b] is an undirected edge connecting the nodes a and b with a probability of success of traversing that edge succProb[i].\nGiven two nodes start and end, find the path with the maximum probability of success to go from start to end and return its success probability.\nIf there is no path from start to end, return 0. Your answer will be accepted if it differs from the correct answer by at most 1e-5.\n","1163":"Alice is throwing n darts on a very large wall. You are given an array darts where darts[i] = [xi, yi] is the position of the ith dart that Alice threw on the wall.\nBob knows the positions of the n darts on the wall. He wants to place a dartboard of radius r on the wall so that the maximum number of darts that Alice throws lies on the dartboard.\nGiven the integer r, return the maximum number of darts that can lie on the dartboard.\n","1164":"Given the root of a binary tree, return the leftmost value in the last row of the tree.\n","1165":"You are given a 0-indexed string s that you must perform k replacement operations on. The replacement operations are given as three 0-indexed parallel arrays, indices, sources, and targets, all of length k.\nTo complete the ith replacement operation:\nCheck if the substring sources[i] occurs at index indices[i] in the original string s.\nIf it does not occur, do nothing.\nOtherwise if it does occur, replace that substring with targets[i].\nFor example, if s = \"abcd\", indices[i] = 0, sources[i] = \"ab\", and targets[i] = \"eee\", then the result of this replacement will be \"eeecd\".\nAll replacement operations must occur simultaneously, meaning the replacement operations should not affect the indexing of each other. The testcases will be generated such that the replacements will not overlap.\nFor example, a testcase with s = \"abc\", indices = [0, 1], and sources = [\"ab\",\"bc\"] will not be generated because the \"ab\" and \"bc\" replacements overlap.\nReturn the resulting string after performing all replacement operations on s.\nA substring is a contiguous sequence of characters in a string.\n","1166":"You are given a 0-indexed m x n integer matrix grid. Your initial position is at the top-left cell (0, 0).\nStarting from the cell (i, j), you can move to one of the following cells:\nCells (i, k) with j < k <= grid[i][j] + j (rightward movement), or\nCells (k, j) with i < k <= grid[i][j] + i (downward movement).\nReturn the minimum number of cells you need to visit to reach the bottom-right cell (m - 1, n - 1). If there is no valid path, return -1.\n","1167":"You are given an integer array nums. A subsequence of nums is called a square streak if:\nThe length of the subsequence is at least 2, and\nafter sorting the subsequence, each element (except the first element) is the square of the previous number.\nReturn the length of the longest square streak in nums, or return -1 if there is no square streak.\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n","1168":"An integer x is a good if after rotating each digit individually by 180 degrees, we get a valid number that is different from x. Each digit must be rotated - we cannot choose to leave it alone.\nA number is valid if each digit remains a digit after rotation. For example:\n0, 1, and 8 rotate to themselves,\n2 and 5 rotate to each other (in this case they are rotated in a different direction, in other words, 2 or 5 gets mirrored),\n6 and 9 rotate to each other, and\nthe rest of the numbers do not rotate to any other number and become invalid.\nGiven an integer n, return the number of good integers in the range [1, n].\n","1169":"You are given an integer array nums and an integer k.\nFind the longest subsequence of nums that meets the following requirements:\nThe subsequence is strictly increasing and\nThe difference between adjacent elements in the subsequence is at most k.\nReturn the length of the longest subsequence that meets the requirements.\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n","1170":"A binary watch has 4 LEDs on the top to represent the hours (0-11), and 6 LEDs on the bottom to represent the minutes (0-59). Each LED represents a zero or one, with the least significant bit on the right.\nFor example, the below binary watch reads \"4:51\".\nGiven an integer turnedOn which represents the number of LEDs that are currently on (ignoring the PM), return all possible times the watch could represent. You may return the answer in any order.\nThe hour must not contain a leading zero.\nFor example, \"01:00\" is not valid. It should be \"1:00\".\nThe minute must be consist of two digits and may contain a leading zero.\nFor example, \"10:2\" is not valid. It should be \"10:02\".\n","1171":"Given a string s, find the length of the longest\nsubstring\nwithout repeating characters.\n","1172":"You are given a non-negative integer array nums. In one operation, you must:\nChoose a positive integer x such that x is less than or equal to the smallest non-zero element in nums.\nSubtract x from every positive element in nums.\nReturn the minimum number of operations to make every element in nums equal to 0.\n","1173":"Given an integer array nums, return the third distinct maximum number in this array. If the third maximum does not exist, return the maximum number.\n","1174":"The beauty of a string is the difference in frequencies between the most frequent and least frequent characters.\nFor example, the beauty of \"abaacc\" is 3 - 1 = 2.\nGiven a string s, return the sum of beauty of all of its substrings.\n","1175":"Write a generator function that returns a generator object which yields the fibonacci sequence.\nThe fibonacci sequence is defined by the relation Xn = Xn-1 + Xn-2.\nThe first few numbers of the series are 0, 1, 1, 2, 3, 5, 8, 13.\n","1176":"Given an integer array arr, return the length of a maximum size turbulent subarray of arr.\nA subarray is turbulent if the comparison sign flips between each adjacent pair of elements in the subarray.\nMore formally, a subarray [arr[i], arr[i + 1], ..., arr[j]] of arr is said to be turbulent if and only if:\nFor i <= k < j:\narr[k] > arr[k + 1] when k is odd, and\narr[k] < arr[k + 1] when k is even.\nOr, for i <= k < j:\narr[k] > arr[k + 1] when k is even, and\narr[k] < arr[k + 1] when k is odd.\n","1177":"We have a wooden plank of the length n units. Some ants are walking on the plank, each ant moves with a speed of 1 unit per second. Some of the ants move to the left, the other move to the right.\nWhen two ants moving in two different directions meet at some point, they change their directions and continue moving again. Assume changing directions does not take any additional time.\nWhen an ant reaches one end of the plank at a time t, it falls out of the plank immediately.\nGiven an integer n and two integer arrays left and right, the positions of the ants moving to the left and the right, return the moment when the last ant(s) fall out of the plank.\n","1178":"You are given an array nums consisting of positive integers.\nStarting with score = 0, apply the following algorithm:\nChoose the smallest integer of the array that is not marked. If there is a tie, choose the one with the smallest index.\nAdd the value of the chosen integer to score.\nMark the chosen element and its two adjacent elements if they exist.\nRepeat until all the array elements are marked.\nReturn the score you get after applying the above algorithm.\n","1179":"Given an array of strings words, return the first palindromic string in the array. If there is no such string, return an empty string \"\".\nA string is palindromic if it reads the same forward and backward.\n","1180":"Given an integer n, return a counter function. This counter function initially returns n and then returns 1 more than the previous value every subsequent time it is called (n, n + 1, n + 2, etc).\n","1181":"You are given three integers n, m and k. Consider the following algorithm to find the maximum element of an array of positive integers:\nYou should build the array arr which has the following properties:\narr has exactly n integers.\n1 <= arr[i] <= m where (0 <= i < n).\nAfter applying the mentioned algorithm to arr, the value search_cost is equal to k.\nReturn the number of ways to build the array arr under the mentioned conditions. As the answer may grow large, the answer must be computed modulo 109 + 7.\n","1182":"You are given an integer array gifts denoting the number of gifts in various piles. Every second, you do the following:\nChoose the pile with the maximum number of gifts.\nIf there is more than one pile with the maximum number of gifts, choose any.\nLeave behind the floor of the square root of the number of gifts in the pile. Take the rest of the gifts.\nReturn the number of gifts remaining after k seconds.\n","1183":"Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.\nA shift on s consists of moving the leftmost character of s to the rightmost position.\nFor example, if s = \"abcde\", then it will be \"bcdea\" after one shift.\n","1184":"Given an integer array nums and an integer k, modify the array in the following way:\nchoose an index i and replace nums[i] with -nums[i].\nYou should apply this process exactly k times. You may choose the same index i multiple times.\nReturn the largest possible sum of the array after modifying it in this way.\n","1185":"A delivery company wants to build a new service center in a new city. The company knows the positions of all the customers in this city on a 2D-Map and wants to build the new center in a position such that the sum of the euclidean distances to all customers is minimum.\nGiven an array positions where positions[i] = [xi, yi] is the position of the ith customer on the map, return the minimum sum of the euclidean distances to all customers.\nIn other words, you need to choose the position of the service center [xcentre, ycentre] such that the following formula is minimized:\nAnswers within 10-5 of the actual value will be accepted.\n","1186":"You are given an array tasks where tasks[i] = [actuali, minimumi]:\nactuali is the actual amount of energy you spend to finish the ith task.\nminimumi is the minimum amount of energy you require to begin the ith task.\nFor example, if the task is [10, 12] and your current energy is 11, you cannot start this task. However, if your current energy is 13, you can complete this task, and your energy will be 3 after finishing it.\nYou can finish the tasks in any order you like.\nReturn the minimum initial amount of energy you will need to finish all the tasks.\n","1187":"Given an integer array nums, handle multiple queries of the following type:\nCalculate the sum of the elements of nums between indices left and right inclusive where left <= right.\nImplement the NumArray class:\nNumArray(int[] nums) Initializes the object with the integer array nums.\nint sumRange(int left, int right) Returns the sum of the elements of nums between indices left and right inclusive (i.e. nums[left] + nums[left + 1] + ... + nums[right]).\n","1188":"You have k servers numbered from 0 to k-1 that are being used to handle multiple requests simultaneously. Each server has infinite computational capacity but cannot handle more than one request at a time. The requests are assigned to servers according to a specific algorithm:\nThe ith (0-indexed) request arrives.\nIf all servers are busy, the request is dropped (not handled at all).\nIf the (i % k)th server is available, assign the request to that server.\nOtherwise, assign the request to the next available server (wrapping around the list of servers and starting from 0 if necessary). For example, if the ith server is busy, try to assign the request to the (i+1)th server, then the (i+2)th server, and so on.\nYou are given a strictly increasing array arrival of positive integers, where arrival[i] represents the arrival time of the ith request, and another array load, where load[i] represents the load of the ith request (the time it takes to complete). Your goal is to find the busiest server(s). A server is considered busiest if it handled the most number of requests successfully among all the servers.\nReturn a list containing the IDs (0-indexed) of the busiest server(s). You may return the IDs in any order.\n","1189":"Given an integer num, return three consecutive integers (as a sorted array) that sum to num. If num cannot be expressed as the sum of three consecutive integers, return an empty array.\n","1190":"An n x n grid is composed of 1 x 1 squares where each 1 x 1 square consists of a '\/', '\\', or blank space ' '. These characters divide the square into contiguous regions.\nGiven the grid grid represented as a string array, return the number of regions.\nNote that backslash characters are escaped, so a '\\' is represented as '\\\\'.\n","1191":"There are several cards arranged in a row, and each card has an associated number of points. The points are given in the integer array cardPoints.\nIn one step, you can take one card from the beginning or from the end of the row. You have to take exactly k cards.\nYour score is the sum of the points of the cards you have taken.\nGiven the integer array cardPoints and the integer k, return the maximum score you can obtain.\n","1192":"We call a positive integer special if all of its digits are distinct.\nGiven a positive integer n, return the number of special integers that belong to the interval [1, n].\n","1193":"You have two types of tiles: a 2 x 1 domino shape and a tromino shape. You may rotate these shapes.\nGiven an integer n, return the number of ways to tile an 2 x n board. Since the answer may be very large, return it modulo 109 + 7.\nIn a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board such that exactly one of the tilings has both squares occupied by a tile.\n","1194":"You are given an integer finalSum. Split it into a sum of a maximum number of unique positive even integers.\nFor example, given finalSum = 12, the following splits are valid (unique positive even integers summing up to finalSum): (12), (2 + 10), (2 + 4 + 6), and (4 + 8). Among them, (2 + 4 + 6) contains the maximum number of integers. Note that finalSum cannot be split into (2 + 2 + 4 + 4) as all the numbers should be unique.\nReturn a list of integers that represent a valid split containing a maximum number of integers. If no valid split exists for finalSum, return an empty list. You may return the integers in any order.\n","1195":"Given a linked list, swap every two adjacent nodes and return its head. You must solve the problem without modifying the values in the list's nodes (i.e., only nodes themselves may be changed.)\n","1196":"You are given an array points, an integer angle, and your location, where location = [posx, posy] and points[i] = [xi, yi] both denote integral coordinates on the X-Y plane.\nInitially, you are facing directly east from your position. You cannot move from your position, but you can rotate. In other words, posx and posy cannot be changed. Your field of view in degrees is represented by angle, determining how wide you can see from any given view direction. Let d be the amount in degrees that you rotate counterclockwise. Then, your field of view is the inclusive range of angles [d - angle\/2, d + angle\/2].\nYour browser does not support the video tag or this video format.\nYou can see some set of points if, for each point, the angle formed by the point, your position, and the immediate east direction from your position is in your field of view.\nThere can be multiple points at one coordinate. There may be points at your location, and you can always see these points regardless of your rotation. Points do not obstruct your vision to other points.\nReturn the maximum number of points you can see.\n","1197":"Suppose you are given the following code:\nclass FooBar {\n  public void foo() {\n    for (int i = 0; i < n; i++) {\n      print(\"foo\");\n    }\n  }\n\n  public void bar() {\n    for (int i = 0; i < n; i++) {\n      print(\"bar\");\n    }\n  }\n}\nThe same instance of FooBar will be passed to two different threads:\nthread A will call foo(), while\nthread B will call bar().\nModify the given program to output \"foobar\" n times.\n","1198":"You have n boxes labeled from 0 to n - 1. You are given four arrays: status, candies, keys, and containedBoxes where:\nstatus[i] is 1 if the ith box is open and 0 if the ith box is closed,\ncandies[i] is the number of candies in the ith box,\nkeys[i] is a list of the labels of the boxes you can open after opening the ith box.\ncontainedBoxes[i] is a list of the boxes you found inside the ith box.\nYou are given an integer array initialBoxes that contains the labels of the boxes you initially have. You can take all the candies in any open box and you can use the keys in it to open new boxes and you also can use the boxes you find in it.\nReturn the maximum number of candies you can get following the rules above.\n","1199":"You are given a non-negative floating point number rounded to two decimal places celsius, that denotes the temperature in Celsius.\nYou should convert Celsius into Kelvin and Fahrenheit and return it as an array ans = [kelvin, fahrenheit].\nReturn the array ans. Answers within 10-5 of the actual answer will be accepted.\nNote that:\nKelvin = Celsius + 273.15\nFahrenheit = Celsius * 1.80 + 32.00\n","1200":"You are given a 0-indexed integer array nums. In one operation, select any non-negative integer x and an index i, then update nums[i] to be equal to nums[i] AND (nums[i] XOR x).\nNote that AND is the bitwise AND operation and XOR is the bitwise XOR operation.\nReturn the maximum possible bitwise XOR of all elements of nums after applying the operation any number of times.\n","1201":"You are given an integer array nums. You have an integer array arr of the same length with all values set to 0 initially. You also have the following modify function:\nYou want to use the modify function to convert arr to nums using the minimum number of calls.\nReturn the minimum number of function calls to make nums from arr.\nThe test cases are generated so that the answer fits in a 32-bit signed integer.\n","1202":"There is a one-dimensional garden on the x-axis. The garden starts at the point 0 and ends at the point n. (i.e The length of the garden is n).\nThere are n + 1 taps located at points [0, 1, ..., n] in the garden.\nGiven an integer n and an integer array ranges of length n + 1 where ranges[i] (0-indexed) means the i-th tap can water the area [i - ranges[i], i + ranges[i]] if it was open.\nReturn the minimum number of taps that should be open to water the whole garden, If the garden cannot be watered return -1.\n","1203":"Given two string arrays words1 and words2, return the number of strings that appear exactly once in each of the two arrays.\n","1204":"Given an array of integers arr, and three integers a, b and c. You need to find the number of good triplets.\nA triplet (arr[i], arr[j], arr[k]) is good if the following conditions are true:\n0 <= i < j < k < arr.length\n|arr[i] - arr[j]| <= a\n|arr[j] - arr[k]| <= b\n|arr[i] - arr[k]| <= c\nWhere |x| denotes the absolute value of x.\nReturn the number of good triplets.\n","1205":"For a string sequence, a string word is k-repeating if word concatenated k times is a substring of sequence. The word's maximum k-repeating value is the highest value k where word is k-repeating in sequence. If word is not a substring of sequence, word's maximum k-repeating value is 0.\nGiven strings sequence and word, return the maximum k-repeating value of word in sequence.\n","1206":"Alice and Bob take turns playing a game, with Alice starting first.\nYou are given a string num of even length consisting of digits and '?' characters. On each turn, a player will do the following if there is still at least one '?' in num:\nChoose an index i where num[i] == '?'.\nReplace num[i] with any digit between '0' and '9'.\nThe game ends when there are no more '?' characters in num.\nFor Bob to win, the sum of the digits in the first half of num must be equal to the sum of the digits in the second half. For Alice to win, the sums must not be equal.\nFor example, if the game ended with num = \"243801\", then Bob wins because 2+4+3 = 8+0+1. If the game ended with num = \"243803\", then Alice wins because 2+4+3 != 8+0+3.\nAssuming Alice and Bob play optimally, return true if Alice will win and false if Bob will win.\n","1207":"You are given a tree (i.e. a connected, undirected graph that has no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges. The root of the tree is the node 0, and each node of the tree has a label which is a lower-case character given in the string labels (i.e. The node with the number i has the label labels[i]).\nThe edges array is given on the form edges[i] = [ai, bi], which means there is an edge between nodes ai and bi in the tree.\nReturn an array of size n where ans[i] is the number of nodes in the subtree of the ith node which have the same label as node i.\nA subtree of a tree T is the tree consisting of a node in T and all of its descendant nodes.\n","1208":"In a row of dominoes, tops[i] and bottoms[i] represent the top and bottom halves of the ith domino. (A domino is a tile with two numbers from 1 to 6 - one on each half of the tile.)\nWe may rotate the ith domino, so that tops[i] and bottoms[i] swap values.\nReturn the minimum number of rotations so that all the values in tops are the same, or all the values in bottoms are the same.\nIf it cannot be done, return -1.\n","1209":"Given two strings s and t, your goal is to convert s into t in k moves or less.\nDuring the ith (1 <= i <= k) move you can:\nChoose any index j (1-indexed) from s, such that 1 <= j <= s.length and j has not been chosen in any previous move, and shift the character at that index i times.\nDo nothing.\nShifting a character means replacing it by the next letter in the alphabet (wrapping around so that 'z' becomes 'a'). Shifting a character by i means applying the shift operations i times.\nRemember that any index j can be picked at most once.\nReturn true if it's possible to convert s into t in no more than k moves, otherwise return false.\n","1210":"Given the root of a binary tree, find the maximum value v for which there exist different nodes a and b where v = |a.val - b.val| and a is an ancestor of b.\nA node a is an ancestor of b if either: any child of a is equal to b or any child of a is an ancestor of b.\n","1211":"A happy string is a string that:\nconsists only of letters of the set ['a', 'b', 'c'].\ns[i] != s[i + 1] for all values of i from 1 to s.length - 1 (string is 1-indexed).\nFor example, strings \"abc\", \"ac\", \"b\" and \"abcbabcbcb\" are all happy strings and strings \"aa\", \"baa\" and \"ababbc\" are not happy strings.\nGiven two integers n and k, consider a list of all happy strings of length n sorted in lexicographical order.\nReturn the kth string of this list or return an empty string if there are less than k happy strings of length n.\n","1212":"There are n persons on a social media website. You are given an integer array ages where ages[i] is the age of the ith person.\nA Person x will not send a friend request to a person y (x != y) if any of the following conditions is true:\nage[y] <= 0.5 * age[x] + 7\nage[y] > age[x]\nage[y] > 100 && age[x] < 100\nOtherwise, x will send a friend request to y.\nNote that if x sends a request to y, y will not necessarily send a request to x. Also, a person will not send a friend request to themself.\nReturn the total number of friend requests made.\n","1213":"There is a tree (i.e. a connected, undirected graph with no cycles) consisting of n nodes numbered from 0 to n - 1 and exactly n - 1 edges.\nYou are given a 0-indexed integer array vals of length n where vals[i] denotes the value of the ith node. You are also given a 2D integer array edges where edges[i] = [ai, bi] denotes that there exists an undirected edge connecting nodes ai and bi.\nA good path is a simple path that satisfies the following conditions:\nThe starting node and the ending node have the same value.\nAll nodes between the starting node and the ending node have values less than or equal to the starting node (i.e. the starting node's value should be the maximum value along the path).\nReturn the number of distinct good paths.\nNote that a path and its reverse are counted as the same path. For example, 0 -> 1 is considered to be the same as 1 -> 0. A single node is also considered as a valid path.\n","1214":"A school is trying to take an annual photo of all the students. The students are asked to stand in a single file line in non-decreasing order by height. Let this ordering be represented by the integer array expected where expected[i] is the expected height of the ith student in line.\nYou are given an integer array heights representing the current order that the students are standing in. Each heights[i] is the height of the ith student in line (0-indexed).\nReturn the number of indices where heights[i] != expected[i].\n","1215":"Given the root node of a binary search tree and two integers low and high, return the sum of values of all nodes with a value in the inclusive range [low, high].\n","1216":"You are given an array start where start = [startX, startY] represents your initial position (startX, startY) in a 2D space. You are also given the array target where target = [targetX, targetY] represents your target position (targetX, targetY).\nThe cost of going from a position (x1, y1) to any other position in the space (x2, y2) is |x2 - x1| + |y2 - y1|.\nThere are also some special roads. You are given a 2D array specialRoads where specialRoads[i] = [x1i, y1i, x2i, y2i, costi] indicates that the ith special road can take you from (x1i, y1i) to (x2i, y2i) with a cost equal to costi. You can use each special road any number of times.\nReturn the minimum cost required to go from (startX, startY) to (targetX, targetY).\n","1217":"The minimum absolute difference of an array a is defined as the minimum value of |a[i] - a[j]|, where 0 <= i < j < a.length and a[i] != a[j]. If all elements of a are the same, the minimum absolute difference is -1.\nFor example, the minimum absolute difference of the array [5,2,3,7,2] is |2 - 3| = 1. Note that it is not 0 because a[i] and a[j] must be different.\nYou are given an integer array nums and the array queries where queries[i] = [li, ri]. For each query i, compute the minimum absolute difference of the subarray nums[li...ri] containing the elements of nums between the 0-based indices li and ri (inclusive).\nReturn an array ans where ans[i] is the answer to the ith query.\nA subarray is a contiguous sequence of elements in an array.\nThe value of |x| is defined as:\nx if x >= 0.\n-x if x < 0.\n","1218":"You are given a 0-indexed array arr consisting of n positive integers, and a positive integer k.\nThe array arr is called K-increasing if arr[i-k] <= arr[i] holds for every index i, where k <= i <= n-1.\nFor example, arr = [4, 1, 5, 2, 6, 2] is K-increasing for k = 2 because:\narr[0] <= arr[2] (4 <= 5)\narr[1] <= arr[3] (1 <= 2)\narr[2] <= arr[4] (5 <= 6)\narr[3] <= arr[5] (2 <= 2)\nHowever, the same arr is not K-increasing for k = 1 (because arr[0] > arr[1]) or k = 3 (because arr[0] > arr[3]).\nIn one operation, you can choose an index i and change arr[i] into any positive integer.\nReturn the minimum number of operations required to make the array K-increasing for the given k.\n","1219":"You are given a string time in the form of  hh:mm, where some of the digits in the string are hidden (represented by ?).\nThe valid times are those inclusively between 00:00 and 23:59.\nReturn the latest valid time you can get from time by replacing the hidden digits.\n","1220":"You are given a positive integer array grades which represents the grades of students in a university. You would like to enter all these students into a competition in ordered non-empty groups, such that the ordering meets the following conditions:\nThe sum of the grades of students in the ith group is less than the sum of the grades of students in the (i + 1)th group, for all groups (except the last).\nThe total number of students in the ith group is less than the total number of students in the (i + 1)th group, for all groups (except the last).\nReturn the maximum number of groups that can be formed.\n","1221":"Given the root of an n-ary tree, return the preorder traversal of its nodes' values.\nNary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)\n","1222":"You are given an integer array nums. The range of a subarray of nums is the difference between the largest and smallest element in the subarray.\nReturn the sum of all subarray ranges of nums.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","1223":"Given an array of integers arr and an integer k. Find the least number of unique integers after removing exactly k elements.\n","1224":"Write a function that reverses a string. The input string is given as an array of characters s.\nYou must do this by modifying the input array in-place with O(1) extra memory.\n","1225":"We define the string base to be the infinite wraparound string of \"abcdefghijklmnopqrstuvwxyz\", so base will look like this:\n\"...zabcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyzabcd....\".\nGiven a string s, return the number of unique non-empty substrings of s are present in base.\n","1226":"Given a string s of '(' , ')' and lowercase English characters.\nYour task is to remove the minimum number of parentheses ( '(' or ')', in any positions ) so that the resulting parentheses string is valid and return any valid string.\nFormally, a parentheses string is valid if and only if:\nIt is the empty string, contains only lowercase characters, or\nIt can be written as AB (A concatenated with B), where A and B are valid strings, or\nIt can be written as (A), where A is a valid string.\n","1227":"Design your implementation of the circular double-ended queue (deque).\nImplement the MyCircularDeque class:\nMyCircularDeque(int k) Initializes the deque with a maximum size of k.\nboolean insertFront() Adds an item at the front of Deque. Returns true if the operation is successful, or false otherwise.\nboolean insertLast() Adds an item at the rear of Deque. Returns true if the operation is successful, or false otherwise.\nboolean deleteFront() Deletes an item from the front of Deque. Returns true if the operation is successful, or false otherwise.\nboolean deleteLast() Deletes an item from the rear of Deque. Returns true if the operation is successful, or false otherwise.\nint getFront() Returns the front item from the Deque. Returns -1 if the deque is empty.\nint getRear() Returns the last item from Deque. Returns -1 if the deque is empty.\nboolean isEmpty() Returns true if the deque is empty, or false otherwise.\nboolean isFull() Returns true if the deque is full, or false otherwise.\n","1228":"Given a string text, you want to use the characters of text to form as many instances of the word \"balloon\" as possible.\nYou can use each character in text at most once. Return the maximum number of instances that can be formed.\n","1229":"Alice has an undirected tree with n nodes labeled from 0 to n - 1. The tree is represented as a 2D integer array edges of length n - 1 where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nAlice wants Bob to find the root of the tree. She allows Bob to make several guesses about her tree. In one guess, he does the following:\nChooses two distinct integers u and v such that there exists an edge [u, v] in the tree.\nHe tells Alice that u is the parent of v in the tree.\nBob's guesses are represented by a 2D integer array guesses where guesses[j] = [uj, vj] indicates Bob guessed uj to be the parent of vj.\nAlice being lazy, does not reply to each of Bob's guesses, but just says that at least k of his guesses are true.\nGiven the 2D integer arrays edges, guesses and the integer k, return the number of possible nodes that can be the root of Alice's tree. If there is no such tree, return 0.\n","1230":"Given an array of integers nums and an integer limit, return the size of the longest non-empty subarray such that the absolute difference between any two elements of this subarray is less than or equal to limit.\n","1231":"You are given an m x n integer array grid where grid[i][j] could be:\n1 representing the starting square. There is exactly one starting square.\n2 representing the ending square. There is exactly one ending square.\n0 representing empty squares we can walk over.\n-1 representing obstacles that we cannot walk over.\nReturn the number of 4-directional walks from the starting square to the ending square, that walk over every non-obstacle square exactly once.\n","1232":"Given an array of integers nums, you start with an initial positive value startValue.\nIn each iteration, you calculate the step by step sum of startValue plus elements in nums (from left to right).\nReturn the minimum positive value of startValue such that the step by step sum is never less than 1.\n","1233":"Given a binary string s without leading zeros, return true if s contains at most one contiguous segment of ones. Otherwise, return false.\n","1234":"Given an integer array arr, partition the array into (contiguous) subarrays of length at most k. After partitioning, each subarray has their values changed to become the maximum value of that subarray.\nReturn the largest sum of the given array after partitioning. Test cases are generated so that the answer fits in a 32-bit integer.\n","1235":"You are given a string num, representing a large integer, and an integer k.\nWe call some integer wonderful if it is a permutation of the digits in num and is greater in value than num. There can be many wonderful integers. However, we only care about the smallest-valued ones.\nFor example, when num = \"5489355142\":\nThe 1st smallest wonderful integer is \"5489355214\".\nThe 2nd smallest wonderful integer is \"5489355241\".\nThe 3rd smallest wonderful integer is \"5489355412\".\nThe 4th smallest wonderful integer is \"5489355421\".\nReturn the minimum number of adjacent digit swaps that needs to be applied to num to reach the kth smallest wonderful integer.\nThe tests are generated in such a way that kth smallest wonderful integer exists.\n","1236":"You are given an array representing a row of seats where seats[i] = 1 represents a person sitting in the ith seat, and seats[i] = 0 represents that the ith seat is empty (0-indexed).\nThere is at least one empty seat, and at least one person sitting.\nAlex wants to sit in the seat such that the distance between him and the closest person to him is maximized. \nReturn that maximum distance to the closest person.\n","1237":"You are given an array of strings equations that represent relationships between variables where each string equations[i] is of length 4 and takes one of two different forms: \"xi==yi\" or \"xi!=yi\".Here, xi and yi are lowercase letters (not necessarily different) that represent one-letter variable names.\nReturn true if it is possible to assign integers to variable names so as to satisfy all the given equations, or false otherwise.\n","1238":"You are given two 2D integer arrays, items1 and items2, representing two sets of items. Each array items has the following properties:\nitems[i] = [valuei, weighti] where valuei represents the value and weighti represents the weight of the ith item.\nThe value of each item in items is unique.\nReturn a 2D integer array ret where ret[i] = [valuei, weighti], with weighti being the sum of weights of all items with value valuei.\nNote: ret should be returned in ascending order by value.\n","1239":"You are given an integer array ranks and a character array suits. You have 5 cards where the ith card has a rank of ranks[i] and a suit of suits[i].\nThe following are the types of poker hands you can make from best to worst:\n\"Flush\": Five cards of the same suit.\n\"Three of a Kind\": Three cards of the same rank.\n\"Pair\": Two cards of the same rank.\n\"High Card\": Any single card.\nReturn a string representing the best type of poker hand you can make with the given cards.\nNote that the return values are case-sensitive.\n","1240":"You are given an encoded string s. To decode the string to a tape, the encoded string is read one character at a time and the following steps are taken:\nIf the character read is a letter, that letter is written onto the tape.\nIf the character read is a digit d, the entire current tape is repeatedly written d - 1 more times in total.\nGiven an integer k, return the kth letter (1-indexed) in the decoded string.\n","1241":"Given the root of a binary tree, replace the value of each node in the tree with the sum of all its cousins' values.\nTwo nodes of a binary tree are cousins if they have the same depth with different parents.\nReturn the root of the modified tree.\nNote that the depth of a node is the number of edges in the path from the root node to it.\n","1242":"Given a string n representing an integer, return the closest integer (not including itself), which is a palindrome. If there is a tie, return the smaller one.\nThe closest is defined as the absolute difference minimized between two integers.\n","1243":"Given an array of strings words, return the words that can be typed using letters of the alphabet on only one row of American keyboard like the image below.\nIn the American keyboard:\nthe first row consists of the characters \"qwertyuiop\",\nthe second row consists of the characters \"asdfghjkl\", and\nthe third row consists of the characters \"zxcvbnm\".\n","1244":"You are given a 0-indexed string pattern of length n consisting of the characters 'I' meaning increasing and 'D' meaning decreasing.\nA 0-indexed string num of length n + 1 is created using the following conditions:\nnum consists of the digits '1' to '9', where each digit is used at most once.\nIf pattern[i] == 'I', then num[i] < num[i + 1].\nIf pattern[i] == 'D', then num[i] > num[i + 1].\nReturn the lexicographically smallest possible string num that meets the conditions.\n","1245":"Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.\n","1246":"You are given two strings word1 and word2. You want to construct a string merge in the following way: while either word1 or word2 are non-empty, choose one of the following options:\nIf word1 is non-empty, append the first character in word1 to merge and delete it from word1.\nFor example, if word1 = \"abc\" and merge = \"dv\", then after choosing this operation, word1 = \"bc\" and merge = \"dva\".\nIf word2 is non-empty, append the first character in word2 to merge and delete it from word2.\nFor example, if word2 = \"abc\" and merge = \"\", then after choosing this operation, word2 = \"bc\" and merge = \"a\".\nReturn the lexicographically largest merge you can construct.\nA string a is lexicographically larger than a string b (of the same length) if in the first position where a and b differ, a has a character strictly larger than the corresponding character in b. For example, \"abcd\" is lexicographically larger than \"abcc\" because the first position they differ is at the fourth character, and d is greater than c.\n","1247":"You are given two 0-indexed strings s and target. You can take some letters from s and rearrange them to form new strings.\nReturn the maximum number of copies of target that can be formed by taking letters from s and rearranging them.\n","1248":"You are given a string num consisting of digits only.\nReturn the largest palindromic integer (in the form of a string) that can be formed using digits taken from num. It should not contain leading zeroes.\nNotes:\nYou do not need to use all the digits of num, but you must use at least one digit.\nThe digits can be reordered.\n","1249":"You are given two 0-indexed integer arrays nums1 and nums2 of equal length n and a positive integer k. You must choose a subsequence of indices from nums1 of length k.\nFor chosen indices i0, i1, ..., ik - 1, your score is defined as:\nThe sum of the selected elements from nums1 multiplied with the minimum of the selected elements from nums2.\nIt can defined simply as: (nums1[i0] + nums1[i1] +...+ nums1[ik - 1]) * min(nums2[i0] , nums2[i1], ... ,nums2[ik - 1]).\nReturn the maximum possible score.\nA subsequence of indices of an array is a set that can be derived from the set {0, 1, ..., n-1} by deleting some or no elements.\n","1250":"You are given an integer array of unique positive integers nums. Consider the following graph:\nThere are nums.length nodes, labeled nums[0] to nums[nums.length - 1],\nThere is an undirected edge between nums[i] and nums[j] if nums[i] and nums[j] share a common factor greater than 1.\nReturn the size of the largest connected component in the graph.\n","1251":"Given an array arr that represents a permutation of numbers from 1 to n.\nYou have a binary string of size n that initially has all its bits set to zero. At each step i (assuming both the binary string and arr are 1-indexed) from 1 to n, the bit at position arr[i] is set to 1.\nYou are also given an integer m. Find the latest step at which there exists a group of ones of length m. A group of ones is a contiguous substring of 1's such that it cannot be extended in either direction.\nReturn the latest step at which there exists a group of ones of length exactly m. If no such group exists, return -1.\n","1252":"Given an integer array nums of length n and an integer target, find three integers in nums such that the sum is closest to target.\nReturn the sum of the three integers.\nYou may assume that each input would have exactly one solution.\n","1253":"You are given a 0-indexed binary string floor, which represents the colors of tiles on a floor:\nfloor[i] = '0' denotes that the ith tile of the floor is colored black.\nOn the other hand, floor[i] = '1' denotes that the ith tile of the floor is colored white.\nYou are also given numCarpets and carpetLen. You have numCarpets black carpets, each of length carpetLen tiles. Cover the tiles with the given carpets such that the number of white tiles still visible is minimum. Carpets may overlap one another.\nReturn the minimum number of white tiles still visible.\n","1254":"You are playing a solitaire game with three piles of stones of sizes a, b, and c respectively. Each turn you choose two different non-empty piles, take one stone from each, and add 1 point to your score. The game stops when there are fewer than two non-empty piles (meaning there are no more available moves).\nGiven three integers a, b, and c, return the maximum score you can get.\n","1255":"You are given a 0-indexed array nums consisiting of positive integers. You can do the following operation on the array any number of times:\nSelect an index i such that 0 <= i < n - 1 and replace either of nums[i] or nums[i+1] with their gcd value.\nReturn the minimum number of operations to make all elements of nums equal to 1. If it is impossible, return -1.\nThe gcd of two integers is the greatest common divisor of the two integers.\n","1256":"SQL Schema\nTable: Weather\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| recordDate    | date    |\n| temperature   | int     |\n+---------------+---------+\nid is the primary key for this table.\nThis table contains information about the temperature on a certain day.\n  Write an SQL query to find all dates' Id with higher temperatures compared to its previous dates (yesterday).\nReturn the result table in any order.\nThe query result format is in the following example.\n","1257":"Given an integer array arr and a mapping function fn, return a new array with a transformation applied to each element.\nThe returned array should be created such that returnedArray[i] = fn(arr[i], i).\nPlease solve it without the built-in Array.map method.\n","1258":"Your friend is typing his name into a keyboard. Sometimes, when typing a character c, the key might get long pressed, and the character will be typed 1 or more times.\nYou examine the typed characters of the keyboard. Return True if it is possible that it was your friends name, with some characters (possibly none) being long pressed.\n","1259":"Given a string formula representing a chemical formula, return the count of each atom.\nThe atomic element always starts with an uppercase character, then zero or more lowercase letters, representing the name.\nOne or more digits representing that element's count may follow if the count is greater than 1. If the count is 1, no digits will follow.\nFor example, \"H2O\" and \"H2O2\" are possible, but \"H1O2\" is impossible.\nTwo formulas are concatenated together to produce another formula.\nFor example, \"H2O2He3Mg4\" is also a formula.\nA formula placed in parentheses, and a count (optionally added) is also a formula.\nFor example, \"(H2O2)\" and \"(H2O2)3\" are formulas.\nReturn the count of all elements as a string in the following form: the first name (in sorted order), followed by its count (if that count is more than 1), followed by the second name (in sorted order), followed by its count (if that count is more than 1), and so on.\nThe test cases are generated so that all the values in the output fit in a 32-bit integer.\n","1260":"You are given a positive integer k. You are also given:\na 2D integer array rowConditions of size n where rowConditions[i] = [abovei, belowi], and\na 2D integer array colConditions of size m where colConditions[i] = [lefti, righti].\nThe two arrays contain integers from 1 to k.\nYou have to build a k x k matrix that contains each of the numbers from 1 to k exactly once. The remaining cells should have the value 0.\nThe matrix should also satisfy the following conditions:\nThe number abovei should appear in a row that is strictly above the row at which the number belowi appears for all i from 0 to n - 1.\nThe number lefti should appear in a column that is strictly left of the column at which the number righti appears for all i from 0 to m - 1.\nReturn any matrix that satisfies the conditions. If no answer exists, return an empty matrix.\n","1261":"Given an array of integers nums and an integer k, return the number of unique k-diff pairs in the array.\nA k-diff pair is an integer pair (nums[i], nums[j]), where the following are true:\n0 <= i, j < nums.length\ni != j\n|nums[i] - nums[j]| == k\nNotice that |val| denotes the absolute value of val.\n","1262":"You are given a 0-indexed array nums of size n consisting of non-negative integers.\nYou need to apply n - 1 operations to this array where, in the ith operation (0-indexed), you will apply the following on the ith element of nums:\nIf nums[i] == nums[i + 1], then multiply nums[i] by 2 and set nums[i + 1] to 0. Otherwise, you skip this operation.\nAfter performing all the operations, shift all the 0's to the end of the array.\nFor example, the array [1,0,2,0,0,1] after shifting all its 0's to the end, is [1,2,1,0,0,0].\nReturn the resulting array.\nNote that the operations are applied sequentially, not all at once.\n","1263":"Given a 0-indexed integer array nums of size n, find the maximum difference between nums[i] and nums[j] (i.e., nums[j] - nums[i]), such that 0 <= i < j < n and nums[i] < nums[j].\nReturn the maximum difference. If no such i and j exists, return -1.\n","1264":"You are given an array of n strings strs, all of the same length.\nThe strings can be arranged such that there is one on each line, making a grid.\nFor example, strs = [\"abc\", \"bce\", \"cae\"] can be arranged as follows:\nabc\nbce\ncae\nYou want to delete the columns that are not sorted lexicographically. In the above example (0-indexed), columns 0 ('a', 'b', 'c') and 2 ('c', 'e', 'e') are sorted, while column 1 ('b', 'c', 'a') is not, so you would delete column 1.\nReturn the number of columns that you will delete.\n","1265":"You are given a 0-indexed array of positive integers tasks, representing tasks that need to be completed in order, where tasks[i] represents the type of the ith task.\nYou are also given a positive integer space, which represents the minimum number of days that must pass after the completion of a task before another task of the same type can be performed.\nEach day, until all tasks have been completed, you must either:\nComplete the next task from tasks, or\nTake a break.\nReturn the minimum number of days needed to complete all tasks.\n","1266":"You are given a string s formed by digits and '#'. We want to map s to English lowercase characters as follows:\nCharacters ('a' to 'i') are represented by ('1' to '9') respectively.\nCharacters ('j' to 'z') are represented by ('10#' to '26#') respectively.\nReturn the string formed after mapping.\nThe test cases are generated so that a unique mapping will always exist.\n","1267":"You are given a stream of n videos, each represented by a distinct number from 1 to n that you need to \"upload\" to a server. You need to implement a data structure that calculates the length of the longest uploaded prefix at various points in the upload process.\nWe consider i to be an uploaded prefix if all videos in the range 1 to i (inclusive) have been uploaded to the server. The longest uploaded prefix is the maximum value of i that satisfies this definition.\n\nImplement the LUPrefix class:\nLUPrefix(int n) Initializes the object for a stream of n videos.\nvoid upload(int video) Uploads video to the server.\nint longest() Returns the length of the longest uploaded prefix defined above.\n","1268":"There is a country of n cities numbered from 0 to n - 1. In this country, there is a road connecting every pair of cities.\nThere are m friends numbered from 0 to m - 1 who are traveling through the country. Each one of them will take a path consisting of some cities. Each path is represented by an integer array that contains the visited cities in order. The path may contain a city more than once, but the same city will not be listed consecutively.\nGiven an integer n and a 2D integer array paths where paths[i] is an integer array representing the path of the ith friend, return the length of the longest common subpath that is shared by every friend's path, or 0 if there is no common subpath at all.\nA subpath of a path is a contiguous sequence of cities within that path.\n","1269":"You have a pointer at index 0 in an array of size arrLen. At each step, you can move 1 position to the left, 1 position to the right in the array, or stay in the same place (The pointer should not be placed outside the array at any time).\nGiven two integers steps and arrLen, return the number of ways such that your pointer is still at index 0 after exactly steps steps. Since the answer may be too large, return it modulo 109 + 7.\n","1270":"You are given a series of video clips from a sporting event that lasted time seconds. These video clips can be overlapping with each other and have varying lengths.\nEach video clip is described by an array clips where clips[i] = [starti, endi] indicates that the ith clip started at starti and ended at endi.\nWe can cut these clips into segments freely.\nFor example, a clip [0, 7] can be cut into segments [0, 1] + [1, 3] + [3, 7].\nReturn the minimum number of clips needed so that we can cut the clips into segments that cover the entire sporting event [0, time]. If the task is impossible, return -1.\n","1271":"SQL Schema\nTable: Customer\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n| referee_id  | int     |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the id of a customer, their name, and the id of the customer who referred them.\n  Write an SQL query to report the names of the customer that are not referred by the customer with id = 2.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1272":"You are given a network of n nodes represented as an n x n adjacency matrix graph, where the ith node is directly connected to the jth node if graph[i][j] == 1.\nSome nodes initial are initially infected by malware. Whenever two nodes are directly connected, and at least one of those two nodes is infected by malware, both nodes will be infected by malware. This spread of malware will continue until no more nodes can be infected in this manner.\nSuppose M(initial) is the final number of nodes infected with malware in the entire network after the spread of malware stops.\nWe will remove exactly one node from initial, completely removing it and any connections from this node to any other node.\nReturn the node that, if removed, would minimize M(initial). If multiple nodes could be removed to minimize M(initial), return such a node with the smallest index.\n","1273":"You are given an m x n integer grid accounts where accounts[i][j] is the amount of money the ith customer has in the jth bank. Return the wealth that the richest customer has.\nA customer's wealth is the amount of money they have in all their bank accounts. The richest customer is the customer that has the maximum wealth.\n","1274":"Given an integer array arr, remove a subarray (can be empty) from arr such that the remaining elements in arr are non-decreasing.\nReturn the length of the shortest subarray to remove.\nA subarray is a contiguous subsequence of the array.\n","1275":"You are given two string arrays, queries and dictionary. All words in each array comprise of lowercase English letters and have the same length.\nIn one edit you can take a word from queries, and change any letter in it to any other letter. Find all words from queries that, after a maximum of two edits, equal some word from dictionary.\nReturn a list of all words from queries, that match with some word from dictionary after a maximum of two edits. Return the words in the same order they appear in queries.\n","1276":"Given three integers x, y, and bound, return a list of all the powerful integers that have a value less than or equal to bound.\nAn integer is powerful if it can be represented as xi + yj for some integers i >= 0 and j >= 0.\nYou may return the answer in any order. In your answer, each value should occur at most once.\n","1277":"Given an array of integers arr, return true if the number of occurrences of each value in the array is unique or false otherwise.\n","1278":"You are given an n x n grid representing a field of cherries, each cell is one of three possible integers.\n0 means the cell is empty, so you can pass through,\n1 means the cell contains a cherry that you can pick up and pass through, or\n-1 means the cell contains a thorn that blocks your way.\nReturn the maximum number of cherries you can collect by following the rules below:\nStarting at the position (0, 0) and reaching (n - 1, n - 1) by moving right or down through valid path cells (cells with value 0 or 1).\nAfter reaching (n - 1, n - 1), returning to (0, 0) by moving left or up through valid path cells.\nWhen passing through a path cell containing a cherry, you pick it up, and the cell becomes an empty cell 0.\nIf there is no valid path between (0, 0) and (n - 1, n - 1), then no cherries can be collected.\n","1279":"Given an n x n grid containing only values 0 and 1, where 0 represents water and 1 represents land, find a water cell such that its distance to the nearest land cell is maximized, and return the distance. If no land or water exists in the grid, return -1.\nThe distance used in this problem is the Manhattan distance: the distance between two cells (x0, y0) and (x1, y1) is |x0 - x1| + |y0 - y1|.\n","1280":"You are given an undirected graph. You are given an integer n which is the number of nodes in the graph and an array edges, where each edges[i] = [ui, vi] indicates that there is an undirected edge between ui and vi.\nA connected trio is a set of three nodes where there is an edge between every pair of them.\nThe degree of a connected trio is the number of edges where one endpoint is in the trio, and the other is not.\nReturn the minimum degree of a connected trio in the graph, or -1 if the graph has no connected trios.\n","1281":"There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.\nFor example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.\nReturn the ordering of courses you should take to finish all courses. If there are many valid answers, return any of them. If it is impossible to finish all courses, return an empty array.\n","1282":"A string is a valid parentheses string (denoted VPS) if and only if it consists of \"(\" and \")\" characters only, and:\nIt is the empty string, or\nIt can be written as AB (A concatenated with B), where A and B are VPS's, or\nIt can be written as (A), where A is a VPS.\nWe can similarly define the nesting depth depth(S) of any VPS S as follows:\ndepth(\"\") = 0\ndepth(A + B) = max(depth(A), depth(B)), where A and B are VPS's\ndepth(\"(\" + A + \")\") = 1 + depth(A), where A is a VPS.\nFor example,  \"\", \"()()\", and \"()(()())\" are VPS's (with nesting depths 0, 1, and 2), and \")(\" and \"(()\" are not VPS's.\n  Given a VPS seq, split it into two disjoint subsequences A and B, such that A and B are VPS's (and A.length + B.length = seq.length).\nNow choose any such A and B such that max(depth(A), depth(B)) is the minimum possible value.\nReturn an answer array (of length seq.length) that encodes such a choice of A and B:  answer[i] = 0 if seq[i] is part of A, else answer[i] = 1.  Note that even though multiple answers may exist, you may return any of them.\n","1283":"Given a positive integer n, there exists a 0-indexed array called powers, composed of the minimum number of powers of 2 that sum to n. The array is sorted in non-decreasing order, and there is only one way to form the array.\nYou are also given a 0-indexed 2D integer array queries, where queries[i] = [lefti, righti]. Each queries[i] represents a query where you have to find the product of all powers[j] with lefti <= j <= righti.\nReturn an array answers, equal in length to queries, where answers[i] is the answer to the ith query. Since the answer to the ith query may be too large, each answers[i] should be returned modulo 109 + 7.\n","1284":"Write a function that checks if a given value is an instance of a given class or superclass. For this problem, an object is considered an instance of a given class if that object has access to that class's methods.\nThere are no constraints on the data types that can be passed to the function. For example, the value or the class could be undefined.\n","1285":"The factorial of a positive integer n is the product of all positive integers less than or equal to n.\nFor example, factorial(10) = 10 * 9 * 8 * 7 * 6 * 5 * 4 * 3 * 2 * 1.\nWe make a clumsy factorial using the integers in decreasing order by swapping out the multiply operations for a fixed rotation of operations with multiply '*', divide '\/', add '+', and subtract '-' in this order.\nFor example, clumsy(10) = 10 * 9 \/ 8 + 7 - 6 * 5 \/ 4 + 3 - 2 * 1.\nHowever, these operations are still applied using the usual order of operations of arithmetic. We do all multiplication and division steps before any addition or subtraction steps, and multiplication and division steps are processed left to right.\nAdditionally, the division that we use is floor division such that 10 * 9 \/ 8 = 90 \/ 8 = 11.\nGiven an integer n, return the clumsy factorial of n.\n","1286":"You are given an array of non-overlapping axis-aligned rectangles rects where rects[i] = [ai, bi, xi, yi] indicates that (ai, bi) is the bottom-left corner point of the ith rectangle and (xi, yi) is the top-right corner point of the ith rectangle. Design an algorithm to pick a random integer point inside the space covered by one of the given rectangles. A point on the perimeter of a rectangle is included in the space covered by the rectangle.\nAny integer point inside the space covered by one of the given rectangles should be equally likely to be returned.\nNote that an integer point is a point that has integer coordinates.\nImplement the Solution class:\nSolution(int[][] rects) Initializes the object with the given rectangles rects.\nint[] pick() Returns a random integer point [u, v] inside the space covered by one of the given rectangles.\n","1287":"You are given an integer array deck where deck[i] represents the number written on the ith card.\nPartition the cards into one or more groups such that:\nEach group has exactly x cards where x > 1, and\nAll the cards in one group have the same integer written on them.\nReturn true if such partition is possible, or false otherwise.\n","1288":"You are stacking blocks to form a pyramid. Each block has a color, which is represented by a single letter. Each row of blocks contains one less block than the row beneath it and is centered on top.\nTo make the pyramid aesthetically pleasing, there are only specific triangular patterns that are allowed. A triangular pattern consists of a single block stacked on top of two blocks. The patterns are given as a list of three-letter strings allowed, where the first two characters of a pattern represent the left and right bottom blocks respectively, and the third character is the top block.\nFor example, \"ABC\" represents a triangular pattern with a 'C' block stacked on top of an 'A' (left) and 'B' (right) block. Note that this is different from \"BAC\" where 'B' is on the left bottom and 'A' is on the right bottom.\nYou start with a bottom row of blocks bottom, given as a single string, that you must use as the base of the pyramid.\nGiven bottom and allowed, return true if you can build the pyramid all the way to the top such that every triangular pattern in the pyramid is in allowed, or false otherwise.\n","1289":"Given an array of integers nums, sort the array in increasing order based on the frequency of the values. If multiple values have the same frequency, sort them in decreasing order.\nReturn the sorted array.\n","1290":"You are given two 2D integer arrays nums1 and nums2.\nnums1[i] = [idi, vali] indicate that the number with the id idi has a value equal to vali.\nnums2[i] = [idi, vali] indicate that the number with the id idi has a value equal to vali.\nEach array contains unique ids and is sorted in ascending order by id.\nMerge the two arrays into one array that is sorted in ascending order by id, respecting the following conditions:\nOnly ids that appear in at least one of the two arrays should be included in the resulting array.\nEach id should be included only once and its value should be the sum of the values of this id in the two arrays. If the id does not exist in one of the two arrays then its value in that array is considered to be 0.\nReturn the resulting array. The returned array must be sorted in ascending order by id.\n","1291":"Given two integers n and k, construct a list answer that contains n different positive integers ranging from 1 to n and obeys the following requirement:\nSuppose this list is answer = [a1, a2, a3, ... , an], then the list [|a1 - a2|, |a2 - a3|, |a3 - a4|, ... , |an-1 - an|] has exactly k distinct integers.\nReturn the list answer. If there multiple valid answers, return any of them.\n","1292":"You are currently designing a dynamic array. You are given a 0-indexed integer array nums, where nums[i] is the number of elements that will be in the array at time i. In addition, you are given an integer k, the maximum number of times you can resize the array (to any size).\nThe size of the array at time t, sizet, must be at least nums[t] because there needs to be enough space in the array to hold all the elements. The space wasted at time t is defined as sizet - nums[t], and the total space wasted is the sum of the space wasted across every time t where 0 <= t < nums.length.\nReturn the minimum total space wasted if you can resize the array at most k times.\nNote: The array can have any size at the start and does not count towards the number of resizing operations.\n","1293":"You are given the root node of a binary search tree (BST) and a value to insert into the tree. Return the root node of the BST after the insertion. It is guaranteed that the new value does not exist in the original BST.\nNotice that there may exist multiple valid ways for the insertion, as long as the tree remains a BST after insertion. You can return any of them.\n","1294":"Given an integer array nums, you need to find one continuous subarray such that if you only sort this subarray in non-decreasing order, then the whole array will be sorted in non-decreasing order.\nReturn the shortest such subarray and output its length.\n","1295":"There are 8 prison cells in a row and each cell is either occupied or vacant.\nEach day, whether the cell is occupied or vacant changes according to the following rules:\nIf a cell has two adjacent neighbors that are both occupied or both vacant, then the cell becomes occupied.\nOtherwise, it becomes vacant.\nNote that because the prison is a row, the first and the last cells in the row can't have two adjacent neighbors.\nYou are given an integer array cells where cells[i] == 1 if the ith cell is occupied and cells[i] == 0 if the ith cell is vacant, and you are given an integer n.\nReturn the state of the prison after n days (i.e., n such changes described above).\n","1296":"You are given an integer n. We reorder the digits in any order (including the original order) such that the leading digit is not zero.\nReturn true if and only if we can do this so that the resulting number is a power of two.\n","1297":"You are given an array of positive integers beans, where each integer represents the number of magic beans found in a particular magic bag.\nRemove any number of beans (possibly none) from each bag such that the number of beans in each remaining non-empty bag (still containing at least one bean) is equal. Once a bean has been removed from a bag, you are not allowed to return it to any of the bags.\nReturn the minimum number of magic beans that you have to remove.\n","1298":"You are given two positive integers n and target.\nAn integer is considered beautiful if the sum of its digits is less than or equal to target.\nReturn the minimum non-negative integer x such that n + x is beautiful. The input will be generated such that it is always possible to make n beautiful.\n","1299":"Given an array of integers nums, calculate the pivot index of this array.\nThe pivot index is the index where the sum of all the numbers strictly to the left of the index is equal to the sum of all the numbers strictly to the index's right.\nIf the index is on the left edge of the array, then the left sum is 0 because there are no elements to the left. This also applies to the right edge of the array.\nReturn the leftmost pivot index. If no such index exists, return -1.\n","1300":"You are given a 0-indexed integer array nums.\nInitially, all of the indices are unmarked. You are allowed to make this operation any number of times:\nPick two different unmarked indices i and j such that 2 * nums[i] <= nums[j], then mark i and j.\nReturn the maximum possible number of marked indices in nums using the above operation any number of times.\n","1301":"Write a function createCounter. It should accept an initial integer init. It should return an object with three functions.\nThe three functions are:\nincrement() increases the current value by 1 and then returns it.\ndecrement() reduces the current value by 1 and then returns it.\nreset() sets the current value to init and then returns it.\n","1302":"Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.\n","1303":"A string s is called happy if it satisfies the following conditions:\ns only contains the letters 'a', 'b', and 'c'.\ns does not contain any of \"aaa\", \"bbb\", or \"ccc\" as a substring.\ns contains at most a occurrences of the letter 'a'.\ns contains at most b occurrences of the letter 'b'.\ns contains at most c occurrences of the letter 'c'.\nGiven three integers a, b, and c, return the longest possible happy string. If there are multiple longest happy strings, return any of them. If there is no such string, return the empty string \"\".\nA substring is a contiguous sequence of characters within a string.\n","1304":"Given an array of functions [f1, f2, f3, ..., fn], return a new function fn that is the function composition of the array of functions.\nThe function composition of [f(x), g(x), h(x)] is fn(x) = f(g(h(x))).\nThe function composition of an empty list of functions is the identity function f(x) = x.\nYou may assume each function in the array accepts one integer as input and returns one integer as output.\n","1305":"Given a 0-indexed integer array nums, return true if it can be made strictly increasing after removing exactly one element, or false otherwise. If the array is already strictly increasing, return true.\nThe array nums is strictly increasing if nums[i - 1] < nums[i] for each index (1 <= i < nums.length).\n","1306":"You are given a 0-indexed string s. You are also given a 0-indexed string queryCharacters of length k and a 0-indexed array of integer indices queryIndices of length k, both of which are used to describe k queries.\nThe ith query updates the character in s at index queryIndices[i] to the character queryCharacters[i].\nReturn an array lengths of length k where lengths[i] is the length of the longest substring of s consisting of only one repeating character after the ith query is performed.\n","1307":"SQL Schema\nTable: Delivery\n+-----------------------------+---------+\n| Column Name                 | Type    |\n+-----------------------------+---------+\n| delivery_id                 | int     |\n| customer_id                 | int     |\n| order_date                  | date    |\n| customer_pref_delivery_date | date    |\n+-----------------------------+---------+\ndelivery_id is the primary key of this table.\nThe table holds information about food delivery to customers that make orders at some date and specify a preferred delivery date (on the same order date or after it).\n  If the customer's preferred delivery date is the same as the order date, then the order is called immediate; otherwise, it is called scheduled.\nThe first order of a customer is the order with the earliest order date that the customer made. It is guaranteed that a customer has precisely one first order.\nWrite an SQL query to find the percentage of immediate orders in the first orders of all customers, rounded to 2 decimal places.\nThe query result format is in the following example.\n","1308":"Given an integer array nums, return the number of subarrays filled with 0.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","1309":"A string is a valid parentheses string (denoted VPS) if it meets one of the following:\nIt is an empty string \"\", or a single character not equal to \"(\" or \")\",\nIt can be written as AB (A concatenated with B), where A and B are VPS's, or\nIt can be written as (A), where A is a VPS.\nWe can similarly define the nesting depth depth(S) of any VPS S as follows:\ndepth(\"\") = 0\ndepth(C) = 0, where C is a string with a single character not equal to \"(\" or \")\".\ndepth(A + B) = max(depth(A), depth(B)), where A and B are VPS's.\ndepth(\"(\" + A + \")\") = 1 + depth(A), where A is a VPS.\nFor example, \"\", \"()()\", and \"()(()())\" are VPS's (with nesting depths 0, 1, and 2), and \")(\" and \"(()\" are not VPS's.\nGiven a VPS represented as string s, return the nesting depth of s.\n","1310":"Design a number container system that can do the following:\nInsert or Replace a number at the given index in the system.\nReturn the smallest index for the given number in the system.\nImplement the NumberContainers class:\nNumberContainers() Initializes the number container system.\nvoid change(int index, int number) Fills the container at index with the number. If there is already a number at that index, replace it.\nint find(int number) Returns the smallest index for the given number, or -1 if there is no index that is filled by number in the system.\n","1311":"There is an infrastructure of n cities with some number of roads connecting these cities. Each roads[i] = [ai, bi] indicates that there is a bidirectional road between cities ai and bi.\nThe network rank of two different cities is defined as the total number of directly connected roads to either city. If a road is directly connected to both cities, it is only counted once.\nThe maximal network rank of the infrastructure is the maximum network rank of all pairs of different cities.\nGiven the integer n and the array roads, return the maximal network rank of the entire infrastructure.\n","1312":"You are given two linked lists: list1 and list2 of sizes n and m respectively.\nRemove list1's nodes from the ath node to the bth node, and put list2 in their place.\nThe blue edges and nodes in the following figure indicate the result:\nBuild the result list and return its head.\n","1313":"Given a string s and an integer k, return true if you can use all the characters in s to construct k palindrome strings or false otherwise.\n","1314":"You are given a 0-indexed integer array nums and a target element target.\nA target index is an index i such that nums[i] == target.\nReturn a list of the target indices of nums after sorting nums in non-decreasing order. If there are no target indices, return an empty list. The returned list must be sorted in increasing order.\n","1315":"Given an array of integers arr of even length n and an integer k.\nWe want to divide the array into exactly n \/ 2 pairs such that the sum of each pair is divisible by k.\nReturn true If you can find a way to do that or false otherwise.\n","1316":"The alternating sum of a 0-indexed array is defined as the sum of the elements at even indices minus the sum of the elements at odd indices.\nFor example, the alternating sum of [4,2,5,3] is (4 + 5) - (2 + 3) = 4.\nGiven an array nums, return the maximum alternating sum of any subsequence of nums (after reindexing the elements of the subsequence).\nA subsequence of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the remaining elements' relative order. For example, [2,7,4] is a subsequence of [4,2,3,7,2,1,4] (the underlined elements), while [2,4,2] is not.\n","1317":"Implement pow(x, n), which calculates x raised to the power n (i.e., xn).\n","1318":"You are given an integer num. You know that Danny Mittal will sneakily remap one of the 10 possible digits (0 to 9) to another digit.\nReturn the difference between the maximum and minimum values Danny can make by remapping exactly one digit in num.\nNotes:\nWhen Danny remaps a digit d1 to another digit d2, Danny replaces all occurrences of d1 in num with d2.\nDanny can remap a digit to itself, in which case num does not change.\nDanny can remap different digits for obtaining minimum and maximum values respectively.\nThe resulting number after remapping can contain leading zeroes.\nWe mentioned \"Danny Mittal\" to congratulate him on being in the top 10 in Weekly Contest 326.\n","1319":"You are given an n x n grid where we place some 1 x 1 x 1 cubes that are axis-aligned with the x, y, and z axes.\nEach value v = grid[i][j] represents a tower of v cubes placed on top of the cell (i, j).\nWe view the projection of these cubes onto the xy, yz, and zx planes.\nA projection is like a shadow, that maps our 3-dimensional figure to a 2-dimensional plane. We are viewing the \"shadow\" when looking at the cubes from the top, the front, and the side.\nReturn the total area of all three projections.\n","1320":"Given a string date representing a Gregorian calendar date formatted as YYYY-MM-DD, return the day number of the year.\n","1321":"You are given an integer n. There are n rooms numbered from 0 to n - 1.\nYou are given a 2D integer array meetings where meetings[i] = [starti, endi] means that a meeting will be held during the half-closed time interval [starti, endi). All the values of starti are unique.\nMeetings are allocated to rooms in the following manner:\nEach meeting will take place in the unused room with the lowest number.\nIf there are no available rooms, the meeting will be delayed until a room becomes free. The delayed meeting should have the same duration as the original meeting.\nWhen a room becomes unused, meetings that have an earlier original start time should be given the room.\nReturn the number of the room that held the most meetings. If there are multiple rooms, return the room with the lowest number.\nA half-closed interval [a, b) is the interval between a and b including a and not including b.\n","1322":"Given the root of a binary tree, return an array of the largest value in each row of the tree (0-indexed).\n","1323":"Given a string s of lowercase letters, you need to find the maximum number of non-empty substrings of s that meet the following conditions:\nThe substrings do not overlap, that is for any two substrings s[i..j] and s[x..y], either j < x or i > y is true.\nA substring that contains a certain character c must also contain all occurrences of c.\nFind the maximum number of substrings that meet the above conditions. If there are multiple solutions with the same number of substrings, return the one with minimum total length. It can be shown that there exists a unique solution of minimum total length.\nNotice that you can return the substrings in any order.\n","1324":"You are given an m x n integer matrix grid and an array queries of size k.\nFind an array answer of size k such that for each integer queries[i] you start in the top left cell of the matrix and repeat the following process:\nIf queries[i] is strictly greater than the value of the current cell that you are in, then you get one point if it is your first time visiting this cell, and you can move to any adjacent cell in all 4 directions: up, down, left, and right.\nOtherwise, you do not get any points, and you end this process.\nAfter the process, answer[i] is the maximum number of points you can get. Note that for each query you are allowed to visit the same cell multiple times.\nReturn the resulting array answer.\n","1325":"SQL Schema\nTable: RequestAccepted\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| requester_id   | int     |\n| accepter_id    | int     |\n| accept_date    | date    |\n+----------------+---------+\n(requester_id, accepter_id) is the primary key for this table.\nThis table contains the ID of the user who sent the request, the ID of the user who received the request, and the date when the request was accepted.\n  Write an SQL query to find the people who have the most friends and the most friends number.\nThe test cases are generated so that only one person has the most friends.\nThe query result format is in the following example.\n","1326":"Given a 0-indexed integer array nums, find a 0-indexed integer array answer where:\nanswer.length == nums.length.\nanswer[i] = |leftSum[i] - rightSum[i]|.\nWhere:\nleftSum[i] is the sum of elements to the left of the index i in the array nums. If there is no such element, leftSum[i] = 0.\nrightSum[i] is the sum of elements to the right of the index i in the array nums. If there is no such element, rightSum[i] = 0.\nReturn the array answer.\n","1327":"Given two strings s and t, return the number of distinct\nsubsequences\nof s which equals t.\nThe test cases are generated so that the answer fits on a 32-bit signed integer.\n","1328":"Given a collection of numbers, nums, that might contain duplicates, return all possible unique permutations in any order.\n","1329":"You are given an m x n integer matrix grid, where m and n are both even integers, and an integer k.\nThe matrix is composed of several layers, which is shown in the below image, where each color is its own layer:\nA cyclic rotation of the matrix is done by cyclically rotating each layer in the matrix. To cyclically rotate a layer once, each element in the layer will take the place of the adjacent element in the counter-clockwise direction. An example rotation is shown below:\nReturn the matrix after applying k cyclic rotations to it.\n","1330":"You are given a 0-indexed integer array nums of even length consisting of an equal number of positive and negative integers.\nYou should rearrange the elements of nums such that the modified array follows the given conditions:\nEvery consecutive pair of integers have opposite signs.\nFor all integers with the same sign, the order in which they were present in nums is preserved.\nThe rearranged array begins with a positive integer.\nReturn the modified array after rearranging the elements to satisfy the aforementioned conditions.\n","1331":"A decimal number is called deci-binary if each of its digits is either 0 or 1 without any leading zeros. For example, 101 and 1100 are deci-binary, while 112 and 3001 are not.\nGiven a string n that represents a positive decimal integer, return the minimum number of positive deci-binary numbers needed so that they sum up to n.\n","1332":"You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.\nReturn true if you can reach the last index, or false otherwise.\n","1333":"Given an integer n, return the decimal value of the binary string formed by concatenating the binary representations of 1 to n in order, modulo 109 + 7.\n","1334":"You are given two 0-indexed integer arrays nums and divisors.\nThe divisibility score of divisors[i] is the number of indices j such that nums[j] is divisible by divisors[i].\nReturn the integer divisors[i] with the maximum divisibility score. If there is more than one integer with the maximum score, return the minimum of them.\n","1335":"There exists an undirected and initially unrooted tree with n nodes indexed from 0 to n - 1. You are given the integer n and a 2D integer array edges of length n - 1, where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nEach node has an associated price. You are given an integer array price, where price[i] is the price of the ith node.\nThe price sum of a given path is the sum of the prices of all nodes lying on that path.\nThe tree can be rooted at any node root of your choice. The incurred cost after choosing root is the difference between the maximum and minimum price sum amongst all paths starting at root.\nReturn the maximum possible cost amongst all possible root choices.\n","1336":"You are given a map of a server center, represented as a m * n integer matrix grid, where 1 means that on that cell there is a server and 0 means that it is no server. Two servers are said to communicate if they are on the same row or on the same column.\n\nReturn the number of servers that communicate with any other server.\n","1337":"You are given an integer n.\nEach number from 1 to n is grouped according to the sum of its digits.\nReturn the number of groups that have the largest size.\n","1338":"You are given a 2D integer array ranges and two integers left and right. Each ranges[i] = [starti, endi] represents an inclusive interval between starti and endi.\nReturn true if each integer in the inclusive range [left, right] is covered by at least one interval in ranges. Return false otherwise.\nAn integer x is covered by an interval ranges[i] = [starti, endi] if starti <= x <= endi.\n","1339":"A city is represented as a bi-directional connected graph with n vertices where each vertex is labeled from 1 to n (inclusive). The edges in the graph are represented as a 2D integer array edges, where each edges[i] = [ui, vi] denotes a bi-directional edge between vertex ui and vertex vi. Every vertex pair is connected by at most one edge, and no vertex has an edge to itself. The time taken to traverse any edge is time minutes.\nEach vertex has a traffic signal which changes its color from green to red and vice versa every change minutes. All signals change at the same time. You can enter a vertex at any time, but can leave a vertex only when the signal is green. You cannot wait at a vertex if the signal is green.\nThe second minimum value is defined as the smallest value strictly larger than the minimum value.\nFor example the second minimum value of [2, 3, 4] is 3, and the second minimum value of [2, 2, 4] is 4.\nGiven n, edges, time, and change, return the second minimum time it will take to go from vertex 1 to vertex n.\nNotes:\nYou can go through any vertex any number of times, including 1 and n.\nYou can assume that when the journey starts, all signals have just turned green.\n","1340":"You are given a string s. You can convert s to a\npalindrome\nby adding characters in front of it.\nReturn the shortest palindrome you can find by performing this transformation.\n","1341":"Given an integer array nums and an integer k, find three non-overlapping subarrays of length k with maximum sum and return them.\nReturn the result as a list of indices representing the starting position of each interval (0-indexed). If there are multiple answers, return the lexicographically smallest one.\n","1342":"Write code that enhances all arrays such that you can call the array.groupBy(fn) method on any array and it will return a grouped version of the array.\nA grouped array is an object where each key is the output of fn(arr[i]) and each value is an array containing all items in the original array with that key.\nThe provided callback fn will accept an item in the array and return a string key.\nThe order of each value list should be the order the items appear in the array. Any order of keys is acceptable.\nPlease solve it without lodash's _.groupBy function.\n","1343":"Given a string s, remove duplicate letters so that every letter appears once and only once. You must make sure your result is\nthe smallest in lexicographical order\namong all possible results.\n","1344":"You are given an array nums of non-negative integers. nums is considered special if there exists a number x such that there are exactly x numbers in nums that are greater than or equal to x.\nNotice that x does not have to be an element in nums.\nReturn x if the array is special, otherwise, return -1. It can be proven that if nums is special, the value for x is unique.\n","1345":"You are given an array routes representing bus routes where routes[i] is a bus route that the ith bus repeats forever.\nFor example, if routes[0] = [1, 5, 7], this means that the 0th bus travels in the sequence 1 -> 5 -> 7 -> 1 -> 5 -> 7 -> 1 -> ... forever.\nYou will start at the bus stop source (You are not on any bus initially), and you want to go to the bus stop target. You can travel between bus stops by buses only.\nReturn the least number of buses you must take to travel from source to target. Return -1 if it is not possible.\n","1346":"Given an integer array nums, find the\nsubarray\nwith the largest sum, and return its sum.\n","1347":"Given the root of a binary tree, return the sum of values of nodes with an even-valued grandparent. If there are no nodes with an even-valued grandparent, return 0.\nA grandparent of a node is the parent of its parent if it exists.\n","1348":"You are given an array arr which consists of only zeros and ones, divide the array into three non-empty parts such that all of these parts represent the same binary value.\nIf it is possible, return any [i, j] with i + 1 < j, such that:\narr[0], arr[1], ..., arr[i] is the first part,\narr[i + 1], arr[i + 2], ..., arr[j - 1] is the second part, and\narr[j], arr[j + 1], ..., arr[arr.length - 1] is the third part.\nAll three parts have equal binary values.\nIf it is not possible, return [-1, -1].\nNote that the entire part is used when considering what binary value it represents. For example, [1,1,0] represents 6 in decimal, not 3. Also, leading zeros are allowed, so [0,1,1] and [1,1] represent the same value.\n","1349":"Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.\nIn other words, return true if one of s1's permutations is the substring of s2.\n","1350":"Alice and Bob are opponents in an archery competition. The competition has set the following rules:\nAlice first shoots numArrows arrows and then Bob shoots numArrows arrows.\nThe points are then calculated as follows:\nThe target has integer scoring sections ranging from 0 to 11 inclusive.\nFor each section of the target with score k (in between 0 to 11), say Alice and Bob have shot ak and bk arrows on that section respectively. If ak >= bk, then Alice takes k points. If ak < bk, then Bob takes k points.\nHowever, if ak == bk == 0, then nobody takes k points.\nFor example, if Alice and Bob both shot 2 arrows on the section with score 11, then Alice takes 11 points. On the other hand, if Alice shot 0 arrows on the section with score 11 and Bob shot 2 arrows on that same section, then Bob takes 11 points.\nYou are given the integer numArrows and an integer array aliceArrows of size 12, which represents the number of arrows Alice shot on each scoring section from 0 to 11. Now, Bob wants to maximize the total number of points he can obtain.\nReturn the array bobArrows which represents the number of arrows Bob shot on each scoring section from 0 to 11. The sum of the values in bobArrows should equal numArrows.\nIf there are multiple ways for Bob to earn the maximum total points, return any one of them.\n","1351":"Given an integer array nums, return the sum of floor(nums[i] \/ nums[j]) for all pairs of indices 0 <= i, j < nums.length in the array. Since the answer may be too large, return it modulo 109 + 7.\nThe floor() function returns the integer part of the division.\n","1352":"Given two strings s and part, perform the following operation on s until all occurrences of the substring part are removed:\nFind the leftmost occurrence of the substring part and remove it from s.\nReturn s after removing all occurrences of part.\nA substring is a contiguous sequence of characters in a string.\n","1353":"The distance of a pair of integers a and b is defined as the absolute difference between a and b.\nGiven an integer array nums and an integer k, return the kth smallest distance among all the pairs nums[i] and nums[j] where 0 <= i < j < nums.length.\n","1354":"Given an m x n binary matrix mat, return the distance of the nearest 0 for each cell.\nThe distance between two adjacent cells is 1.\n","1355":"A k-booking happens when k events have some non-empty intersection (i.e., there is some time that is common to all k events.)\nYou are given some events [startTime, endTime), after each given event, return an integer k representing the maximum k-booking between all the previous events.\nImplement the MyCalendarThree class:\nMyCalendarThree() Initializes the object.\nint book(int startTime, int endTime) Returns an integer k representing the largest integer such that there exists a k-booking in the calendar.\n","1356":"You are given an integer n and an integer p in the range [0, n - 1]. Representing a 0-indexed array arr of length n where all positions are set to 0's, except position p which is set to 1.\nYou are also given an integer array banned containing some positions from the array. For the ith position in banned, arr[banned[i]] = 0, and banned[i] != p.\nYou can perform multiple operations on arr. In an operation, you can choose a subarray with size k and reverse the subarray. However, the 1 in arr should never go to any of the positions in banned. In other words, after each operation arr[banned[i]] remains 0.\nReturn an array ans where for each i from [0, n - 1], ans[i] is the minimum number of reverse operations needed to bring the 1 to position i in arr, or -1 if it is impossible.\nA subarray is a contiguous non-empty sequence of elements within an array.\nThe values of ans[i] are independent for all i's.\nThe reverse of an array is an array containing the values in reverse order.\n","1357":"You are given a 0-indexed array of distinct integers nums.\nThere is an element in nums that has the lowest value and an element that has the highest value. We call them the minimum and maximum respectively. Your goal is to remove both these elements from the array.\nA deletion is defined as either removing an element from the front of the array or removing an element from the back of the array.\nReturn the minimum number of deletions it would take to remove both the minimum and maximum element from the array.\n","1358":"Given the root of a binary tree, return the sum of values of its deepest leaves.\n","1359":"Given two non-negative integers num1 and num2 represented as strings, return the product of num1 and num2, also represented as a string.\nNote: You must not use any built-in BigInteger library or convert the inputs to integer directly.\n","1360":"Given an array of strings names of size n. You will create n folders in your file system such that, at the ith minute, you will create a folder with the name names[i].\nSince two files cannot have the same name, if you enter a folder name that was previously used, the system will have a suffix addition to its name in the form of (k), where, k is the smallest positive integer such that the obtained name remains unique.\nReturn an array of strings of length n where ans[i] is the actual name the system will assign to the ith folder when you create it.\n","1361":"An array arr a mountain if the following properties hold:\narr.length >= 3\nThere exists some i with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < arr[i] \narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\nGiven a mountain array arr, return the index i such that arr[0] < arr[1] < ... < arr[i - 1] < arr[i] > arr[i + 1] > ... > arr[arr.length - 1].\nYou must solve it in O(log(arr.length)) time complexity.\n","1362":"Given a binary array nums, you should delete one element from it.\nReturn the size of the longest non-empty subarray containing only 1's in the resulting array. Return 0 if there is no such subarray.\n","1363":"You are given a string s consisting of the characters 'a', 'b', and 'c' and a non-negative integer k. Each minute, you may take either the leftmost character of s, or the rightmost character of s.\nReturn the minimum number of minutes needed for you to take at least k of each character, or return -1 if it is not possible to take k of each character.\n","1364":"Given a string s, reverse the order of characters in each word within a sentence while still preserving whitespace and initial word order.\n","1365":"Given an integer array nums and an integer k, return the length of the shortest non-empty subarray of nums with a sum of at least k. If there is no such subarray, return -1.\nA subarray is a contiguous part of an array.\n","1366":"Given a string s and an integer k, reverse the first k characters for every 2k characters counting from the start of the string.\nIf there are fewer than k characters left, reverse all of them. If there are less than 2k but greater than or equal to k characters, then reverse the first k characters and leave the other as original.\n","1367":"A conveyor belt has packages that must be shipped from one port to another within days days.\nThe ith package on the conveyor belt has a weight of weights[i]. Each day, we load the ship with packages on the conveyor belt (in the order given by weights). We may not load more weight than the maximum weight capacity of the ship.\nReturn the least weight capacity of the ship that will result in all the packages on the conveyor belt being shipped within days days.\n","1368":"Given two integers num and k, consider a set of positive integers with the following properties:\nThe units digit of each integer is k.\nThe sum of the integers is num.\nReturn the minimum possible size of such a set, or -1 if no such set exists.\nNote:\nThe set can contain multiple instances of the same integer, and the sum of an empty set is considered 0.\nThe units digit of a number is the rightmost digit of the number.\n","1369":"You are given two integers n and maxValue, which are used to describe an ideal array.\nA 0-indexed integer array arr of length n is considered ideal if the following conditions hold:\nEvery arr[i] is a value from 1 to maxValue, for 0 <= i < n.\nEvery arr[i] is divisible by arr[i - 1], for 0 < i < n.\nReturn the number of distinct ideal arrays of length n. Since the answer may be very large, return it modulo 109 + 7.\n","1370":"Given a positive integer, check whether it has alternating bits: namely, if two adjacent bits will always have different values.\n","1371":"Given the root of a binary tree, the value of a target node target, and an integer k, return an array of the values of all nodes that have a distance k from the target node.\nYou can return the answer in any order.\n","1372":"Given an array of digits which is sorted in non-decreasing order. You can write numbers using each digits[i] as many times as we want. For example, if digits = ['1','3','5'], we may write numbers such as '13', '551', and '1351315'.\nReturn the number of positive integers that can be generated that are less than or equal to a given integer n.\n","1373":"You are given an integer n indicating the number of people in a network. Each person is labeled from 0 to n - 1.\nYou are also given a 0-indexed 2D integer array restrictions, where restrictions[i] = [xi, yi] means that person xi and person yi cannot become friends, either directly or indirectly through other people.\nInitially, no one is friends with each other. You are given a list of friend requests as a 0-indexed 2D integer array requests, where requests[j] = [uj, vj] is a friend request between person uj and person vj.\nA friend request is successful if uj and vj can be friends. Each friend request is processed in the given order (i.e., requests[j] occurs before requests[j + 1]), and upon a successful request, uj and vj become direct friends for all future friend requests.\nReturn a boolean array result, where each result[j] is true if the jth friend request is successful or false if it is not.\nNote: If uj and vj are already direct friends, the request is still successful.\n","1374":"You are given two identical eggs and you have access to a building with n floors labeled from 1 to n.\nYou know that there exists a floor f where 0 <= f <= n such that any egg dropped at a floor higher than f will break, and any egg dropped at or below floor f will not break.\nIn each move, you may take an unbroken egg and drop it from any floor x (where 1 <= x <= n). If the egg breaks, you can no longer use it. However, if the egg does not break, you may reuse it in future moves.\nReturn the minimum number of moves that you need to determine with certainty what the value of f is.\n","1375":"We have n chips, where the position of the ith chip is position[i].\nWe need to move all the chips to the same position. In one step, we can change the position of the ith chip from position[i] to:\nposition[i] + 2 or position[i] - 2 with cost = 0.\nposition[i] + 1 or position[i] - 1 with cost = 1.\nReturn the minimum cost needed to move all the chips to the same position.\n","1376":"Given the head of a singly linked list and two integers left and right where left <= right, reverse the nodes of the list from position left to position right, and return the reversed list.\n","1377":"Given the head of a linked list, rotate the list to the right by k places.\n","1378":"Given an m x n grid of characters board and a string word, return true if word exists in the grid.\nThe word can be constructed from letters of sequentially adjacent cells, where adjacent cells are horizontally or vertically neighboring. The same letter cell may not be used more than once.\n","1379":"Given an array of integers nums which is sorted in ascending order, and an integer target, write a function to search target in nums. If target exists, then return its index. Otherwise, return -1.\nYou must write an algorithm with O(log n) runtime complexity.\n","1380":"A message containing letters from A-Z can be encoded into numbers using the following mapping:\n'A' -> \"1\"\n'B' -> \"2\"\n...\n'Z' -> \"26\"\nTo decode an encoded message, all the digits must be grouped then mapped back into letters using the reverse of the mapping above (there may be multiple ways). For example, \"11106\" can be mapped into:\n\"AAJF\" with the grouping (1 1 10 6)\n\"KJF\" with the grouping (11 10 6)\nNote that the grouping (1 11 06) is invalid because \"06\" cannot be mapped into 'F' since \"6\" is different from \"06\".\nIn addition to the mapping above, an encoded message may contain the '*' character, which can represent any digit from '1' to '9' ('0' is excluded). For example, the encoded message \"1*\" may represent any of the encoded messages \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", or \"19\". Decoding \"1*\" is equivalent to decoding any of the encoded messages it can represent.\nGiven a string s consisting of digits and '*' characters, return the number of ways to decode it.\nSince the answer may be very large, return it modulo 109 + 7.\n","1381":"Given a string s and an array of strings words, return the number of words[i] that is a subsequence of s.\nA subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\nFor example, \"ace\" is a subsequence of \"abcde\".\n","1382":"Given a string num that contains only digits and an integer target, return all possibilities to insert the binary operators '+', '-', and\/or '*' between the digits of num so that the resultant expression evaluates to the target value.\nNote that operands in the returned expressions should not contain leading zeros.\n","1383":"Given an array of integers nums and an integer k. A continuous subarray is called nice if there are k odd numbers on it.\nReturn the number of nice sub-arrays.\n","1384":"You are given an array nums that consists of non-negative integers. Let us define rev(x) as the reverse of the non-negative integer x. For example, rev(123) = 321, and rev(120) = 21. A pair of indices (i, j) is nice if it satisfies all of the following conditions:\n0 <= i < j < nums.length\nnums[i] + rev(nums[j]) == nums[j] + rev(nums[i])\nReturn the number of nice pairs of indices. Since that number can be too large, return it modulo 109 + 7.\n","1385":"Given a string s and a dictionary of strings wordDict, add spaces in s to construct a sentence where each word is a valid dictionary word. Return all such possible sentences in any order.\nNote that the same word in the dictionary may be reused multiple times in the segmentation.\n","1386":"Given an integer n, return the smallest prime palindrome greater than or equal to n.\nAn integer is prime if it has exactly two divisors: 1 and itself. Note that 1 is not a prime number.\nFor example, 2, 3, 5, 7, 11, and 13 are all primes.\nAn integer is a palindrome if it reads the same from left to right as it does from right to left.\nFor example, 101 and 12321 are palindromes.\nThe test cases are generated so that the answer always exists and is in the range [2, 2 * 108].\n","1387":"SQL Schema\nTable: Employee\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| id          | int  |\n| salary      | int  |\n+-------------+------+\nid is the primary key column for this table.\nEach row of this table contains information about the salary of an employee.\n  Write an SQL query to report the second highest salary from the Employee table. If there is no second highest salary, the query should report null.\nThe query result format is in the following example.\n","1388":"You are given a string s, which contains stars *.\nIn one operation, you can:\nChoose a star in s.\nRemove the closest non-star character to its left, as well as remove the star itself.\nReturn the string after all stars have been removed.\nNote:\nThe input will be generated such that the operation is always possible.\nIt can be shown that the resulting string will always be unique.\n","1389":"Given a positive integer n, return the punishment number of n.\nThe punishment number of n is defined as the sum of the squares of all integers i such that:\n1 <= i <= n\nThe decimal representation of i * i can be partitioned into contiguous substrings such that the sum of the integer values of these substrings equals i.\n","1390":"Alice is a caretaker of n gardens and she wants to plant flowers to maximize the total beauty of all her gardens.\nYou are given a 0-indexed integer array flowers of size n, where flowers[i] is the number of flowers already planted in the ith garden. Flowers that are already planted cannot be removed. You are then given another integer newFlowers, which is the maximum number of flowers that Alice can additionally plant. You are also given the integers target, full, and partial.\nA garden is considered complete if it has at least target flowers. The total beauty of the gardens is then determined as the sum of the following:\nThe number of complete gardens multiplied by full.\nThe minimum number of flowers in any of the incomplete gardens multiplied by partial. If there are no incomplete gardens, then this value will be 0.\nReturn the maximum total beauty that Alice can obtain after planting at most newFlowers flowers.\n","1391":"Given the coordinates of two rectilinear rectangles in a 2D plane, return the total area covered by the two rectangles.\nThe first rectangle is defined by its bottom-left corner (ax1, ay1) and its top-right corner (ax2, ay2).\nThe second rectangle is defined by its bottom-left corner (bx1, by1) and its top-right corner (bx2, by2).\n","1392":"SQL Schema\nTable: Employee\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| empId       | int     |\n| name        | varchar |\n| supervisor  | int     |\n| salary      | int     |\n+-------------+---------+\nempId is the primary key column for this table.\nEach row of this table indicates the name and the ID of an employee in addition to their salary and the id of their manager.\n  Table: Bonus\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| empId       | int  |\n| bonus       | int  |\n+-------------+------+\nempId is the primary key column for this table.\nempId is a foreign key to empId from the Employee table.\nEach row of this table contains the id of an employee and their respective bonus.\n  Write an SQL query to report the name and bonus amount of each employee with a bonus less than 1000.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1393":"The XOR total of an array is defined as the bitwise XOR of all its elements, or 0 if the array is empty.\nFor example, the XOR total of the array [2,5,6] is 2 XOR 5 XOR 6 = 1.\nGiven an array nums, return the sum of all XOR totals for every subset of nums. \nNote: Subsets with the same elements should be counted multiple times.\nAn array a is a subset of an array b if a can be obtained from b by deleting some (possibly zero) elements of b.\n","1394":"Given a string s consisting only of characters 'a', 'b', and 'c'. You are asked to apply the following algorithm on the string any number of times:\nPick a non-empty prefix from the string s where all the characters in the prefix are equal.\nPick a non-empty suffix from the string s where all the characters in this suffix are equal.\nThe prefix and the suffix should not intersect at any index.\nThe characters from the prefix and suffix must be the same.\nDelete both the prefix and the suffix.\nReturn the minimum length of s after performing the above operation any number of times (possibly zero times).\n","1395":"Given two version numbers, version1 and version2, compare them.\nVersion numbers consist of one or more revisions joined by a dot '.'. Each revision consists of digits and may contain leading zeros. Every revision contains at least one character. Revisions are 0-indexed from left to right, with the leftmost revision being revision 0, the next revision being revision 1, and so on. For example 2.5.33 and 0.1 are valid version numbers.\nTo compare version numbers, compare their revisions in left-to-right order. Revisions are compared using their integer value ignoring any leading zeros. This means that revisions 1 and 001 are considered equal. If a version number does not specify a revision at an index, then treat the revision as 0. For example, version 1.0 is less than version 1.1 because their revision 0s are the same, but their revision 1s are 0 and 1 respectively, and 0 < 1.\nReturn the following:\nIf version1 < version2, return -1.\nIf version1 > version2, return 1.\nOtherwise, return 0.\n","1396":"There are n bulbs that are initially off. You first turn on all the bulbs, then you turn off every second bulb.\nOn the third round, you toggle every third bulb (turning on if it's off or turning off if it's on). For the ith round, you toggle every i bulb. For the nth round, you only toggle the last bulb.\nReturn the number of bulbs that are on after n rounds.\n","1397":"The letter value of a letter is its position in the alphabet starting from 0 (i.e. 'a' -> 0, 'b' -> 1, 'c' -> 2, etc.).\nThe numerical value of some string of lowercase English letters s is the concatenation of the letter values of each letter in s, which is then converted into an integer.\nFor example, if s = \"acb\", we concatenate each letter's letter value, resulting in \"021\". After converting it, we get 21.\nYou are given three strings firstWord, secondWord, and targetWord, each consisting of lowercase English letters 'a' through 'j' inclusive.\nReturn true if the summation of the numerical values of firstWord and secondWord equals the numerical value of targetWord, or false otherwise.\n","1398":"Given an array intervals where intervals[i] = [li, ri] represent the interval [li, ri), remove all intervals that are covered by another interval in the list.\nThe interval [a, b) is covered by the interval [c, d) if and only if c <= a and b <= d.\nReturn the number of remaining intervals.\n","1399":"Given an integer array nums, return all the different possible non-decreasing subsequences of the given array with at least two elements. You may return the answer in any order.\n","1400":"Given an integer n, return the largest palindromic integer that can be represented as the product of two n-digits integers. Since the answer can be very large, return it modulo 1337.\n","1401":"You are given the head of a linked list with n nodes.\nFor each node in the list, find the value of the next greater node. That is, for each node, find the value of the first node that is next to it and has a strictly larger value than it.\nReturn an integer array answer where answer[i] is the value of the next greater node of the ith node (1-indexed). If the ith node does not have a next greater node, set answer[i] = 0.\n","1402":"Given an array nums with n objects colored red, white, or blue, sort them in-place so that objects of the same color are adjacent, with the colors in the order red, white, and blue.\nWe will use the integers 0, 1, and 2 to represent the color red, white, and blue, respectively.\nYou must solve this problem without using the library's sort function.\n","1403":"You are given an array prices where prices[i] is the price of a given stock on the ith day, and an integer fee representing a transaction fee.\nFind the maximum profit you can achieve. You may complete as many transactions as you like, but you need to pay the transaction fee for each transaction.\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n","1404":"You are given a 0-indexed 2D matrix grid of size m x n, where (r, c) represents:\nA land cell if grid[r][c] = 0, or\nA water cell containing grid[r][c] fish, if grid[r][c] > 0.\nA fisher can start at any water cell (r, c) and can do the following operations any number of times:\nCatch all the fish at cell (r, c), or\nMove to any adjacent water cell.\nReturn the maximum number of fish the fisher can catch if he chooses his starting cell optimally, or 0 if no water cell exists.\nAn adjacent cell of the cell (r, c), is one of the cells (r, c + 1), (r, c - 1), (r + 1, c) or (r - 1, c) if it exists.\n","1405":"Given a date string in the form Day Month Year, where:\nDay is in the set {\"1st\", \"2nd\", \"3rd\", \"4th\", ..., \"30th\", \"31st\"}.\nMonth is in the set {\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"}.\nYear is in the range [1900, 2100].\nConvert the date string to the format YYYY-MM-DD, where:\nYYYY denotes the 4 digit year.\nMM denotes the 2 digit month.\nDD denotes the 2 digit day.\n","1406":"Given a m x n matrix grid which is sorted in non-increasing order both row-wise and column-wise, return the number of negative numbers in grid.\n","1407":"Given the strings s1 and s2 of size n and the string evil, return the number of good strings.\nA good string has size n, it is alphabetically greater than or equal to s1, it is alphabetically smaller than or equal to s2, and it does not contain the string evil as a substring. Since the answer can be a huge number, return this modulo 109 + 7.\n","1408":"You are given a string s consisting only of uppercase English letters.\nYou can apply some operations to this string where, in one operation, you can remove any occurrence of one of the substrings \"AB\" or \"CD\" from s.\nReturn the minimum possible length of the resulting string that you can obtain.\nNote that the string concatenates after removing the substring and could produce new \"AB\" or \"CD\" substrings.\n","1409":"You are asked to cut off all the trees in a forest for a golf event. The forest is represented as an m x n matrix. In this matrix:\n0 means the cell cannot be walked through.\n1 represents an empty cell that can be walked through.\nA number greater than 1 represents a tree in a cell that can be walked through, and this number is the tree's height.\nIn one step, you can walk in any of the four directions: north, east, south, and west. If you are standing in a cell with a tree, you can choose whether to cut it off.\nYou must cut off the trees in order from shortest to tallest. When you cut off a tree, the value at its cell becomes 1 (an empty cell).\nStarting from the point (0, 0), return the minimum steps you need to walk to cut off all the trees. If you cannot cut off all the trees, return -1.\nNote: The input is generated such that no two trees have the same height, and there is at least one tree needs to be cut off.\n","1410":"You are given an array nums consisting of non-negative integers. You are also given a queries array, where queries[i] = [xi, mi].\nThe answer to the ith query is the maximum bitwise XOR value of xi and any element of nums that does not exceed mi. In other words, the answer is max(nums[j] XOR xi) for all j such that nums[j] <= mi. If all elements in nums are larger than mi, then the answer is -1.\nReturn an integer array answer where answer.length == queries.length and answer[i] is the answer to the ith query.\n","1411":"You are given two sorted arrays of distinct integers nums1 and nums2.\nA valid path is defined as follows:\nChoose array nums1 or nums2 to traverse (from index-0).\nTraverse the current array from left to right.\nIf you are reading any value that is present in nums1 and nums2 you are allowed to change your path to the other array. (Only one repeated value is considered in the valid path).\nThe score is defined as the sum of uniques values in a valid path.\nReturn the maximum score you can obtain of all possible valid paths. Since the answer may be too large, return it modulo 109 + 7.\n","1412":"Given an integer array nums (0-indexed) and two integers target and start, find an index i such that nums[i] == target and abs(i - start) is minimized. Note that abs(x) is the absolute value of x.\nReturn abs(i - start).\nIt is guaranteed that target exists in nums.\n","1413":"Given the heads of two singly linked-lists headA and headB, return the node at which the two lists intersect. If the two linked lists have no intersection at all, return null.\nFor example, the following two linked lists begin to intersect at node c1:\nThe test cases are generated such that there are no cycles anywhere in the entire linked structure.\nNote that the linked lists must retain their original structure after the function returns.\nCustom Judge:\nThe inputs to the judge are given as follows (your program is not given these inputs):\nintersectVal - The value of the node where the intersection occurs. This is 0 if there is no intersected node.\nlistA - The first linked list.\nlistB - The second linked list.\nskipA - The number of nodes to skip ahead in listA (starting from the head) to get to the intersected node.\nskipB - The number of nodes to skip ahead in listB (starting from the head) to get to the intersected node.\nThe judge will then create the linked structure based on these inputs and pass the two heads, headA and headB to your program. If you correctly return the intersected node, then your solution will be accepted.\n","1414":"Given an integer array arr and an integer k, modify the array by repeating it k times.\nFor example, if arr = [1, 2] and k = 3 then the modified array will be [1, 2, 1, 2, 1, 2].\nReturn the maximum sub-array sum in the modified array. Note that the length of the sub-array can be 0 and its sum in that case is 0.\nAs the answer can be very large, return the answer modulo 109 + 7.\n","1415":"You are given a 0-indexed array nums that consists of n distinct positive integers. Apply m operations to this array, where in the ith operation you replace the number operations[i][0] with operations[i][1].\nIt is guaranteed that in the ith operation:\noperations[i][0] exists in nums.\noperations[i][1] does not exist in nums.\nReturn the array obtained after applying all the operations.\n","1416":"Given an integer array sorted in non-decreasing order, there is exactly one integer in the array that occurs more than 25% of the time, return that integer.\n","1417":"You are given an integer array nums. Two players are playing a game with this array: player 1 and player 2.\nPlayer 1 and player 2 take turns, with player 1 starting first. Both players start the game with a score of 0. At each turn, the player takes one of the numbers from either end of the array (i.e., nums[0] or nums[nums.length - 1]) which reduces the size of the array by 1. The player adds the chosen number to their score. The game ends when there are no more elements in the array.\nReturn true if Player 1 can win the game. If the scores of both players are equal, then player 1 is still the winner, and you should also return true. You may assume that both players are playing optimally.\n","1418":"You are given an integer array arr. Sort the integers in the array in ascending order by the number of 1's in their binary representation and in case of two or more integers have the same number of 1's you have to sort them in ascending order.\nReturn the array after sorting it.\n","1419":"SQL Schema\nTable: Accounts\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| account_id  | int  |\n| income      | int  |\n+-------------+------+\naccount_id is the primary key for this table.\nEach row contains information about the monthly income for one bank account.\n  Write an SQL query to report the number of bank accounts of each salary category. The salary categories are:\n\"Low Salary\": All the salaries strictly less than $20000.\n\"Average Salary\": All the salaries in the inclusive range [$20000, $50000].\n\"High Salary\": All the salaries strictly greater than $50000.\nThe result table must contain all three categories. If there are no accounts in a category, then report 0.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1420":"Implement a first in first out (FIFO) queue using only two stacks. The implemented queue should support all the functions of a normal queue (push, peek, pop, and empty).\nImplement the MyQueue class:\nvoid push(int x) Pushes element x to the back of the queue.\nint pop() Removes the element from the front of the queue and returns it.\nint peek() Returns the element at the front of the queue.\nboolean empty() Returns true if the queue is empty, false otherwise.\nNotes:\nYou must use only standard operations of a stack, which means only push to top, peek\/pop from top, size, and is empty operations are valid.\nDepending on your language, the stack may not be supported natively. You may simulate a stack using a list or deque (double-ended queue) as long as you use only a stack's standard operations.\n","1421":"You want to schedule a list of jobs in d days. Jobs are dependent (i.e To work on the ith job, you have to finish all the jobs j where 0 <= j < i).\nYou have to finish at least one task every day. The difficulty of a job schedule is the sum of difficulties of each day of the d days. The difficulty of a day is the maximum difficulty of a job done on that day.\nYou are given an integer array jobDifficulty and an integer d. The difficulty of the ith job is jobDifficulty[i].\nReturn the minimum difficulty of a job schedule. If you cannot find a schedule for the jobs return -1.\n","1422":"You wrote down many positive integers in a string called num. However, you realized that you forgot to add commas to seperate the different numbers. You remember that the list of integers was non-decreasing and that no integer had leading zeros.\nReturn the number of possible lists of integers that you could have written down to get the string num. Since the answer may be large, return it modulo 109 + 7.\n","1423":"Given an array of integers nums and an integer target, return indices of the two numbers such that they add up to target.\nYou may assume that each input would have exactly one solution, and you may not use the same element twice.\nYou can return the answer in any order.\n","1424":"You are given an array target that consists of distinct integers and another integer array arr that can have duplicates.\nIn one operation, you can insert any integer at any position in arr. For example, if arr = [1,4,1,2], you can add 3 in the middle and make it [1,4,3,1,2]. Note that you can insert the integer at the very beginning or end of the array.\nReturn the minimum number of operations needed to make target a subsequence of arr.\nA subsequence of an array is a new array generated from the original array by deleting some elements (possibly none) without changing the remaining elements' relative order. For example, [2,7,4] is a subsequence of [4,2,3,7,2,1,4] (the underlined elements), while [2,4,2] is not.\n","1425":"Given an input string s and a pattern p, implement regular expression matching with support for '.' and '*' where:\n'.' Matches any single character.\n'*' Matches zero or more of the preceding element.\nThe matching should cover the entire input string (not partial).\n","1426":"Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).\n","1427":"You are given a string, message, and a positive integer, limit.\nYou must split message into one or more parts based on limit. Each resulting part should have the suffix \"<a\/b>\", where \"b\" is to be replaced with the total number of parts and \"a\" is to be replaced with the index of the part, starting from 1 and going up to b. Additionally, the length of each resulting part (including its suffix) should be equal to limit, except for the last part whose length can be at most limit.\nThe resulting parts should be formed such that when their suffixes are removed and they are all concatenated in order, they should be equal to message. Also, the result should contain as few parts as possible.\nReturn the parts message would be split into as an array of strings. If it is impossible to split message as required, return an empty array.\n","1428":"Given a string s and an integer k, return the maximum number of vowel letters in any substring of s with length k.\nVowel letters in English are 'a', 'e', 'i', 'o', and 'u'.\n","1429":"Given a binary string s, return the minimum number of character swaps to make it alternating, or -1 if it is impossible.\nThe string is called alternating if no two adjacent characters are equal. For example, the strings \"010\" and \"1010\" are alternating, while the string \"0100\" is not.\nAny two characters may be swapped, even if they are not adjacent.\n","1430":"You are given an m x n matrix of characters box representing a side-view of a box. Each cell of the box is one of the following:\nA stone '#'\nA stationary obstacle '*'\nEmpty '.'\nThe box is rotated 90 degrees clockwise, causing some of the stones to fall due to gravity. Each stone falls down until it lands on an obstacle, another stone, or the bottom of the box. Gravity does not affect the obstacles' positions, and the inertia from the box's rotation does not affect the stones' horizontal positions.\nIt is guaranteed that each stone in box rests on an obstacle, another stone, or the bottom of the box.\nReturn an n x m matrix representing the box after the rotation described above.\n","1431":"SQL Schema\nTable: Signups\n+----------------+----------+\n| Column Name    | Type     |\n+----------------+----------+\n| user_id        | int      |\n| time_stamp     | datetime |\n+----------------+----------+\nuser_id is the primary key for this table.\nEach row contains information about the signup time for the user with ID user_id.\n  Table: Confirmations\n+----------------+----------+\n| Column Name    | Type     |\n+----------------+----------+\n| user_id        | int      |\n| time_stamp     | datetime |\n| action         | ENUM     |\n+----------------+----------+\n(user_id, time_stamp) is the primary key for this table.\nuser_id is a foreign key with a reference to the Signups table.\naction is an ENUM of the type ('confirmed', 'timeout')\nEach row of this table indicates that the user with ID user_id requested a confirmation message at time_stamp and that confirmation message was either confirmed ('confirmed') or expired without confirming ('timeout').\n  The confirmation rate of a user is the number of 'confirmed' messages divided by the total number of requested confirmation messages. The confirmation rate of a user that did not request any confirmation messages is 0. Round the confirmation rate to two decimal places.\nWrite an SQL query to find the confirmation rate of each user.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1432":"Write code that enhances all arrays such that you can call the array.last() method on any array and it will return the last element. If there are no elements in the array, it should return -1.\n","1433":"Given an integer array nums of unique elements, return all possible\nsubsets\n(the power set).\nThe solution set must not contain duplicate subsets. Return the solution in any order.\n","1434":"An integer array is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\nFor example, [1,3,5,7,9], [7,7,7,7], and [3,-1,-5,-9] are arithmetic sequences.\nGiven an integer array nums, return the number of arithmetic subarrays of nums.\nA subarray is a contiguous subsequence of the array.\n","1435":"Given an integer n, add a dot (\".\") as the thousands separator and return it in string format.\n","1436":"In MATLAB, there is a handy function called reshape which can reshape an m x n matrix into a new one with a different size r x c keeping its original data.\nYou are given an m x n matrix mat and two integers r and c representing the number of rows and the number of columns of the wanted reshaped matrix.\nThe reshaped matrix should be filled with all the elements of the original matrix in the same row-traversing order as they were.\nIf the reshape operation with given parameters is possible and legal, output the new reshaped matrix; Otherwise, output the original matrix.\n","1437":"Given an integer n, your task is to count how many strings of length n can be formed under the following rules:\nEach character is a lower case vowel ('a', 'e', 'i', 'o', 'u')\nEach vowel 'a' may only be followed by an 'e'.\nEach vowel 'e' may only be followed by an 'a' or an 'i'.\nEach vowel 'i' may not be followed by another 'i'.\nEach vowel 'o' may only be followed by an 'i' or a 'u'.\nEach vowel 'u' may only be followed by an 'a'.\nSince the answer may be too large, return it modulo 10^9 + 7.\n","1438":"Given the root of a binary tree, return its maximum depth.\nA binary tree's maximum depth is the number of nodes along the longest path from the root node down to the farthest leaf node.\n","1439":"You are given a string text. You can swap two of the characters in the text.\nReturn the length of the longest substring with repeated characters.\n","1440":"You are given a rectangular cake of size h x w and two arrays of integers horizontalCuts and verticalCuts where:\nhorizontalCuts[i] is the distance from the top of the rectangular cake to the ith horizontal cut and similarly, and\nverticalCuts[j] is the distance from the left of the rectangular cake to the jth vertical cut.\nReturn the maximum area of a piece of cake after you cut at each horizontal and vertical position provided in the arrays horizontalCuts and verticalCuts. Since the answer can be a large number, return this modulo 109 + 7.\n","1441":"Given a collection of candidate numbers (candidates) and a target number (target), find all unique combinations in candidates where the candidate numbers sum to target.\nEach number in candidates may only be used once in the combination.\nNote: The solution set must not contain duplicate combinations.\n","1442":"You are given a strictly increasing integer array rungs that represents the height of rungs on a ladder. You are currently on the floor at height 0, and you want to reach the last rung.\nYou are also given an integer dist. You can only climb to the next highest rung if the distance between where you are currently at (the floor or on a rung) and the next rung is at most dist. You are able to insert rungs at any positive integer height if a rung is not already there.\nReturn the minimum number of rungs that must be added to the ladder in order for you to climb to the last rung.\n","1443":"Given a string path, which is an absolute path (starting with a slash '\/') to a file or directory in a Unix-style file system, convert it to the simplified canonical path.\nIn a Unix-style file system, a period '.' refers to the current directory, a double period '..' refers to the directory up a level, and any multiple consecutive slashes (i.e. '\/\/') are treated as a single slash '\/'. For this problem, any other format of periods such as '...' are treated as file\/directory names.\nThe canonical path should have the following format:\nThe path starts with a single slash '\/'.\nAny two directories are separated by a single slash '\/'.\nThe path does not end with a trailing '\/'.\nThe path only contains the directories on the path from the root directory to the target file or directory (i.e., no period '.' or double period '..')\nReturn the simplified canonical path.\n","1444":"Given an integer array nums and an integer k, return true if nums has a good subarray or false otherwise.\nA good subarray is a subarray where:\nits length is at least two, and\nthe sum of the elements of the subarray is a multiple of k.\nNote that:\nA subarray is a contiguous part of the array.\nAn integer x is a multiple of k if there exists an integer n such that x = n * k. 0 is always a multiple of k.\n","1445":"You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed. All houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, adjacent houses have a security system connected, and it will automatically contact the police if two adjacent houses were broken into on the same night.\nGiven an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.\n","1446":"You are given an integer array prices representing the daily price history of a stock, where prices[i] is the stock price on the ith day.\nA smooth descent period of a stock consists of one or more contiguous days such that the price on each day is lower than the price on the preceding day by exactly 1. The first day of the period is exempted from this rule.\nReturn the number of smooth descent periods.\n","1447":"A sequence of numbers is called an arithmetic progression if the difference between any two consecutive elements is the same.\nGiven an array of numbers arr, return true if the array can be rearranged to form an arithmetic progression. Otherwise, return false.\n","1448":"There is a tree (i.e., a connected, undirected graph with no cycles) structure country network consisting of n cities numbered from 0 to n - 1 and exactly n - 1 roads. The capital city is city 0. You are given a 2D integer array roads where roads[i] = [ai, bi] denotes that there exists a bidirectional road connecting cities ai and bi.\nThere is a meeting for the representatives of each city. The meeting is in the capital city.\nThere is a car in each city. You are given an integer seats that indicates the number of seats in each car.\nA representative can use the car in their city to travel or change the car and ride with another representative. The cost of traveling between two cities is one liter of fuel.\nReturn the minimum number of liters of fuel to reach the capital city.\n","1449":"A sentence is a list of words that are separated by a single space with no leading or trailing spaces.\nFor example, \"Hello World\", \"HELLO\", \"hello world hello world\" are all sentences.\nWords consist of only uppercase and lowercase English letters. Uppercase and lowercase English letters are considered different.\nA sentence is circular if:\nThe last character of a word is equal to the first character of the next word.\nThe last character of the last word is equal to the first character of the first word.\nFor example, \"leetcode exercises sound delightful\", \"eetcode\", \"leetcode eats soul\" are all circular sentences. However, \"Leetcode is cool\", \"happy Leetcode\", \"Leetcode\" and \"I like Leetcode\" are not circular sentences.\nGiven a string sentence, return true if it is circular. Otherwise, return false.\n","1450":"Given an array of strings strs, group the anagrams together. You can return the answer in any order.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n","1451":"You are given two string arrays words1 and words2.\nA string b is a subset of string a if every letter in b occurs in a including multiplicity.\nFor example, \"wrr\" is a subset of \"warrior\" but is not a subset of \"world\".\nA string a from words1 is universal if for every string b in words2, b is a subset of a.\nReturn an array of all the universal strings in words1. You may return the answer in any order.\n","1452":"Given two strings word1 and word2, return the minimum number of steps required to make word1 and word2 the same.\nIn one step, you can delete exactly one character in either string.\n","1453":"Write a function createHelloWorld. It should return a new function that always returns \"Hello World\".\n","1454":"You are given an array of events where events[i] = [startDayi, endDayi]. Every event i starts at startDayi and ends at endDayi.\nYou can attend an event i at any day d where startTimei <= d <= endTimei. You can only attend one event at any time d.\nReturn the maximum number of events you can attend.\n","1455":"You are given a 0-indexed string num of length n consisting of digits.\nReturn true if for every index i in the range 0 <= i < n, the digit i occurs num[i] times in num, otherwise return false.\n","1456":"You are given a phone number as a string number. number consists of digits, spaces ' ', and\/or dashes '-'.\nYou would like to reformat the phone number in a certain manner. Firstly, remove all spaces and dashes. Then, group the digits from left to right into blocks of length 3 until there are 4 or fewer digits. The final digits are then grouped as follows:\n2 digits: A single block of length 2.\n3 digits: A single block of length 3.\n4 digits: Two blocks of length 2 each.\nThe blocks are then joined by dashes. Notice that the reformatting process should never produce any blocks of length 1 and produce at most two blocks of length 2.\nReturn the phone number after formatting.\n","1457":"Given a string s and a dictionary of strings wordDict, return true if s can be segmented into a space-separated sequence of one or more dictionary words.\nNote that the same word in the dictionary may be reused multiple times in the segmentation.\n","1458":"Given a string s, consider all duplicated substrings: (contiguous) substrings of s that occur 2 or more times. The occurrences may overlap.\nReturn any duplicated substring that has the longest possible length. If s does not have a duplicated substring, the answer is \"\".\n","1459":"You are given an array of binary strings strs and two integers m and n.\nReturn the size of the largest subset of strs such that there are at most m 0's and n 1's in the subset.\nA set x is a subset of a set y if all elements of x are also elements of y.\n","1460":"You are given an m x n binary matrix grid.\nA move consists of choosing any row or column and toggling each value in that row or column (i.e., changing all 0's to 1's, and all 1's to 0's).\nEvery row of the matrix is interpreted as a binary number, and the score of the matrix is the sum of these numbers.\nReturn the highest possible score after making any number of moves (including zero moves).\n","1461":"You are given an array of unique integers salary where salary[i] is the salary of the ith employee.\nReturn the average salary of employees excluding the minimum and maximum salary. Answers within 10-5 of the actual answer will be accepted.\n","1462":"You have the task of delivering some boxes from storage to their ports using only one ship. However, this ship has a limit on the number of boxes and the total weight that it can carry.\nYou are given an array boxes, where boxes[i] = [portsi, weighti], and three integers portsCount, maxBoxes, and maxWeight.\nportsi is the port where you need to deliver the ith box and weightsi is the weight of the ith box.\nportsCount is the number of ports.\nmaxBoxes and maxWeight are the respective box and weight limits of the ship.\nThe boxes need to be delivered in the order they are given. The ship will follow these steps:\nThe ship will take some number of boxes from the boxes queue, not violating the maxBoxes and maxWeight constraints.\nFor each loaded box in order, the ship will make a trip to the port the box needs to be delivered to and deliver it. If the ship is already at the correct port, no trip is needed, and the box can immediately be delivered.\nThe ship then makes a return trip to storage to take more boxes from the queue.\nThe ship must end at storage after all the boxes have been delivered.\nReturn the minimum number of trips the ship needs to make to deliver all boxes to their respective ports.\n","1463":"Given a function fn and a time in milliseconds t, return a debounced version of that function.\nA debounced function is a function whose execution is delayed by t milliseconds and whose execution is cancelled if it is called again within that window of time. The debounced function should also recieve the passed parameters.\nFor example, let's say t = 50ms, and the function was called at 30ms, 60ms, and 100ms. The first 2 function calls would be cancelled, and the 3rd function call would be executed at 150ms. If instead t = 35ms, The 1st call would be cancelled, the 2nd would be executed at 95ms, and the 3rd would be executed at 135ms.\nThe above diagram shows how debounce will transform events. Each rectangle represents 100ms and the debounce time is 400ms. Each color represents a different set of inputs.\nPlease solve it without using lodash's _.debounce() function.\n","1464":"You are given an array of points in the X-Y plane points where points[i] = [xi, yi].\nReturn the minimum area of a rectangle formed from these points, with sides parallel to the X and Y axes. If there is not any such rectangle, return 0.\n","1465":"A square triple (a,b,c) is a triple where a, b, and c are integers and a2 + b2 = c2.\nGiven an integer n, return the number of square triples such that 1 <= a, b, c <= n.\n","1466":"Given four integers sx, sy, tx, and ty, return true if it is possible to convert the point (sx, sy) to the point (tx, ty) through some operations, or false otherwise.\nThe allowed operation on some point (x, y) is to convert it to either (x, x + y) or (x + y, y).\n","1467":"SQL Schema\nTable: Employees\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| employee_id | int     |\n| name        | varchar |\n+-------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates the name of the employee whose ID is employee_id.\n  Table: Salaries\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| employee_id | int     |\n| salary      | int     |\n+-------------+---------+\nemployee_id is the primary key for this table.\nEach row of this table indicates the salary of the employee whose ID is employee_id.\n  Write an SQL query to report the IDs of all the employees with missing information. The information of an employee is missing if:\nThe employee's name is missing, or\nThe employee's salary is missing.\nReturn the result table ordered by employee_id in ascending order.\nThe query result format is in the following example.\n","1468":"You are given a string of length 5 called time, representing the current time on a digital clock in the format \"hh:mm\". The earliest possible time is \"00:00\" and the latest possible time is \"23:59\".\nIn the string time, the digits represented by the ? symbol are unknown, and must be replaced with a digit from 0 to 9.\nReturn an integer answer, the number of valid clock times that can be created by replacing every ? with a digit from 0 to 9.\n","1469":"A die simulator generates a random number from 1 to 6 for each roll. You introduced a constraint to the generator such that it cannot roll the number i more than rollMax[i] (1-indexed) consecutive times.\nGiven an array of integers rollMax and an integer n, return the number of distinct sequences that can be obtained with exact n rolls. Since the answer may be too large, return it modulo 109 + 7.\nTwo sequences are considered different if at least one element differs from each other.\n","1470":"A maximum tree is a tree where every node has a value greater than any other value in its subtree.\nYou are given the root of a maximum binary tree and an integer val.\nJust as in the previous problem, the given tree was constructed from a list a (root = Construct(a)) recursively with the following Construct(a) routine:\nIf a is empty, return null.\nOtherwise, let a[i] be the largest element of a. Create a root node with the value a[i].\nThe left child of root will be Construct([a[0], a[1], ..., a[i - 1]]).\nThe right child of root will be Construct([a[i + 1], a[i + 2], ..., a[a.length - 1]]).\nReturn root.\nNote that we were not given a directly, only a root node root = Construct(a).\nSuppose b is a copy of a with the value val appended to it. It is guaranteed that b has unique values.\nReturn Construct(b).\n","1471":"You are given an m x n matrix grid consisting of positive integers.\nPerform the following operation until grid becomes empty:\nDelete the element with the greatest value from each row. If multiple such elements exist, delete any of them.\nAdd the maximum of deleted elements to the answer.\nNote that the number of columns decreases by one after each operation.\nReturn the answer after performing the operations described above.\n","1472":"You are given a 0-indexed array of strings words and a 2D array of integers queries.\nEach query queries[i] = [li, ri] asks us to find the number of strings present in the range li to ri (both inclusive) of words that start and end with a vowel.\nReturn an array ans of size queries.length, where ans[i] is the answer to the ith query.\nNote that the vowel letters are 'a', 'e', 'i', 'o', and 'u'.\n","1473":"You are given the root of a binary tree where each node has a value 0 or 1. Each root-to-leaf path represents a binary number starting with the most significant bit.\nFor example, if the path is 0 -> 1 -> 1 -> 0 -> 1, then this could represent 01101 in binary, which is 13.\nFor all leaves in the tree, consider the numbers represented by the path from the root to that leaf. Return the sum of these numbers.\nThe test cases are generated so that the answer fits in a 32-bits integer.\n","1474":"You are given a 2D integer grid of size m x n and an integer x. In one operation, you can add x to or subtract x from any element in the grid.\nA uni-value grid is a grid where all the elements of it are equal.\nReturn the minimum number of operations to make the grid uni-value. If it is not possible, return -1.\n","1475":"Given the head of a linked list and an integer val, remove all the nodes of the linked list that has Node.val == val, and return the new head.\n","1476":"Given two arrays nums1 and nums2.\nReturn the maximum dot product between non-empty subsequences of nums1 and nums2 with the same length.\nA subsequence of a array is a new array which is formed from the original array by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (ie, [2,3,5] is a subsequence of [1,2,3,4,5] while [1,5,3] is not).\n","1477":"Given a m * n matrix of ones and zeros, return how many square submatrices have all ones.\n","1478":"You are given a 0-indexed integer array nums of length n.\nYou can perform the following operation as many times as you want:\nPick an index i that you haven\u2019t picked before, and pick a prime p strictly less than nums[i], then subtract p from nums[i].\nReturn true if you can make nums a strictly increasing array using the above operation and false otherwise.\nA strictly increasing array is an array whose each element is strictly greater than its preceding element.\n","1479":"Given an array of integers arr, return true if we can partition the array into three non-empty parts with equal sums.\nFormally, we can partition the array if we can find indexes i + 1 < j with (arr[0] + arr[1] + ... + arr[i] == arr[i + 1] + arr[i + 2] + ... + arr[j - 1] == arr[j] + arr[j + 1] + ... + arr[arr.length - 1])\n","1480":"Alice and Bob continue their games with piles of stones.  There are a number of piles arranged in a row, and each pile has a positive integer number of stones piles[i].  The objective of the game is to end with the most stones. \nAlice and Bob take turns, with Alice starting first.  Initially, M = 1.\nOn each player's turn, that player can take all the stones in the first X remaining piles, where 1 <= X <= 2M.  Then, we set M = max(M, X).\nThe game continues until all the stones have been taken.\nAssuming Alice and Bob play optimally, return the maximum number of stones Alice can get.\n","1481":"You are given two jugs with capacities jug1Capacity and jug2Capacity liters. There is an infinite amount of water supply available. Determine whether it is possible to measure exactly targetCapacity liters using these two jugs.\nIf targetCapacity liters of water are measurable, you must have targetCapacity liters of water contained within one or both buckets by the end.\nOperations allowed:\nFill any of the jugs with water.\nEmpty any of the jugs.\nPour water from one jug into another till the other jug is completely full, or the first jug itself is empty.\n","1482":"You are given an array arr of positive integers. You are also given the array queries where queries[i] = [lefti, righti].\nFor each query i compute the XOR of elements from lefti to righti (that is, arr[lefti] XOR arr[lefti + 1] XOR ... XOR arr[righti] ).\nReturn an array answer where answer[i] is the answer to the ith query.\n","1483":"A k x k magic square is a k x k grid filled with integers such that every row sum, every column sum, and both diagonal sums are all equal. The integers in the magic square do not have to be distinct. Every 1 x 1 grid is trivially a magic square.\nGiven an m x n integer grid, return the size (i.e., the side length k) of the largest magic square that can be found within this grid.\n","1484":"You are given two integer arrays nums1 and nums2 both of the same length. The advantage of nums1 with respect to nums2 is the number of indices i for which nums1[i] > nums2[i].\nReturn any permutation of nums1 that maximizes its advantage with respect to nums2.\n","1485":"Given an array of integers nums, find the maximum length of a subarray where the product of all its elements is positive.\nA subarray of an array is a consecutive sequence of zero or more values taken out of that array.\nReturn the maximum length of a subarray with positive product.\n","1486":"Given an array nums containing n distinct numbers in the range [0, n], return the only number in the range that is missing from the array.\n","1487":"Given an integer array nums with possible duplicates, randomly output the index of a given target number. You can assume that the given target number must exist in the array.\nImplement the Solution class:\nSolution(int[] nums) Initializes the object with the array nums.\nint pick(int target) Picks a random index i from nums where nums[i] == target. If there are multiple valid i's, then each index should have an equal probability of returning.\n","1488":"SQL Schema\nTable: World\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| name        | varchar |\n| continent   | varchar |\n| area        | int     |\n| population  | int     |\n| gdp         | bigint  |\n+-------------+---------+\nname is the primary key column for this table.\nEach row of this table gives information about the name of a country, the continent to which it belongs, its area, the population, and its GDP value.\n  A country is big if:\nit has an area of at least three million (i.e., 3000000 km2), or\nit has a population of at least twenty-five million (i.e., 25000000).\nWrite an SQL query to report the name, population, and area of the big countries.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1489":"You are given an array points representing integer coordinates of some points on a 2D-plane, where points[i] = [xi, yi].\nThe cost of connecting two points [xi, yi] and [xj, yj] is the manhattan distance between them: |xi - xj| + |yi - yj|, where |val| denotes the absolute value of val.\nReturn the minimum cost to make all points connected. All points are connected if there is exactly one simple path between any two points.\n","1490":"You are given an integer array nums of length n.\nAssume arrk to be an array obtained by rotating nums by k positions clock-wise. We define the rotation function F on nums as follow:\nF(k) = 0 * arrk[0] + 1 * arrk[1] + ... + (n - 1) * arrk[n - 1].\nReturn the maximum value of F(0), F(1), ..., F(n-1).\nThe test cases are generated so that the answer fits in a 32-bit integer.\n","1491":"Given two strings s and p, return an array of all the start indices of p's anagrams in s. You may return the answer in any order.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n","1492":"There are n friends that are playing a game. The friends are sitting in a circle and are numbered from 1 to n in clockwise order. More formally, moving clockwise from the ith friend brings you to the (i+1)th friend for 1 <= i < n, and moving clockwise from the nth friend brings you to the 1st friend.\nThe rules of the game are as follows:\n1st friend receives the ball.\nAfter that, 1st friend passes it to the friend who is k steps away from them in the clockwise direction.\nAfter that, the friend who receives the ball should pass it to the friend who is 2 * k steps away from them in the clockwise direction.\nAfter that, the friend who receives the ball should pass it to the friend who is 3 * k steps away from them in the clockwise direction, and so on and so forth.\nIn other words, on the ith turn, the friend holding the ball should pass it to the friend who is i * k steps away from them in the clockwise direction.\nThe game is finished when some friend receives the ball for the second time.\nThe losers of the game are friends who did not receive the ball in the entire game.\nGiven the number of friends, n, and an integer k, return the array answer, which contains the losers of the game in the ascending order.\n","1493":"You are given an integer n and an integer start.\nDefine an array nums where nums[i] = start + 2 * i (0-indexed) and n == nums.length.\nReturn the bitwise XOR of all elements of nums.\n","1494":"Return the number of permutations of 1 to n so that prime numbers are at prime indices (1-indexed.)\n(Recall that an integer is prime if and only if it is greater than 1, and cannot be written as a product of two positive integers both smaller than it.)\nSince the answer may be large, return the answer modulo 10^9 + 7.\n","1495":"You are given k identical eggs and you have access to a building with n floors labeled from 1 to n.\nYou know that there exists a floor f where 0 <= f <= n such that any egg dropped at a floor higher than f will break, and any egg dropped at or below floor f will not break.\nEach move, you may take an unbroken egg and drop it from any floor x (where 1 <= x <= n). If the egg breaks, you can no longer use it. However, if the egg does not break, you may reuse it in future moves.\nReturn the minimum number of moves that you need to determine with certainty what the value of f is.\n","1496":"There is an undirected tree with n nodes labeled from 0 to n - 1 and n - 1 edges.\nYou are given a 2D integer array edges of length n - 1 where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree. You are also given an integer array restricted which represents restricted nodes.\nReturn the maximum number of nodes you can reach from node 0 without visiting a restricted node.\nNote that node 0 will not be a restricted node.\n","1497":"You are given an n x n binary matrix grid. You are allowed to change at most one 0 to be 1.\nReturn the size of the largest island in grid after applying this operation.\nAn island is a 4-directionally connected group of 1s.\n","1498":"You are given an integer num. You can swap two digits at most once to get the maximum valued number.\nReturn the maximum valued number you can get.\n","1499":"Given four integer arrays nums1, nums2, nums3, and nums4 all of length n, return the number of tuples (i, j, k, l) such that:\n0 <= i, j, k, l < n\nnums1[i] + nums2[j] + nums3[k] + nums4[l] == 0\n","1500":"There are n tasks assigned to you. The task times are represented as an integer array tasks of length n, where the ith task takes tasks[i] hours to finish. A work session is when you work for at most sessionTime consecutive hours and then take a break.\nYou should finish the given tasks in a way that satisfies the following conditions:\nIf you start a task in a work session, you must complete it in the same work session.\nYou can start a new task immediately after finishing the previous one.\nYou may complete the tasks in any order.\nGiven tasks and sessionTime, return the minimum number of work sessions needed to finish all the tasks following the conditions above.\nThe tests are generated such that sessionTime is greater than or equal to the maximum element in tasks[i].\n","1501":"You are given an m x n matrix M initialized with all 0's and an array of operations ops, where ops[i] = [ai, bi] means M[x][y] should be incremented by one for all 0 <= x < ai and 0 <= y < bi.\nCount and return the number of maximum integers in the matrix after performing all the operations.\n","1502":"Given a string s, rearrange the characters of s so that any two adjacent characters are not the same.\nReturn any possible rearrangement of s or return \"\" if not possible.\n","1503":"You are given an integer hoursBefore, the number of hours you have to travel to your meeting. To arrive at your meeting, you have to travel through n roads. The road lengths are given as an integer array dist of length n, where dist[i] describes the length of the ith road in kilometers. In addition, you are given an integer speed, which is the speed (in km\/h) you will travel at.\nAfter you travel road i, you must rest and wait for the next integer hour before you can begin traveling on the next road. Note that you do not have to rest after traveling the last road because you are already at the meeting.\nFor example, if traveling a road takes 1.4 hours, you must wait until the 2 hour mark before traveling the next road. If traveling a road takes exactly 2 hours, you do not need to wait.\nHowever, you are allowed to skip some rests to be able to arrive on time, meaning you do not need to wait for the next integer hour. Note that this means you may finish traveling future roads at different hour marks.\nFor example, suppose traveling the first road takes 1.4 hours and traveling the second road takes 0.6 hours. Skipping the rest after the first road will mean you finish traveling the second road right at the 2 hour mark, letting you start traveling the third road immediately.\nReturn the minimum number of skips required to arrive at the meeting on time, or -1 if it is impossible.\n","1504":"Given a Tic-Tac-Toe board as a string array board, return true if and only if it is possible to reach this board position during the course of a valid tic-tac-toe game.\nThe board is a 3 x 3 array that consists of characters ' ', 'X', and 'O'. The ' ' character represents an empty square.\nHere are the rules of Tic-Tac-Toe:\nPlayers take turns placing characters into empty squares ' '.\nThe first player always places 'X' characters, while the second player always places 'O' characters.\n'X' and 'O' characters are always placed into empty squares, never filled ones.\nThe game ends when there are three of the same (non-empty) character filling any row, column, or diagonal.\nThe game also ends if all squares are non-empty.\nNo more moves can be played if the game is over.\n","1505":"You are given an array of n strings strs, all of the same length.\nWe may choose any deletion indices, and we delete all the characters in those indices for each string.\nFor example, if we have strs = [\"abcdef\",\"uvwxyz\"] and deletion indices {0, 2, 3}, then the final array after deletions is [\"bef\", \"vyz\"].\nSuppose we chose a set of deletion indices answer such that after deletions, the final array has every string (row) in lexicographic order. (i.e., (strs[0][0] <= strs[0][1] <= ... <= strs[0][strs[0].length - 1]), and (strs[1][0] <= strs[1][1] <= ... <= strs[1][strs[1].length - 1]), and so on). Return the minimum possible value of answer.length.\n","1506":"You are given a string text. You should split it to k substrings (subtext1, subtext2, ..., subtextk) such that:\nsubtexti is a non-empty string.\nThe concatenation of all the substrings is equal to text (i.e., subtext1 + subtext2 + ... + subtextk == text).\nsubtexti == subtextk - i + 1 for all valid values of i (i.e., 1 <= i <= k).\nReturn the largest possible value of k.\n","1507":"Given the array restaurants where  restaurants[i] = [idi, ratingi, veganFriendlyi, pricei, distancei]. You have to filter the restaurants using three filters.\nThe veganFriendly filter will be either true (meaning you should only include restaurants with veganFriendlyi set to true) or false (meaning you can include any restaurant). In addition, you have the filters maxPrice and maxDistance which are the maximum value for price and distance of restaurants you should consider respectively.\nReturn the array of restaurant IDs after filtering, ordered by rating from highest to lowest. For restaurants with the same rating, order them by id from highest to lowest. For simplicity veganFriendlyi and veganFriendly take value 1 when it is true, and 0 when it is false.\n","1508":"We build a table of n rows (1-indexed). We start by writing 0 in the 1st row. Now in every subsequent row, we look at the previous row and replace each occurrence of 0 with 01, and each occurrence of 1 with 10.\nFor example, for n = 3, the 1st row is 0, the 2nd row is 01, and the 3rd row is 0110.\nGiven two integer n and k, return the kth (1-indexed) symbol in the nth row of a table of n rows.\n","1509":"You are given an integer array nums that is sorted in non-decreasing order.\nDetermine if it is possible to split nums into one or more subsequences such that both of the following conditions are true:\nEach subsequence is a consecutive increasing sequence (i.e. each integer is exactly one more than the previous integer).\nAll subsequences have a length of 3 or more.\nReturn true if you can split nums according to the above conditions, or false otherwise.\nA subsequence of an array is a new array that is formed from the original array by deleting some (can be none) of the elements without disturbing the relative positions of the remaining elements. (i.e., [1,3,5] is a subsequence of [1,2,3,4,5] while [1,3,2] is not).\n","1510":"Given the root of a binary tree, return the inorder traversal of its nodes' values.\n","1511":"There is a broken calculator that has the integer startValue on its display initially. In one operation, you can:\nmultiply the number on display by 2, or\nsubtract 1 from the number on display.\nGiven two integers startValue and target, return the minimum number of operations needed to display target on the calculator.\n","1512":"There are several squares being dropped onto the X-axis of a 2D plane.\nYou are given a 2D integer array positions where positions[i] = [lefti, sideLengthi] represents the ith square with a side length of sideLengthi that is dropped with its left edge aligned with X-coordinate lefti.\nEach square is dropped one at a time from a height above any landed squares. It then falls downward (negative Y direction) until it either lands on the top side of another square or on the X-axis. A square brushing the left\/right side of another square does not count as landing on it. Once it lands, it freezes in place and cannot be moved.\nAfter each square is dropped, you must record the height of the current tallest stack of squares.\nReturn an integer array ans where ans[i] represents the height described above after dropping the ith square.\n","1513":"SQL Schema\nTable: Queries\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| query_name  | varchar |\n| result      | varchar |\n| position    | int     |\n| rating      | int     |\n+-------------+---------+\nThere is no primary key for this table, it may have duplicate rows.\nThis table contains information collected from some queries on a database.\nThe position column has a value from 1 to 500.\nThe rating column has a value from 1 to 5. Query with rating less than 3 is a poor query.\n  We define query quality as:\nThe average of the ratio between query rating and its position.\nWe also define poor query percentage as:\nThe percentage of all queries with rating less than 3.\nWrite an SQL query to find each query_name, the quality and poor_query_percentage.\nBoth quality and poor_query_percentage should be rounded to 2 decimal places.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1514":"A company has n employees with a unique ID for each employee from 0 to n - 1. The head of the company is the one with headID.\nEach employee has one direct manager given in the manager array where manager[i] is the direct manager of the i-th employee, manager[headID] = -1. Also, it is guaranteed that the subordination relationships have a tree structure.\nThe head of the company wants to inform all the company employees of an urgent piece of news. He will inform his direct subordinates, and they will inform their subordinates, and so on until all employees know about the urgent news.\nThe i-th employee needs informTime[i] minutes to inform all of his direct subordinates (i.e., After informTime[i] minutes, all his direct subordinates can start spreading the news).\nReturn the number of minutes needed to inform all the employees about the urgent news.\n","1515":"Given a string s, you can transform every letter individually to be lowercase or uppercase to create another string.\nReturn a list of all possible strings we could create. Return the output in any order.\n","1516":"Strings s1 and s2 are k-similar (for some non-negative integer k) if we can swap the positions of two letters in s1 exactly k times so that the resulting string equals s2.\nGiven two anagrams s1 and s2, return the smallest k for which s1 and s2 are k-similar.\n","1517":"Given the root of a binary tree, return the zigzag level order traversal of its nodes' values. (i.e., from left to right, then right to left for the next level and alternate between).\n","1518":"You are given the head of a linked list.\nRemove every node which has a node with a strictly greater value anywhere to the right side of it.\nReturn the head of the modified linked list.\n","1519":"You are given an m x n binary grid grid where 1 represents land and 0 represents water. An island is a maximal 4-directionally (horizontal or vertical) connected group of 1's.\nThe grid is said to be connected if we have exactly one island, otherwise is said disconnected.\nIn one day, we are allowed to change any single land cell (1) into a water cell (0).\nReturn the minimum number of days to disconnect the grid.\n","1520":"There is an 8 x 8 chessboard containing n pieces (rooks, queens, or bishops). You are given a string array pieces of length n, where pieces[i] describes the type (rook, queen, or bishop) of the ith piece. In addition, you are given a 2D integer array positions also of length n, where positions[i] = [ri, ci] indicates that the ith piece is currently at the 1-based coordinate (ri, ci) on the chessboard.\nWhen making a move for a piece, you choose a destination square that the piece will travel toward and stop on.\nA rook can only travel horizontally or vertically from (r, c) to the direction of (r+1, c), (r-1, c), (r, c+1), or (r, c-1).\nA queen can only travel horizontally, vertically, or diagonally from (r, c) to the direction of (r+1, c), (r-1, c), (r, c+1), (r, c-1), (r+1, c+1), (r+1, c-1), (r-1, c+1), (r-1, c-1).\nA bishop can only travel diagonally from (r, c) to the direction of (r+1, c+1), (r+1, c-1), (r-1, c+1), (r-1, c-1).\nYou must make a move for every piece on the board simultaneously. A move combination consists of all the moves performed on all the given pieces. Every second, each piece will instantaneously travel one square towards their destination if they are not already at it. All pieces start traveling at the 0th second. A move combination is invalid if, at a given time, two or more pieces occupy the same square.\nReturn the number of valid move combinations.\nNotes:\nNo two pieces will start in the same square.\nYou may choose the square a piece is already on as its destination.\nIf two pieces are directly adjacent to each other, it is valid for them to move past each other and swap positions in one second.\n","1521":"You have a 1-indexed binary string of length n where all the bits are 0 initially. We will flip all the bits of this binary string (i.e., change them from 0 to 1) one by one. You are given a 1-indexed integer array flips where flips[i] indicates that the bit at index i will be flipped in the ith step.\nA binary string is prefix-aligned if, after the ith step, all the bits in the inclusive range [1, i] are ones and all the other bits are zeros.\nReturn the number of times the binary string is prefix-aligned during the flipping process.\n","1522":"You are given two lists of closed intervals, firstList and secondList, where firstList[i] = [starti, endi] and secondList[j] = [startj, endj]. Each list of intervals is pairwise disjoint and in sorted order.\nReturn the intersection of these two interval lists.\nA closed interval [a, b] (with a <= b) denotes the set of real numbers x with a <= x <= b.\nThe intersection of two closed intervals is a set of real numbers that are either empty or represented as a closed interval. For example, the intersection of [1, 3] and [2, 4] is [2, 3].\n","1523":"You are given an integer array nums of length n which represents a permutation of all the integers in the range [0, n - 1].\nThe number of global inversions is the number of the different pairs (i, j) where:\n0 <= i < j < n\nnums[i] > nums[j]\nThe number of local inversions is the number of indices i where:\n0 <= i < n - 1\nnums[i] > nums[i + 1]\nReturn true if the number of global inversions is equal to the number of local inversions.\n","1524":"There is a safe protected by a password. The password is a sequence of n digits where each digit can be in the range [0, k - 1].\nThe safe has a peculiar way of checking the password. When you enter in a sequence, it checks the most recent n digits that were entered each time you type a digit.\nFor example, the correct password is \"345\" and you enter in \"012345\":\nAfter typing 0, the most recent 3 digits is \"0\", which is incorrect.\nAfter typing 1, the most recent 3 digits is \"01\", which is incorrect.\nAfter typing 2, the most recent 3 digits is \"012\", which is incorrect.\nAfter typing 3, the most recent 3 digits is \"123\", which is incorrect.\nAfter typing 4, the most recent 3 digits is \"234\", which is incorrect.\nAfter typing 5, the most recent 3 digits is \"345\", which is correct and the safe unlocks.\nReturn any string of minimum length that will unlock the safe at some point of entering it.\n","1525":"You are given two strings order and s. All the characters of order are unique and were sorted in some custom order previously.\nPermute the characters of s so that they match the order that order was sorted. More specifically, if a character x occurs before a character y in order, then x should occur before y in the permuted string.\nReturn any permutation of s that satisfies this property.\n","1526":"You are given a 0-indexed m x n binary matrix land where a 0 represents a hectare of forested land and a 1 represents a hectare of farmland.\nTo keep the land organized, there are designated rectangular areas of hectares that consist entirely of farmland. These rectangular areas are called groups. No two groups are adjacent, meaning farmland in one group is not four-directionally adjacent to another farmland in a different group.\nland can be represented by a coordinate system where the top left corner of land is (0, 0) and the bottom right corner of land is (m-1, n-1). Find the coordinates of the top left and bottom right corner of each group of farmland. A group of farmland with a top left corner at (r1, c1) and a bottom right corner at (r2, c2) is represented by the 4-length array [r1, c1, r2, c2].\nReturn a 2D array containing the 4-length arrays described above for each group of farmland in land. If there are no groups of farmland, return an empty array. You may return the answer in any order.\n","1527":"You have a browser of one tab where you start on the homepage and you can visit another url, get back in the history number of steps or move forward in the history number of steps.\nImplement the BrowserHistory class:\nBrowserHistory(string homepage) Initializes the object with the homepage of the browser.\nvoid visit(string url) Visits url from the current page. It clears up all the forward history.\nstring back(int steps) Move steps back in history. If you can only return x steps in the history and steps > x, you will return only x steps. Return the current url after moving back in history at most steps.\nstring forward(int steps) Move steps forward in history. If you can only forward x steps in the history and steps > x, you will forward only x steps. Return the current url after forwarding in history at most steps.\n","1528":"You have two fruit baskets containing n fruits each. You are given two 0-indexed integer arrays basket1 and basket2 representing the cost of fruit in each basket. You want to make both baskets equal. To do so, you can use the following operation as many times as you want:\nChose two indices i and j, and swap the ith fruit of basket1 with the jth fruit of basket2.\nThe cost of the swap is min(basket1[i],basket2[j]).\nTwo baskets are considered equal if sorting them according to the fruit cost makes them exactly the same baskets.\nReturn the minimum cost to make both the baskets equal or -1 if impossible.\n","1529":"You are given a positive integer num consisting of exactly four digits. Split num into two new integers new1 and new2 by using the digits found in num. Leading zeros are allowed in new1 and new2, and all the digits found in num must be used.\nFor example, given num = 2932, you have the following digits: two 2's, one 9 and one 3. Some of the possible pairs [new1, new2] are [22, 93], [23, 92], [223, 9] and [2, 329].\nReturn the minimum possible sum of new1 and new2.\n","1530":"You are playing a game with integers. You start with the integer 1 and you want to reach the integer target.\nIn one move, you can either:\nIncrement the current integer by one (i.e., x = x + 1).\nDouble the current integer (i.e., x = 2 * x).\nYou can use the increment operation any number of times, however, you can only use the double operation at most maxDoubles times.\nGiven the two integers target and maxDoubles, return the minimum number of moves needed to reach target starting with 1.\n","1531":"You are given an integer array heights representing the heights of buildings, some bricks, and some ladders.\nYou start your journey from building 0 and move to the next building by possibly using bricks or ladders.\nWhile moving from building i to building i+1 (0-indexed),\nIf the current building's height is greater than or equal to the next building's height, you do not need a ladder or bricks.\nIf the current building's height is less than the next building's height, you can either use one ladder or (h[i+1] - h[i]) bricks.\nReturn the furthest building index (0-indexed) you can reach if you use the given ladders and bricks optimally.\n","1532":"You are given a 2D integer array ranges where ranges[i] = [starti, endi] denotes that all integers between starti and endi (both inclusive) are contained in the ith range.\nYou are to split ranges into two (possibly empty) groups such that:\nEach range belongs to exactly one group.\nAny two overlapping ranges must belong to the same group.\nTwo ranges are said to be overlapping if there exists at least one integer that is present in both ranges.\nFor example, [1, 3] and [2, 5] are overlapping because 2 and 3 occur in both ranges.\nReturn the total number of ways to split ranges into two groups. Since the answer may be very large, return it modulo 109 + 7.\n","1533":"Given a directed acyclic graph (DAG) of n nodes labeled from 0 to n - 1, find all possible paths from node 0 to node n - 1 and return them in any order.\nThe graph is given as follows: graph[i] is a list of all nodes you can visit from node i (i.e., there is a directed edge from node i to node graph[i][j]).\n","1534":"You are given an integer array rolls of length n and an integer k. You roll a k sided dice numbered from 1 to k, n times, where the result of the ith roll is rolls[i].\nReturn the length of the shortest sequence of rolls that cannot be taken from rolls.\nA sequence of rolls of length len is the result of rolling a k sided dice len times.\nNote that the sequence taken does not have to be consecutive as long as it is in order.\n","1535":"You are given a 0-indexed 2D integer array grid of size m x n that represents a map of the items in a shop. The integers in the grid represent the following:\n0 represents a wall that you cannot pass through.\n1 represents an empty cell that you can freely move to and from.\nAll other positive integers represent the price of an item in that cell. You may also freely move to and from these item cells.\nIt takes 1 step to travel between adjacent grid cells.\nYou are also given integer arrays pricing and start where pricing = [low, high] and start = [row, col] indicates that you start at the position (row, col) and are interested only in items with a price in the range of [low, high] (inclusive). You are further given an integer k.\nYou are interested in the positions of the k highest-ranked items whose prices are within the given price range. The rank is determined by the first of these criteria that is different:\nDistance, defined as the length of the shortest path from the start (shorter distance has a higher rank).\nPrice (lower price has a higher rank, but it must be in the price range).\nThe row number (smaller row number has a higher rank).\nThe column number (smaller column number has a higher rank).\nReturn the k highest-ranked items within the price range sorted by their rank (highest to lowest). If there are fewer than k reachable items within the price range, return all of them.\n","1536":"Given a set of distinct positive integers nums, return the largest subset answer such that every pair (answer[i], answer[j]) of elements in this subset satisfies:\nanswer[i] % answer[j] == 0, or\nanswer[j] % answer[i] == 0\nIf there are multiple solutions, return any of them.\n","1537":"Given an array of integers nums and an integer k, return the total number of subarrays whose sum equals to k.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","1538":"You are given an integer total indicating the amount of money you have. You are also given two integers cost1 and cost2 indicating the price of a pen and pencil respectively. You can spend part or all of your money to buy multiple quantities (or none) of each kind of writing utensil.\nReturn the number of distinct ways you can buy some number of pens and pencils.\n","1539":"Given a function fn and a time in milliseconds t, return a throttled version of that function.\nA throttled function is first called without delay and then, for a time interval of t milliseconds, can't be executed but should store the latest function arguments provided to call fn with them after the end of the delay.\nFor instance, t = 50ms, and the function was called at 30ms, 40ms, and 60ms. The first function call would block calling functions for the following t milliseconds. The second function call would save arguments, and the third call arguments should overwrite currently stored arguments from the second call because the second and third calls are called before 80ms. Once the delay has passed, the throttled function should be called with the latest arguments provided during the delay period, and it should also create another delay period of 80ms + t.\nThe above diagram shows how throttle will transform events. Each rectangle represents 100ms and the throttle time is 400ms. Each color represents a different set of inputs.\n","1540":"You are given a string s consisting only of characters 'a' and 'b'.\nYou can delete any number of characters in s to make s balanced. s is balanced if there is no pair of indices (i,j) such that i < j and s[i] = 'b' and s[j]= 'a'.\nReturn the minimum number of deletions needed to make s balanced.\n","1541":"There is an integer array nums that consists of n unique elements, but you have forgotten it. However, you do remember every pair of adjacent elements in nums.\nYou are given a 2D integer array adjacentPairs of size n - 1 where each adjacentPairs[i] = [ui, vi] indicates that the elements ui and vi are adjacent in nums.\nIt is guaranteed that every adjacent pair of elements nums[i] and nums[i+1] will exist in adjacentPairs, either as [nums[i], nums[i+1]] or [nums[i+1], nums[i]]. The pairs can appear in any order.\nReturn the original array nums. If there are multiple solutions, return any of them.\n","1542":"Given an integer n, return the least number of perfect square numbers that sum to n.\nA perfect square is an integer that is the square of an integer; in other words, it is the product of some integer with itself. For example, 1, 4, 9, and 16 are perfect squares while 3 and 11 are not.\n","1543":"You are given a string s and an integer repeatLimit. Construct a new string repeatLimitedString using the characters of s such that no letter appears more than repeatLimit times in a row. You do not have to use all characters from s.\nReturn the lexicographically largest repeatLimitedString possible.\nA string a is lexicographically larger than a string b if in the first position where a and b differ, string a has a letter that appears later in the alphabet than the corresponding letter in b. If the first min(a.length, b.length) characters do not differ, then the longer string is the lexicographically larger one.\n","1544":"You are given an integer array pref of size n. Find and return the array arr of size n that satisfies:\npref[i] = arr[0] ^ arr[1] ^ ... ^ arr[i].\nNote that ^ denotes the bitwise-xor operation.\nIt can be proven that the answer is unique.\n","1545":"In an alien language, surprisingly, they also use English lowercase letters, but possibly in a different order. The order of the alphabet is some permutation of lowercase letters.\nGiven a sequence of words written in the alien language, and the order of the alphabet, return true if and only if the given words are sorted lexicographically in this alien language.\n","1546":"You are given a string expression representing a Lisp-like expression to return the integer value of.\nThe syntax for these expressions is given as follows.\nAn expression is either an integer, let expression, add expression, mult expression, or an assigned variable. Expressions always evaluate to a single integer.\n(An integer could be positive or negative.)\nA let expression takes the form \"(let v1 e1 v2 e2 ... vn en expr)\", where let is always the string \"let\", then there are one or more pairs of alternating variables and expressions, meaning that the first variable v1 is assigned the value of the expression e1, the second variable v2 is assigned the value of the expression e2, and so on sequentially; and then the value of this let expression is the value of the expression expr.\nAn add expression takes the form \"(add e1 e2)\" where add is always the string \"add\", there are always two expressions e1, e2 and the result is the addition of the evaluation of e1 and the evaluation of e2.\nA mult expression takes the form \"(mult e1 e2)\" where mult is always the string \"mult\", there are always two expressions e1, e2 and the result is the multiplication of the evaluation of e1 and the evaluation of e2.\nFor this question, we will use a smaller subset of variable names. A variable starts with a lowercase letter, then zero or more lowercase letters or digits. Additionally, for your convenience, the names \"add\", \"let\", and \"mult\" are protected and will never be used as variable names.\nFinally, there is the concept of scope. When an expression of a variable name is evaluated, within the context of that evaluation, the innermost scope (in terms of parentheses) is checked first for the value of that variable, and then outer scopes are checked sequentially. It is guaranteed that every expression is legal. Please see the examples for more details on the scope.\n","1547":"SQL Schema\nTable: Activity\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| player_id    | int     |\n| device_id    | int     |\n| event_date   | date    |\n| games_played | int     |\n+--------------+---------+\n(player_id, event_date) is the primary key of this table.\nThis table shows the activity of players of some games.\nEach row is a record of a player who logged in and played a number of games (possibly 0) before logging out on someday using some device.\n  Write an SQL query to report the fraction of players that logged in again on the day after the day they first logged in, rounded to 2 decimal places. In other words, you need to count the number of players that logged in for at least two consecutive days starting from their first login date, then divide that number by the total number of players.\nThe query result format is in the following example.\n","1548":"You are given an integer array arr.\nWe split arr into some number of chunks (i.e., partitions), and individually sort each chunk. After concatenating them, the result should equal the sorted array.\nReturn the largest number of chunks we can make to sort the array.\n","1549":"Given the root of a binary search tree (BST) with duplicates, return all the mode(s) (i.e., the most frequently occurred element) in it.\nIf the tree has more than one mode, return them in any order.\nAssume a BST is defined as follows:\nThe left subtree of a node contains only nodes with keys less than or equal to the node's key.\nThe right subtree of a node contains only nodes with keys greater than or equal to the node's key.\nBoth the left and right subtrees must also be binary search trees.\n","1550":"Given an n x n binary matrix grid, return the length of the shortest clear path in the matrix. If there is no clear path, return -1.\nA clear path in a binary matrix is a path from the top-left cell (i.e., (0, 0)) to the bottom-right cell (i.e., (n - 1, n - 1)) such that:\nAll the visited cells of the path are 0.\nAll the adjacent cells of the path are 8-directionally connected (i.e., they are different and they share an edge or a corner).\nThe length of a clear path is the number of visited cells of this path.\n","1551":"There is an exam room with n seats in a single row labeled from 0 to n - 1.\nWhen a student enters the room, they must sit in the seat that maximizes the distance to the closest person. If there are multiple such seats, they sit in the seat with the lowest number. If no one is in the room, then the student sits at seat number 0.\nDesign a class that simulates the mentioned exam room.\nImplement the ExamRoom class:\nExamRoom(int n) Initializes the object of the exam room with the number of the seats n.\nint seat() Returns the label of the seat at which the next student will set.\nvoid leave(int p) Indicates that the student sitting at seat p will leave the room. It is guaranteed that there will be a student sitting at seat p.\n","1552":"Tic-tac-toe is played by two players A and B on a 3 x 3 grid. The rules of Tic-Tac-Toe are:\nPlayers take turns placing characters into empty squares ' '.\nThe first player A always places 'X' characters, while the second player B always places 'O' characters.\n'X' and 'O' characters are always placed into empty squares, never on filled ones.\nThe game ends when there are three of the same (non-empty) character filling any row, column, or diagonal.\nThe game also ends if all squares are non-empty.\nNo more moves can be played if the game is over.\nGiven a 2D integer array moves where moves[i] = [rowi, coli] indicates that the ith move will be played on grid[rowi][coli]. return the winner of the game if it exists (A or B). In case the game ends in a draw return \"Draw\". If there are still movements to play return \"Pending\".\nYou can assume that moves is valid (i.e., it follows the rules of Tic-Tac-Toe), the grid is initially empty, and A will play first.\n","1553":"Let's define a function countUniqueChars(s) that returns the number of unique characters on s.\nFor example, calling countUniqueChars(s) if s = \"LEETCODE\" then \"L\", \"T\", \"C\", \"O\", \"D\" are the unique characters since they appear only once in s, therefore countUniqueChars(s) = 5.\nGiven a string s, return the sum of countUniqueChars(t) where t is a substring of s. The test cases are generated such that the answer fits in a 32-bit integer.\nNotice that some substrings can be repeated so in this case you have to count the repeated ones too.\n","1554":"Given two integer arrays preorder and inorder where preorder is the preorder traversal of a binary tree and inorder is the inorder traversal of the same tree, construct and return the binary tree.\n","1555":"The complement of an integer is the integer you get when you flip all the 0's to 1's and all the 1's to 0's in its binary representation.\nFor example, The integer 5 is \"101\" in binary and its complement is \"010\" which is the integer 2.\nGiven an integer n, return its complement.\n","1556":"There are some stones in different positions on the X-axis. You are given an integer array stones, the positions of the stones.\nCall a stone an endpoint stone if it has the smallest or largest position. In one move, you pick up an endpoint stone and move it to an unoccupied position so that it is no longer an endpoint stone.\nIn particular, if the stones are at say, stones = [1,2,5], you cannot move the endpoint stone at position 5, since moving it to any position (such as 0, or 3) will still keep that stone as an endpoint stone.\nThe game ends when you cannot make any more moves (i.e., the stones are in three consecutive positions).\nReturn an integer array answer of length 2 where:\nanswer[0] is the minimum number of moves you can play, and\nanswer[1] is the maximum number of moves you can play.\n","1557":"Given an integer n, return a binary string representing its representation in base -2.\nNote that the returned string should not have leading zeros unless the string is \"0\".\n","1558":"Design a data structure that follows the constraints of a Least Recently Used (LRU) cache.\nImplement the LRUCache class:\nLRUCache(int capacity) Initialize the LRU cache with positive size capacity.\nint get(int key) Return the value of the key if the key exists, otherwise return -1.\nvoid put(int key, int value) Update the value of the key if the key exists. Otherwise, add the key-value pair to the cache. If the number of keys exceeds the capacity from this operation, evict the least recently used key.\nThe functions get and put must each run in O(1) average time complexity.\n","1559":"You are given an array books where books[i] = [thicknessi, heighti] indicates the thickness and height of the ith book. You are also given an integer shelfWidth.\nWe want to place these books in order onto bookcase shelves that have a total width shelfWidth.\nWe choose some of the books to place on this shelf such that the sum of their thickness is less than or equal to shelfWidth, then build another level of the shelf of the bookcase so that the total height of the bookcase has increased by the maximum height of the books we just put down. We repeat this process until there are no more books to place.\nNote that at each step of the above process, the order of the books we place is the same order as the given sequence of books.\nFor example, if we have an ordered list of 5 books, we might place the first and second book onto the first shelf, the third book on the second shelf, and the fourth and fifth book on the last shelf.\nReturn the minimum possible height that the total bookshelf can be after placing shelves in this manner.\n","1560":"SQL Schema\nTable: Employee\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| id           | int     |\n| name         | varchar |\n| salary       | int     |\n| departmentId | int     |\n+--------------+---------+\nid is the primary key column for this table.\ndepartmentId is a foreign key of the ID from the Department table.\nEach row of this table indicates the ID, name, and salary of an employee. It also contains the ID of their department.\n  Table: Department\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n+-------------+---------+\nid is the primary key column for this table. It is guaranteed that department name is not NULL.\nEach row of this table indicates the ID of a department and its name.\n  Write an SQL query to find employees who have the highest salary in each of the departments.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1561":"Given two integers n and k, return the kth lexicographically smallest integer in the range [1, n].\n","1562":"Given the array queries of positive integers between 1 and m, you have to process all queries[i] (from i=0 to i=queries.length-1) according to the following rules:\nIn the beginning, you have the permutation P=[1,2,3,...,m].\nFor the current i, find the position of queries[i] in the permutation P (indexing from 0) and then move this at the beginning of the permutation P. Notice that the position of queries[i] in P is the result for queries[i].\nReturn an array containing the result for the given queries.\n","1563":"Given the head of a linked list, we repeatedly delete consecutive sequences of nodes that sum to 0 until there are no such sequences.\nAfter doing so, return the head of the final linked list.  You may return any such answer.\n  (Note that in the examples below, all sequences are serializations of ListNode objects.)\n","1564":"Given a string s, return the number of palindromic substrings in it.\nA string is a palindrome when it reads the same backward as forward.\nA substring is a contiguous sequence of characters within the string.\n","1565":"An array is monotonic if it is either monotone increasing or monotone decreasing.\nAn array nums is monotone increasing if for all i <= j, nums[i] <= nums[j]. An array nums is monotone decreasing if for all i <= j, nums[i] >= nums[j].\nGiven an integer array nums, return true if the given array is monotonic, or false otherwise.\n","1566":"You are given two non-negative integers num1 and num2.\nIn one operation, if num1 >= num2, you must subtract num2 from num1, otherwise subtract num1 from num2.\nFor example, if num1 = 5 and num2 = 4, subtract num2 from num1, thus obtaining num1 = 1 and num2 = 4. However, if num1 = 4 and num2 = 5, after one operation, num1 = 4 and num2 = 1.\nReturn the number of operations required to make either num1 = 0 or num2 = 0.\n","1567":"You are given nums, an array of positive integers of size 2 * n. You must perform n operations on this array.\nIn the ith operation (1-indexed), you will:\nChoose two elements, x and y.\nReceive a score of i * gcd(x, y).\nRemove x and y from nums.\nReturn the maximum score you can receive after performing n operations.\nThe function gcd(x, y) is the greatest common divisor of x and y.\n","1568":"Given an array of strings patterns and a string word, return the number of strings in patterns that exist as a substring in word.\nA substring is a contiguous sequence of characters within a string.\n","1569":"You are given two 0-indexed arrays, nums1 and nums2, consisting of non-negative integers. There exists another array, nums3, which contains the bitwise XOR of all pairings of integers between nums1 and nums2 (every integer in nums1 is paired with every integer in nums2 exactly once).\nReturn the bitwise XOR of all integers in nums3.\n","1570":"You are given two integer arrays nums1 and nums2 sorted in ascending order and an integer k.\nDefine a pair (u, v) which consists of one element from the first array and one element from the second array.\nReturn the k pairs (u1, v1), (u2, v2), ..., (uk, vk) with the smallest sums.\n","1571":"SQL Schema\nTable: Sales\n+-------------+-------+\n| Column Name | Type  |\n+-------------+-------+\n| sale_id     | int   |\n| product_id  | int   |\n| year        | int   |\n| quantity    | int   |\n| price       | int   |\n+-------------+-------+\n(sale_id, year) is the primary key of this table.\nproduct_id is a foreign key to Product table.\nEach row of this table shows a sale on the product product_id in a certain year.\nNote that the price is per unit.\n  Table: Product\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| product_id   | int     |\n| product_name | varchar |\n+--------------+---------+\nproduct_id is the primary key of this table.\nEach row of this table indicates the product name of each product.\n  Write an SQL query that reports the product_name, year, and price for each sale_id in the Sales table.\nReturn the resulting table in any order.\nThe query result format is in the following example.\n","1572":"Given an integer n, return an array ans of length n + 1 such that for each i (0 <= i <= n), ans[i] is the number of 1's in the binary representation of i.\n","1573":"SQL Schema\nTable: Employee\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| id           | int     |\n| name         | varchar |\n| salary       | int     |\n| departmentId | int     |\n+--------------+---------+\nid is the primary key column for this table.\ndepartmentId is a foreign key of the ID from the Department table.\nEach row of this table indicates the ID, name, and salary of an employee. It also contains the ID of their department.\n  Table: Department\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| name        | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table indicates the ID of a department and its name.\n  A company's executives are interested in seeing who earns the most money in each of the company's departments. A high earner in a department is an employee who has a salary in the top three unique salaries for that department.\nWrite an SQL query to find the employees who are high earners in each of the departments.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1574":"Given 3 positives numbers a, b and c. Return the minimum flips required in some bits of a and b to make ( a OR b == c ). (bitwise OR operation).\nFlip operation consists of change any single bit 1 to 0 or change the bit 0 to 1 in their binary representation.\n","1575":"Given an integer array nums, return the sum of divisors of the integers in that array that have exactly four divisors. If there is no such integer in the array, return 0.\n","1576":"You are given a string s of length n containing only four kinds of characters: 'Q', 'W', 'E', and 'R'.\nA string is said to be balanced if each of its characters appears n \/ 4 times where n is the length of the string.\nReturn the minimum length of the substring that can be replaced with any other string of the same length to make s balanced. If s is already balanced, return 0.\n","1577":"We define the usage of capitals in a word to be right when one of the following cases holds:\nAll letters in this word are capitals, like \"USA\".\nAll letters in this word are not capitals, like \"leetcode\".\nOnly the first letter in this word is capital, like \"Google\".\nGiven a string word, return true if the usage of capitals in it is right.\n","1578":"You are given an array of network towers towers, where towers[i] = [xi, yi, qi] denotes the ith network tower with location (xi, yi) and quality factor qi. All the coordinates are integral coordinates on the X-Y plane, and the distance between the two coordinates is the Euclidean distance.\nYou are also given an integer radius where a tower is reachable if the distance is less than or equal to radius. Outside that distance, the signal becomes garbled, and the tower is not reachable.\nThe signal quality of the ith tower at a coordinate (x, y) is calculated with the formula \u230aqi \/ (1 + d)\u230b, where d is the distance between the tower and the coordinate. The network quality at a coordinate is the sum of the signal qualities from all the reachable towers.\nReturn the array [cx, cy] representing the integral coordinate (cx, cy) where the network quality is maximum. If there are multiple coordinates with the same network quality, return the lexicographically minimum non-negative coordinate.\nNote:\nA coordinate (x1, y1) is lexicographically smaller than (x2, y2) if either:\nx1 < x2, or\nx1 == x2 and y1 < y2.\n\u230aval\u230b is the greatest integer less than or equal to val (the floor function).\n","1579":"The Tribonacci sequence Tn is defined as follows: \nT0 = 0, T1 = 1, T2 = 1, and Tn+3 = Tn + Tn+1 + Tn+2 for n >= 0.\nGiven n, return the value of Tn.\n","1580":"Let the function f(s) be the frequency of the lexicographically smallest character in a non-empty string s. For example, if s = \"dcce\" then f(s) = 2 because the lexicographically smallest character is 'c', which has a frequency of 2.\nYou are given an array of strings words and another array of query strings queries. For each query queries[i], count the number of words in words such that f(queries[i]) < f(W) for each W in words.\nReturn an integer array answer, where each answer[i] is the answer to the ith query.\n","1581":"Given an object, return a valid JSON string of that object. You may assume the object only inludes strings, integers, arrays, objects, booleans, and null. The returned string should not include extra spaces. The order of keys should be the same as the order returned by Object.keys().\nPlease solve it without using the built-in JSON.stringify method.\n","1582":"You are given three positive integers: n, index, and maxSum. You want to construct an array nums (0-indexed) that satisfies the following conditions:\nnums.length == n\nnums[i] is a positive integer where 0 <= i < n.\nabs(nums[i] - nums[i+1]) <= 1 where 0 <= i < n-1.\nThe sum of all the elements of nums does not exceed maxSum.\nnums[index] is maximized.\nReturn nums[index] of the constructed array.\nNote that abs(x) equals x if x >= 0, and -x otherwise.\n","1583":"SQL Schema\nTable: Stadium\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| visit_date    | date    |\n| people        | int     |\n+---------------+---------+\nvisit_date is the primary key for this table.\nEach row of this table contains the visit date and visit id to the stadium with the number of people during the visit.\nNo two rows will have the same visit_date, and as the id increases, the dates increase as well.\n  Write an SQL query to display the records with three or more rows with consecutive id's, and the number of people is greater than or equal to 100 for each.\nReturn the result table ordered by visit_date in ascending order.\nThe query result format is in the following example.\n","1584":"You are given a nested list of integers nestedList. Each element is either an integer or a list whose elements may also be integers or other lists. Implement an iterator to flatten it.\nImplement the NestedIterator class:\nNestedIterator(List<NestedInteger> nestedList) Initializes the iterator with the nested list nestedList.\nint next() Returns the next integer in the nested list.\nboolean hasNext() Returns true if there are still some integers in the nested list and false otherwise.\nYour code will be tested with the following pseudocode:\ninitialize iterator with nestedList\nres = []\nwhile iterator.hasNext()\n    append iterator.next() to the end of res\nreturn res\nIf res matches the expected flattened list, then your code will be judged as correct.\n","1585":"Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper, return the researcher's h-index.\nAccording to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.\n","1586":"You are given an n x n binary matrix grid where 1 represents land and 0 represents water.\nAn island is a 4-directionally connected group of 1's not connected to any other 1's. There are exactly two islands in grid.\nYou may change 0's to 1's to connect the two islands to form one island.\nReturn the smallest number of 0's you must flip to connect the two islands.\n","1587":"Given a binary tree, find the lowest common ancestor (LCA) of two given nodes in the tree.\nAccording to the definition of LCA on Wikipedia: \u201cThe lowest common ancestor is defined between two nodes p and q as the lowest node in T that has both p and q as descendants (where we allow a node to be a descendant of itself).\u201d\n","1588":"Given a string s which represents an expression, evaluate this expression and return its value. \nThe integer division should truncate toward zero.\nYou may assume that the given expression is always valid. All intermediate results will be in the range of [-231, 231 - 1].\nNote: You are not allowed to use any built-in function which evaluates strings as mathematical expressions, such as eval().\n","1589":"You are given a string s, an integer k, a letter letter, and an integer repetition.\nReturn the lexicographically smallest subsequence of s of length k that has the letter letter appear at least repetition times. The test cases are generated so that the letter appears in s at least repetition times.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\nA string a is lexicographically smaller than a string b if in the first position where a and b differ, string a has a letter that appears earlier in the alphabet than the corresponding letter in b.\n","1590":"You are given the array paths, where paths[i] = [cityAi, cityBi] means there exists a direct path going from cityAi to cityBi. Return the destination city, that is, the city without any path outgoing to another city.\nIt is guaranteed that the graph of paths forms a line without any loop, therefore, there will be exactly one destination city.\n","1591":"You are given an array points containing the coordinates of points on a 2D plane, sorted by the x-values, where points[i] = [xi, yi] such that xi < xj for all 1 <= i < j <= points.length. You are also given an integer k.\nReturn the maximum value of the equation yi + yj + |xi - xj| where |xi - xj| <= k and 1 <= i < j <= points.length.\nIt is guaranteed that there exists at least one pair of points that satisfy the constraint |xi - xj| <= k.\n","1592":"There is a computer that can run an unlimited number of tasks at the same time. You are given a 2D integer array tasks where tasks[i] = [starti, endi, durationi] indicates that the ith task should run for a total of durationi seconds (not necessarily continuous) within the inclusive time range [starti, endi].\nYou may turn on the computer only when it needs to run a task. You can also turn it off if it is idle.\nReturn the minimum time during which the computer should be turned on to complete all tasks.\n","1593":"Given a 1-indexed array of integers numbers that is already sorted in non-decreasing order, find two numbers such that they add up to a specific target number. Let these two numbers be numbers[index1] and numbers[index2] where 1 <= index1 < index2 < numbers.length.\nReturn the indices of the two numbers, index1 and index2, added by one as an integer array [index1, index2] of length 2.\nThe tests are generated such that there is exactly one solution. You may not use the same element twice.\nYour solution must use only constant extra space.\n","1594":"There is a row of m houses in a small city, each house must be painted with one of the n colors (labeled from 1 to n), some houses that have been painted last summer should not be painted again.\nA neighborhood is a maximal group of continuous houses that are painted with the same color.\nFor example: houses = [1,2,2,3,3,2,1,1] contains 5 neighborhoods [{1}, {2,2}, {3,3}, {2}, {1,1}].\nGiven an array houses, an m x n matrix cost and an integer target where:\nhouses[i]: is the color of the house i, and 0 if the house is not painted yet.\ncost[i][j]: is the cost of paint the house i with the color j + 1.\nReturn the minimum cost of painting all the remaining houses in such a way that there are exactly target neighborhoods. If it is not possible, return -1.\n","1595":"You want to build n new buildings in a city. The new buildings will be built in a line and are labeled from 1 to n.\nHowever, there are city restrictions on the heights of the new buildings:\nThe height of each building must be a non-negative integer.\nThe height of the first building must be 0.\nThe height difference between any two adjacent buildings cannot exceed 1.\nAdditionally, there are city restrictions on the maximum height of specific buildings. These restrictions are given as a 2D integer array restrictions where restrictions[i] = [idi, maxHeighti] indicates that building idi must have a height less than or equal to maxHeighti.\nIt is guaranteed that each building will appear at most once in restrictions, and building 1 will not be in restrictions.\nReturn the maximum possible height of the tallest building.\n","1596":"You are given a string s, and an array of pairs of indices in the string pairs where pairs[i] = [a, b] indicates 2 indices(0-indexed) of the string.\nYou can swap the characters at any pair of indices in the given pairs any number of times.\nReturn the lexicographically smallest string that s can be changed to after using the swaps.\n","1597":"There is a city composed of n x n blocks, where each block contains a single building shaped like a vertical square prism. You are given a 0-indexed n x n integer matrix grid where grid[r][c] represents the height of the building located in the block at row r and column c.\nA city's skyline is the outer contour formed by all the building when viewing the side of the city from a distance. The skyline from each cardinal direction north, east, south, and west may be different.\nWe are allowed to increase the height of any number of buildings by any amount (the amount can be different per building). The height of a 0-height building can also be increased. However, increasing the height of a building should not affect the city's skyline from any cardinal direction.\nReturn the maximum total sum that the height of the buildings can be increased by without changing the city's skyline from any cardinal direction.\n","1598":"Implement the RandomizedSet class:\nRandomizedSet() Initializes the RandomizedSet object.\nbool insert(int val) Inserts an item val into the set if not present. Returns true if the item was not present, false otherwise.\nbool remove(int val) Removes an item val from the set if present. Returns true if the item was present, false otherwise.\nint getRandom() Returns a random element from the current set of elements (it's guaranteed that at least one element exists when this method is called). Each element must have the same probability of being returned.\nYou must implement the functions of the class such that each function works in average O(1) time complexity.\n","1599":"Given a root node reference of a BST and a key, delete the node with the given key in the BST. Return the root node reference (possibly updated) of the BST.\nBasically, the deletion can be divided into two stages:\nSearch for a node to remove.\nIf the node is found, delete the node.\n","1600":"Given an integer array nums of size n, return the minimum number of moves required to make all array elements equal.\nIn one move, you can increment n - 1 elements of the array by 1.\n","1601":"We are given hours, a list of the number of hours worked per day for a given employee.\nA day is considered to be a tiring day if and only if the number of hours worked is (strictly) greater than 8.\nA well-performing interval is an interval of days for which the number of tiring days is strictly larger than the number of non-tiring days.\nReturn the length of the longest well-performing interval.\n","1602":"Suppose we have a file system that stores both files and directories. An example of one system is represented in the following picture:\nHere, we have dir as the only directory in the root. dir contains two subdirectories, subdir1 and subdir2. subdir1 contains a file file1.ext and subdirectory subsubdir1. subdir2 contains a subdirectory subsubdir2, which contains a file file2.ext.\nIn text form, it looks like this (with \u27f6 representing the tab character):\ndir\n\u27f6 subdir1\n\u27f6 \u27f6 file1.ext\n\u27f6 \u27f6 subsubdir1\n\u27f6 subdir2\n\u27f6 \u27f6 subsubdir2\n\u27f6 \u27f6 \u27f6 file2.ext\nIf we were to write this representation in code, it will look like this: \"dir\\n\\tsubdir1\\n\\t\\tfile1.ext\\n\\t\\tsubsubdir1\\n\\tsubdir2\\n\\t\\tsubsubdir2\\n\\t\\t\\tfile2.ext\". Note that the '\\n' and '\\t' are the new-line and tab characters.\nEvery file and directory has a unique absolute path in the file system, which is the order of directories that must be opened to reach the file\/directory itself, all concatenated by '\/'s. Using the above example, the absolute path to file2.ext is \"dir\/subdir2\/subsubdir2\/file2.ext\". Each directory name consists of letters, digits, and\/or spaces. Each file name is of the form name.extension, where name and extension consist of letters, digits, and\/or spaces.\nGiven a string input representing the file system in the explained format, return the length of the longest absolute path to a file in the abstracted file system. If there is no file in the system, return 0.\nNote that the testcases are generated such that the file system is valid and no file or directory name has length 0.\n","1603":"You are given two arrays rowSum and colSum of non-negative integers where rowSum[i] is the sum of the elements in the ith row and colSum[j] is the sum of the elements of the jth column of a 2D matrix. In other words, you do not know the elements of the matrix, but you do know the sums of each row and column.\nFind any matrix of non-negative integers of size rowSum.length x colSum.length that satisfies the rowSum and colSum requirements.\nReturn a 2D array representing any matrix that fulfills the requirements. It's guaranteed that at least one matrix that fulfills the requirements exists.\n","1604":"You are given an integer array nums of even length n and an integer limit. In one move, you can replace any integer from nums with another integer between 1 and limit, inclusive.\nThe array nums is complementary if for all indices i (0-indexed), nums[i] + nums[n - 1 - i] equals the same number. For example, the array [1,2,3,4] is complementary because for all indices i, nums[i] + nums[n - 1 - i] = 5.\nReturn the minimum number of moves required to make nums complementary.\n","1605":"There is a hidden integer array arr that consists of n non-negative integers.\nIt was encoded into another integer array encoded of length n - 1, such that encoded[i] = arr[i] XOR arr[i + 1]. For example, if arr = [1,0,2,1], then encoded = [1,2,3].\nYou are given the encoded array. You are also given an integer first, that is the first element of arr, i.e. arr[0].\nReturn the original array arr. It can be proved that the answer exists and is unique.\n","1606":"Write an API that generates fancy sequences using the append, addAll, and multAll operations.\nImplement the Fancy class:\nFancy() Initializes the object with an empty sequence.\nvoid append(val) Appends an integer val to the end of the sequence.\nvoid addAll(inc) Increments all existing values in the sequence by an integer inc.\nvoid multAll(m) Multiplies all existing values in the sequence by an integer m.\nint getIndex(idx) Gets the current value at index idx (0-indexed) of the sequence modulo 109 + 7. If the index is greater or equal than the length of the sequence, return -1.\n","1607":"Given a circular integer array nums (i.e., the next element of nums[nums.length - 1] is nums[0]), return the next greater number for every element in nums.\nThe next greater number of a number x is the first greater number to its traversing-order next in the array, which means you could search circularly to find its next greater number. If it doesn't exist, return -1 for this number.\n","1608":"Given an array of points on the X-Y plane points where points[i] = [xi, yi], return the area of the largest triangle that can be formed by any three different points. Answers within 10-5 of the actual answer will be accepted.\n","1609":"You are given a doubly linked list, which contains nodes that have a next pointer, a previous pointer, and an additional child pointer. This child pointer may or may not point to a separate doubly linked list, also containing these special nodes. These child lists may have one or more children of their own, and so on, to produce a multilevel data structure as shown in the example below.\nGiven the head of the first level of the list, flatten the list so that all the nodes appear in a single-level, doubly linked list. Let curr be a node with a child list. The nodes in the child list should appear after curr and before curr.next in the flattened list.\nReturn the head of the flattened list. The nodes in the list must have all of their child pointers set to null.\n","1610":"There is a robot starting at the position (0, 0), the origin, on a 2D plane. Given a sequence of its moves, judge if this robot ends up at (0, 0) after it completes its moves.\nYou are given a string moves that represents the move sequence of the robot where moves[i] represents its ith move. Valid moves are 'R' (right), 'L' (left), 'U' (up), and 'D' (down).\nReturn true if the robot returns to the origin after it finishes all of its moves, or false otherwise.\nNote: The way that the robot is \"facing\" is irrelevant. 'R' will always make the robot move to the right once, 'L' will always make it move left, etc. Also, assume that the magnitude of the robot's movement is the same for each move.\n","1611":"Given a string s, find the longest palindromic subsequence's length in s.\nA subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n","1612":"Given an integer number n, return the difference between the product of its digits and the sum of its digits.\n","1613":"You are given a string s consisting of n characters which are either 'X' or 'O'.\nA move is defined as selecting three consecutive characters of s and converting them to 'O'. Note that if a move is applied to the character 'O', it will stay the same.\nReturn the minimum number of moves required so that all the characters of s are converted to 'O'.\n","1614":"Given an integer array nums, a reducer function fn, and an initial value init, return a reduced array.\nA reduced array is created by applying the following operation: val = fn(init, nums[0]), val = fn(val, nums[1]), val = fn(val, nums[2]), ... until every element in the array has been processed. The final value of val is returned.\nIf the length of the array is 0, it should return init.\nPlease solve it without using the built-in Array.reduce method.\n","1615":"You are given an integer n. You have an n x n binary grid grid with all values initially 1's except for some indices given in the array mines. The ith element of the array mines is defined as mines[i] = [xi, yi] where grid[xi][yi] == 0.\nReturn the order of the largest axis-aligned plus sign of 1's contained in grid. If there is none, return 0.\nAn axis-aligned plus sign of 1's of order k has some center grid[r][c] == 1 along with four arms of length k - 1 going up, down, left, and right, and made of 1's. Note that there could be 0's or 1's beyond the arms of the plus sign, only the relevant area of the plus sign is checked for 1's.\n","1616":"There are n cars traveling at different speeds in the same direction along a one-lane road. You are given an array cars of length n, where cars[i] = [positioni, speedi] represents:\npositioni is the distance between the ith car and the beginning of the road in meters. It is guaranteed that positioni < positioni+1.\nspeedi is the initial speed of the ith car in meters per second.\nFor simplicity, cars can be considered as points moving along the number line. Two cars collide when they occupy the same position. Once a car collides with another car, they unite and form a single car fleet. The cars in the formed fleet will have the same position and the same speed, which is the initial speed of the slowest car in the fleet.\nReturn an array answer, where answer[i] is the time, in seconds, at which the ith car collides with the next car, or -1 if the car does not collide with the next car. Answers within 10-5 of the actual answers are accepted.\n","1617":"SQL Schema\nTable: Logins\n+----------------+----------+\n| Column Name    | Type     |\n+----------------+----------+\n| user_id        | int      |\n| time_stamp     | datetime |\n+----------------+----------+\n(user_id, time_stamp) is the primary key for this table.\nEach row contains information about the login time for the user with ID user_id.\n  Write an SQL query to report the latest login for all users in the year 2020. Do not include the users who did not login in 2020.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1618":"There is a forest with an unknown number of rabbits. We asked n rabbits \"How many rabbits have the same color as you?\" and collected the answers in an integer array answers where answers[i] is the answer of the ith rabbit.\nGiven the array answers, return the minimum number of rabbits that could be in the forest.\n","1619":"You are given a 0-indexed positive integer array nums and a positive integer k.\nA pair of numbers (num1, num2) is called excellent if the following conditions are satisfied:\nBoth the numbers num1 and num2 exist in the array nums.\nThe sum of the number of set bits in num1 OR num2 and num1 AND num2 is greater than or equal to k, where OR is the bitwise OR operation and AND is the bitwise AND operation.\nReturn the number of distinct excellent pairs.\nTwo pairs (a, b) and (c, d) are considered distinct if either a != c or b != d. For example, (1, 2) and (2, 1) are distinct.\nNote that a pair (num1, num2) such that num1 == num2 can also be excellent if you have at least one occurrence of num1 in the array.\n","1620":"You are given an integer array ranks representing the ranks of some mechanics. ranksi is the rank of the ith mechanic. A mechanic with a rank r can repair n cars in r * n2 minutes.\nYou are also given an integer cars representing the total number of cars waiting in the garage to be repaired.\nReturn the minimum time taken to repair all the cars.\nNote: All the mechanics can repair the cars simultaneously.\n","1621":"There are n cities numbered from 0 to n-1. Given the array edges where edges[i] = [fromi, toi, weighti] represents a bidirectional and weighted edge between cities fromi and toi, and given the integer distanceThreshold.\nReturn the city with the smallest number of cities that are reachable through some path and whose distance is at most distanceThreshold, If there are multiple such cities, return the city with the greatest number.\nNotice that the distance of a path connecting cities i and j is equal to the sum of the edges' weights along that path.\n","1622":"You are given a 0-indexed array nums comprising of n non-negative integers.\nIn one operation, you must:\nChoose an integer i such that 1 <= i < n and nums[i] > 0.\nDecrease nums[i] by 1.\nIncrease nums[i - 1] by 1.\nReturn the minimum possible value of the maximum integer of nums after performing any number of operations.\n","1623":"You are given two strings s and sub. You are also given a 2D character array mappings where mappings[i] = [oldi, newi] indicates that you may perform the following operation any number of times:\nReplace a character oldi of sub with newi.\nEach character in sub cannot be replaced more than once.\nReturn true if it is possible to make sub a substring of s by replacing zero or more characters according to mappings. Otherwise, return false.\nA substring is a contiguous non-empty sequence of characters within a string.\n","1624":"Given two n x n binary matrices mat and target, return true if it is possible to make mat equal to target by rotating mat in 90-degree increments, or false otherwise.\n","1625":"There is a stream of n (idKey, value) pairs arriving in an arbitrary order, where idKey is an integer between 1 and n and value is a string. No two pairs have the same id.\nDesign a stream that returns the values in increasing order of their IDs by returning a chunk (list) of values after each insertion. The concatenation of all the chunks should result in a list of the sorted values.\nImplement the OrderedStream class:\nOrderedStream(int n) Constructs the stream to take n values.\nString[] insert(int idKey, String value) Inserts the pair (idKey, value) into the stream, then returns the largest possible chunk of currently inserted values that appear next in the order.\n","1626":"You are given a 2D integer array intervals, where intervals[i] = [lefti, righti] describes the ith interval starting at lefti and ending at righti (inclusive). The size of an interval is defined as the number of integers it contains, or more formally righti - lefti + 1.\nYou are also given an integer array queries. The answer to the jth query is the size of the smallest interval i such that lefti <= queries[j] <= righti. If no such interval exists, the answer is -1.\nReturn an array containing the answers to the queries.\n","1627":"A valid cut in a circle can be:\nA cut that is represented by a straight line that touches two points on the edge of the circle and passes through its center, or\nA cut that is represented by a straight line that touches one point on the edge of the circle and its center.\nSome valid and invalid cuts are shown in the figures below.\nGiven the integer n, return the minimum number of cuts needed to divide a circle into n equal slices.\n","1628":"There are n seats and n students in a room. You are given an array seats of length n, where seats[i] is the position of the ith seat. You are also given the array students of length n, where students[j] is the position of the jth student.\nYou may perform the following move any number of times:\nIncrease or decrease the position of the ith student by 1 (i.e., moving the ith student from position x to x + 1 or x - 1)\nReturn the minimum number of moves required to move each student to a seat such that no two students are in the same seat.\nNote that there may be multiple seats or students in the same position at the beginning.\n","1629":"There is a party where n friends numbered from 0 to n - 1 are attending. There is an infinite number of chairs in this party that are numbered from 0 to infinity. When a friend arrives at the party, they sit on the unoccupied chair with the smallest number.\nFor example, if chairs 0, 1, and 5 are occupied when a friend comes, they will sit on chair number 2.\nWhen a friend leaves the party, their chair becomes unoccupied at the moment they leave. If another friend arrives at that same moment, they can sit in that chair.\nYou are given a 0-indexed 2D integer array times where times[i] = [arrivali, leavingi], indicating the arrival and leaving times of the ith friend respectively, and an integer targetFriend. All arrival times are distinct.\nReturn the chair number that the friend numbered targetFriend will sit on.\n","1630":"You are given an array of integers nums, there is a sliding window of size k which is moving from the very left of the array to the very right. You can only see the k numbers in the window. Each time the sliding window moves right by one position.\nReturn the max sliding window.\n","1631":"You are given a network of n nodes, labeled from 1 to n. You are also given times, a list of travel times as directed edges times[i] = (ui, vi, wi), where ui is the source node, vi is the target node, and wi is the time it takes for a signal to travel from source to target.\nWe will send a signal from a given node k. Return the minimum time it takes for all the n nodes to receive the signal. If it is impossible for all the n nodes to receive the signal, return -1.\n","1632":"You are given two 0-indexed integer arrays nums and removeQueries, both of length n. For the ith query, the element in nums at the index removeQueries[i] is removed, splitting nums into different segments.\nA segment is a contiguous sequence of positive integers in nums. A segment sum is the sum of every element in a segment.\nReturn an integer array answer, of length n, where answer[i] is the maximum segment sum after applying the ith removal.\nNote: The same index will not be removed more than once.\n","1633":"SQL Schema\nTable: Users\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | int     |\n| name          | varchar |\n| mail          | varchar |\n+---------------+---------+\nuser_id is the primary key for this table.\nThis table contains information of the users signed up in a website. Some e-mails are invalid.\n  Write an SQL query to find the users who have valid emails.\nA valid e-mail has a prefix name and a domain where:\nThe prefix name is a string that may contain letters (upper or lower case), digits, underscore '_', period '.', and\/or dash '-'. The prefix name must start with a letter.\nThe domain is '@leetcode.com'.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1634":"You are given an integer array nums and an integer k.\nIn one operation, you can pick two numbers from the array whose sum equals k and remove them from the array.\nReturn the maximum number of operations you can perform on the array.\n","1635":"You are given a 0-indexed integer array nums and two integers key and k. A k-distant index is an index i of nums for which there exists at least one index j such that |i - j| <= k and nums[j] == key.\nReturn a list of all k-distant indices sorted in increasing order.\n","1636":"Given two integers tomatoSlices and cheeseSlices. The ingredients of different burgers are as follows:\nJumbo Burger: 4 tomato slices and 1 cheese slice.\nSmall Burger: 2 Tomato slices and 1 cheese slice.\nReturn [total_jumbo, total_small] so that the number of remaining tomatoSlices equal to 0 and the number of remaining cheeseSlices equal to 0. If it is not possible to make the remaining tomatoSlices and cheeseSlices equal to 0 return [].\n","1637":"Given a list of 24-hour clock time points in \"HH:MM\" format, return the minimum minutes difference between any two time-points in the list.\n","1638":"Design a data structure to store the strings' count with the ability to return the strings with minimum and maximum counts.\nImplement the AllOne class:\nAllOne() Initializes the object of the data structure.\ninc(String key) Increments the count of the string key by 1. If key does not exist in the data structure, insert it with count 1.\ndec(String key) Decrements the count of the string key by 1. If the count of key is 0 after the decrement, remove it from the data structure. It is guaranteed that key exists in the data structure before the decrement.\ngetMaxKey() Returns one of the keys with the maximal count. If no element exists, return an empty string \"\".\ngetMinKey() Returns one of the keys with the minimum count. If no element exists, return an empty string \"\".\nNote that each function must run in O(1) average time complexity.\n","1639":"Given an integer array nums, return the maximum result of nums[i] XOR nums[j], where 0 <= i <= j < n.\n","1640":"Given an integer n (in base 10) and a base k, return the sum of the digits of n after converting n from base 10 to base k.\nAfter converting, each digit should be interpreted as a base 10 number, and the sum should be returned in base 10.\n","1641":"Design a Skiplist without using any built-in libraries.\nA skiplist is a data structure that takes O(log(n)) time to add, erase and search. Comparing with treap and red-black tree which has the same function and performance, the code length of Skiplist can be comparatively short and the idea behind Skiplists is just simple linked lists.\nFor example, we have a Skiplist containing [30,40,50,60,70,90] and we want to add 80 and 45 into it. The Skiplist works this way:\n\nArtyom Kalinin [CC BY-SA 3.0], via Wikimedia Commons\nYou can see there are many layers in the Skiplist. Each layer is a sorted linked list. With the help of the top layers, add, erase and search can be faster than O(n). It can be proven that the average time complexity for each operation is O(log(n)) and space complexity is O(n).\nSee more about Skiplist: https:\/\/en.wikipedia.org\/wiki\/Skip_list\nImplement the Skiplist class:\nSkiplist() Initializes the object of the skiplist.\nbool search(int target) Returns true if the integer target exists in the Skiplist or false otherwise.\nvoid add(int num) Inserts the value num into the SkipList.\nbool erase(int num) Removes the value num from the Skiplist and returns true. If num does not exist in the Skiplist, do nothing and return false. If there exist multiple num values, removing any one of them is fine.\nNote that duplicates may exist in the Skiplist, your code needs to handle this situation.\n","1642":"You are given a string array words and a string s, where words[i] and s comprise only of lowercase English letters.\nReturn the number of strings in words that are a prefix of s.\nA prefix of a string is a substring that occurs at the beginning of the string. A substring is a contiguous sequence of characters within a string.\n","1643":"You are visiting a farm that has a single row of fruit trees arranged from left to right. The trees are represented by an integer array fruits where fruits[i] is the type of fruit the ith tree produces.\nYou want to collect as much fruit as possible. However, the owner has some strict rules that you must follow:\nYou only have two baskets, and each basket can only hold a single type of fruit. There is no limit on the amount of fruit each basket can hold.\nStarting from any tree of your choice, you must pick exactly one fruit from every tree (including the start tree) while moving to the right. The picked fruits must fit in one of your baskets.\nOnce you reach a tree with fruit that cannot fit in your baskets, you must stop.\nGiven the integer array fruits, return the maximum number of fruits you can pick.\n","1644":"You have n robots. You are given two 0-indexed integer arrays, chargeTimes and runningCosts, both of length n. The ith robot costs chargeTimes[i] units to charge and costs runningCosts[i] units to run. You are also given an integer budget.\nThe total cost of running k chosen robots is equal to max(chargeTimes) + k * sum(runningCosts), where max(chargeTimes) is the largest charge cost among the k robots and sum(runningCosts) is the sum of running costs among the k robots.\nReturn the maximum number of consecutive robots you can run such that the total cost does not exceed budget.\n","1645":"You are given an array prices where prices[i] is the price of a given stock on the ith day.\nFind the maximum profit you can achieve. You may complete as many transactions as you like (i.e., buy one and sell one share of the stock multiple times) with the following restrictions:\nAfter you sell your stock, you cannot buy stock on the next day (i.e., cooldown one day).\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n","1646":"There is a street with n * 2 plots, where there are n plots on each side of the street. The plots on each side are numbered from 1 to n. On each plot, a house can be placed.\nReturn the number of ways houses can be placed such that no two houses are adjacent to each other on the same side of the street. Since the answer may be very large, return it modulo 109 + 7.\nNote that if a house is placed on the ith plot on one side of the street, a house can also be placed on the ith plot on the other side of the street.\n","1647":"There is an m x n grid, where (0, 0) is the top-left cell and (m - 1, n - 1) is the bottom-right cell. You are given an integer array startPos where startPos = [startrow, startcol] indicates that initially, a robot is at the cell (startrow, startcol). You are also given an integer array homePos where homePos = [homerow, homecol] indicates that its home is at the cell (homerow, homecol).\nThe robot needs to go to its home. It can move one cell in four directions: left, right, up, or down, and it can not move outside the boundary. Every move incurs some cost. You are further given two 0-indexed integer arrays: rowCosts of length m and colCosts of length n.\nIf the robot moves up or down into a cell whose row is r, then this move costs rowCosts[r].\nIf the robot moves left or right into a cell whose column is c, then this move costs colCosts[c].\nReturn the minimum total cost for this robot to return home.\n","1648":"Suppose you have n integers labeled 1 through n. A permutation of those n integers perm (1-indexed) is considered a beautiful arrangement if for every i (1 <= i <= n), either of the following is true:\nperm[i] is divisible by i.\ni is divisible by perm[i].\nGiven an integer n, return the number of the beautiful arrangements that you can construct.\n","1649":"Given an array of integers nums, half of the integers in nums are odd, and the other half are even.\nSort the array so that whenever nums[i] is odd, i is odd, and whenever nums[i] is even, i is even.\nReturn any answer array that satisfies this condition.\n","1650":"You are given two binary trees root1 and root2.\nImagine that when you put one of them to cover the other, some nodes of the two trees are overlapped while the others are not. You need to merge the two trees into a new binary tree. The merge rule is that if two nodes overlap, then sum node values up as the new value of the merged node. Otherwise, the NOT null node will be used as the node of the new tree.\nReturn the merged tree.\nNote: The merging process must start from the root nodes of both trees.\n","1651":"You are given an integer array prices where prices[i] is the price of the ith item in a shop.\nThere is a special discount for items in the shop. If you buy the ith item, then you will receive a discount equivalent to prices[j] where j is the minimum index such that j > i and prices[j] <= prices[i]. Otherwise, you will not receive any discount at all.\nReturn an integer array answer where answer[i] is the final price you will pay for the ith item of the shop, considering the special discount.\n","1652":"Given an m x n matrix board where each cell is a battleship 'X' or empty '.', return the number of the battleships on board.\nBattleships can only be placed horizontally or vertically on board. In other words, they can only be made of the shape 1 x k (1 row, k columns) or k x 1 (k rows, 1 column), where k can be of any size. At least one horizontal or vertical cell separates between two battleships (i.e., there are no adjacent battleships).\n","1653":"A sentence is a string of single-space separated words where each word consists only of lowercase letters.\nA word is uncommon if it appears exactly once in one of the sentences, and does not appear in the other sentence.\nGiven two sentences s1 and s2, return a list of all the uncommon words. You may return the answer in any order.\n","1654":"Given the root of an n-ary tree, return the postorder traversal of its nodes' values.\nNary-Tree input serialization is represented in their level order traversal. Each group of children is separated by the null value (See examples)\n","1655":"Given an array of positive integers arr, return the sum of all possible odd-length subarrays of arr.\nA subarray is a contiguous subsequence of the array.\n","1656":"You are given a 0-indexed 2D array grid of size 2 x n, where grid[r][c] represents the number of points at position (r, c) on the matrix. Two robots are playing a game on this matrix.\nBoth robots initially start at (0, 0) and want to reach (1, n-1). Each robot may only move to the right ((r, c) to (r, c + 1)) or down ((r, c) to (r + 1, c)).\nAt the start of the game, the first robot moves from (0, 0) to (1, n-1), collecting all the points from the cells on its path. For all cells (r, c) traversed on the path, grid[r][c] is set to 0. Then, the second robot moves from (0, 0) to (1, n-1), collecting the points on its path. Note that their paths may intersect with one another.\nThe first robot wants to minimize the number of points collected by the second robot. In contrast, the second robot wants to maximize the number of points it collects. If both robots play optimally, return the number of points collected by the second robot.\n","1657":"You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order, and each of their nodes contains a single digit. Add the two numbers and return the sum as a linked list.\nYou may assume the two numbers do not contain any leading zero, except the number 0 itself.\n","1658":"In a project, you have a list of required skills req_skills, and a list of people. The ith person people[i] contains a list of skills that the person has.\nConsider a sufficient team: a set of people such that for every required skill in req_skills, there is at least one person in the team who has that skill. We can represent these teams by the index of each person.\nFor example, team = [0, 1, 3] represents the people with skills people[0], people[1], and people[3].\nReturn any sufficient team of the smallest possible size, represented by the index of each person. You may return the answer in any order.\nIt is guaranteed an answer exists.\n","1659":"Given the root of a binary tree, return all root-to-leaf paths in any order.\nA leaf is a node with no children.\n","1660":"You are given a network of n nodes represented as an n x n adjacency matrix graph, where the ith node is directly connected to the jth node if graph[i][j] == 1.\nSome nodes initial are initially infected by malware. Whenever two nodes are directly connected, and at least one of those two nodes is infected by malware, both nodes will be infected by malware. This spread of malware will continue until no more nodes can be infected in this manner.\nSuppose M(initial) is the final number of nodes infected with malware in the entire network after the spread of malware stops. We will remove exactly one node from initial.\nReturn the node that, if removed, would minimize M(initial). If multiple nodes could be removed to minimize M(initial), return such a node with the smallest index.\nNote that if a node was removed from the initial list of infected nodes, it might still be infected later due to the malware spread.\n","1661":"You are given a 0-indexed string array words.\nTwo strings are similar if they consist of the same characters.\nFor example, \"abca\" and \"cba\" are similar since both consist of characters 'a', 'b', and 'c'.\nHowever, \"abacba\" and \"bcfd\" are not similar since they do not consist of the same characters.\nReturn the number of pairs (i, j) such that 0 <= i < j <= word.length - 1 and the two strings words[i] and words[j] are similar.\n","1662":"You are given a 0-indexed integer array nums whose length is a power of 2.\nApply the following algorithm on nums:\nLet n be the length of nums. If n == 1, end the process. Otherwise, create a new 0-indexed integer array newNums of length n \/ 2.\nFor every even index i where 0 <= i < n \/ 2, assign the value of newNums[i] as min(nums[2 * i], nums[2 * i + 1]).\nFor every odd index i where 0 <= i < n \/ 2, assign the value of newNums[i] as max(nums[2 * i], nums[2 * i + 1]).\nReplace the array nums with newNums.\nRepeat the entire process starting from step 1.\nReturn the last number that remains in nums after applying the algorithm.\n","1663":"You are given a positive integer array nums.\nThe element sum is the sum of all the elements in nums.\nThe digit sum is the sum of all the digits (not necessarily distinct) that appear in nums.\nReturn the absolute difference between the element sum and digit sum of nums.\nNote that the absolute difference between two integers x and y is defined as |x - y|.\n","1664":"Given the root of a binary tree, determine if it is a valid binary search tree (BST).\nA valid BST is defined as follows:\nThe left\nsubtree\nof a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n","1665":"Along a long library corridor, there is a line of seats and decorative plants. You are given a 0-indexed string corridor of length n consisting of letters 'S' and 'P' where each 'S' represents a seat and each 'P' represents a plant.\nOne room divider has already been installed to the left of index 0, and another to the right of index n - 1. Additional room dividers can be installed. For each position between indices i - 1 and i (1 <= i <= n - 1), at most one divider can be installed.\nDivide the corridor into non-overlapping sections, where each section has exactly two seats with any number of plants. There may be multiple ways to perform the division. Two ways are different if there is a position with a room divider installed in the first way but not in the second way.\nReturn the number of ways to divide the corridor. Since the answer may be very large, return it modulo 109 + 7. If there is no way, return 0.\n","1666":"You are given an integer array nums. In one operation, you can replace any element in nums with any integer.\nnums is considered continuous if both of the following conditions are fulfilled:\nAll elements in nums are unique.\nThe difference between the maximum element and the minimum element in nums equals nums.length - 1.\nFor example, nums = [4, 2, 5, 3] is continuous, but nums = [1, 2, 3, 5, 6] is not continuous.\nReturn the minimum number of operations to make nums continuous.\n","1667":"You are given a 0-indexed binary string target of length n. You have another binary string s of length n that is initially set to all zeros. You want to make s equal to target.\nIn one operation, you can pick an index i where 0 <= i < n and flip all bits in the inclusive range [i, n - 1]. Flip means changing '0' to '1' and '1' to '0'.\nReturn the minimum number of operations needed to make s equal to target.\n","1668":"Given an undirected tree consisting of n vertices numbered from 0 to n-1, which has some apples in their vertices. You spend 1 second to walk over one edge of the tree. Return the minimum time in seconds you have to spend to collect all apples in the tree, starting at vertex 0 and coming back to this vertex.\nThe edges of the undirected tree are given in the array edges, where edges[i] = [ai, bi] means that exists an edge connecting the vertices ai and bi. Additionally, there is a boolean array hasApple, where hasApple[i] = true means that vertex i has an apple; otherwise, it does not have any apple.\n","1669":"SQL Schema\nTable: Department\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| revenue     | int     |\n| month       | varchar |\n+-------------+---------+\n(id, month) is the primary key of this table.\nThe table has information about the revenue of each department per month.\nThe month has values in [\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"].\n  Write an SQL query to reformat the table such that there is a department id column and a revenue column for each month.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1670":"Write an algorithm to determine if a number n is happy.\nA happy number is a number defined by the following process:\nStarting with any positive integer, replace the number by the sum of the squares of its digits.\nRepeat the process until the number equals 1 (where it will stay), or it loops endlessly in a cycle which does not include 1.\nThose numbers for which this process ends in 1 are happy.\nReturn true if n is a happy number, and false if not.\n","1671":"Given a circular integer array nums of length n, return the maximum possible sum of a non-empty subarray of nums.\nA circular array means the end of the array connects to the beginning of the array. Formally, the next element of nums[i] is nums[(i + 1) % n] and the previous element of nums[i] is nums[(i - 1 + n) % n].\nA subarray may only include each element of the fixed buffer nums at most once. Formally, for a subarray nums[i], nums[i + 1], ..., nums[j], there does not exist i <= k1, k2 <= j with k1 % n == k2 % n.\n","1672":"You are given two string arrays positive_feedback and negative_feedback, containing the words denoting positive and negative feedback, respectively. Note that no word is both positive and negative.\nInitially every student has 0 points. Each positive word in a feedback report increases the points of a student by 3, whereas each negative word decreases the points by 1.\nYou are given n feedback reports, represented by a 0-indexed string array report and a 0-indexed integer array student_id, where student_id[i] represents the ID of the student who has received the feedback report report[i]. The ID of each student is unique.\nGiven an integer k, return the top k students after ranking them in non-increasing order by their points. In case more than one student has the same points, the one with the lower ID ranks higher.\n","1673":"You have a chat log of n messages. You are given two string arrays messages and senders where messages[i] is a message sent by senders[i].\nA message is list of words that are separated by a single space with no leading or trailing spaces. The word count of a sender is the total number of words sent by the sender. Note that a sender may send more than one message.\nReturn the sender with the largest word count. If there is more than one sender with the largest word count, return the one with the lexicographically largest name.\nNote:\nUppercase letters come before lowercase letters in lexicographical order.\n\"Alice\" and \"alice\" are distinct.\n","1674":"You are given two positive 0-indexed integer arrays nums1 and nums2, both of length n.\nThe sum of squared difference of arrays nums1 and nums2 is defined as the sum of (nums1[i] - nums2[i])2 for each 0 <= i < n.\nYou are also given two positive integers k1 and k2. You can modify any of the elements of nums1 by +1 or -1 at most k1 times. Similarly, you can modify any of the elements of nums2 by +1 or -1 at most k2 times.\nReturn the minimum sum of squared difference after modifying array nums1 at most k1 times and modifying array nums2 at most k2 times.\nNote: You are allowed to modify the array elements to become negative integers.\n","1675":"Your task is to calculate ab mod 1337 where a is a positive integer and b is an extremely large positive integer given in the form of an array.\n","1676":"Given an array nums of integers, a move consists of choosing any element and decreasing it by 1.\nAn array A is a zigzag array if either:\nEvery even-indexed element is greater than adjacent elements, ie. A[0] > A[1] < A[2] > A[3] < A[4] > ...\nOR, every odd-indexed element is greater than adjacent elements, ie. A[0] < A[1] > A[2] < A[3] > A[4] < ...\nReturn the minimum number of moves to transform the given array nums into a zigzag array.\n","1677":"You are given a 0-indexed integer array costs where costs[i] is the cost of hiring the ith worker.\nYou are also given two integers k and candidates. We want to hire exactly k workers according to the following rules:\nYou will run k sessions and hire exactly one worker in each session.\nIn each hiring session, choose the worker with the lowest cost from either the first candidates workers or the last candidates workers. Break the tie by the smallest index.\nFor example, if costs = [3,2,7,7,1,2] and candidates = 2, then in the first hiring session, we will choose the 4th worker because they have the lowest cost [3,2,7,7,1,2].\nIn the second hiring session, we will choose 1st worker because they have the same lowest cost as 4th worker but they have the smallest index [3,2,7,7,2]. Please note that the indexing may be changed in the process.\nIf there are fewer than candidates workers remaining, choose the worker with the lowest cost among them. Break the tie by the smallest index.\nA worker can only be chosen once.\nReturn the total cost to hire exactly k workers.\n","1678":"You are given a 0-indexed string expression of the form \"<num1>+<num2>\" where <num1> and <num2> represent positive integers.\nAdd a pair of parentheses to expression such that after the addition of parentheses, expression is a valid mathematical expression and evaluates to the smallest possible value. The left parenthesis must be added to the left of '+' and the right parenthesis must be added to the right of '+'.\nReturn expression after adding a pair of parentheses such that expression evaluates to the smallest possible value. If there are multiple answers that yield the same result, return any of them.\nThe input has been generated such that the original value of expression, and the value of expression after adding any pair of parentheses that meets the requirements fits within a signed 32-bit integer.\n","1679":"Given an unsorted array of integers nums, return the length of the longest continuous increasing subsequence (i.e. subarray). The subsequence must be strictly increasing.\nA continuous increasing subsequence is defined by two indices l and r (l < r) such that it is [nums[l], nums[l + 1], ..., nums[r - 1], nums[r]] and for each l <= i < r, nums[i] < nums[i + 1].\n","1680":"An image smoother is a filter of the size 3 x 3 that can be applied to each cell of an image by rounding down the average of the cell and the eight surrounding cells (i.e., the average of the nine cells in the blue smoother). If one or more of the surrounding cells of a cell is not present, we do not consider it in the average (i.e., the average of the four cells in the red smoother).\nGiven an m x n integer matrix img representing the grayscale of an image, return the image after applying the smoother on each cell of it.\n","1681":"Given a binary array nums and an integer k, return the maximum number of consecutive 1's in the array if you can flip at most k 0's.\n","1682":"You are given an array nums consisting of positive integers.\nYou have to take each integer in the array, reverse its digits, and add it to the end of the array. You should apply this operation to the original integers in nums.\nReturn the number of distinct integers in the final array.\n","1683":"SQL Schema\nTable: Products\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| product_id  | int     |\n| store1      | int     |\n| store2      | int     |\n| store3      | int     |\n+-------------+---------+\nproduct_id is the primary key for this table.\nEach row in this table indicates the product's price in 3 different stores: store1, store2, and store3.\nIf the product is not available in a store, the price will be null in that store's column.\n  Write an SQL query to rearrange the Products table so that each row has (product_id, store, price). If a product is not available in a store, do not include a row with that product_id and store combination in the result table.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1684":"Given two integer arrays arr1 and arr2, return the minimum number of operations (possibly zero) needed to make arr1 strictly increasing.\nIn one operation, you can choose two indices 0 <= i < arr1.length and 0 <= j < arr2.length and do the assignment arr1[i] = arr2[j].\nIf there is no way to make arr1 strictly increasing, return -1.\n","1685":"Alice and Bob take turns playing a game, with Alice starting first.\nInitially, there is a number n on the chalkboard. On each player's turn, that player makes a move consisting of:\nChoosing any x with 0 < x < n and n % x == 0.\nReplacing the number n on the chalkboard with n - x.\nAlso, if a player cannot make a move, they lose the game.\nReturn true if and only if Alice wins the game, assuming both players play optimally.\n","1686":"Given an integer n, return the nth digit of the infinite integer sequence [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, ...].\n","1687":"SQL Schema\nTable: Employees\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| employee_id | int      |\n| name        | varchar  |\n| manager_id  | int      |\n| salary      | int      |\n+-------------+----------+\nemployee_id is the primary key for this table.\nThis table contains information about the employees, their salary, and the ID of their manager. Some employees do not have a manager (manager_id is null). \n  Write an SQL query to report the IDs of the employees whose salary is strictly less than $30000 and whose manager left the company. When a manager leaves the company, their information is deleted from the Employees table, but the reports still have their manager_id set to the manager that left.\nReturn the result table ordered by employee_id.\nThe query result format is in the following example.\n","1688":"Given a reference of a node in a connected undirected graph.\nReturn a deep copy (clone) of the graph.\nEach node in the graph contains a value (int) and a list (List[Node]) of its neighbors.\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n}\n  Test case format:\nFor simplicity, each node's value is the same as the node's index (1-indexed). For example, the first node with val == 1, the second node with val == 2, and so on. The graph is represented in the test case using an adjacency list.\nAn adjacency list is a collection of unordered lists used to represent a finite graph. Each list describes the set of neighbors of a node in the graph.\nThe given node will always be the first node with val = 1. You must return the copy of the given node as a reference to the cloned graph.\n","1689":"You are given a string s that consists of the digits '1' to '9' and two integers k and minLength.\nA partition of s is called beautiful if:\ns is partitioned into k non-intersecting substrings.\nEach substring has a length of at least minLength.\nEach substring starts with a prime digit and ends with a non-prime digit. Prime digits are '2', '3', '5', and '7', and the rest of the digits are non-prime.\nReturn the number of beautiful partitions of s. Since the answer may be very large, return it modulo 109 + 7.\nA substring is a contiguous sequence of characters within a string.\n","1690":"You are given two strings s and t. In one step, you can append any character to either s or t.\nReturn the minimum number of steps to make s and t anagrams of each other.\nAn anagram of a string is a string that contains the same characters with a different (or the same) ordering.\n","1691":"Enhance all functions to have the callPolyfill method. The method accepts an object obj as it's first parameter and any number of additional arguments. The obj becomes the this context for the function. The additional arguments are passed to the function (that the callPolyfill method belongs on).\nFor example if you had the function:\nfunction tax(price, taxRate) {\n  const totalCost = price * (1 + taxRate);\n  console.log(`The cost of ${this.item} is ${totalCost}`);\n}\nCalling this function like tax(10, 0.1) will log \"The cost of undefined is 11\". This is because the this context was not defined.\nHowever, calling the function like tax.callPolyfill({item: \"salad\"}, 10, 0.1) will log \"The cost of salad is 11\". The this context was appropriately set, and the function logged an appropriate output.\nPlease solve this without using the built-in Function.call method.\n","1692":"Given an integer n, return true if it is a power of four. Otherwise, return false.\nAn integer n is a power of four, if there exists an integer x such that n == 4x.\n","1693":"You are given a 0-indexed integer array nums representing the contents of a pile, where nums[0] is the topmost element of the pile.\nIn one move, you can perform either of the following:\nIf the pile is not empty, remove the topmost element of the pile.\nIf there are one or more removed elements, add any one of them back onto the pile. This element becomes the new topmost element.\nYou are also given an integer k, which denotes the total number of moves to be made.\nReturn the maximum value of the topmost element of the pile possible after exactly k moves. In case it is not possible to obtain a non-empty pile after k moves, return -1.\n","1694":"You are given a string s consisting only of lowercase English letters.\nIn one move, you can select any two adjacent characters of s and swap them.\nReturn the minimum number of moves needed to make s a palindrome.\nNote that the input will be generated such that s can always be converted to a palindrome.\n","1695":"Given 2n balls of k distinct colors. You will be given an integer array balls of size k where balls[i] is the number of balls of color i.\nAll the balls will be shuffled uniformly at random, then we will distribute the first n balls to the first box and the remaining n balls to the other box (Please read the explanation of the second example carefully).\nPlease note that the two boxes are considered different. For example, if we have two balls of colors a and b, and two boxes [] and (), then the distribution [a] (b) is considered different than the distribution [b] (a) (Please read the explanation of the first example carefully).\nReturn the probability that the two boxes have the same number of distinct balls. Answers within 10-5 of the actual value will be accepted as correct.\n","1696":"You are given an integer array nums. In one move, you can pick an index i where 0 <= i < nums.length and increment nums[i] by 1.\nReturn the minimum number of moves to make every value in nums unique.\nThe test cases are generated so that the answer fits in a 32-bit integer.\n","1697":"You are given a 0-indexed integer array nums.\nThe low score of nums is the minimum value of |nums[i] - nums[j]| over all 0 <= i < j < nums.length.\nThe high score of nums is the maximum value of |nums[i] - nums[j]| over all 0 <= i < j < nums.length.\nThe score of nums is the sum of the high and low scores of nums.\nTo minimize the score of nums, we can change the value of at most two elements of nums.\nReturn the minimum possible score after changing the value of at most two elements of nums.\nNote that |x| denotes the absolute value of x.\n","1698":"SQL Schema\nTable: Person\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| email       | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table contains an email. The emails will not contain uppercase letters.\n  Write an SQL query to delete all the duplicate emails, keeping only one unique email with the smallest id. Note that you are supposed to write a DELETE statement and not a SELECT one.\nAfter running your script, the answer shown is the Person table. The driver will first compile and run your piece of code and then show the Person table. The final order of the Person table does not matter.\nThe query result format is in the following example.\n","1699":"Given an integer array nums and an integer k, return the number of subarrays of nums where the least common multiple of the subarray's elements is k.\nA subarray is a contiguous non-empty sequence of elements within an array.\nThe least common multiple of an array is the smallest positive integer that is divisible by all the array elements.\n","1700":"You are given a 2D integer array groups of length n. You are also given an integer array nums.\nYou are asked if you can choose n disjoint subarrays from the array nums such that the ith subarray is equal to groups[i] (0-indexed), and if i > 0, the (i-1)th subarray appears before the ith subarray in nums (i.e. the subarrays must be in the same order as groups).\nReturn true if you can do this task, and false otherwise.\nNote that the subarrays are disjoint if and only if there is no index k such that nums[k] belongs to more than one subarray. A subarray is a contiguous sequence of elements within an array.\n","1701":"Given an integer array nums and an integer k, return the maximum sum of a non-empty subsequence of that array such that for every two consecutive integers in the subsequence, nums[i] and nums[j], where i < j, the condition j - i <= k is satisfied.\nA subsequence of an array is obtained by deleting some number of elements (can be zero) from the array, leaving the remaining elements in their original order.\n","1702":"Given a text file file.txt that contains a list of phone numbers (one per line), write a one-liner bash script to print all valid phone numbers.\nYou may assume that a valid phone number must appear in one of the following two formats: (xxx) xxx-xxxx or xxx-xxx-xxxx. (x means a digit)\nYou may also assume each line in the text file must not contain leading or trailing white spaces.\n","1703":"You are given an integer array values where values[i] represents the value of the ith sightseeing spot. Two sightseeing spots i and j have a distance j - i between them.\nThe score of a pair (i < j) of sightseeing spots is values[i] + values[j] + i - j: the sum of the values of the sightseeing spots, minus the distance between them.\nReturn the maximum score of a pair of sightseeing spots.\n","1704":"Given a m x n grid filled with non-negative numbers, find a path from top left to bottom right, which minimizes the sum of all numbers along its path.\nNote: You can only move either down or right at any point in time.\n","1705":"Given two numbers, hour and minutes, return the smaller angle (in degrees) formed between the hour and the minute hand.\nAnswers within 10-5 of the actual value will be accepted as correct.\n","1706":"Alice has n balloons arranged on a rope. You are given a 0-indexed string colors where colors[i] is the color of the ith balloon.\nAlice wants the rope to be colorful. She does not want two consecutive balloons to be of the same color, so she asks Bob for help. Bob can remove some balloons from the rope to make it colorful. You are given a 0-indexed integer array neededTime where neededTime[i] is the time (in seconds) that Bob needs to remove the ith balloon from the rope.\nReturn the minimum time Bob needs to make the rope colorful.\n","1707":"You are given a string s consisting of only lowercase English letters. In one operation, you can:\nDelete the entire string s, or\nDelete the first i letters of s if the first i letters of s are equal to the following i letters in s, for any i in the range 1 <= i <= s.length \/ 2.\nFor example, if s = \"ababc\", then in one operation, you could delete the first two letters of s to get \"abc\", since the first two letters of s and the following two letters of s are both equal to \"ab\".\nReturn the maximum number of operations needed to delete all of s.\n","1708":"Winston was given the above mysterious function func. He has an integer array arr and an integer target and he wants to find the values l and r that make the value |func(arr, l, r) - target| minimum possible.\nReturn the minimum possible value of |func(arr, l, r) - target|.\nNotice that func should be called with the values l and r where 0 <= l, r < arr.length.\n","1709":"Given an array nums sorted in non-decreasing order, return the maximum between the number of positive integers and the number of negative integers.\nIn other words, if the number of positive integers in nums is pos and the number of negative integers is neg, then return the maximum of pos and neg.\nNote that 0 is neither positive nor negative.\n","1710":"Given an integer array nums, find a\nsubarray\nthat has the largest product, and return the product.\nThe test cases are generated so that the answer will fit in a 32-bit integer.\n","1711":"You are given two strings a and b that consist of lowercase letters. In one operation, you can change any character in a or b to any lowercase letter.\nYour goal is to satisfy one of the following three conditions:\nEvery letter in a is strictly less than every letter in b in the alphabet.\nEvery letter in b is strictly less than every letter in a in the alphabet.\nBoth a and b consist of only one distinct letter.\nReturn the minimum number of operations needed to achieve your goal.\n","1712":"You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.\nReturn the minimum number of steps to make the given string empty.\nA string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.\nA string is called palindrome if is one that reads the same backward as well as forward.\n","1713":"Given an integer num, return a string of its base 7 representation.\n","1714":"There is a binary tree rooted at 0 consisting of n nodes. The nodes are labeled from 0 to n - 1. You are given a 0-indexed integer array parents representing the tree, where parents[i] is the parent of node i. Since node 0 is the root, parents[0] == -1.\nEach node has a score. To find the score of a node, consider if the node and the edges connected to it were removed. The tree would become one or more non-empty subtrees. The size of a subtree is the number of the nodes in it. The score of the node is the product of the sizes of all those subtrees.\nReturn the number of nodes that have the highest score.\n","1715":"Given two integers dividend and divisor, divide two integers without using multiplication, division, and mod operator.\nThe integer division should truncate toward zero, which means losing its fractional part. For example, 8.345 would be truncated to 8, and -2.7335 would be truncated to -2.\nReturn the quotient after dividing dividend by divisor.\nNote: Assume we are dealing with an environment that could only store integers within the 32-bit signed integer range: [\u2212231, 231 \u2212 1]. For this problem, if the quotient is strictly greater than 231 - 1, then return 231 - 1, and if the quotient is strictly less than -231, then return -231.\n","1716":"In a linked list of size n, where n is even, the ith node (0-indexed) of the linked list is known as the twin of the (n-1-i)th node, if 0 <= i <= (n \/ 2) - 1.\nFor example, if n = 4, then node 0 is the twin of node 3, and node 1 is the twin of node 2. These are the only nodes with twins for n = 4.\nThe twin sum is defined as the sum of a node and its twin.\nGiven the head of a linked list with even length, return the maximum twin sum of the linked list.\n","1717":"Given an integer array nums, return the number of all the arithmetic subsequences of nums.\nA sequence of numbers is called arithmetic if it consists of at least three elements and if the difference between any two consecutive elements is the same.\nFor example, [1, 3, 5, 7, 9], [7, 7, 7, 7], and [3, -1, -5, -9] are arithmetic sequences.\nFor example, [1, 1, 2, 5, 7] is not an arithmetic sequence.\nA subsequence of an array is a sequence that can be formed by removing some elements (possibly none) of the array.\nFor example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].\nThe test cases are generated so that the answer fits in 32-bit integer.\n","1718":"Given an array nums of distinct positive integers, return the number of tuples (a, b, c, d) such that a * b = c * d where a, b, c, and d are elements of nums, and a != b != c != d.\n","1719":"You are given a string s of lowercase English letters and a 2D integer array shifts where shifts[i] = [starti, endi, directioni]. For every i, shift the characters in s from the index starti to the index endi (inclusive) forward if directioni = 1, or shift the characters backward if directioni = 0.\nShifting a character forward means replacing it with the next letter in the alphabet (wrapping around so that 'z' becomes 'a'). Similarly, shifting a character backward means replacing it with the previous letter in the alphabet (wrapping around so that 'a' becomes 'z').\nReturn the final string after all such shifts to s are applied.\n","1720":"You are given a binary string binary. A subsequence of binary is considered good if it is not empty and has no leading zeros (with the exception of \"0\").\nFind the number of unique good subsequences of binary.\nFor example, if binary = \"001\", then all the good subsequences are [\"0\", \"0\", \"1\"], so the unique good subsequences are \"0\" and \"1\". Note that subsequences \"00\", \"01\", and \"001\" are not good because they have leading zeros.\nReturn the number of unique good subsequences of binary. Since the answer may be very large, return it modulo 109 + 7.\nA subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n","1721":"Given an array of integers arr, return the number of subarrays with an odd sum.\nSince the answer can be very large, return it modulo 109 + 7.\n","1722":"Given n points on a 2D plane where points[i] = [xi, yi], Return the widest vertical area between two points such that no points are inside the area.\nA vertical area is an area of fixed-width extending infinitely along the y-axis (i.e., infinite height). The widest vertical area is the one with the maximum width.\nNote that points on the edge of a vertical area are not considered included in the area.\n","1723":"We define the conversion array conver of an array arr as follows:\nconver[i] = arr[i] + max(arr[0..i]) where max(arr[0..i]) is the maximum value of arr[j] over 0 <= j <= i.\nWe also define the score of an array arr as the sum of the values of the conversion array of arr.\nGiven a 0-indexed integer array nums of length n, return an array ans of length n where ans[i] is the score of the prefix nums[0..i].\n","1724":"There is a directed graph of n colored nodes and m edges. The nodes are numbered from 0 to n - 1.\nYou are given a string colors where colors[i] is a lowercase English letter representing the color of the ith node in this graph (0-indexed). You are also given a 2D array edges where edges[j] = [aj, bj] indicates that there is a directed edge from node aj to node bj.\nA valid path in the graph is a sequence of nodes x1 -> x2 -> x3 -> ... -> xk such that there is a directed edge from xi to xi+1 for every 1 <= i < k. The color value of the path is the number of nodes that are colored the most frequently occurring color along that path.\nReturn the largest color value of any valid path in the given graph, or -1 if the graph contains a cycle.\n","1725":"Given an m x n matrix, return true if the matrix is Toeplitz. Otherwise, return false.\nA matrix is Toeplitz if every diagonal from top-left to bottom-right has the same elements.\n","1726":"You are given a string allowed consisting of distinct characters and an array of strings words. A string is consistent if all characters in the string appear in the string allowed.\nReturn the number of consistent strings in the array words.\n","1727":"Given an array of positive integers nums, return the number of distinct prime factors in the product of the elements of nums.\nNote that:\nA number greater than 1 is called prime if it is divisible by only 1 and itself.\nAn integer val1 is a factor of another integer val2 if val2 \/ val1 is an integer.\n","1728":"You are given an integer mass, which represents the original mass of a planet. You are further given an integer array asteroids, where asteroids[i] is the mass of the ith asteroid.\nYou can arrange for the planet to collide with the asteroids in any arbitrary order. If the mass of the planet is greater than or equal to the mass of the asteroid, the asteroid is destroyed and the planet gains the mass of the asteroid. Otherwise, the planet is destroyed.\nReturn true if all asteroids can be destroyed. Otherwise, return false.\n","1729":"On a 0-indexed 8 x 8 chessboard, there can be multiple black queens ad one white king.\nYou are given a 2D integer array queens where queens[i] = [xQueeni, yQueeni] represents the position of the ith black queen on the chessboard. You are also given an integer array king of length 2 where king = [xKing, yKing] represents the position of the white king.\nReturn the coordinates of the black queens that can directly attack the king. You may return the answer in any order.\n","1730":"SQL Schema\nTable: Transactions\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| country       | varchar |\n| state         | enum    |\n| amount        | int     |\n| trans_date    | date    |\n+---------------+---------+\nid is the primary key of this table.\nThe table has information about incoming transactions.\nThe state column is an enum of type [\"approved\", \"declined\"].\n  Write an SQL query to find for each month and country, the number of transactions and their total amount, the number of approved transactions and their total amount.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1731":"Given a string s, return the last substring of s in lexicographical order.\n","1732":"There are n projects numbered from 0 to n - 1. You are given an integer array milestones where each milestones[i] denotes the number of milestones the ith project has.\nYou can work on the projects following these two rules:\nEvery week, you will finish exactly one milestone of one project. You must work every week.\nYou cannot work on two milestones from the same project for two consecutive weeks.\nOnce all the milestones of all the projects are finished, or if the only milestones that you can work on will cause you to violate the above rules, you will stop working. Note that you may not be able to finish every project's milestones due to these constraints.\nReturn the maximum number of weeks you would be able to work on the projects without violating the rules mentioned above.\n","1733":"Given a string s consisting of words and spaces, return the length of the last word in the string.\nA word is a maximal\nsubstring\nconsisting of non-space characters only.\n","1734":"There is a donuts shop that bakes donuts in batches of batchSize. They have a rule where they must serve all of the donuts of a batch before serving any donuts of the next batch. You are given an integer batchSize and an integer array groups, where groups[i] denotes that there is a group of groups[i] customers that will visit the shop. Each customer will get exactly one donut.\nWhen a group visits the shop, all customers of the group must be served before serving any of the following groups. A group will be happy if they all get fresh donuts. That is, the first customer of the group does not receive a donut that was left over from the previous group.\nYou can freely rearrange the ordering of the groups. Return the maximum possible number of happy groups after rearranging the groups.\n","1735":"You are given an integer matrix isWater of size m x n that represents a map of land and water cells.\nIf isWater[i][j] == 0, cell (i, j) is a land cell.\nIf isWater[i][j] == 1, cell (i, j) is a water cell.\nYou must assign each cell a height in a way that follows these rules:\nThe height of each cell must be non-negative.\nIf the cell is a water cell, its height must be 0.\nAny two adjacent cells must have an absolute height difference of at most 1. A cell is adjacent to another cell if the former is directly north, east, south, or west of the latter (i.e., their sides are touching).\nFind an assignment of heights such that the maximum height in the matrix is maximized.\nReturn an integer matrix height of size m x n where height[i][j] is cell (i, j)'s height. If there are multiple solutions, return any of them.\n","1736":"There is a restaurant with a single chef. You are given an array customers, where customers[i] = [arrivali, timei]:\narrivali is the arrival time of the ith customer. The arrival times are sorted in non-decreasing order.\ntimei is the time needed to prepare the order of the ith customer.\nWhen a customer arrives, he gives the chef his order, and the chef starts preparing it once he is idle. The customer waits till the chef finishes preparing his order. The chef does not prepare food for more than one customer at a time. The chef prepares food for customers in the order they were given in the input.\nReturn the average waiting time of all customers. Solutions within 10-5 from the actual answer are considered accepted.\n","1737":"You are given the root of a binary tree with n nodes, where each node is uniquely assigned a value from 1 to n. You are also given a sequence of n values voyage, which is the desired pre-order traversal of the binary tree.\nAny node in the binary tree can be flipped by swapping its left and right subtrees. For example, flipping node 1 will have the following effect:\nFlip the smallest number of nodes so that the pre-order traversal of the tree matches voyage.\nReturn a list of the values of all flipped nodes. You may return the answer in any order. If it is impossible to flip the nodes in the tree to make the pre-order traversal match voyage, return the list [-1].\n","1738":"Alice manages a company and has rented some floors of a building as office space. Alice has decided some of these floors should be special floors, used for relaxation only.\nYou are given two integers bottom and top, which denote that Alice has rented all the floors from bottom to top (inclusive). You are also given the integer array special, where special[i] denotes a special floor that Alice has designated for relaxation.\nReturn the maximum number of consecutive floors without a special floor.\n","1739":"Given a list of words, list of  single letters (might be repeating) and score of every character.\nReturn the maximum score of any valid set of words formed by using the given letters (words[i] cannot be used two or more times).\nIt is not necessary to use all characters in letters and each letter can only be used once. Score of letters 'a', 'b', 'c', ... ,'z' is given by score[0], score[1], ... , score[25] respectively.\n","1740":"Given two positive integers num1 and num2, find the positive integer x such that:\nx has the same number of set bits as num2, and\nThe value x XOR num1 is minimal.\nNote that XOR is the bitwise XOR operation.\nReturn the integer x. The test cases are generated such that x is uniquely determined.\nThe number of set bits of an integer is the number of 1's in its binary representation.\n","1741":"An n x n matrix is valid if every row and every column contains all the integers from 1 to n (inclusive).\nGiven an n x n integer matrix matrix, return true if the matrix is valid. Otherwise, return false.\n","1742":"Given a string containing just the characters '(' and ')', return the length of the longest valid (well-formed) parentheses\nsubstring\n.\n","1743":"You have an infinite number of stacks arranged in a row and numbered (left to right) from 0, each of the stacks has the same maximum capacity.\nImplement the DinnerPlates class:\nDinnerPlates(int capacity) Initializes the object with the maximum capacity of the stacks capacity.\nvoid push(int val) Pushes the given integer val into the leftmost stack with a size less than capacity.\nint pop() Returns the value at the top of the rightmost non-empty stack and removes it from that stack, and returns -1 if all the stacks are empty.\nint popAtStack(int index) Returns the value at the top of the stack with the given index index and removes it from that stack or returns -1 if the stack with that given index is empty.\n","1744":"Design a map that allows you to do the following:\nMaps a string key to a given value.\nReturns the sum of the values that have a key with a prefix equal to a given string.\nImplement the MapSum class:\nMapSum() Initializes the MapSum object.\nvoid insert(String key, int val) Inserts the key-val pair into the map. If the key already existed, the original key-value pair will be overridden to the new one.\nint sum(string prefix) Returns the sum of all the pairs' value whose key starts with the prefix.\n","1745":"The median is the middle value in an ordered integer list. If the size of the list is even, there is no middle value, and the median is the mean of the two middle values.\nFor example, for arr = [2,3,4], the median is 3.\nFor example, for arr = [2,3], the median is (2 + 3) \/ 2 = 2.5.\nImplement the MedianFinder class:\nMedianFinder() initializes the MedianFinder object.\nvoid addNum(int num) adds the integer num from the data stream to the data structure.\ndouble findMedian() returns the median of all elements so far. Answers within 10-5 of the actual answer will be accepted.\n","1746":"You are given a directed graph with n nodes labeled from 0 to n - 1, where each node has exactly one outgoing edge.\nThe graph is represented by a given 0-indexed integer array edges of length n, where edges[i] indicates that there is a directed edge from node i to node edges[i].\nThe edge score of a node i is defined as the sum of the labels of all the nodes that have an edge pointing to i.\nReturn the node with the highest edge score. If multiple nodes have the same edge score, return the node with the smallest index.\n","1747":"There are several stones arranged in a row, and each stone has an associated value which is an integer given in the array stoneValue.\nIn each round of the game, Alice divides the row into two non-empty rows (i.e. left row and right row), then Bob calculates the value of each row which is the sum of the values of all the stones in this row. Bob throws away the row which has the maximum value, and Alice's score increases by the value of the remaining row. If the value of the two rows are equal, Bob lets Alice decide which row will be thrown away. The next round starts with the remaining row.\nThe game ends when there is only one stone remaining. Alice's is initially zero.\nReturn the maximum score that Alice can obtain.\n","1748":"SQL Schema\nTable: Products\n+------------------+---------+\n| Column Name      | Type    |\n+------------------+---------+\n| product_id       | int     |\n| product_name     | varchar |\n| product_category | varchar |\n+------------------+---------+\nproduct_id is the primary key for this table.\nThis table contains data about the company's products.\n  Table: Orders\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| product_id    | int     |\n| order_date    | date    |\n| unit          | int     |\n+---------------+---------+\nThere is no primary key for this table. It may have duplicate rows.\nproduct_id is a foreign key to the Products table.\nunit is the number of products ordered in order_date.\n  Write an SQL query to get the names of products that have at least 100 units ordered in February 2020 and their amount.\nReturn result table in any order.\nThe query result format is in the following example.\n","1749":"Given a 0-indexed integer array nums, return the number of distinct quadruplets (a, b, c, d) such that:\nnums[a] + nums[b] + nums[c] == nums[d], and\na < b < c < d\n","1750":"Write a function to find the longest common prefix string amongst an array of strings.\nIf there is no common prefix, return an empty string \"\".\n","1751":"Given the array nums, for each nums[i] find out how many numbers in the array are smaller than it. That is, for each nums[i] you have to count the number of valid j's such that j != i and nums[j] < nums[i].\nReturn the answer in an array.\n","1752":"You are given a string s of even length consisting of digits from 0 to 9, and two integers a and b.\nYou can apply either of the following two operations any number of times and in any order on s:\nAdd a to all odd indices of s (0-indexed). Digits post 9 are cycled back to 0. For example, if s = \"3456\" and a = 5, s becomes \"3951\".\nRotate s to the right by b positions. For example, if s = \"3456\" and b = 1, s becomes \"6345\".\nReturn the lexicographically smallest string you can obtain by applying the above operations any number of times on s.\nA string a is lexicographically smaller than a string b (of the same length) if in the first position where a and b differ, string a has a letter that appears earlier in the alphabet than the corresponding letter in b. For example, \"0158\" is lexicographically smaller than \"0190\" because the first position they differ is at the third letter, and '5' comes before '9'.\n","1753":"You are given the root of a binary tree with unique values, and an integer start. At minute 0, an infection starts from the node with value start.\nEach minute, a node becomes infected if:\nThe node is currently uninfected.\nThe node is adjacent to an infected node.\nReturn the number of minutes needed for the entire tree to be infected.\n","1754":"Given a string s, return the maximum number of occurrences of any substring under the following rules:\nThe number of unique characters in the substring must be less than or equal to maxLetters.\nThe substring size must be between minSize and maxSize inclusive.\n","1755":"Given the root of a binary search tree, return a balanced binary search tree with the same node values. If there is more than one answer, return any of them.\nA binary search tree is balanced if the depth of the two subtrees of every node never differs by more than 1.\n","1756":"You are given a 0-indexed integer array nums. In one operation you can replace any element of the array with any two elements that sum to it.\nFor example, consider nums = [5,6,7]. In one operation, we can replace nums[1] with 2 and 4 and convert nums to [5,2,4,7].\nReturn the minimum number of operations to make an array that is sorted in non-decreasing order.\n","1757":"You would like to make dessert and are preparing to buy the ingredients. You have n ice cream base flavors and m types of toppings to choose from. You must follow these rules when making your dessert:\nThere must be exactly one ice cream base.\nYou can add one or more types of topping or have no toppings at all.\nThere are at most two of each type of topping.\nYou are given three inputs:\nbaseCosts, an integer array of length n, where each baseCosts[i] represents the price of the ith ice cream base flavor.\ntoppingCosts, an integer array of length m, where each toppingCosts[i] is the price of one of the ith topping.\ntarget, an integer representing your target price for dessert.\nYou want to make a dessert with a total cost as close to target as possible.\nReturn the closest possible cost of the dessert to target. If there are multiple, return the lower one.\n","1758":"Write a bash script to calculate the\nfrequency\nof each word in a text file words.txt.\nFor simplicity sake, you may assume:\nwords.txt contains only lowercase characters and space ' ' characters.\nEach word must consist of lowercase characters only.\nWords are separated by one or more whitespace characters.\n","1759":"Given an binary array nums and an integer k, return true if all 1's are at least k places away from each other, otherwise return false.\n","1760":"Design a class to find the kth largest element in a stream. Note that it is the kth largest element in the sorted order, not the kth distinct element.\nImplement KthLargest class:\nKthLargest(int k, int[] nums) Initializes the object with the integer k and the stream of integers nums.\nint add(int val) Appends the integer val to the stream and returns the element representing the kth largest element in the stream.\n","1761":"Given two arrays of unique digits nums1 and nums2, return the smallest number that contains at least one digit from each array.\n","1762":"You are given a string s containing lowercase letters and an integer k. You need to :\nFirst, change some characters of s to other lowercase English letters.\nThen divide s into k non-empty disjoint substrings such that each substring is a palindrome.\nReturn the minimal number of characters that you need to change to divide the string.\n","1763":"You are playing the Bulls and Cows game with your friend.\nYou write down a secret number and ask your friend to guess what the number is. When your friend makes a guess, you provide a hint with the following info:\nThe number of \"bulls\", which are digits in the guess that are in the correct position.\nThe number of \"cows\", which are digits in the guess that are in your secret number but are located in the wrong position. Specifically, the non-bull digits in the guess that could be rearranged such that they become bulls.\nGiven the secret number secret and your friend's guess guess, return the hint for your friend's guess.\nThe hint should be formatted as \"xAyB\", where x is the number of bulls and y is the number of cows. Note that both secret and guess may contain duplicate digits.\n","1764":"You are given an integer array nums and an integer k. You want to find a subsequence of nums of length k that has the largest sum.\nReturn any such subsequence as an integer array of length k.\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n","1765":"You are given a 0-indexed string s of even length n. The string consists of exactly n \/ 2 opening brackets '[' and n \/ 2 closing brackets ']'.\nA string is called balanced if and only if:\nIt is the empty string, or\nIt can be written as AB, where both A and B are balanced strings, or\nIt can be written as [C], where C is a balanced string.\nYou may swap the brackets at any two indices any number of times.\nReturn the minimum number of swaps to make s balanced.\n","1766":"A string is considered beautiful if it satisfies the following conditions:\nEach of the 5 English vowels ('a', 'e', 'i', 'o', 'u') must appear at least once in it.\nThe letters must be sorted in alphabetical order (i.e. all 'a's before 'e's, all 'e's before 'i's, etc.).\nFor example, strings \"aeiou\" and \"aaaaaaeiiiioou\" are considered beautiful, but \"uaeio\", \"aeoiu\", and \"aaaeeeooo\" are not beautiful.\nGiven a string word consisting of English vowels, return the length of the longest beautiful substring of word. If no such substring exists, return 0.\nA substring is a contiguous sequence of characters in a string.\n","1767":"Given a non-negative integer x, return the square root of x rounded down to the nearest integer. The returned integer should be non-negative as well.\nYou must not use any built-in exponent function or operator.\nFor example, do not use pow(x, 0.5) in c++ or x ** 0.5 in python.\n","1768":"Alice and Bob take turns playing a game, with Alice starting first.\nThere are n stones in a pile. On each player's turn, they can remove a stone from the pile and receive points based on the stone's value. Alice and Bob may value the stones differently.\nYou are given two integer arrays of length n, aliceValues and bobValues. Each aliceValues[i] and bobValues[i] represents how Alice and Bob, respectively, value the ith stone.\nThe winner is the person with the most points after all the stones are chosen. If both players have the same amount of points, the game results in a draw. Both players will play optimally. Both players know the other's values.\nDetermine the result of the game, and:\nIf Alice wins, return 1.\nIf Bob wins, return -1.\nIf the game results in a draw, return 0.\n","1769":"Given an array of strings words representing an English Dictionary, return the longest word in words that can be built one character at a time by other words in words.\nIf there is more than one possible answer, return the longest word with the smallest lexicographical order. If there is no answer, return the empty string.\nNote that the word should be built from left to right with each additional character being added to the end of a previous word. \n","1770":"You are given an integer array bloomDay, an integer m and an integer k.\nYou want to make m bouquets. To make a bouquet, you need to use k adjacent flowers from the garden.\nThe garden consists of n flowers, the ith flower will bloom in the bloomDay[i] and then can be used in exactly one bouquet.\nReturn the minimum number of days you need to wait to be able to make m bouquets from the garden. If it is impossible to make m bouquets return -1.\n","1771":"The demons had captured the princess and imprisoned her in the bottom-right corner of a dungeon. The dungeon consists of m x n rooms laid out in a 2D grid. Our valiant knight was initially positioned in the top-left room and must fight his way through dungeon to rescue the princess.\nThe knight has an initial health point represented by a positive integer. If at any point his health point drops to 0 or below, he dies immediately.\nSome of the rooms are guarded by demons (represented by negative integers), so the knight loses health upon entering these rooms; other rooms are either empty (represented as 0) or contain magic orbs that increase the knight's health (represented by positive integers).\nTo reach the princess as quickly as possible, the knight decides to move only rightward or downward in each step.\nReturn the knight's minimum initial health so that he can rescue the princess.\nNote that any room can contain threats or power-ups, even the first room the knight enters and the bottom-right room where the princess is imprisoned.\n","1772":"You are given a string s consisting only of the characters '0' and '1'. In one operation, you can change any '0' to '1' or vice versa.\nThe string is called alternating if no two adjacent characters are equal. For example, the string \"010\" is alternating, while the string \"0100\" is not.\nReturn the minimum number of operations needed to make s alternating.\n","1773":"Given an array of positive integers nums and a positive integer target, return the minimal length of a\nsubarray\nwhose sum is greater than or equal to target. If there is no such subarray, return 0 instead.\n","1774":"You are given a 0-indexed m x n matrix grid consisting of positive integers.\nYou can start at any cell in the first column of the matrix, and traverse the grid in the following way:\nFrom a cell (row, col), you can move to any of the cells: (row - 1, col + 1), (row, col + 1) and (row + 1, col + 1) such that the value of the cell you move to, should be strictly bigger than the value of the current cell.\nReturn the maximum number of moves that you can perform.\n","1775":"Given a string s containing an out-of-order English representation of digits 0-9, return the digits in ascending order.\n","1776":"SQL Schema\nTable: Teacher\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| teacher_id  | int  |\n| subject_id  | int  |\n| dept_id     | int  |\n+-------------+------+\n(subject_id, dept_id) is the primary key for this table.\nEach row in this table indicates that the teacher with teacher_id teaches the subject subject_id in the department dept_id.\n  Write an SQL query to report the number of unique subjects each teacher teaches in the university.\nReturn the result table in any order.\nThe query result format is shown in the following example.\n","1777":"You have n packages that you are trying to place in boxes, one package in each box. There are m suppliers that each produce boxes of different sizes (with infinite supply). A package can be placed in a box if the size of the package is less than or equal to the size of the box.\nThe package sizes are given as an integer array packages, where packages[i] is the size of the ith package. The suppliers are given as a 2D integer array boxes, where boxes[j] is an array of box sizes that the jth supplier produces.\nYou want to choose a single supplier and use boxes from them such that the total wasted space is minimized. For each package in a box, we define the space wasted to be size of the box - size of the package. The total wasted space is the sum of the space wasted in all the boxes.\nFor example, if you have to fit packages with sizes [2,3,5] and the supplier offers boxes of sizes [4,8], you can fit the packages of size-2 and size-3 into two boxes of size-4 and the package with size-5 into a box of size-8. This would result in a waste of (4-2) + (4-3) + (8-5) = 6.\nReturn the minimum total wasted space by choosing the box supplier optimally, or -1 if it is impossible to fit all the packages inside boxes. Since the answer may be large, return it modulo 109 + 7.\n","1778":"Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.\n","1779":"Sometimes people repeat letters to represent extra feeling. For example:\n\"hello\" -> \"heeellooo\"\n\"hi\" -> \"hiiii\"\nIn these strings like \"heeellooo\", we have groups of adjacent letters that are all the same: \"h\", \"eee\", \"ll\", \"ooo\".\nYou are given a string s and an array of query strings words. A query word is stretchy if it can be made to be equal to s by any number of applications of the following extension operation: choose a group consisting of characters c, and add some number of characters c to the group so that the size of the group is three or more.\nFor example, starting with \"hello\", we could do an extension on the group \"o\" to get \"hellooo\", but we cannot get \"helloo\" since the group \"oo\" has a size less than three. Also, we could do another extension like \"ll\" -> \"lllll\" to get \"helllllooo\". If s = \"helllllooo\", then the query word \"hello\" would be stretchy because of these two extension operations: query = \"hello\" -> \"hellooo\" -> \"helllllooo\" = s.\nReturn the number of query strings that are stretchy.\n","1780":"Given a string s, return the\nlexicographically smallest\nsubsequence\nof s that contains all the distinct characters of s exactly once.\n","1781":"You are given an array points where points[i] = [xi, yi] is the coordinates of the ith point on a 2D plane. Multiple points can have the same coordinates.\nYou are also given an array queries where queries[j] = [xj, yj, rj] describes a circle centered at (xj, yj) with a radius of rj.\nFor each query queries[j], compute the number of points inside the jth circle. Points on the border of the circle are considered inside.\nReturn an array answer, where answer[j] is the answer to the jth query.\n","1782":"The pair sum of a pair (a,b) is equal to a + b. The maximum pair sum is the largest pair sum in a list of pairs.\nFor example, if we have pairs (1,5), (2,3), and (4,4), the maximum pair sum would be max(1+5, 2+3, 4+4) = max(6, 5, 8) = 8.\nGiven an array nums of even length n, pair up the elements of nums into n \/ 2 pairs such that:\nEach element of nums is in exactly one pair, and\nThe maximum pair sum is minimized.\nReturn the minimized maximum pair sum after optimally pairing up the elements.\n","1783":"A square matrix is said to be an X-Matrix if both of the following conditions hold:\nAll the elements in the diagonals of the matrix are non-zero.\nAll other elements are 0.\nGiven a 2D integer array grid of size n x n representing a square matrix, return true if grid is an X-Matrix. Otherwise, return false.\n","1784":"There are n couples sitting in 2n seats arranged in a row and want to hold hands.\nThe people and seats are represented by an integer array row where row[i] is the ID of the person sitting in the ith seat. The couples are numbered in order, the first couple being (0, 1), the second couple being (2, 3), and so on with the last couple being (2n - 2, 2n - 1).\nReturn the minimum number of swaps so that every couple is sitting side by side. A swap consists of choosing any two people, then they stand up and switch seats.\n","1785":"There is an undirected graph with n nodes, numbered from 0 to n - 1.\nYou are given a 0-indexed integer array scores of length n where scores[i] denotes the score of node i. You are also given a 2D integer array edges where edges[i] = [ai, bi] denotes that there exists an undirected edge connecting nodes ai and bi.\nA node sequence is valid if it meets the following conditions:\nThere is an edge connecting every pair of adjacent nodes in the sequence.\nNo node appears more than once in the sequence.\nThe score of a node sequence is defined as the sum of the scores of the nodes in the sequence.\nReturn the maximum score of a valid node sequence with a length of 4. If no such sequence exists, return -1.\n","1786":"You are given a large sample of integers in the range [0, 255]. Since the sample is so large, it is represented by an array count where count[k] is the number of times that k appears in the sample.\nCalculate the following statistics:\nminimum: The minimum element in the sample.\nmaximum: The maximum element in the sample.\nmean: The average of the sample, calculated as the total sum of all elements divided by the total number of elements.\nmedian:\nIf the sample has an odd number of elements, then the median is the middle element once the sample is sorted.\nIf the sample has an even number of elements, then the median is the average of the two middle elements once the sample is sorted.\nmode: The number that appears the most in the sample. It is guaranteed to be unique.\nReturn the statistics of the sample as an array of floating-point numbers [minimum, maximum, mean, median, mode]. Answers within 10-5 of the actual answer will be accepted.\n","1787":"Given an array of integers arr and two integers k and threshold, return the number of sub-arrays of size k and average greater than or equal to threshold.\n","1788":"There is a programming language with only four operations and one variable X:\n++X and X++ increments the value of the variable X by 1.\n--X and X-- decrements the value of the variable X by 1.\nInitially, the value of X is 0.\nGiven an array of strings operations containing a list of operations, return the final value of X after performing all the operations.\n","1789":"A website domain \"discuss.leetcode.com\" consists of various subdomains. At the top level, we have \"com\", at the next level, we have \"leetcode.com\" and at the lowest level, \"discuss.leetcode.com\". When we visit a domain like \"discuss.leetcode.com\", we will also visit the parent domains \"leetcode.com\" and \"com\" implicitly.\nA count-paired domain is a domain that has one of the two formats \"rep d1.d2.d3\" or \"rep d1.d2\" where rep is the number of visits to the domain and d1.d2.d3 is the domain itself.\nFor example, \"9001 discuss.leetcode.com\" is a count-paired domain that indicates that discuss.leetcode.com was visited 9001 times.\nGiven an array of count-paired domains cpdomains, return an array of the count-paired domains of each subdomain in the input. You may return the answer in any order.\n","1790":"Given an array of integers cost and an integer target, return the maximum integer you can paint under the following rules:\nThe cost of painting a digit (i + 1) is given by cost[i] (0-indexed).\nThe total cost used must be equal to target.\nThe integer does not have 0 digits.\nSince the answer may be very large, return it as a string. If there is no way to paint any integer given the condition, return \"0\".\n","1791":"You are given an n x n integer matrix grid where each value grid[i][j] represents the elevation at that point (i, j).\nThe rain starts to fall. At time t, the depth of the water everywhere is t. You can swim from a square to another 4-directionally adjacent square if and only if the elevation of both squares individually are at most t. You can swim infinite distances in zero time. Of course, you must stay within the boundaries of the grid during your swim.\nReturn the least time until you can reach the bottom right square (n - 1, n - 1) if you start at the top left square (0, 0).\n","1792":"With respect to a given puzzle string, a word is valid if both the following conditions are satisfied:\nword contains the first letter of puzzle.\nFor each letter in word, that letter is in puzzle.\nFor example, if the puzzle is \"abcdefg\", then valid words are \"faced\", \"cabbage\", and \"baggage\", while\ninvalid words are \"beefed\" (does not include 'a') and \"based\" (includes 's' which is not in the puzzle).\nReturn an array answer, where answer[i] is the number of words in the given word list words that is valid with respect to the puzzle puzzles[i].\n","1793":"Given an array of integers nums sorted in non-decreasing order, find the starting and ending position of a given target value.\nIf target is not found in the array, return [-1, -1].\nYou must write an algorithm with O(log n) runtime complexity.\n","1794":"Design a data structure that efficiently finds the majority element of a given subarray.\nThe majority element of a subarray is an element that occurs threshold times or more in the subarray.\nImplementing the MajorityChecker class:\nMajorityChecker(int[] arr) Initializes the instance of the class with the given array arr.\nint query(int left, int right, int threshold) returns the element in the subarray arr[left...right] that occurs at least threshold times, or -1 if no such element exists.\n","1795":"You are given an array coordinates, coordinates[i] = [x, y], where [x, y] represents the coordinate of a point. Check if these points make a straight line in the XY plane.\n","1796":"You are given a 0-indexed integer array nums consisting of 3 * n elements.\nYou are allowed to remove any subsequence of elements of size exactly n from nums. The remaining 2 * n elements will be divided into two equal parts:\nThe first n elements belonging to the first part and their sum is sumfirst.\nThe next n elements belonging to the second part and their sum is sumsecond.\nThe difference in sums of the two parts is denoted as sumfirst - sumsecond.\nFor example, if sumfirst = 3 and sumsecond = 2, their difference is 1.\nSimilarly, if sumfirst = 2 and sumsecond = 3, their difference is -1.\nReturn the minimum difference possible between the sums of the two parts after the removal of n elements.\n","1797":"You are given an array of n integers, nums, where there are at most 50 unique values in the array. You are also given an array of m customer order quantities, quantity, where quantity[i] is the amount of integers the ith customer ordered. Determine if it is possible to distribute nums such that:\nThe ith customer gets exactly quantity[i] integers,\nThe integers the ith customer gets are all equal, and\nEvery customer is satisfied.\nReturn true if it is possible to distribute nums according to the above conditions.\n","1798":"You are given an array of strings words and a string chars.\nA string is good if it can be formed by characters from chars (each character can only be used once).\nReturn the sum of lengths of all good strings in words.\n","1799":"Given a function fn, return a memoized version of that function.\nA memoized function is a function that will never be called twice with the same inputs. Instead it will return a cached value.\nfn can be any function and there are no constraints on what type of values it accepts. Inputs are considered identical if they are === to each other.\n","1800":"Given an array of strings words and a width maxWidth, format the text such that each line has exactly maxWidth characters and is fully (left and right) justified.\nYou should pack your words in a greedy approach; that is, pack as many words as you can in each line. Pad extra spaces ' ' when necessary so that each line has exactly maxWidth characters.\nExtra spaces between words should be distributed as evenly as possible. If the number of spaces on a line does not divide evenly between words, the empty slots on the left will be assigned more spaces than the slots on the right.\nFor the last line of text, it should be left-justified, and no extra space is inserted between words.\nNote:\nA word is defined as a character sequence consisting of non-space characters only.\nEach word's length is guaranteed to be greater than 0 and not exceed maxWidth.\nThe input array words contains at least one word.\n","1801":"There is a 0-indexed array nums of length n. Initially, all elements are uncolored (has a value of 0).\nYou are given a 2D integer array queries where queries[i] = [indexi, colori].\nFor each query, you color the index indexi with the color colori in the array nums.\nReturn an array answer of the same length as queries where answer[i] is the number of adjacent elements with the same color after the ith query.\nMore formally, answer[i] is the number of indices j, such that 0 <= j < n - 1 and nums[j] == nums[j + 1] and nums[j] != 0 after the ith query.\n","1802":"Given an array of strings nums containing n unique binary strings each of length n, return a binary string of length n that does not appear in nums. If there are multiple answers, you may return any of them.\n","1803":"Given an array of integers arr and an integer k.\nA value arr[i] is said to be stronger than a value arr[j] if |arr[i] - m| > |arr[j] - m| where m is the median of the array.\nIf |arr[i] - m| == |arr[j] - m|, then arr[i] is said to be stronger than arr[j] if arr[i] > arr[j].\nReturn a list of the strongest k values in the array. return the answer in any arbitrary order.\nMedian is the middle value in an ordered integer list. More formally, if the length of the list is n, the median is the element in position ((n - 1) \/ 2) in the sorted list (0-indexed).\nFor arr = [6, -3, 7, 2, 11], n = 5 and the median is obtained by sorting the array arr = [-3, 2, 6, 7, 11] and the median is arr[m] where m = ((5 - 1) \/ 2) = 2. The median is 6.\nFor arr = [-7, 22, 17,\u20093], n = 4 and the median is obtained by sorting the array arr = [-7, 3, 17, 22] and the median is arr[m] where m = ((4 - 1) \/ 2) = 1. The median is 3.\n","1804":"You are given a 0-indexed string s that has lowercase English letters in its even indices and digits in its odd indices.\nThere is a function shift(c, x), where c is a character and x is a digit, that returns the xth character after c.\nFor example, shift('a', 5) = 'f' and shift('x', 0) = 'x'.\nFor every odd index i, you want to replace the digit s[i] with shift(s[i-1], s[i]).\nReturn s after replacing all digits. It is guaranteed that shift(s[i-1], s[i]) will never exceed 'z'.\n","1805":"You are given a circle represented as (radius, xCenter, yCenter) and an axis-aligned rectangle represented as (x1, y1, x2, y2), where (x1, y1) are the coordinates of the bottom-left corner, and (x2, y2) are the coordinates of the top-right corner of the rectangle.\nReturn true if the circle and rectangle are overlapped otherwise return false. In other words, check if there is any point (xi, yi) that belongs to the circle and the rectangle at the same time.\n","1806":"There is a malfunctioning keyboard where some letter keys do not work. All other keys on the keyboard work properly.\nGiven a string text of words separated by a single space (no leading or trailing spaces) and a string brokenLetters of all distinct letter keys that are broken, return the number of words in text you can fully type using this keyboard.\n","1807":"You are given an array nums consisting of positive integers and an integer k.\nPartition the array into two ordered groups such that each element is in exactly one group. A partition is called great if the sum of elements of each group is greater than or equal to k.\nReturn the number of distinct great partitions. Since the answer may be too large, return it modulo 109 + 7.\nTwo partitions are considered distinct if some element nums[i] is in different groups in the two partitions.\n","1808":"You are given an array of integers nums represents the numbers written on a chalkboard.\nAlice and Bob take turns erasing exactly one number from the chalkboard, with Alice starting first. If erasing a number causes the bitwise XOR of all the elements of the chalkboard to become 0, then that player loses. The bitwise XOR of one element is that element itself, and the bitwise XOR of no elements is 0.\nAlso, if any player starts their turn with the bitwise XOR of all the elements of the chalkboard equal to 0, then that player wins.\nReturn true if and only if Alice wins the game, assuming both players play optimally.\n","1809":"There is a knight on an n x n chessboard. In a valid configuration, the knight starts at the top-left cell of the board and visits every cell on the board exactly once.\nYou are given an n x n integer matrix grid consisting of distinct integers from the range [0, n * n - 1] where grid[row][col] indicates that the cell (row, col) is the grid[row][col]th cell that the knight visited. The moves are 0-indexed.\nReturn true if grid represents a valid configuration of the knight's movements or false otherwise.\nNote that a valid knight move consists of moving two squares vertically and one square horizontally, or two squares horizontally and one square vertically. The figure below illustrates all the possible eight moves of a knight from some cell.\n","1810":"Given the root of a binary search tree and an integer k, return true if there exist two elements in the BST such that their sum is equal to k, or false otherwise.\n","1811":"Given two integers n and k, return all possible combinations of k numbers chosen from the range [1, n].\nYou may return the answer in any order.\n","1812":"You are given a rows x cols matrix grid representing a field of cherries where grid[i][j] represents the number of cherries that you can collect from the (i, j) cell.\nYou have two robots that can collect cherries for you:\nRobot #1 is located at the top-left corner (0, 0), and\nRobot #2 is located at the top-right corner (0, cols - 1).\nReturn the maximum number of cherries collection using both robots by following the rules below:\nFrom a cell (i, j), robots can move to cell (i + 1, j - 1), (i + 1, j), or (i + 1, j + 1).\nWhen any robot passes through a cell, It picks up all cherries, and the cell becomes an empty cell.\nWhen both robots stay in the same cell, only one takes the cherries.\nBoth robots cannot move outside of the grid at any moment.\nBoth robots should reach the bottom row in grid.\n","1813":"You are installing a billboard and want it to have the largest height. The billboard will have two steel supports, one on each side. Each steel support must be an equal height.\nYou are given a collection of rods that can be welded together. For example, if you have rods of lengths 1, 2, and 3, you can weld them together to make a support of length 6.\nReturn the largest possible height of your billboard installation. If you cannot support the billboard, return 0.\n","1814":"Given an integer array nums and two integers left and right, return the number of contiguous non-empty subarrays such that the value of the maximum array element in that subarray is in the range [left, right].\nThe test cases are generated so that the answer will fit in a 32-bit integer.\n","1815":"Given a 0-indexed integer array nums of size n containing all numbers from 1 to n, return the number of increasing quadruplets.\nA quadruplet (i, j, k, l) is increasing if:\n0 <= i < j < k < l < n, and\nnums[i] < nums[k] < nums[j] < nums[l].\n","1816":"There is a regular convex polygon with n vertices. The vertices are labeled from 0 to n - 1 in a clockwise direction, and each vertex has exactly one monkey. The following figure shows a convex polygon of 6 vertices.\nEach monkey moves simultaneously to a neighboring vertex. A neighboring vertex for a vertex i can be:\nthe vertex (i + 1) % n in the clockwise direction, or\nthe vertex (i - 1 + n) % n in the counter-clockwise direction.\nA collision happens if at least two monkeys reside on the same vertex after the movement or intersect on an edge.\nReturn the number of ways the monkeys can move so that at least one collision happens. Since the answer may be very large, return it modulo 109 + 7.\nNote that each monkey can only move once.\n","1817":"Given two arrays of strings list1 and list2, find the common strings with the least index sum.\nA common string is a string that appeared in both list1 and list2.\nA common string with the least index sum is a common string such that if it appeared at list1[i] and list2[j] then i + j should be the minimum value among all the other common strings.\nReturn all the common strings with the least index sum. Return the answer in any order.\n","1818":"Given an integer array arr of distinct integers and an integer k.\nA game will be played between the first two elements of the array (i.e. arr[0] and arr[1]). In each round of the game, we compare arr[0] with arr[1], the larger integer wins and remains at position 0, and the smaller integer moves to the end of the array. The game ends when an integer wins k consecutive rounds.\nReturn the integer which will win the game.\nIt is guaranteed that there will be a winner of the game.\n","1819":"You have n binary tree nodes numbered from 0 to n - 1 where node i has two children leftChild[i] and rightChild[i], return true if and only if all the given nodes form exactly one valid binary tree.\nIf node i has no left child then leftChild[i] will equal -1, similarly for the right child.\nNote that the nodes have no values and that we only use the node numbers in this problem.\n","1820":"Given an integer num, repeatedly add all its digits until the result has only one digit, and return it.\n","1821":"Given an array rectangles where rectangles[i] = [xi, yi, ai, bi] represents an axis-aligned rectangle. The bottom-left point of the rectangle is (xi, yi) and the top-right point of it is (ai, bi).\nReturn true if all the rectangles together form an exact cover of a rectangular region.\n","1822":"You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money.\nReturn the number of combinations that make up that amount. If that amount of money cannot be made up by any combination of the coins, return 0.\nYou may assume that you have an infinite number of each kind of coin.\nThe answer is guaranteed to fit into a signed 32-bit integer.\n","1823":"Given two strings s and t, return true if s is a subsequence of t, or false otherwise.\nA subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\n","1824":"You have a grid of size n x 3 and you want to paint each cell of the grid with exactly one of the three colors: Red, Yellow, or Green while making sure that no two adjacent cells have the same color (i.e., no two cells that share vertical or horizontal sides have the same color).\nGiven n the number of rows of the grid, return the number of ways you can paint this grid. As the answer may grow large, the answer must be computed modulo 109 + 7.\n","1825":"Given a binary tree where node values are digits from 1 to 9. A path in the binary tree is said to be pseudo-palindromic if at least one permutation of the node values in the path is a palindrome.\nReturn the number of pseudo-palindromic paths going from the root node to leaf nodes.\n","1826":"You are given a 0-indexed array of strings garbage where garbage[i] represents the assortment of garbage at the ith house. garbage[i] consists only of the characters 'M', 'P' and 'G' representing one unit of metal, paper and glass garbage respectively. Picking up one unit of any type of garbage takes 1 minute.\nYou are also given a 0-indexed integer array travel where travel[i] is the number of minutes needed to go from house i to house i + 1.\nThere are three garbage trucks in the city, each responsible for picking up one type of garbage. Each garbage truck starts at house 0 and must visit each house in order; however, they do not need to visit every house.\nOnly one garbage truck may be used at any given moment. While one truck is driving or picking up garbage, the other two trucks cannot do anything.\nReturn the minimum number of minutes needed to pick up all the garbage.\n","1827":"You are participating in an online chess tournament. There is a chess round that starts every 15 minutes. The first round of the day starts at 00:00, and after every 15 minutes, a new round starts.\nFor example, the second round starts at 00:15, the fourth round starts at 00:45, and the seventh round starts at 01:30.\nYou are given two strings loginTime and logoutTime where:\nloginTime is the time you will login to the game, and\nlogoutTime is the time you will logout from the game.\nIf logoutTime is earlier than loginTime, this means you have played from loginTime to midnight and from midnight to logoutTime.\nReturn the number of full chess rounds you have played in the tournament.\nNote: All the given times follow the 24-hour clock. That means the first round of the day starts at 00:00 and the last round of the day starts at 23:45.\n","1828":"You are given two 0-indexed arrays nums1 and nums2 of length n, both of which are permutations of [0, 1, ..., n - 1].\nA good triplet is a set of 3 distinct values which are present in increasing order by position both in nums1 and nums2. In other words, if we consider pos1v as the index of the value v in nums1 and pos2v as the index of the value v in nums2, then a good triplet will be a set (x, y, z) where 0 <= x, y, z <= n - 1, such that pos1x < pos1y < pos1z and pos2x < pos2y < pos2z.\nReturn the total number of good triplets.\n","1829":"Given an integer array nums and an integer val, remove all occurrences of val in nums in-place. The order of the elements may be changed. Then return the number of elements in nums which are not equal to val.\nConsider the number of elements in nums which are not equal to val be k, to get accepted, you need to do the following things:\nChange the array nums such that the first k elements of nums contain the elements which are not equal to val. The remaining elements of nums are not important as well as the size of nums.\nReturn k.\nCustom Judge:\nThe judge will test your solution with the following code:\nint[] nums = [...]; \/\/ Input array\nint val = ...; \/\/ Value to remove\nint[] expectedNums = [...]; \/\/ The expected answer with correct length.\n                            \/\/ It is sorted with no values equaling val.\n\nint k = removeElement(nums, val); \/\/ Calls your implementation\n\nassert k == expectedNums.length;\nsort(nums, 0, k); \/\/ Sort the first k elements of nums\nfor (int i = 0; i < actualLength; i++) {\n    assert nums[i] == expectedNums[i];\n}\nIf all assertions pass, then your solution will be accepted.\n","1830":"SQL Schema\nTable: Employees\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| name          | varchar |\n+---------------+---------+\nid is the primary key for this table.\nEach row of this table contains the id and the name of an employee in a company.\n  Table: EmployeeUNI\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| id            | int     |\n| unique_id     | int     |\n+---------------+---------+\n(id, unique_id) is the primary key for this table.\nEach row of this table contains the id and the corresponding unique id of an employee in the company.\n  Write an SQL query to show the unique ID of each user, If a user does not have a unique ID replace just show null.\nReturn the result table in any order.\nThe query result format is in the following example.\n","1831":"You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security systems connected and it will automatically contact the police if two adjacent houses were broken into on the same night.\nGiven an integer array nums representing the amount of money of each house, return the maximum amount of money you can rob tonight without alerting the police.\n","1832":"The appeal of a string is the number of distinct characters found in the string.\nFor example, the appeal of \"abbca\" is 3 because it has 3 distinct characters: 'a', 'b', and 'c'.\nGiven a string s, return the total appeal of all of its substrings.\nA substring is a contiguous sequence of characters within a string.\n","1833":"You are given a 0-indexed integer array nums containing distinct numbers, an integer start, and an integer goal. There is an integer x that is initially set to start, and you want to perform operations on x such that it is converted to goal. You can perform the following operation repeatedly on the number x:\nIf 0 <= x <= 1000, then for any index i in the array (0 <= i < nums.length), you can set x to any of the following:\nx + nums[i]\nx - nums[i]\nx ^ nums[i] (bitwise-XOR)\nNote that you can use each nums[i] any number of times in any order. Operations that set x to be out of the range 0 <= x <= 1000 are valid, but no more operations can be done afterward.\nReturn the minimum number of operations needed to convert x = start into goal, and -1 if it is not possible.\n","1834":"You are given a string s that consists of only digits.\nCheck if we can split s into two or more non-empty substrings such that the numerical values of the substrings are in descending order and the difference between numerical values of every two adjacent substrings is equal to 1.\nFor example, the string s = \"0090089\" can be split into [\"0090\", \"089\"] with numerical values [90,89]. The values are in descending order and adjacent values differ by 1, so this way is valid.\nAnother example, the string s = \"001\" can be split into [\"0\", \"01\"], [\"00\", \"1\"], or [\"0\", \"0\", \"1\"]. However all the ways are invalid because they have numerical values [0,1], [0,1], and [0,0,1] respectively, all of which are not in descending order.\nReturn true if it is possible to split s as described above, or false otherwise.\nA substring is a contiguous sequence of characters in a string.\n","1835":"We define str = [s, n] as the string str which consists of the string s concatenated n times.\nFor example, str == [\"abc\", 3] ==\"abcabcabc\".\nWe define that string s1 can be obtained from string s2 if we can remove some characters from s2 such that it becomes s1.\nFor example, s1 = \"abc\" can be obtained from s2 = \"abdbec\" based on our definition by removing the bolded underlined characters.\nYou are given two strings s1 and s2 and two integers n1 and n2. You have the two strings str1 = [s1, n1] and str2 = [s2, n2].\nReturn the maximum integer m such that str = [str2, m] can be obtained from str1.\n","1836":"You are playing a video game where you are defending your city from a group of n monsters. You are given a 0-indexed integer array dist of size n, where dist[i] is the initial distance in kilometers of the ith monster from the city.\nThe monsters walk toward the city at a constant speed. The speed of each monster is given to you in an integer array speed of size n, where speed[i] is the speed of the ith monster in kilometers per minute.\nYou have a weapon that, once fully charged, can eliminate a single monster. However, the weapon takes one minute to charge.The weapon is fully charged at the very start.\nYou lose when any monster reaches your city. If a monster reaches the city at the exact moment the weapon is fully charged, it counts as a loss, and the game ends before you can use your weapon.\nReturn the maximum number of monsters that you can eliminate before you lose, or n if you can eliminate all the monsters before they reach the city.\n","1837":"You are given an integer array nums and an integer target.\nYou want to build an expression out of nums by adding one of the symbols '+' and '-' before each integer in nums and then concatenate all the integers.\nFor example, if nums = [2, 1], you can add a '+' before 2 and a '-' before 1 and concatenate them to build the expression \"+2-1\".\nReturn the number of different expressions that you can build, which evaluates to target.\n","1838":"In an n*n grid, there is a snake that spans 2 cells and starts moving from the top left corner at (0, 0) and (0, 1). The grid has empty cells represented by zeros and blocked cells represented by ones. The snake wants to reach the lower right corner at (n-1, n-2) and (n-1, n-1).\nIn one move the snake can:\nMove one cell to the right if there are no blocked cells there. This move keeps the horizontal\/vertical position of the snake as it is.\nMove down one cell if there are no blocked cells there. This move keeps the horizontal\/vertical position of the snake as it is.\nRotate clockwise if it's in a horizontal position and the two cells under it are both empty. In that case the snake moves from (r, c) and (r, c+1) to (r, c) and (r+1, c).\nRotate counterclockwise if it's in a vertical position and the two cells to its right are both empty. In that case the snake moves from (r, c) and (r+1, c) to (r, c) and (r, c+1).\nReturn the minimum number of moves to reach the target.\nIf there is no way to reach the target, return -1.\n","1839":"You are given an array of integers stones where stones[i] is the weight of the ith stone.\nWe are playing a game with the stones. On each turn, we choose the heaviest two stones and smash them together. Suppose the heaviest two stones have weights x and y with x <= y. The result of this smash is:\nIf x == y, both stones are destroyed, and\nIf x != y, the stone of weight x is destroyed, and the stone of weight y has new weight y - x.\nAt the end of the game, there is at most one stone left.\nReturn the weight of the last remaining stone. If there are no stones left, return 0.\n","1840":"You are given a binary matrix matrix of size m x n, and you are allowed to rearrange the columns of the matrix in any order.\nReturn the area of the largest submatrix within matrix where every element of the submatrix is 1 after reordering the columns optimally.\n","1841":"You are given the root of a binary tree.\nA ZigZag path for a binary tree is defined as follow:\nChoose any node in the binary tree and a direction (right or left).\nIf the current direction is right, move to the right child of the current node; otherwise, move to the left child.\nChange the direction from right to left or from left to right.\nRepeat the second and third steps until you can't move in the tree.\nZigzag length is defined as the number of nodes visited - 1. (A single node has a length of 0).\nReturn the longest ZigZag path contained in that tree.\n","1842":"There is a class with m students and n exams. You are given a 0-indexed m x n integer matrix score, where each row represents one student and score[i][j] denotes the score the ith student got in the jth exam. The matrix score contains distinct integers only.\nYou are also given an integer k. Sort the students (i.e., the rows of the matrix) by their scores in the kth (0-indexed) exam from the highest to the lowest.\nReturn the matrix after sorting it.\n","1843":"There is a special square room with mirrors on each of the four walls. Except for the southwest corner, there are receptors on each of the remaining corners, numbered 0, 1, and 2.\nThe square room has walls of length p and a laser ray from the southwest corner first meets the east wall at a distance q from the 0th receptor.\nGiven the two integers p and q, return the number of the receptor that the ray meets first.\nThe test cases are guaranteed so that the ray will meet a receptor eventually.\n","1844":"SQL Schema\nTable: Scores\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| score       | decimal |\n+-------------+---------+\nid is the primary key for this table.\nEach row of this table contains the score of a game. Score is a floating point value with two decimal places.\n  Write an SQL query to rank the scores. The ranking should be calculated according to the following rules:\nThe scores should be ranked from the highest to the lowest.\nIf there is a tie between two scores, both should have the same ranking.\nAfter a tie, the next ranking number should be the next consecutive integer value. In other words, there should be no holes between ranks.\nReturn the result table ordered by score in descending order.\nThe query result format is in the following example.\n","1845":"Given a balanced parentheses string s, return the score of the string.\nThe score of a balanced parentheses string is based on the following rule:\n\"()\" has score 1.\nAB has score A + B, where A and B are balanced parentheses strings.\n(A) has score 2 * A, where A is a balanced parentheses string.\n","1846":"You are given an array of words where each word consists of lowercase English letters.\nwordA is a predecessor of wordB if and only if we can insert exactly one letter anywhere in wordA without changing the order of the other characters to make it equal to wordB.\nFor example, \"abc\" is a predecessor of \"abac\", while \"cba\" is not a predecessor of \"bcad\".\nA word chain is a sequence of words [word1, word2, ..., wordk] with k >= 1, where word1 is a predecessor of word2, word2 is a predecessor of word3, and so on. A single word is trivially a word chain with k == 1.\nReturn the length of the longest possible word chain with words chosen from the given list of words.\n","1847":"Given two binary search trees root1 and root2, return a list containing all the integers from both trees sorted in ascending order.\n","1848":"You are given an array of integers arr and an integer target.\nYou have to find two non-overlapping sub-arrays of arr each with a sum equal target. There can be multiple answers so you have to find an answer where the sum of the lengths of the two sub-arrays is minimum.\nReturn the minimum sum of the lengths of the two required sub-arrays, or return -1 if you cannot find such two sub-arrays.\n","1849":"Given an integer array nums and two integers k and p, return the number of distinct subarrays which have at most k elements divisible by p.\nTwo arrays nums1 and nums2 are said to be distinct if:\nThey are of different lengths, or\nThere exists at least one index i where nums1[i] != nums2[i].\nA subarray is defined as a non-empty contiguous sequence of elements in an array.\n","1850":"You are given a 2D integer array stockPrices where stockPrices[i] = [dayi, pricei] indicates the price of the stock on day dayi is pricei. A line chart is created from the array by plotting the points on an XY plane with the X-axis representing the day and the Y-axis representing the price and connecting adjacent points. One such example is shown below:\nReturn the minimum number of lines needed to represent the line chart.\n","1851":"You are given an array of variable pairs equations and an array of real numbers values, where equations[i] = [Ai, Bi] and values[i] represent the equation Ai \/ Bi = values[i]. Each Ai or Bi is a string that represents a single variable.\nYou are also given some queries, where queries[j] = [Cj, Dj] represents the jth query where you must find the answer for Cj \/ Dj = ?.\nReturn the answers to all queries. If a single answer cannot be determined, return -1.0.\nNote: The input is always valid. You may assume that evaluating the queries will not result in division by zero and that there is no contradiction.\n","1852":"A string is good if there are no repeated characters.\nGiven a string s, return the number of good substrings of length three in s.\nNote that if there are multiple occurrences of the same substring, every occurrence should be counted.\nA substring is a contiguous sequence of characters in a string.\n","1853":"You are given a valid boolean expression as a string expression consisting of the characters '1','0','&' (bitwise AND operator),'|' (bitwise OR operator),'(', and ')'.\nFor example, \"()1|1\" and \"(1)&()\" are not valid while \"1\", \"(((1))|(0))\", and \"1|(0&(1))\" are valid expressions.\nReturn the minimum cost to change the final value of the expression.\nFor example, if expression = \"1|1|(0&0)&1\", its value is 1|1|(0&0)&1 = 1|1|0&1 = 1|0&1 = 1&1 = 1. We want to apply operations so that the new expression evaluates to 0.\nThe cost of changing the final value of an expression is the number of operations performed on the expression. The types of operations are described as follows:\nTurn a '1' into a '0'.\nTurn a '0' into a '1'.\nTurn a '&' into a '|'.\nTurn a '|' into a '&'.\nNote: '&' does not take precedence over '|' in the order of calculation. Evaluate parentheses first, then in left-to-right order.\n","1854":"You are given an array of events where events[i] = [startDayi, endDayi, valuei]. The ith event starts at startDayi and ends at endDayi, and if you attend this event, you will receive a value of valuei. You are also given an integer k which represents the maximum number of events you can attend.\nYou can only attend one event at a time. If you choose to attend an event, you must attend the entire event. Note that the end day is inclusive: that is, you cannot attend two events where one of them starts and the other ends on the same day.\nReturn the maximum sum of values that you can receive by attending events.\n","1855":"You are given two string arrays creators and ids, and an integer array views, all of length n. The ith video on a platform was created by creator[i], has an id of ids[i], and has views[i] views.\nThe popularity of a creator is the sum of the number of views on all of the creator's videos. Find the creator with the highest popularity and the id of their most viewed video.\nIf multiple creators have the highest popularity, find all of them.\nIf multiple videos have the highest view count for a creator, find the lexicographically smallest id.\nReturn a 2D array of strings answer where answer[i] = [creatori, idi] means that creatori has the highest popularity and idi is the id of their most popular video. The answer can be returned in any order.\n","1856":"Given a positive integer n, find the smallest integer which has exactly the same digits existing in the integer n and is greater in value than n. If no such positive integer exists, return -1.\nNote that the returned integer should fit in 32-bit integer, if there is a valid answer but it does not fit in 32-bit integer, return -1.\n","1857":"Given a 2D integer array matrix, return the transpose of matrix.\nThe transpose of a matrix is the matrix flipped over its main diagonal, switching the matrix's row and column indices.\n","1858":"You are given two integers m and n that represent the height and width of a rectangular piece of wood. You are also given a 2D integer array prices, where prices[i] = [hi, wi, pricei] indicates you can sell a rectangular piece of wood of height hi and width wi for pricei dollars.\nTo cut a piece of wood, you must make a vertical or horizontal cut across the entire height or width of the piece to split it into two smaller pieces. After cutting a piece of wood into some number of smaller pieces, you can sell pieces according to prices. You may sell multiple pieces of the same shape, and you do not have to sell all the shapes. The grain of the wood makes a difference, so you cannot rotate a piece to swap its height and width.\nReturn the maximum money you can earn after cutting an m x n piece of wood.\nNote that you can cut the piece of wood as many times as you want.\n","1859":"You are given a 2D integer array items where items[i] = [pricei, beautyi] denotes the price and beauty of an item respectively.\nYou are also given a 0-indexed integer array queries. For each queries[j], you want to determine the maximum beauty of an item whose price is less than or equal to queries[j]. If no such item exists, then the answer to this query is 0.\nReturn an array answer of the same length as queries where answer[j] is the answer to the jth query.\n","1860":"Given an array of integers nums and a positive integer k, check whether it is possible to divide this array into sets of k consecutive numbers.\nReturn true if it is possible. Otherwise, return false.\n","1861":"A string is beautiful if:\nIt consists of the first k letters of the English lowercase alphabet.\nIt does not contain any substring of length 2 or more which is a palindrome.\nYou are given a beautiful string s of length n and a positive integer k.\nReturn the lexicographically smallest string of length n, which is larger than s and is beautiful. If there is no such string, return an empty string.\nA string a is lexicographically larger than a string b (of the same length) if in the first position where a and b differ, a has a character strictly larger than the corresponding character in b.\nFor example, \"abcd\" is lexicographically larger than \"abcc\" because the first position they differ is at the fourth character, and d is greater than c.\n","1862":"Given two integers representing the numerator and denominator of a fraction, return the fraction in string format.\nIf the fractional part is repeating, enclose the repeating part in parentheses.\nIf multiple answers are possible, return any of them.\nIt is guaranteed that the length of the answer string is less than 104 for all the given inputs.\n","1863":"Given a string s. In one step you can insert any character at any index of the string.\nReturn the minimum number of steps to make s palindrome.\nA Palindrome String is one that reads the same backward as well as forward.\n","1864":"Given three integer arrays nums1, nums2, and nums3, return a distinct array containing all the values that are present in at least two out of the three arrays. You may return the values in any order.\n","1865":"There is a 2D grid of size n x n where each cell of this grid has a lamp that is initially turned off.\nYou are given a 2D array of lamp positions lamps, where lamps[i] = [rowi, coli] indicates that the lamp at grid[rowi][coli] is turned on. Even if the same lamp is listed more than once, it is turned on.\nWhen a lamp is turned on, it illuminates its cell and all other cells in the same row, column, or diagonal.\nYou are also given another 2D array queries, where queries[j] = [rowj, colj]. For the jth query, determine whether grid[rowj][colj] is illuminated or not. After answering the jth query, turn off the lamp at grid[rowj][colj] and its 8 adjacent lamps if they exist. A lamp is adjacent if its cell shares either a side or corner with grid[rowj][colj].\nReturn an array of integers ans, where ans[j] should be 1 if the cell in the jth query was illuminated, or 0 if the lamp was not.\n","1866":"A company is organizing a meeting and has a list of n employees, waiting to be invited. They have arranged for a large circular table, capable of seating any number of employees.\nThe employees are numbered from 0 to n - 1. Each employee has a favorite person and they will attend the meeting only if they can sit next to their favorite person at the table. The favorite person of an employee is not themself.\nGiven a 0-indexed integer array favorite, where favorite[i] denotes the favorite person of the ith employee, return the maximum number of employees that can be invited to the meeting.\n","1867":"You are given two integer arrays, source and target, both of length n. You are also given an array allowedSwaps where each allowedSwaps[i] = [ai, bi] indicates that you are allowed to swap the elements at index ai and index bi (0-indexed) of array source. Note that you can swap elements at a specific pair of indices multiple times and in any order.\nThe Hamming distance of two arrays of the same length, source and target, is the number of positions where the elements are different. Formally, it is the number of indices i for 0 <= i <= n-1 where source[i] != target[i] (0-indexed).\nReturn the minimum Hamming distance of source and target after performing any amount of swap operations on array source.\n","1868":"You are given an integer array nums. We call a subset of nums good if its product can be represented as a product of one or more distinct prime numbers.\nFor example, if nums = [1, 2, 3, 4]:\n[2, 3], [1, 2, 3], and [1, 3] are good subsets with products 6 = 2*3, 6 = 2*3, and 3 = 3 respectively.\n[1, 4] and [4] are not good subsets with products 4 = 2*2 and 4 = 2*2 respectively.\nReturn the number of different good subsets in nums modulo 109 + 7.\nA subset of nums is any array that can be obtained by deleting some (possibly none or all) elements from nums. Two subsets are different if and only if the chosen indices to delete are different.\n","1869":"Given two strings a and b, return the length of the longest uncommon subsequence between a and b. If the longest uncommon subsequence does not exist, return -1.\nAn uncommon subsequence between two strings is a string that is a subsequence of one but not the other.\nA subsequence of a string s is a string that can be obtained after deleting any number of characters from s.\nFor example, \"abc\" is a subsequence of \"aebdc\" because you can delete the underlined characters in \"aebdc\" to get \"abc\". Other subsequences of \"aebdc\" include \"aebdc\", \"aeb\", and \"\" (empty string).\n","1870":"Given an integer array nums, find the maximum possible bitwise OR of a subset of nums and return the number of different non-empty subsets with the maximum bitwise OR.\nAn array a is a subset of an array b if a can be obtained from b by deleting some (possibly zero) elements of b. Two subsets are considered different if the indices of the elements chosen are different.\nThe bitwise OR of an array a is equal to a[0] OR a[1] OR ... OR a[a.length - 1] (0-indexed).\n","1871":"An undirected graph of n nodes is defined by edgeList, where edgeList[i] = [ui, vi, disi] denotes an edge between nodes ui and vi with distance disi. Note that there may be multiple edges between two nodes.\nGiven an array queries, where queries[j] = [pj, qj, limitj], your task is to determine for each queries[j] whether there is a path between pj and qj such that each edge on the path has a distance strictly less than limitj .\nReturn a boolean array answer, where answer.length == queries.length and the jth value of answer is true if there is a path for queries[j] is true, and false otherwise.\n","1872":"Alice had a 0-indexed array arr consisting of n positive integers. She chose an arbitrary positive integer k and created two new 0-indexed integer arrays lower and higher in the following manner:\nlower[i] = arr[i] - k, for every index i where 0 <= i < n\nhigher[i] = arr[i] + k, for every index i where 0 <= i < n\nUnfortunately, Alice lost all three arrays. However, she remembers the integers that were present in the arrays lower and higher, but not the array each integer belonged to. Help Alice and recover the original array.\nGiven an array nums consisting of 2n integers, where exactly n of the integers were present in lower and the remaining in higher, return the original array arr. In case the answer is not unique, return any valid array.\nNote: The test cases are generated such that there exists at least one valid array arr.\n","1873":"Given two positive integers n and k, the binary string Sn is formed as follows:\nS1 = \"0\"\nSi = Si - 1 + \"1\" + reverse(invert(Si - 1)) for i > 1\nWhere + denotes the concatenation operation, reverse(x) returns the reversed string x, and invert(x) inverts all the bits in x (0 changes to 1 and 1 changes to 0).\nFor example, the first four strings in the above sequence are:\nS1 = \"0\"\nS2 = \"011\"\nS3 = \"0111001\"\nS4 = \"011100110110001\"\nReturn the kth bit in Sn. It is guaranteed that k is valid for the given n.\n","1874":"The product difference between two pairs (a, b) and (c, d) is defined as (a * b) - (c * d).\nFor example, the product difference between (5, 6) and (2, 7) is (5 * 6) - (2 * 7) = 16.\nGiven an integer array nums, choose four distinct indices w, x, y, and z such that the product difference between pairs (nums[w], nums[x]) and (nums[y], nums[z]) is maximized.\nReturn the maximum such product difference.\n","1875":"Given a positive integer n, generate an n x n matrix filled with elements from 1 to n2 in spiral order.\n","1876":"Given two integer arrays nums1 and nums2, sorted in non-decreasing order, return the minimum integer common to both arrays. If there is no common integer amongst nums1 and nums2, return -1.\nNote that an integer is said to be common to nums1 and nums2 if both arrays have at least one occurrence of that integer.\n","1877":"The Leetcode file system keeps a log each time some user performs a change folder operation.\nThe operations are described below:\n\"..\/\" : Move to the parent folder of the current folder. (If you are already in the main folder, remain in the same folder).\n\".\/\" : Remain in the same folder.\n\"x\/\" : Move to the child folder named x (This folder is guaranteed to always exist).\nYou are given a list of strings logs where logs[i] is the operation performed by the user at the ith step.\nThe file system starts in the main folder, then the operations in logs are performed.\nReturn the minimum number of operations needed to go back to the main folder after the change folder operations.\n","1878":"You have an array arr of length n where arr[i] = (2 * i) + 1 for all valid values of i (i.e., 0 <= i < n).\nIn one operation, you can select two indices x and y where 0 <= x, y < n and subtract 1 from arr[x] and add 1 to arr[y] (i.e., perform arr[x] -=1 and arr[y] += 1). The goal is to make all the elements of the array equal. It is guaranteed that all the elements of the array can be made equal using some operations.\nGiven an integer n, the length of the array, return the minimum number of operations needed to make all the elements of arr equal.\n","1879":"Given a string s containing only lowercase English letters and the '?' character, convert all the '?' characters into lowercase letters such that the final string does not contain any consecutive repeating characters. You cannot modify the non '?' characters.\nIt is guaranteed that there are no consecutive repeating characters in the given string except for '?'.\nReturn the final string after all the conversions (possibly zero) have been made. If there is more than one solution, return any of them. It can be shown that an answer is always possible with the given constraints.\n","1880":"You are given an array of strings names, and an array heights that consists of distinct positive integers. Both arrays are of length n.\nFor each index i, names[i] and heights[i] denote the name and height of the ith person.\nReturn names sorted in descending order by the people's heights.\n","1881":"You are given an integer array nums and an integer goal.\nYou want to choose a subsequence of nums such that the sum of its elements is the closest possible to goal. That is, if the sum of the subsequence's elements is sum, then you want to minimize the absolute difference abs(sum - goal).\nReturn the minimum possible value of abs(sum - goal).\nNote that a subsequence of an array is an array formed by removing some elements (possibly all or none) of the original array.\n","1882":"You are given an integer array nums and an integer k.\nSplit the array into some number of non-empty subarrays. The cost of a split is the sum of the importance value of each subarray in the split.\nLet trimmed(subarray) be the version of the subarray where all numbers which appear only once are removed.\nFor example, trimmed([3,1,2,4,3,4]) = [3,4,3,4].\nThe importance value of a subarray is k + trimmed(subarray).length.\nFor example, if a subarray is [1,2,3,3,3,4,4], then trimmed([1,2,3,3,3,4,4]) = [3,3,3,4,4].The importance value of this subarray will be k + 5.\nReturn the minimum possible cost of a split of nums.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","1883":"You have an undirected, connected graph of n nodes labeled from 0 to n - 1. You are given an array graph where graph[i] is a list of all the nodes connected with node i by an edge.\nReturn the length of the shortest path that visits every node. You may start and stop at any node, you may revisit nodes multiple times, and you may reuse edges.\n","1884":"You are given a 0-indexed integer array nums, where nums[i] is a digit between 0 and 9 (inclusive).\nThe triangular sum of nums is the value of the only element present in nums after the following process terminates:\nLet nums comprise of n elements. If n == 1, end the process. Otherwise, create a new 0-indexed integer array newNums of length n - 1.\nFor each index i, where 0 <= i < n - 1, assign the value of newNums[i] as (nums[i] + nums[i+1]) % 10, where % denotes modulo operator.\nReplace the array nums with newNums.\nRepeat the entire process starting from step 1.\nReturn the triangular sum of nums.\n","1885":"You are given an array of k linked-lists lists, each linked-list is sorted in ascending order.\nMerge all the linked-lists into one sorted linked-list and return it.\n","1886":"There is a directed graph of n nodes with each node labeled from 0 to n - 1. The graph is represented by a 0-indexed 2D integer array graph where graph[i] is an integer array of nodes adjacent to node i, meaning there is an edge from node i to each node in graph[i].\nA node is a terminal node if there are no outgoing edges. A node is a safe node if every possible path starting from that node leads to a terminal node (or another safe node).\nReturn an array containing all the safe nodes of the graph. The answer should be sorted in ascending order.\n","1887":"Given an integer x, return true if x is a\npalindrome\n, and false otherwise.\n","1888":"There is an undirected graph with n nodes numbered from 0 to n - 1 (inclusive). You are given a 0-indexed integer array values where values[i] is the value of the ith node. You are also given a 0-indexed 2D integer array edges, where each edges[j] = [uj, vj, timej] indicates that there is an undirected edge between the nodes uj and vj, and it takes timej seconds to travel between the two nodes. Finally, you are given an integer maxTime.\nA valid path in the graph is any path that starts at node 0, ends at node 0, and takes at most maxTime seconds to complete. You may visit the same node multiple times. The quality of a valid path is the sum of the values of the unique nodes visited in the path (each node's value is added at most once to the sum).\nReturn the maximum quality of a valid path.\nNote: There are at most four edges connected to each node.\n","1889":"You are given an integer array nums consisting of n elements, and an integer k.\nFind a contiguous subarray whose length is equal to k that has the maximum average value and return this value. Any answer with a calculation error less than 10-5 will be accepted.\n","1890":"You are given a 0-indexed array nums of distinct integers. You want to rearrange the elements in the array such that every element in the rearranged array is not equal to the average of its neighbors.\nMore formally, the rearranged array should have the property such that for every i in the range 1 <= i < nums.length - 1, (nums[i-1] + nums[i+1]) \/ 2 is not equal to nums[i].\nReturn any rearrangement of nums that meets the requirements.\n","1891":"You are given a 0-indexed integer array nums.\nThe effective value of three indices i, j, and k is defined as ((nums[i] | nums[j]) & nums[k]).\nThe xor-beauty of the array is the XORing of the effective values of all the possible triplets of indices (i, j, k) where 0 <= i, j, k < n.\nReturn the xor-beauty of nums.\nNote that:\nval1 | val2 is bitwise OR of val1 and val2.\nval1 & val2 is bitwise AND of val1 and val2.\n","1892":"There is only one character 'A' on the screen of a notepad. You can perform one of two operations on this notepad for each step:\nCopy All: You can copy all the characters present on the screen (a partial copy is not allowed).\nPaste: You can paste the characters which are copied last time.\nGiven an integer n, return the minimum number of operations to get the character 'A' exactly n times on the screen.\n","1893":"You are given an array nums of positive integers. In one operation, you can choose any number from nums and reduce it to exactly half the number. (Note that you may choose this reduced number in future operations.)\nReturn the minimum number of operations to reduce the sum of nums by at least half.\n","1894":"A critical point in a linked list is defined as either a local maxima or a local minima.\nA node is a local maxima if the current node has a value strictly greater than the previous node and the next node.\nA node is a local minima if the current node has a value strictly smaller than the previous node and the next node.\nNote that a node can only be a local maxima\/minima if there exists both a previous node and a next node.\nGiven a linked list head, return an array of length 2 containing [minDistance, maxDistance] where minDistance is the minimum distance between any two distinct critical points and maxDistance is the maximum distance between any two distinct critical points. If there are fewer than two critical points, return [-1, -1].\n","1895":"There are n dominoes in a line, and we place each domino vertically upright. In the beginning, we simultaneously push some of the dominoes either to the left or to the right.\nAfter each second, each domino that is falling to the left pushes the adjacent domino on the left. Similarly, the dominoes falling to the right push their adjacent dominoes standing on the right.\nWhen a vertical domino has dominoes falling on it from both sides, it stays still due to the balance of the forces.\nFor the purposes of this question, we will consider that a falling domino expends no additional force to a falling or already fallen domino.\nYou are given a string dominoes representing the initial state where:\ndominoes[i] = 'L', if the ith domino has been pushed to the left,\ndominoes[i] = 'R', if the ith domino has been pushed to the right, and\ndominoes[i] = '.', if the ith domino has not been pushed.\nReturn a string representing the final state.\n","1896":"Given a string s consisting only of characters a, b and c.\nReturn the number of substrings containing at least one occurrence of all these characters a, b and c.\n","1897":"The string \"PAYPALISHIRING\" is written in a zigzag pattern on a given number of rows like this: (you may want to display this pattern in a fixed font for better legibility)\nP   A   H   N\nA P L S I I G\nY   I   R\nAnd then read line by line: \"PAHNAPLSIIGYIR\"\nWrite the code that will take a string and make this conversion given a number of rows:\nstring convert(string s, int numRows);\n","1898":"There is a set of n items. You are given two integer arrays values and labels where the value and the label of the ith element are values[i] and labels[i] respectively. You are also given two integers numWanted and useLimit.\nChoose a subset s of the n elements such that:\nThe size of the subset s is less than or equal to numWanted.\nThere are at most useLimit items with the same label in s.\nThe score of a subset is the sum of the values in the subset.\nReturn the maximum score of a subset s.\n","1899":"Given two positive integers a and b, return the number of common factors of a and b.\nAn integer x is a common factor of a and b if x divides both a and b.\n","1900":"You are given two 0-indexed integer permutations A and B of length n.\nA prefix common array of A and B is an array C such that C[i] is equal to the count of numbers that are present at or before the index i in both A and B.\nReturn the prefix common array of A and B.\nA sequence of n integers is called a permutation if it contains all integers from 1 to n exactly once.\n","1901":"You are given two integers n and k and two integer arrays speed and efficiency both of length n. There are n engineers numbered from 1 to n. speed[i] and efficiency[i] represent the speed and efficiency of the ith engineer respectively.\nChoose at most k different engineers out of the n engineers to form a team with the maximum performance.\nThe performance of a team is the sum of their engineers' speeds multiplied by the minimum efficiency among their engineers.\nReturn the maximum performance of this team. Since the answer can be a huge number, return it modulo 109 + 7.\n","1902":"SQL Schema\nTable: Customer\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| customer_id   | int     |\n| name          | varchar |\n| visited_on    | date    |\n| amount        | int     |\n+---------------+---------+\n(customer_id, visited_on) is the primary key for this table.\nThis table contains data about customer transactions in a restaurant.\nvisited_on is the date on which the customer with ID (customer_id) has visited the restaurant.\namount is the total paid by a customer.\n  You are the restaurant owner and you want to analyze a possible expansion (there will be at least one customer every day).\nWrite an SQL query to compute the moving average of how much the customer paid in a seven days window (i.e., current day + 6 days before). average_amount should be rounded to two decimal places.\nReturn result table ordered by visited_on in ascending order.\nThe query result format is in the following example.\n","1903":"Serialization is the process of converting a data structure or object into a sequence of bits so that it can be stored in a file or memory buffer, or transmitted across a network connection link to be reconstructed later in the same or another computer environment.\nDesign an algorithm to serialize and deserialize a binary tree. There is no restriction on how your serialization\/deserialization algorithm should work. You just need to ensure that a binary tree can be serialized to a string and this string can be deserialized to the original tree structure.\nClarification: The input\/output format is the same as how LeetCode serializes a binary tree. You do not necessarily need to follow this format, so please be creative and come up with different approaches yourself.\n","1904":"You are given a 0-indexed array nums of length n, consisting of non-negative integers. For each index i from 0 to n - 1, you must determine the size of the minimum sized non-empty subarray of nums starting at i (inclusive) that has the maximum possible bitwise OR.\nIn other words, let Bij be the bitwise OR of the subarray nums[i...j]. You need to find the smallest subarray starting at i, such that bitwise OR of this subarray is equal to max(Bik) where i <= k <= n - 1.\nThe bitwise OR of an array is the bitwise OR of all the numbers in it.\nReturn an integer array answer of size n where answer[i] is the length of the minimum sized subarray starting at i with maximum bitwise OR.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","1905":"You are given two 0-indexed integer arrays player1 and player2, that represent the number of pins that player 1 and player 2 hit in a bowling game, respectively.\nThe bowling game consists of n turns, and the number of pins in each turn is exactly 10.\nAssume a player hit xi pins in the ith turn. The value of the ith turn for the player is:\n2xi if the player hit 10 pins in any of the previous two turns.\nOtherwise, It is xi.\nThe score of the player is the sum of the values of their n turns.\nReturn\n1 if the score of player 1 is more than the score of player 2,\n2 if the score of player 2 is more than the score of player 1, and\n0 in case of a draw.\n","1906":"A string s is called good if there are no two different characters in s that have the same frequency.\nGiven a string s, return the minimum number of characters you need to delete to make s good.\nThe frequency of a character in a string is the number of times it appears in the string. For example, in the string \"aab\", the frequency of 'a' is 2, while the frequency of 'b' is 1.\n","1907":"You are given an integer array coins representing coins of different denominations and an integer amount representing a total amount of money.\nReturn the fewest number of coins that you need to make up that amount. If that amount of money cannot be made up by any combination of the coins, return -1.\nYou may assume that you have an infinite number of each kind of coin.\n","1908":"You are given a m x n matrix grid consisting of non-negative integers where grid[row][col] represents the minimum time required to be able to visit the cell (row, col), which means you can visit the cell (row, col) only when the time you visit it is greater than or equal to grid[row][col].\nYou are standing in the top-left cell of the matrix in the 0th second, and you must move to any adjacent cell in the four directions: up, down, left, and right. Each move you make takes 1 second.\nReturn the minimum time required in which you can visit the bottom-right cell of the matrix. If you cannot visit the bottom-right cell, then return -1.\n","1909":"You are given a 0-indexed 8 x 8 grid board, where board[r][c] represents the cell (r, c) on a game board. On the board, free cells are represented by '.', white cells are represented by 'W', and black cells are represented by 'B'.\nEach move in this game consists of choosing a free cell and changing it to the color you are playing as (either white or black). However, a move is only legal if, after changing it, the cell becomes the endpoint of a good line (horizontal, vertical, or diagonal).\nA good line is a line of three or more cells (including the endpoints) where the endpoints of the line are one color, and the remaining cells in the middle are the opposite color (no cells in the line are free). You can find examples for good lines in the figure below:\nGiven two integers rMove and cMove and a character color representing the color you are playing as (white or black), return true if changing cell (rMove, cMove) to color color is a legal move, or false if it is not legal.\n","1910":"In a string composed of 'L', 'R', and 'X' characters, like \"RXXLRXRXL\", a move consists of either replacing one occurrence of \"XL\" with \"LX\", or replacing one occurrence of \"RX\" with \"XR\". Given the starting string start and the ending string end, return True if and only if there exists a sequence of moves to transform one string to the other.\n","1911":"You are given an integer n, the number of teams in a tournament that has strange rules:\nIf the current number of teams is even, each team gets paired with another team. A total of n \/ 2 matches are played, and n \/ 2 teams advance to the next round.\nIf the current number of teams is odd, one team randomly advances in the tournament, and the rest gets paired. A total of (n - 1) \/ 2 matches are played, and (n - 1) \/ 2 + 1 teams advance to the next round.\nReturn the number of matches played in the tournament until a winner is decided.\n","1912":"Two strings are considered close if you can attain one from the other using the following operations:\nOperation 1: Swap any two existing characters.\nFor example, abcde -> aecdb\nOperation 2: Transform every occurrence of one existing character into another existing character, and do the same with the other character.\nFor example, aacabb -> bbcbaa (all a's turn into b's, and all b's turn into a's)\nYou can use the operations on either string as many times as necessary.\nGiven two strings, word1 and word2, return true if word1 and word2 are close, and false otherwise.\n","1913":"Given an integer array nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in any order.\nYou must write an algorithm that runs in linear runtime complexity and uses only constant extra space.\n","1914":"Given an integer array nums, return all the triplets [nums[i], nums[j], nums[k]] such that i != j, i != k, and j != k, and nums[i] + nums[j] + nums[k] == 0.\nNotice that the solution set must not contain duplicate triplets.\n","1915":"Given the head of a linked list, return the node where the cycle begins. If there is no cycle, return null.\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to (0-indexed). It is -1 if there is no cycle. Note that pos is not passed as a parameter.\nDo not modify the linked list.\n","1916":"Given an array of integers nums, sort the array in ascending order and return it.\nYou must solve the problem without using any built-in functions in O(nlog(n)) time complexity and with the smallest space complexity possible.\n","1917":"You are given an integer array nums where the ith bag contains nums[i] balls. You are also given an integer maxOperations.\nYou can perform the following operation at most maxOperations times:\nTake any bag of balls and divide it into two new bags with a positive number of balls.\nFor example, a bag of 5 balls can become two new bags of 1 and 4 balls, or two new bags of 2 and 3 balls.\nYour penalty is the maximum number of balls in a bag. You want to minimize your penalty after the operations.\nReturn the minimum possible penalty after performing the operations.\n","1918":"You are given a 0-indexed integer array nums and an integer p. Find p pairs of indices of nums such that the maximum difference amongst all the pairs is minimized. Also, ensure no index appears more than once amongst the p pairs.\nNote that for a pair of elements at the index i and j, the difference of this pair is |nums[i] - nums[j]|, where |x| represents the absolute value of x.\nReturn the minimum maximum difference among all p pairs. We define the maximum of an empty set to be zero.\n","1919":"You are given a list of preferences for n friends, where n is always even.\nFor each person i, preferences[i] contains a list of friends sorted in the order of preference. In other words, a friend earlier in the list is more preferred than a friend later in the list. Friends in each list are denoted by integers from 0 to n-1.\nAll the friends are divided into pairs. The pairings are given in a list pairs, where pairs[i] = [xi, yi] denotes xi is paired with yi and yi is paired with xi.\nHowever, this pairing may cause some of the friends to be unhappy. A friend x is unhappy if x is paired with y and there exists a friend u who is paired with v but:\nx prefers u over y, and\nu prefers x over v.\nReturn the number of unhappy friends.\n","1920":"You are given a 0-indexed integer array nums. An index i is part of a hill in nums if the closest non-equal neighbors of i are smaller than nums[i]. Similarly, an index i is part of a valley in nums if the closest non-equal neighbors of i are larger than nums[i]. Adjacent indices i and j are part of the same hill or valley if nums[i] == nums[j].\nNote that for an index to be part of a hill or valley, it must have a non-equal neighbor on both the left and right of the index.\nReturn the number of hills and valleys in nums.\n","1921":"You are given a positive integer n, that is initially placed on a board. Every day, for 109 days, you perform the following procedure:\nFor each number x present on the board, find all numbers 1 <= i <= n such that x % i == 1.\nThen, place those numbers on the board.\nReturn the number of distinct integers present on the board after 109 days have elapsed.\nNote:\nOnce a number is placed on the board, it will remain on it until the end.\n% stands for the modulo operation. For example, 14 % 3 is 2.\n","1922":"Alice is texting Bob using her phone. The mapping of digits to letters is shown in the figure below.\nIn order to add a letter, Alice has to press the key of the corresponding digit i times, where i is the position of the letter in the key.\nFor example, to add the letter 's', Alice has to press '7' four times. Similarly, to add the letter 'k', Alice has to press '5' twice.\nNote that the digits '0' and '1' do not map to any letters, so Alice does not use them.\nHowever, due to an error in transmission, Bob did not receive Alice's text message but received a string of pressed keys instead.\nFor example, when Alice sent the message \"bob\", Bob received the string \"2266622\".\nGiven a string pressedKeys representing the string received by Bob, return the total number of possible text messages Alice could have sent.\nSince the answer may be very large, return it modulo 109 + 7.\n","1923":"You are given two positive integers left and right with left <= right. Calculate the product of all integers in the inclusive range [left, right].\nSince the product may be very large, you will abbreviate it following these steps:\nCount all trailing zeros in the product and remove them. Let us denote this count as C.\nFor example, there are 3 trailing zeros in 1000, and there are 0 trailing zeros in 546.\nDenote the remaining number of digits in the product as d. If d > 10, then express the product as <pre>...<suf> where <pre> denotes the first 5 digits of the product, and <suf> denotes the last 5 digits of the product after removing all trailing zeros. If d <= 10, we keep it unchanged.\nFor example, we express 1234567654321 as 12345...54321, but 1234567 is represented as 1234567.\nFinally, represent the product as a string \"<pre>...<suf>eC\".\nFor example, 12345678987600000 will be represented as \"12345...89876e5\".\nReturn a string denoting the abbreviated product of all integers in the inclusive range [left, right].\n","1924":"You are given an integer array nums and an integer k. You are asked to distribute this array into k subsets of equal size such that there are no two equal elements in the same subset.\nA subset's incompatibility is the difference between the maximum and minimum elements in that array.\nReturn the minimum possible sum of incompatibilities of the k subsets after distributing the array optimally, or return -1 if it is not possible.\nA subset is a group integers that appear in the array with no particular order.\n","1925":"A valid parentheses string is either empty \"\", \"(\" + A + \")\", or A + B, where A and B are valid parentheses strings, and + represents string concatenation.\nFor example, \"\", \"()\", \"(())()\", and \"(()(()))\" are all valid parentheses strings.\nA valid parentheses string s is primitive if it is nonempty, and there does not exist a way to split it into s = A + B, with A and B nonempty valid parentheses strings.\nGiven a valid parentheses string s, consider its primitive decomposition: s = P1 + P2 + ... + Pk, where Pi are primitive valid parentheses strings.\nReturn s after removing the outermost parentheses of every primitive string in the primitive decomposition of s.\n","1926":"You are playing a variation of the game Zuma.\nIn this variation of Zuma, there is a single row of colored balls on a board, where each ball can be colored red 'R', yellow 'Y', blue 'B', green 'G', or white 'W'. You also have several colored balls in your hand.\nYour goal is to clear all of the balls from the board. On each turn:\nPick any ball from your hand and insert it in between two balls in the row or on either end of the row.\nIf there is a group of three or more consecutive balls of the same color, remove the group of balls from the board.\nIf this removal causes more groups of three or more of the same color to form, then continue removing each group until there are none left.\nIf there are no more balls on the board, then you win the game.\nRepeat this process until you either win or do not have any more balls in your hand.\nGiven a string board, representing the row of balls on the board, and a string hand, representing the balls in your hand, return the minimum number of balls you have to insert to clear all the balls from the board. If you cannot clear all the balls from the board using the balls in your hand, return -1.\n","1927":"Given a m x n matrix mat and an integer threshold, return the maximum side-length of a square with a sum less than or equal to threshold or return 0 if there is no such square.\n","1928":"You are given a perfect binary tree where all leaves are on the same level, and every parent has two children. The binary tree has the following definition:\nstruct Node {\n  int val;\n  Node *left;\n  Node *right;\n  Node *next;\n}\nPopulate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to NULL.\nInitially, all next pointers are set to NULL.\n","1929":"RandomizedCollection is a data structure that contains a collection of numbers, possibly duplicates (i.e., a multiset). It should support inserting and removing specific elements and also reporting a random element.\nImplement the RandomizedCollection class:\nRandomizedCollection() Initializes the empty RandomizedCollection object.\nbool insert(int val) Inserts an item val into the multiset, even if the item is already present. Returns true if the item is not present, false otherwise.\nbool remove(int val) Removes an item val from the multiset if present. Returns true if the item is present, false otherwise. Note that if val has multiple occurrences in the multiset, we only remove one of them.\nint getRandom() Returns a random element from the current multiset of elements. The probability of each element being returned is linearly related to the number of the same values the multiset contains.\nYou must implement the functions of the class such that each function works on average O(1) time complexity.\nNote: The test cases are generated such that getRandom will only be called if there is at least one item in the RandomizedCollection.\n","1930":"You are given a 0-indexed integer array nums and an integer pivot. Rearrange nums such that the following conditions are satisfied:\nEvery element less than pivot appears before every element greater than pivot.\nEvery element equal to pivot appears in between the elements less than and greater than pivot.\nThe relative order of the elements less than pivot and the elements greater than pivot is maintained.\nMore formally, consider every pi, pj where pi is the new position of the ith element and pj is the new position of the jth element. For elements less than pivot, if i < j and nums[i] < pivot and nums[j] < pivot, then pi < pj. Similarly for elements greater than pivot, if i < j and nums[i] > pivot and nums[j] > pivot, then pi < pj.\nReturn nums after the rearrangement.\n","1931":"You have n computers. You are given the integer n and a 0-indexed integer array batteries where the ith battery can run a computer for batteries[i] minutes. You are interested in running all n computers simultaneously using the given batteries.\nInitially, you can insert at most one battery into each computer. After that and at any integer time moment, you can remove a battery from a computer and insert another battery any number of times. The inserted battery can be a totally new battery or a battery from another computer. You may assume that the removing and inserting processes take no time.\nNote that the batteries cannot be recharged.\nReturn the maximum number of minutes you can run all the n computers simultaneously.\n","1932":"Given a callable function f(x, y) with a hidden formula and a value z, reverse engineer the formula and return all positive integer pairs x and y where f(x,y) == z. You may return the pairs in any order.\nWhile the exact formula is hidden, the function is monotonically increasing, i.e.:\nf(x, y) < f(x + 1, y)\nf(x, y) < f(x, y + 1)\nThe function interface is defined like this:\ninterface CustomFunction {\npublic:\n  \/\/ Returns some positive integer f(x, y) for two positive integers x and y based on a formula.\n  int f(int x, int y);\n};\nWe will judge your solution as follows:\nThe judge has a list of 9 hidden implementations of CustomFunction, along with a way to generate an answer key of all valid pairs for a specific z.\nThe judge will receive two inputs: a function_id (to determine which implementation to test your code with), and the target z.\nThe judge will call your findSolution and compare your results with the answer key.\nIf your results match the answer key, your solution will be Accepted.\n","1933":"No-Zero integer is a positive integer that does not contain any 0 in its decimal representation.\nGiven an integer n, return a list of two integers [a, b] where:\na and b are No-Zero integers.\na + b = n\nThe test cases are generated so that there is at least one valid solution. If there are many valid solutions, you can return any of them.\n","1934":"Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane, return the maximum number of points that lie on the same straight line.\n","1935":"Given n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.\n","1936":"Given an integer array nums of positive integers, return the average value of all even integers that are divisible by 3.\nNote that the average of n elements is the sum of the n elements divided by n and rounded down to the nearest integer.\n","1937":"You are given an integer array nums. The unique elements of an array are the elements that appear exactly once in the array.\nReturn the sum of all the unique elements of nums.\n","1938":"You are given the root of a binary tree with n nodes where each node in the tree has node.val coins. There are n coins in total throughout the whole tree.\nIn one move, we may choose two adjacent nodes and move one coin from one node to another. A move may be from parent to child, or from child to parent.\nReturn the minimum number of moves required to make every node have exactly one coin.\n","1939":"You are given a 0-indexed, strictly increasing integer array nums and a positive integer diff. A triplet (i, j, k) is an arithmetic triplet if the following conditions are met:\ni < j < k,\nnums[j] - nums[i] == diff, and\nnums[k] - nums[j] == diff.\nReturn the number of unique arithmetic triplets.\n","1940":"For two strings s and t, we say \"t divides s\" if and only if s = t + ... + t (i.e., t is concatenated with itself one or more times).\nGiven two strings str1 and str2, return the largest string x such that x divides both str1 and str2.\n","1941":"You are given an m x n binary matrix grid, where 0 represents a sea cell and 1 represents a land cell.\nA move consists of walking from one land cell to another adjacent (4-directionally) land cell or walking off the boundary of the grid.\nReturn the number of land cells in grid for which we cannot walk off the boundary of the grid in any number of moves.\n","1942":"Run-length encoding is a string compression method that works by replacing consecutive identical characters (repeated 2 or more times) with the concatenation of the character and the number marking the count of the characters (length of the run). For example, to compress the string \"aabccc\" we replace \"aa\" by \"a2\" and replace \"ccc\" by \"c3\". Thus the compressed string becomes \"a2bc3\".\nNotice that in this problem, we are not adding '1' after single characters.\nGiven a string s and an integer k. You need to delete at most k characters from s such that the run-length encoded version of s has minimum length.\nFind the minimum length of the run-length encoded version of s after deleting at most k characters.\n","1943":"You are given an m x n binary matrix grid. An island is a group of 1's (representing land) connected 4-directionally (horizontal or vertical.) You may assume all four edges of the grid are surrounded by water.\nThe area of an island is the number of cells with a value 1 in the island.\nReturn the maximum area of an island in grid. If there is no island, return 0.\n","1944":"Determine if a 9 x 9 Sudoku board is valid. Only the filled cells need to be validated according to the following rules:\nEach row must contain the digits 1-9 without repetition.\nEach column must contain the digits 1-9 without repetition.\nEach of the nine 3 x 3 sub-boxes of the grid must contain the digits 1-9 without repetition.\nNote:\nA Sudoku board (partially filled) could be valid but is not necessarily solvable.\nOnly the filled cells need to be validated according to the mentioned rules.\n","1945":"Given a binary tree, determine if it is\nheight-balanced\n.\n","1946":"There are n cars on an infinitely long road. The cars are numbered from 0 to n - 1 from left to right and each car is present at a unique point.\nYou are given a 0-indexed string directions of length n. directions[i] can be either 'L', 'R', or 'S' denoting whether the ith car is moving towards the left, towards the right, or staying at its current point respectively. Each moving car has the same speed.\nThe number of collisions can be calculated as follows:\nWhen two cars moving in opposite directions collide with each other, the number of collisions increases by 2.\nWhen a moving car collides with a stationary car, the number of collisions increases by 1.\nAfter a collision, the cars involved can no longer move and will stay at the point where they collided. Other than that, cars cannot change their state or direction of motion.\nReturn the total number of collisions that will happen on the road.\n","1947":"There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course bi first if you want to take course ai.\nFor example, the pair [0, 1], indicates that to take course 0 you have to first take course 1.\nReturn true if you can finish all courses. Otherwise, return false.\n","1948":"You are given an integer array cards of length 4. You have four cards, each containing a number in the range [1, 9]. You should arrange the numbers on these cards in a mathematical expression using the operators ['+', '-', '*', '\/'] and the parentheses '(' and ')' to get the value 24.\nYou are restricted with the following rules:\nThe division operator '\/' represents real division, not integer division.\nFor example, 4 \/ (1 - 2 \/ 3) = 4 \/ (1 \/ 3) = 12.\nEvery operation done is between two numbers. In particular, we cannot use '-' as a unary operator.\nFor example, if cards = [1, 1, 1, 1], the expression \"-1 - 1 - 1 - 1\" is not allowed.\nYou cannot concatenate numbers together\nFor example, if cards = [1, 2, 1, 2], the expression \"12 + 12\" is not valid.\nReturn true if you can get such expression that evaluates to 24, and false otherwise.\n","1949":"Given an array of strings words, return the smallest string that contains each string in words as a substring. If there are multiple valid strings of the smallest length, return any of them.\nYou may assume that no string in words is a substring of another string in words.\n","1950":"Given the root of a binary tree and two integers val and depth, add a row of nodes with value val at the given depth depth.\nNote that the root node is at depth 1.\nThe adding rule is:\nGiven the integer depth, for each not null tree node cur at the depth depth - 1, create two tree nodes with value val as cur's left subtree root and right subtree root.\ncur's original left subtree should be the left subtree of the new left subtree root.\ncur's original right subtree should be the right subtree of the new right subtree root.\nIf depth == 1 that means there is no depth depth - 1 at all, then create a tree node with value val as the new root of the whole original tree, and the original tree is the new root's left subtree.\n","1951":"Given the root of a binary tree, each node in the tree has a distinct value.\nAfter deleting all nodes with a value in to_delete, we are left with a forest (a disjoint union of trees).\nReturn the roots of the trees in the remaining forest. You may return the result in any order.\n","1952":"Given a positive integer n, return the smallest positive integer that is a multiple of both 2 and n.\n","1953":"You are given a string s and an array of strings words. All the strings of words are of the same length.\nA concatenated substring in s is a substring that contains all the strings of any permutation of words concatenated.\nFor example, if words = [\"ab\",\"cd\",\"ef\"], then \"abcdef\", \"abefcd\", \"cdabef\", \"cdefab\", \"efabcd\", and \"efcdab\" are all concatenated strings. \"acdbef\" is not a concatenated substring because it is not the concatenation of any permutation of words.\nReturn the starting indices of all the concatenated substrings in s. You can return the answer in any order.\n","1954":"You have a movie renting company consisting of n shops. You want to implement a renting system that supports searching for, booking, and returning movies. The system should also support generating a report of the currently rented movies.\nEach movie is given as a 2D integer array entries where entries[i] = [shopi, moviei, pricei] indicates that there is a copy of movie moviei at shop shopi with a rental price of pricei. Each shop carries at most one copy of a movie moviei.\nThe system should support the following functions:\nSearch: Finds the cheapest 5 shops that have an unrented copy of a given movie. The shops should be sorted by price in ascending order, and in case of a tie, the one with the smaller shopi should appear first. If there are less than 5 matching shops, then all of them should be returned. If no shop has an unrented copy, then an empty list should be returned.\nRent: Rents an unrented copy of a given movie from a given shop.\nDrop: Drops off a previously rented copy of a given movie at a given shop.\nReport: Returns the cheapest 5 rented movies (possibly of the same movie ID) as a 2D list res where res[j] = [shopj, moviej] describes that the jth cheapest rented movie moviej was rented from the shop shopj. The movies in res should be sorted by price in ascending order, and in case of a tie, the one with the smaller shopj should appear first, and if there is still tie, the one with the smaller moviej should appear first. If there are fewer than 5 rented movies, then all of them should be returned. If no movies are currently being rented, then an empty list should be returned.\nImplement the MovieRentingSystem class:\nMovieRentingSystem(int n, int[][] entries) Initializes the MovieRentingSystem object with n shops and the movies in entries.\nList<Integer> search(int movie) Returns a list of shops that have an unrented copy of the given movie as described above.\nvoid rent(int shop, int movie) Rents the given movie from the given shop.\nvoid drop(int shop, int movie) Drops off a previously rented movie at the given shop.\nList<List<Integer>> report() Returns a list of cheapest rented movies as described above.\nNote: The test cases will be generated such that rent will only be called if the shop has an unrented copy of the movie, and drop will only be called if the shop had previously rented out the movie.\n","1955":"Given an array of integers arr, replace each element with its rank.\nThe rank represents how large the element is. The rank has the following rules:\nRank is an integer starting from 1.\nThe larger the element, the larger the rank. If two elements are equal, their rank must be the same.\nRank should be as small as possible.\n","1956":"Write an efficient algorithm that searches for a value target in an m x n integer matrix matrix. This matrix has the following properties:\nIntegers in each row are sorted in ascending from left to right.\nIntegers in each column are sorted in ascending from top to bottom.\n","1957":"You are given an m x n integer matrix grid, where you can move from a cell to any adjacent cell in all 4 directions.\nReturn the number of strictly increasing paths in the grid such that you can start from any cell and end at any cell. Since the answer may be very large, return it modulo 109 + 7.\nTwo paths are considered different if they do not have exactly the same sequence of visited cells.\n","1958":"Given a multi-dimensional array of integers, return a generator object which yields integers in the same order as inorder traversal.\nA multi-dimensional array is a recursive data structure that contains both integers and other multi-dimensional arrays.\ninorder traversal iterates over each array from left to right, yielding any integers it encounters or applying inorder traversal to any arrays it encounters.\n","1959":"SQL Schema\nTable: Users\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| user_id     | int     |\n| user_name   | varchar |\n+-------------+---------+\nuser_id is the primary key for this table.\nEach row of this table contains the name and the id of a user.\n  Table: Register\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| contest_id  | int     |\n| user_id     | int     |\n+-------------+---------+\n(contest_id, user_id) is the primary key for this table.\nEach row of this table contains the id of a user and the contest they registered into.\n  Write an SQL query to find the percentage of the users registered in each contest rounded to two decimals.\nReturn the result table ordered by percentage in descending order. In case of a tie, order it by contest_id in ascending order.\nThe query result format is in the following example.\n","1960":"SQL Schema\nTable: Orders\n+-----------------+----------+\n| Column Name     | Type     |\n+-----------------+----------+\n| order_number    | int      |\n| customer_number | int      |\n+-----------------+----------+\norder_number is the primary key for this table.\nThis table contains information about the order ID and the customer ID.\n  Write an SQL query to find the customer_number for the customer who has placed the largest number of orders.\nThe test cases are generated so that exactly one customer will have placed more orders than any other customer.\nThe query result format is in the following example.\n","1961":"You are given a positive integer n. Each digit of n has a sign according to the following rules:\nThe most significant digit is assigned a positive sign.\nEach other digit has an opposite sign to its adjacent digits.\nReturn the sum of all digits with their corresponding sign.\n","1962":"There are n cities. Some of them are connected, while some are not. If city a is connected directly with city b, and city b is connected directly with city c, then city a is connected indirectly with city c.\nA province is a group of directly or indirectly connected cities and no other cities outside of the group.\nYou are given an n x n matrix isConnected where isConnected[i][j] = 1 if the ith city and the jth city are directly connected, and isConnected[i][j] = 0 otherwise.\nReturn the total number of provinces.\n","1963":"Given an m x n matrix matrix and an integer k, return the max sum of a rectangle in the matrix such that its sum is no larger than k.\nIt is guaranteed that there will be a rectangle with a sum no larger than k.\n","1964":"You are given a license key represented as a string s that consists of only alphanumeric characters and dashes. The string is separated into n + 1 groups by n dashes. You are also given an integer k.\nWe want to reformat the string s such that each group contains exactly k characters, except for the first group, which could be shorter than k but still must contain at least one character. Furthermore, there must be a dash inserted between two groups, and you should convert all lowercase letters to uppercase.\nReturn the reformatted license key.\n","1965":"An integer x is numerically balanced if for every digit d in the number x, there are exactly d occurrences of that digit in x.\nGiven an integer n, return the smallest numerically balanced number strictly greater than n.\n","1966":"Design a data structure that is initialized with a list of different words. Provided a string, you should determine if you can change exactly one character in this string to match any word in the data structure.\nImplement the MagicDictionary class:\nMagicDictionary() Initializes the object.\nvoid buildDict(String[] dictionary) Sets the data structure with an array of distinct strings dictionary.\nbool search(String searchWord) Returns true if you can change exactly one character in searchWord to match any string in the data structure, otherwise returns false.\n","1967":"You are playing a game that contains multiple characters, and each of the characters has two main properties: attack and defense. You are given a 2D integer array properties where properties[i] = [attacki, defensei] represents the properties of the ith character in the game.\nA character is said to be weak if any other character has both attack and defense levels strictly greater than this character's attack and defense levels. More formally, a character i is said to be weak if there exists another character j where attackj > attacki and defensej > defensei.\nReturn the number of weak characters.\n","1968":"Design an algorithm that accepts a stream of integers and retrieves the product of the last k integers of the stream.\nImplement the ProductOfNumbers class:\nProductOfNumbers() Initializes the object with an empty stream.\nvoid add(int num) Appends the integer num to the stream.\nint getProduct(int k) Returns the product of the last k numbers in the current list. You can assume that always the current list has at least k numbers.\nThe test cases are generated so that, at any time, the product of any contiguous sequence of numbers will fit into a single 32-bit integer without overflowing.\n","1969":"SQL Schema\nTable: Views\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| article_id    | int     |\n| author_id     | int     |\n| viewer_id     | int     |\n| view_date     | date    |\n+---------------+---------+\nThere is no primary key for this table, it may have duplicate rows.\nEach row of this table indicates that some viewer viewed an article (written by some author) on some date. \nNote that equal author_id and viewer_id indicate the same person.\n  Write an SQL query to find all the authors that viewed at least one of their own articles.\nReturn the result table sorted by id in ascending order.\nThe query result format is in the following example.\n","1970":"Five silent philosophers sit at a round table with bowls of spaghetti. Forks are placed between each pair of adjacent philosophers.\nEach philosopher must alternately think and eat. However, a philosopher can only eat spaghetti when they have both left and right forks. Each fork can be held by only one philosopher and so a philosopher can use the fork only if it is not being used by another philosopher. After an individual philosopher finishes eating, they need to put down both forks so that the forks become available to others. A philosopher can take the fork on their right or the one on their left as they become available, but cannot start eating before getting both forks.\nEating is not limited by the remaining amounts of spaghetti or stomach space; an infinite supply and an infinite demand are assumed.\nDesign a discipline of behaviour (a concurrent algorithm) such that no philosopher will starve; i.e., each can forever continue to alternate between eating and thinking, assuming that no philosopher can know when others may want to eat or think.\nThe problem statement and the image above are taken from wikipedia.org\n  The philosophers' ids are numbered from 0 to 4 in a clockwise order. Implement the function void wantsToEat(philosopher, pickLeftFork, pickRightFork, eat, putLeftFork, putRightFork) where:\nphilosopher is the id of the philosopher who wants to eat.\npickLeftFork and pickRightFork are functions you can call to pick the corresponding forks of that philosopher.\neat is a function you can call to let the philosopher eat once he has picked both forks.\nputLeftFork and putRightFork are functions you can call to put down the corresponding forks of that philosopher.\nThe philosophers are assumed to be thinking as long as they are not asking to eat (the function is not being called with their number).\nFive threads, each representing a philosopher, will simultaneously use one object of your class to simulate the process. The function may be called for the same philosopher more than once, even before the last call ends.\n","1971":"In a warehouse, there is a row of barcodes, where the ith barcode is barcodes[i].\nRearrange the barcodes so that no two adjacent barcodes are equal. You may return any answer, and it is guaranteed an answer exists.\n","1972":"An alphabetical continuous string is a string consisting of consecutive letters in the alphabet. In other words, it is any substring of the string \"abcdefghijklmnopqrstuvwxyz\".\nFor example, \"abc\" is an alphabetical continuous string, while \"acb\" and \"za\" are not.\nGiven a string s consisting of lowercase letters only, return the length of the longest alphabetical continuous substring.\n","1973":"There is an undirected star graph consisting of n nodes labeled from 1 to n. A star graph is a graph where there is one center node and exactly n - 1 edges that connect the center node with every other node.\nYou are given a 2D integer array edges where each edges[i] = [ui, vi] indicates that there is an edge between the nodes ui and vi. Return the center of the given star graph.\n","1974":"Given an array of integers arr and an integer d. In one step you can jump from index i to index:\ni + x where: i + x < arr.length and  0 < x <= d.\ni - x where: i - x >= 0 and  0 < x <= d.\nIn addition, you can only jump from index i to index j if arr[i] > arr[j] and arr[i] > arr[k] for all indices k between i and j (More formally min(i, j) < k < max(i, j)).\nYou can choose any index of the array and start jumping. Return the maximum number of indices you can visit.\nNotice that you can not jump outside of the array at any time.\n","1975":"You are given an array of unique strings words where words[i] is six letters long. One word of words was chosen as a secret word.\nYou are also given the helper object Master. You may call Master.guess(word) where word is a six-letter-long string, and it must be from words. Master.guess(word) returns:\n-1 if word is not from words, or\nan integer representing the number of exact matches (value and position) of your guess to the secret word.\nThere is a parameter allowedGuesses for each test case where allowedGuesses is the maximum number of times you can call Master.guess(word).\nFor each test case, you should call Master.guess with the secret word without exceeding the maximum number of allowed guesses. You will get:\n\"Either you took too many guesses, or you did not find the secret word.\" if you called Master.guess more than allowedGuesses times or if you did not call Master.guess with the secret word, or\n\"You guessed the secret word correctly.\" if you called Master.guess with the secret word with the number of calls to Master.guess less than or equal to allowedGuesses.\nThe test cases are generated such that you can guess the secret word with a reasonable strategy (other than using the bruteforce method).\n","1976":"Given an m x n integers matrix, return the length of the longest increasing path in matrix.\nFrom each cell, you can either move in four directions: left, right, up, or down. You may not move diagonally or move outside the boundary (i.e., wrap-around is not allowed).\n","1977":"You are given an array of strings words. Each element of words consists of two lowercase English letters.\nCreate the longest possible palindrome by selecting some elements from words and concatenating them in any order. Each element can be selected at most once.\nReturn the length of the longest palindrome that you can create. If it is impossible to create any palindrome, return 0.\nA palindrome is a string that reads the same forward and backward.\n","1978":"There is a robot on an m x n grid. The robot is initially located at the top-left corner (i.e., grid[0][0]). The robot tries to move to the bottom-right corner (i.e., grid[m - 1][n - 1]). The robot can only move either down or right at any point in time.\nGiven the two integers m and n, return the number of possible unique paths that the robot can take to reach the bottom-right corner.\nThe test cases are generated so that the answer will be less than or equal to 2 * 109.\n","1979":"According to Wikipedia's article: \"The Game of Life, also known simply as Life, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.\"\nThe board is made up of an m x n grid of cells, where each cell has an initial state: live (represented by a 1) or dead (represented by a 0). Each cell interacts with its eight neighbors (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\nAny live cell with fewer than two live neighbors dies as if caused by under-population.\nAny live cell with two or three live neighbors lives on to the next generation.\nAny live cell with more than three live neighbors dies, as if by over-population.\nAny dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.\nThe next state is created by applying the above rules simultaneously to every cell in the current state, where births and deaths occur simultaneously. Given the current state of the m x n grid board, return the next state.\n","1980":"You are given an undirected graph defined by an integer n, the number of nodes, and a 2D integer array edges, the edges in the graph, where edges[i] = [ui, vi] indicates that there is an undirected edge between ui and vi. You are also given an integer array queries.\nLet incident(a, b) be defined as the number of edges that are connected to either node a or b.\nThe answer to the jth query is the number of pairs of nodes (a, b) that satisfy both of the following conditions:\na < b\nincident(a, b) > queries[j]\nReturn an array answers such that answers.length == queries.length and answers[j] is the answer of the jth query.\nNote that there can be multiple edges between the same two nodes.\n","1981":"Nearly everyone has used the Multiplication Table. The multiplication table of size m x n is an integer matrix mat where mat[i][j] == i * j (1-indexed).\nGiven three integers m, n, and k, return the kth smallest element in the m x n multiplication table.\n","1982":"Winter is coming! During the contest, your first job is to design a standard heater with a fixed warm radius to warm all the houses.\nEvery house can be warmed, as long as the house is within the heater's warm radius range. \nGiven the positions of houses and heaters on a horizontal line, return the minimum radius standard of heaters so that those heaters could cover all houses.\nNotice that all the heaters follow your radius standard, and the warm radius will the same.\n","1983":"You are given an array nums of n positive integers.\nYou can perform two types of operations on any element of the array any number of times:\nIf the element is even, divide it by 2.\nFor example, if the array is [1,2,3,4], then you can do this operation on the last element, and the array will be [1,2,3,2].\nIf the element is odd, multiply it by 2.\nFor example, if the array is [1,2,3,4], then you can do this operation on the first element, and the array will be [2,2,3,4].\nThe deviation of the array is the maximum difference between any two elements in the array.\nReturn the minimum deviation the array can have after performing some number of operations.\n","1984":"On a social network consisting of m users and some friendships between users, two users can communicate with each other if they know a common language.\nYou are given an integer n, an array languages, and an array friendships where:\nThere are n languages numbered 1 through n,\nlanguages[i] is the set of languages the ith user knows, and\nfriendships[i] = [ui, vi] denotes a friendship between the users ui and vi.\nYou can choose one language and teach it to some users so that all friends can communicate with each other. Return the minimum number of users you need to teach.\nNote that friendships are not transitive, meaning if x is a friend of y and y is a friend of z, this doesn't guarantee that x is a friend of z.\n","1985":"Given a string s, return the string after replacing every uppercase letter with the same lowercase letter.\n","1986":"The value of an alphanumeric string can be defined as:\nThe numeric representation of the string in base 10, if it comprises of digits only.\nThe length of the string, otherwise.\nGiven an array strs of alphanumeric strings, return the maximum value of any string in strs.\n","1987":"There is a singly-linked list head and we want to delete a node node in it.\nYou are given the node to be deleted node. You will not be given access to the first node of head.\nAll the values of the linked list are unique, and it is guaranteed that the given node node is not the last node in the linked list.\nDelete the given node. Note that by deleting the node, we do not mean removing it from memory. We mean:\nThe value of the given node should not exist in the linked list.\nThe number of nodes in the linked list should decrease by one.\nAll the values before node should be in the same order.\nAll the values after node should be in the same order.\nCustom testing:\nFor the input, you should provide the entire linked list head and the node to be given node. node should not be the last node of the list and should be an actual node in the list.\nWe will build the linked list and pass the node to your function.\nThe output will be the entire list after calling your function.\n","1988":"Given an integer n, return a list of all possible full binary trees with n nodes. Each node of each tree in the answer must have Node.val == 0.\nEach element of the answer is the root node of one possible tree. You may return the final list of trees in any order.\nA full binary tree is a binary tree where each node has exactly 0 or 2 children.\n","1989":"Given a square matrix mat, return the sum of the matrix diagonals.\nOnly include the sum of all the elements on the primary diagonal and all the elements on the secondary diagonal that are not part of the primary diagonal.\n","1990":"Alice plays the following game, loosely based on the card game \"21\".\nAlice starts with 0 points and draws numbers while she has less than k points. During each draw, she gains an integer number of points randomly from the range [1, maxPts], where maxPts is an integer. Each draw is independent and the outcomes have equal probabilities.\nAlice stops drawing numbers when she gets k or more points.\nReturn the probability that Alice has n or fewer points.\nAnswers within 10-5 of the actual answer are considered accepted.\n","1991":"Given a wooden stick of length n units. The stick is labelled from 0 to n. For example, a stick of length 6 is labelled as follows:\nGiven an integer array cuts where cuts[i] denotes a position you should perform a cut at.\nYou should perform the cuts in order, you can change the order of the cuts as you wish.\nThe cost of one cut is the length of the stick to be cut, the total cost is the sum of costs of all cuts. When you cut a stick, it will be split into two smaller sticks (i.e. the sum of their lengths is the length of the stick before the cut). Please refer to the first example for a better explanation.\nReturn the minimum total cost of the cuts.\n","1992":"Bob is standing at cell (0, 0), and he wants to reach destination: (row, column). He can only travel right and down. You are going to help Bob by providing instructions for him to reach destination.\nThe instructions are represented as a string, where each character is either:\n'H', meaning move horizontally (go right), or\n'V', meaning move vertically (go down).\nMultiple instructions will lead Bob to destination. For example, if destination is (2, 3), both \"HHHVV\" and \"HVHVH\" are valid instructions.\nHowever, Bob is very picky. Bob has a lucky number k, and he wants the kth lexicographically smallest instructions that will lead him to destination. k is 1-indexed.\nGiven an integer array destination and an integer k, return the kth lexicographically smallest instructions that will take Bob to destination.\n","1993":"We had some 2-dimensional coordinates, like \"(1, 3)\" or \"(2, 0.5)\". Then, we removed all commas, decimal points, and spaces and ended up with the string s.\nFor example, \"(1, 3)\" becomes s = \"(13)\" and \"(2, 0.5)\" becomes s = \"(205)\".\nReturn a list of strings representing all possibilities for what our original coordinates could have been.\nOur original representation never had extraneous zeroes, so we never started with numbers like \"00\", \"0.0\", \"0.00\", \"1.0\", \"001\", \"00.01\", or any other number that can be represented with fewer digits. Also, a decimal point within a number never occurs without at least one digit occurring before it, so we never started with numbers like \".1\".\nThe final answer list can be returned in any order. All coordinates in the final answer have exactly one space between them (occurring after the comma.)\n","1994":"You are given a positive integer arrivalTime denoting the arrival time of a train in hours, and another positive integer delayedTime denoting the amount of delay in hours.\nReturn the time when the train will arrive at the station.\nNote that the time in this problem is in 24-hours format.\n","1995":"Given a string of digits s, return the number of palindromic subsequences of s having length 5. Since the answer may be very large, return it modulo 109 + 7.\nNote:\nA string is palindromic if it reads the same forward and backward.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n","1996":"You are given an alphanumeric string s. (Alphanumeric string is a string consisting of lowercase English letters and digits).\nYou have to find a permutation of the string where no letter is followed by another letter and no digit is followed by another digit. That is, no two adjacent characters have the same type.\nReturn the reformatted string or return an empty string if it is impossible to reformat the string.\n","1997":"There are two kinds of threads: oxygen and hydrogen. Your goal is to group these threads to form water molecules.\nThere is a barrier where each thread has to wait until a complete molecule can be formed. Hydrogen and oxygen threads will be given releaseHydrogen and releaseOxygen methods respectively, which will allow them to pass the barrier. These threads should pass the barrier in groups of three, and they must immediately bond with each other to form a water molecule. You must guarantee that all the threads from one molecule bond before any other threads from the next molecule do.\nIn other words:\nIf an oxygen thread arrives at the barrier when no hydrogen threads are present, it must wait for two hydrogen threads.\nIf a hydrogen thread arrives at the barrier when no other threads are present, it must wait for an oxygen thread and another hydrogen thread.\nWe do not have to worry about matching the threads up explicitly; the threads do not necessarily know which other threads they are paired up with. The key is that threads pass the barriers in complete sets; thus, if we examine the sequence of threads that bind and divide them into groups of three, each group should contain one oxygen and two hydrogen threads.\nWrite synchronization code for oxygen and hydrogen molecules that enforces these constraints.\n","1998":"You have a set which contains all positive integers [1, 2, 3, 4, 5, ...].\nImplement the SmallestInfiniteSet class:\nSmallestInfiniteSet() Initializes the SmallestInfiniteSet object to contain all positive integers.\nint popSmallest() Removes and returns the smallest integer contained in the infinite set.\nvoid addBack(int num) Adds a positive integer num back into the infinite set, if it is not already in the infinite set.\n","1999":"Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.\nFor example, in the given tree above, the leaf value sequence is (6, 7, 4, 9, 8).\nTwo binary trees are considered leaf-similar if their leaf value sequence is the same.\nReturn true if and only if the two given trees with head nodes root1 and root2 are leaf-similar.\n","2000":"You are given two images, img1 and img2, represented as binary, square matrices of size n x n. A binary matrix has only 0s and 1s as values.\nWe translate one image however we choose by sliding all the 1 bits left, right, up, and\/or down any number of units. We then place it on top of the other image. We can then calculate the overlap by counting the number of positions that have a 1 in both images.\nNote also that a translation does not include any kind of rotation. Any 1 bits that are translated outside of the matrix borders are erased.\nReturn the largest possible overlap.\n","2001":"SQL Schema\nTable: Prices\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| product_id    | int     |\n| start_date    | date    |\n| end_date      | date    |\n| price         | int     |\n+---------------+---------+\n(product_id, start_date, end_date) is the primary key for this table.\nEach row of this table indicates the price of the product_id in the period from start_date to end_date.\nFor each product_id there will be no two overlapping periods. That means there will be no two intersecting periods for the same product_id.\n  Table: UnitsSold\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| product_id    | int     |\n| purchase_date | date    |\n| units         | int     |\n+---------------+---------+\nThere is no primary key for this table, it may contain duplicates.\nEach row of this table indicates the date, units, and product_id of each product sold. \n  Write an SQL query to find the average selling price for each product. average_price should be rounded to 2 decimal places.\nReturn the result table in any order.\nThe query result format is in the following example.\n","2002":"You are given a 0-indexed integer array nums. In one step, remove all elements nums[i] where nums[i - 1] > nums[i] for all 0 < i < nums.length.\nReturn the number of steps performed until nums becomes a non-decreasing array.\n","2003":"Given an input string (s) and a pattern (p), implement wildcard pattern matching with support for '?' and '*' where:\n'?' Matches any single character.\n'*' Matches any sequence of characters (including the empty sequence).\nThe matching should cover the entire input string (not partial).\n","2004":"Given an integer array nums, return the length of the longest strictly increasing\nsubsequence\n.\n","2005":"You are given two strings s1 and s2 of equal length. A string swap is an operation where you choose two indices in a string (not necessarily different) and swap the characters at these indices.\nReturn true if it is possible to make both strings equal by performing at most one string swap on exactly one of the strings. Otherwise, return false.\n","2006":"You are given a positive integer n.\nContinuously replace n with the sum of its prime factors.\nNote that if a prime factor divides n multiple times, it should be included in the sum as many times as it divides n.\nReturn the smallest value n will take on.\n","2007":"Given a string s, return the number of unique palindromes of length three that are a subsequence of s.\nNote that even if there are multiple ways to obtain the same subsequence, it is still only counted once.\nA palindrome is a string that reads the same forwards and backwards.\nA subsequence of a string is a new string generated from the original string with some characters (can be none) deleted without changing the relative order of the remaining characters.\nFor example, \"ace\" is a subsequence of \"abcde\".\n","2008":"Given a fixed-length integer array arr, duplicate each occurrence of zero, shifting the remaining elements to the right.\nNote that elements beyond the length of the original array are not written. Do the above modifications to the input array in place and do not return anything.\n","2009":"You are given an integer array cards where cards[i] represents the value of the ith card. A pair of cards are matching if the cards have the same value.\nReturn the minimum number of consecutive cards you have to pick up to have a pair of matching cards among the picked cards. If it is impossible to have matching cards, return -1.\n","2010":"Given two non-negative integers, num1 and num2 represented as string, return the sum of num1 and num2 as a string.\nYou must solve the problem without using any built-in library for handling large integers (such as BigInteger). You must also not convert the inputs to integers directly.\n","2011":"Given the root of a Binary Search Tree (BST), convert it to a Greater Tree such that every key of the original BST is changed to the original key plus the sum of all keys greater than the original key in BST.\nAs a reminder, a binary search tree is a tree that satisfies these constraints:\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n","2012":"You are given an integer n. There is an undirected graph with n nodes, numbered from 0 to n - 1. You are given a 2D integer array edges where edges[i] = [ai, bi] denotes that there exists an undirected edge connecting nodes ai and bi.\nReturn the number of pairs of different nodes that are unreachable from each other.\n","2013":"Given two integer arrays inorder and postorder where inorder is the inorder traversal of a binary tree and postorder is the postorder traversal of the same tree, construct and return the binary tree.\n","2014":"You are given a string s and an integer k. You can choose one of the first k letters of s and append it at the end of the string..\nReturn the lexicographically smallest string you could have after applying the mentioned step any number of moves.\n","2015":"In the universe Earth C-137, Rick discovered a special form of magnetic force between two balls if they are put in his new invented basket. Rick has n empty baskets, the ith basket is at position[i], Morty has m balls and needs to distribute the balls into the baskets such that the minimum magnetic force between any two balls is maximum.\nRick stated that magnetic force between two different balls at positions x and y is |x - y|.\nGiven the integer array position and the integer m. Return the required force.\n","2016":"There is an ATM machine that stores banknotes of 5 denominations: 20, 50, 100, 200, and 500 dollars. Initially the ATM is empty. The user can use the machine to deposit or withdraw any amount of money.\nWhen withdrawing, the machine prioritizes using banknotes of larger values.\nFor example, if you want to withdraw $300 and there are 2 $50 banknotes, 1 $100 banknote, and 1 $200 banknote, then the machine will use the $100 and $200 banknotes.\nHowever, if you try to withdraw $600 and there are 3 $200 banknotes and 1 $500 banknote, then the withdraw request will be rejected because the machine will first try to use the $500 banknote and then be unable to use banknotes to complete the remaining $100. Note that the machine is not allowed to use the $200 banknotes instead of the $500 banknote.\nImplement the ATM class:\nATM() Initializes the ATM object.\nvoid deposit(int[] banknotesCount) Deposits new banknotes in the order $20, $50, $100, $200, and $500.\nint[] withdraw(int amount) Returns an array of length 5 of the number of banknotes that will be handed to the user in the order $20, $50, $100, $200, and $500, and update the number of banknotes in the ATM after withdrawing. Returns [-1] if it is not possible (do not withdraw any banknotes in this case).\n","2017":"You are given an array pairs, where pairs[i] = [xi, yi], and:\nThere are no duplicates.\nxi < yi\nLet ways be the number of rooted trees that satisfy the following conditions:\nThe tree consists of nodes whose values appeared in pairs.\nA pair [xi, yi] exists in pairs if and only if xi is an ancestor of yi or yi is an ancestor of xi.\nNote: the tree does not have to be a binary tree.\nTwo ways are considered to be different if there is at least one node that has different parents in both ways.\nReturn:\n0 if ways == 0\n1 if ways == 1\n2 if ways > 1\nA rooted tree is a tree that has a single root node, and all edges are oriented to be outgoing from the root.\nAn ancestor of a node is any node on the path from the root to that node (excluding the node itself). The root has no ancestors.\n","2018":"A trie (pronounced as \"try\") or prefix tree is a tree data structure used to efficiently store and retrieve keys in a dataset of strings. There are various applications of this data structure, such as autocomplete and spellchecker.\nImplement the Trie class:\nTrie() Initializes the trie object.\nvoid insert(String word) Inserts the string word into the trie.\nboolean search(String word) Returns true if the string word is in the trie (i.e., was inserted before), and false otherwise.\nboolean startsWith(String prefix) Returns true if there is a previously inserted string word that has the prefix prefix, and false otherwise.\n","2019":"Given an array of integers arr, sort the array by performing a series of pancake flips.\nIn one pancake flip we do the following steps:\nChoose an integer k where 1 <= k <= arr.length.\nReverse the sub-array arr[0...k-1] (0-indexed).\nFor example, if arr = [3,2,1,4] and we performed a pancake flip choosing k = 3, we reverse the sub-array [3,2,1], so arr = [1,2,3,4] after the pancake flip at k = 3.\nReturn an array of the k-values corresponding to a sequence of pancake flips that sort arr. Any valid answer that sorts the array within 10 * arr.length flips will be judged as correct.\n","2020":"You are given the head of a singly linked-list. The list can be represented as:\nL0 \u2192 L1 \u2192 \u2026 \u2192 Ln - 1 \u2192 Ln\nReorder the list to be on the following form:\nL0 \u2192 Ln \u2192 L1 \u2192 Ln - 1 \u2192 L2 \u2192 Ln - 2 \u2192 \u2026\nYou may not modify the values in the list's nodes. Only nodes themselves may be changed.\n","2021":"You have a bomb to defuse, and your time is running out! Your informer will provide you with a circular array code of length of n and a key k.\nTo decrypt the code, you must replace every number. All the numbers are replaced simultaneously.\nIf k > 0, replace the ith number with the sum of the next k numbers.\nIf k < 0, replace the ith number with the sum of the previous k numbers.\nIf k == 0, replace the ith number with 0.\nAs code is circular, the next element of code[n-1] is code[0], and the previous element of code[0] is code[n-1].\nGiven the circular array code and an integer key k, return the decrypted code to defuse the bomb!\n","2022":"You are given the heads of two sorted linked lists list1 and list2.\nMerge the two lists in a one sorted list. The list should be made by splicing together the nodes of the first two lists.\nReturn the head of the merged linked list.\n","2023":"You are given an array of integers nums and an integer target.\nReturn the number of non-empty subsequences of nums such that the sum of the minimum and maximum element on it is less or equal to target. Since the answer may be too large, return it modulo 109 + 7.\n","2024":"Given an array of points where points[i] = [xi, yi] represents a point on the X-Y plane and an integer k, return the k closest points to the origin (0, 0).\nThe distance between two points on the X-Y plane is the Euclidean distance (i.e., \u221a(x1 - x2)2 + (y1 - y2)2).\nYou may return the answer in any order. The answer is guaranteed to be unique (except for the order that it is in).\n","2025":"Given an encoded string, return its decoded string.\nThe encoding rule is: k[encoded_string], where the encoded_string inside the square brackets is being repeated exactly k times. Note that k is guaranteed to be a positive integer.\nYou may assume that the input string is always valid; there are no extra white spaces, square brackets are well-formed, etc. Furthermore, you may assume that the original data does not contain any digits and that digits are only for those repeat numbers, k. For example, there will not be input like 3a or 2[4].\nThe test cases are generated so that the length of the output will never exceed 105.\n","2026":"You are given an integer array prices where prices[i] is the price of a given stock on the ith day.\nOn each day, you may decide to buy and\/or sell the stock. You can only hold at most one share of the stock at any time. However, you can buy it then immediately sell it on the same day.\nFind and return the maximum profit you can achieve.\n","2027":"You are given an integer array nums of length n and an integer numSlots such that 2 * numSlots >= n. There are numSlots slots numbered from 1 to numSlots.\nYou have to place all n integers into the slots such that each slot contains at most two numbers. The AND sum of a given placement is the sum of the bitwise AND of every number with its respective slot number.\nFor example, the AND sum of placing the numbers [1, 3] into slot 1 and [4, 6] into slot 2 is equal to (1 AND 1) + (3 AND 1) + (4 AND 2) + (6 AND 2) = 1 + 1 + 0 + 2 = 4.\nReturn the maximum possible AND sum of nums given numSlots slots.\n","2028":"Given an integer n, return the number of strings of length n that consist only of vowels (a, e, i, o, u) and are lexicographically sorted.\nA string s is lexicographically sorted if for all valid i, s[i] is the same as or comes before s[i+1] in the alphabet.\n","2029":"Given a characters array tasks, representing the tasks a CPU needs to do, where each letter represents a different task. Tasks could be done in any order. Each task is done in one unit of time. For each unit of time, the CPU could complete either one task or just be idle.\nHowever, there is a non-negative integer n that represents the cooldown period between two same tasks (the same letter in the array), that is that there must be at least n units of time between any two same tasks.\nReturn the least number of units of times that the CPU will take to finish all the given tasks.\n","2030":"SQL Schema\nTable: Project\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| project_id  | int     |\n| employee_id | int     |\n+-------------+---------+\n(project_id, employee_id) is the primary key of this table.\nemployee_id is a foreign key to Employee table.\nEach row of this table indicates that the employee with employee_id is working on the project with project_id.\n  Table: Employee\n+------------------+---------+\n| Column Name      | Type    |\n+------------------+---------+\n| employee_id      | int     |\n| name             | varchar |\n| experience_years | int     |\n+------------------+---------+\nemployee_id is the primary key of this table. It's guaranteed that experience_years is not NULL.\nEach row of this table contains information about one employee.\n  Write an SQL query that reports the average experience years of all the employees for each project, rounded to 2 digits.\nReturn the result table in any order.\nThe query result format is in the following example.\n","2031":"Given an integer array nums and a positive integer k, return the most competitive subsequence of nums of size k.\nAn array's subsequence is a resulting sequence obtained by erasing some (possibly zero) elements from the array.\nWe define that a subsequence a is more competitive than a subsequence b (of the same length) if in the first position where a and b differ, subsequence a has a number less than the corresponding number in b. For example, [1,3,4] is more competitive than [1,3,5] because the first position they differ is at the final number, and 4 is less than 5.\n","2032":"Given an array of positive integers arr (not necessarily distinct), return the\nlexicographically\nlargest permutation that is smaller than arr, that can be made with exactly one swap. If it cannot be done, then return the same array.\nNote that a swap exchanges the positions of two numbers arr[i] and arr[j]\n","2033":"Given an array of strings strs, return the length of the longest uncommon subsequence between them. If the longest uncommon subsequence does not exist, return -1.\nAn uncommon subsequence between an array of strings is a string that is a subsequence of one string but not the others.\nA subsequence of a string s is a string that can be obtained after deleting any number of characters from s.\nFor example, \"abc\" is a subsequence of \"aebdc\" because you can delete the underlined characters in \"aebdc\" to get \"abc\". Other subsequences of \"aebdc\" include \"aebdc\", \"aeb\", and \"\" (empty string).\n","2034":"There is a pizza with 3n slices of varying size, you and your friends will take slices of pizza as follows:\nYou will pick any pizza slice.\nYour friend Alice will pick the next slice in the anti-clockwise direction of your pick.\nYour friend Bob will pick the next slice in the clockwise direction of your pick.\nRepeat until there are no more slices of pizzas.\nGiven an integer array slices that represent the sizes of the pizza slices in a clockwise direction, return the maximum possible sum of slice sizes that you can pick.\n","2035":"You are given two integers, x and y, which represent your current location on a Cartesian grid: (x, y). You are also given an array points where each points[i] = [ai, bi] represents that a point exists at (ai, bi). A point is valid if it shares the same x-coordinate or the same y-coordinate as your location.\nReturn the index (0-indexed) of the valid point with the smallest Manhattan distance from your current location. If there are multiple, return the valid point with the smallest index. If there are no valid points, return -1.\nThe Manhattan distance between two points (x1, y1) and (x2, y2) is abs(x1 - x2) + abs(y1 - y2).\n","2036":"You have a function printNumber that can be called with an integer parameter and prints it to the console.\nFor example, calling printNumber(7) prints 7 to the console.\nYou are given an instance of the class ZeroEvenOdd that has three functions: zero, even, and odd. The same instance of ZeroEvenOdd will be passed to three different threads:\nThread A: calls zero() that should only output 0's.\nThread B: calls even() that should only output even numbers.\nThread C: calls odd() that should only output odd numbers.\nModify the given class to output the series \"010203040506...\" where the length of the series must be 2n.\nImplement the ZeroEvenOdd class:\nZeroEvenOdd(int n) Initializes the object with the number n that represents the numbers that should be printed.\nvoid zero(printNumber) Calls printNumber to output one zero.\nvoid even(printNumber) Calls printNumber to output one even number.\nvoid odd(printNumber) Calls printNumber to output one odd number.\n","2037":"Given the root of a binary search tree, and an integer k, return the kth smallest value (1-indexed) of all the values of the nodes in the tree.\n","2038":"You are given a 0-indexed integer array nums. Rearrange the values of nums according to the following rules:\nSort the values at odd indices of nums in non-increasing order.\nFor example, if nums = [4,1,2,3] before this step, it becomes [4,3,2,1] after. The values at odd indices 1 and 3 are sorted in non-increasing order.\nSort the values at even indices of nums in non-decreasing order.\nFor example, if nums = [4,1,2,3] before this step, it becomes [2,1,4,3] after. The values at even indices 0 and 2 are sorted in non-decreasing order.\nReturn the array formed after rearranging the values of nums.\n","2039":"There are three stones in different positions on the X-axis. You are given three integers a, b, and c, the positions of the stones.\nIn one move, you pick up a stone at an endpoint (i.e., either the lowest or highest position stone), and move it to an unoccupied position between those endpoints. Formally, let's say the stones are currently at positions x, y, and z with x < y < z. You pick up the stone at either position x or position z, and move that stone to an integer position k, with x < k < z and k != y.\nThe game ends when you cannot make any more moves (i.e., the stones are in three consecutive positions).\nReturn an integer array answer of length 2 where:\nanswer[0] is the minimum number of moves you can play, and\nanswer[1] is the maximum number of moves you can play.\n","2040":"You are given two integer arrays nums1 and nums2 of lengths m and n respectively. nums1 and nums2 represent the digits of two numbers. You are also given an integer k.\nCreate the maximum number of length k <= m + n from digits of the two numbers. The relative order of the digits from the same array must be preserved.\nReturn an array of the k digits representing the answer.\n","2041":"SQL Schema\nTable: Movies\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| movie_id      | int     |\n| title         | varchar |\n+---------------+---------+\nmovie_id is the primary key for this table.\ntitle is the name of the movie.\n  Table: Users\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| user_id       | int     |\n| name          | varchar |\n+---------------+---------+\nuser_id is the primary key for this table.\n  Table: MovieRating\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| movie_id      | int     |\n| user_id       | int     |\n| rating        | int     |\n| created_at    | date    |\n+---------------+---------+\n(movie_id, user_id) is the primary key for this table.\nThis table contains the rating of a movie by a user in their review.\ncreated_at is the user's review date. \n  Write an SQL query to:\nFind the name of the user who has rated the greatest number of movies. In case of a tie, return the lexicographically smaller user name.\nFind the movie name with the highest average rating in February 2020. In case of a tie, return the lexicographically smaller movie name.\nThe query result format is in the following example.\n","2042":"You are given a binary string s consisting only of zeroes and ones.\nA substring of s is considered balanced if all zeroes are before ones and the number of zeroes is equal to the number of ones inside the substring. Notice that the empty substring is considered a balanced substring.\nReturn the length of the longest balanced substring of s.\nA substring is a contiguous sequence of characters within a string.\n","2043":"You are given an array prices where prices[i] is the price of a given stock on the ith day.\nFind the maximum profit you can achieve. You may complete at most two transactions.\nNote: You may not engage in multiple transactions simultaneously (i.e., you must sell the stock before you buy again).\n","2044":"You are given a sorted integer array arr containing 1 and prime numbers, where all the integers of arr are unique. You are also given an integer k.\nFor every i and j where 0 <= i < j < arr.length, we consider the fraction arr[i] \/ arr[j].\nReturn the kth smallest fraction considered. Return your answer as an array of integers of size 2, where answer[0] == arr[i] and answer[1] == arr[j].\n","2045":"We have two special characters:\nThe first character can be represented by one bit 0.\nThe second character can be represented by two bits (10 or 11).\nGiven a binary array bits that ends with 0, return true if the last character must be a one-bit character.\n","2046":"Design a data structure that keeps track of the values in it and answers some queries regarding their frequencies.\nImplement the FrequencyTracker class.\nFrequencyTracker(): Initializes the FrequencyTracker object with an empty array initially.\nvoid add(int number): Adds number to the data structure.\nvoid deleteOne(int number): Deletes one occurrence of number from the data structure. The data structure may not contain number, and in this case nothing is deleted.\nbool hasFrequency(int frequency): Returns true if there is a number in the data structure that occurs frequency number of times, otherwise, it returns false.\n","2047":"There is an m x n grid with a ball. The ball is initially at the position [startRow, startColumn]. You are allowed to move the ball to one of the four adjacent cells in the grid (possibly out of the grid crossing the grid boundary). You can apply at most maxMove moves to the ball.\nGiven the five integers m, n, maxMove, startRow, startColumn, return the number of paths to move the ball out of the grid boundary. Since the answer can be very large, return it modulo 109 + 7.\n","2048":"Given an m x n 2D binary grid grid which represents a map of '1's (land) and '0's (water), return the number of islands.\nAn island is surrounded by water and is formed by connecting adjacent lands horizontally or vertically. You may assume all four edges of the grid are all surrounded by water.\n","2049":"A peak element is an element that is strictly greater than its neighbors.\nGiven a 0-indexed integer array nums, find a peak element, and return its index. If the array contains multiple peaks, return the index to any of the peaks.\nYou may imagine that nums[-1] = nums[n] = -\u221e. In other words, an element is always considered to be strictly greater than a neighbor that is outside the array.\nYou must write an algorithm that runs in O(log n) time.\n","2050":"SQL Schema\nTable: Tweets\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| tweet_id       | int     |\n| content        | varchar |\n+----------------+---------+\ntweet_id is the primary key for this table.\nThis table contains all the tweets in a social media app.\n  Write an SQL query to find the IDs of the invalid tweets. The tweet is invalid if the number of characters used in the content of the tweet is strictly greater than 15.\nReturn the result table in any order.\nThe query result format is in the following example.\n","2051":"Given the binary representation of an integer as a string s, return the number of steps to reduce it to 1 under the following rules:\nIf the current number is even, you have to divide it by 2.\nIf the current number is odd, you have to add 1 to it.\nIt is guaranteed that you can always reach one for all test cases.\n","2052":"You are given a 0-indexed integer array nums. In one operation, you may do the following:\nChoose two integers in nums that are equal.\nRemove both integers from nums, forming a pair.\nThe operation is done on nums as many times as possible.\nReturn a 0-indexed integer array answer of size 2 where answer[0] is the number of pairs that are formed and answer[1] is the number of leftover integers in nums after doing the operation as many times as possible.\n","2053":"You have n boxes. You are given a binary string boxes of length n, where boxes[i] is '0' if the ith box is empty, and '1' if it contains one ball.\nIn one operation, you can move one ball from a box to an adjacent box. Box i is adjacent to box j if abs(i - j) == 1. Note that after doing so, there may be more than one ball in some boxes.\nReturn an array answer of size n, where answer[i] is the minimum number of operations needed to move all the balls to the ith box.\nEach answer[i] is calculated considering the initial state of the boxes.\n","2054":"You are given an integer array nums. You need to create a 2D array from nums satisfying the following conditions:\nThe 2D array should contain only the elements of the array nums.\nEach row in the 2D array contains distinct integers.\nThe number of rows in the 2D array should be minimal.\nReturn the resulting array. If there are multiple answers, return any of them.\nNote that the 2D array can have a different number of elements on each row.\n","2055":"The k-beauty of an integer num is defined as the number of substrings of num when it is read as a string that meet the following conditions:\nIt has a length of k.\nIt is a divisor of num.\nGiven integers num and k, return the k-beauty of num.\nNote:\nLeading zeros are allowed.\n0 is not a divisor of any value.\nA substring is a contiguous sequence of characters in a string.\n","2056":"Given two strings str1 and str2, return the shortest string that has both str1 and str2 as subsequences. If there are multiple valid strings, return any of them.\nA string s is a subsequence of string t if deleting some number of characters from t (possibly 0) results in the string s.\n","2057":"You are given an m x n integer matrix grid where each cell is either 0 (empty) or 1 (obstacle). You can move up, down, left, or right from and to an empty cell in one step.\nReturn the minimum number of steps to walk from the upper left corner (0, 0) to the lower right corner (m - 1, n - 1) given that you can eliminate at most k obstacles. If it is not possible to find such walk return -1.\n","2058":"Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.\nNote that you must do this in-place without making a copy of the array.\n","2059":"We have two arrays arr1 and arr2 which are initially empty. You need to add positive integers to them such that they satisfy all the following conditions:\narr1 contains uniqueCnt1 distinct positive integers, each of which is not divisible by divisor1.\narr2 contains uniqueCnt2 distinct positive integers, each of which is not divisible by divisor2.\nNo integer is present in both arr1 and arr2.\nGiven divisor1, divisor2, uniqueCnt1, and uniqueCnt2, return the minimum possible maximum integer that can be present in either array.\n","2060":"A width x height grid is on an XY-plane with the bottom-left cell at (0, 0) and the top-right cell at (width - 1, height - 1). The grid is aligned with the four cardinal directions (\"North\", \"East\", \"South\", and \"West\"). A robot is initially at cell (0, 0) facing direction \"East\".\nThe robot can be instructed to move for a specific number of steps. For each step, it does the following.\nAttempts to move forward one cell in the direction it is facing.\nIf the cell the robot is moving to is out of bounds, the robot instead turns 90 degrees counterclockwise and retries the step.\nAfter the robot finishes moving the number of steps required, it stops and awaits the next instruction.\nImplement the Robot class:\nRobot(int width, int height) Initializes the width x height grid with the robot at (0, 0) facing \"East\".\nvoid step(int num) Instructs the robot to move forward num steps.\nint[] getPos() Returns the current cell the robot is at, as an array of length 2, [x, y].\nString getDir() Returns the current direction of the robot, \"North\", \"East\", \"South\", or \"West\".\n","2061":"There are n rings and each ring is either red, green, or blue. The rings are distributed across ten rods labeled from 0 to 9.\nYou are given a string rings of length 2n that describes the n rings that are placed onto the rods. Every two characters in rings forms a color-position pair that is used to describe each ring where:\nThe first character of the ith pair denotes the ith ring's color ('R', 'G', 'B').\nThe second character of the ith pair denotes the rod that the ith ring is placed on ('0' to '9').\nFor example, \"R3G2B1\" describes n == 3 rings: a red ring placed onto the rod labeled 3, a green ring placed onto the rod labeled 2, and a blue ring placed onto the rod labeled 1.\nReturn the number of rods that have all three colors of rings on them.\n","2062":"A password is said to be strong if it satisfies all the following criteria:\nIt has at least 8 characters.\nIt contains at least one lowercase letter.\nIt contains at least one uppercase letter.\nIt contains at least one digit.\nIt contains at least one special character. The special characters are the characters in the following string: \"!@#$%^&*()-+\".\nIt does not contain 2 of the same character in adjacent positions (i.e., \"aab\" violates this condition, but \"aba\" does not).\nGiven a string password, return true if it is a strong password. Otherwise, return false.\n","2063":"The min-product of an array is equal to the minimum value in the array multiplied by the array's sum.\nFor example, the array [3,2,5] (minimum value is 2) has a min-product of 2 * (3+2+5) = 2 * 10 = 20.\nGiven an array of integers nums, return the maximum min-product of any non-empty subarray of nums. Since the answer may be large, return it modulo 109 + 7.\nNote that the min-product should be maximized before performing the modulo operation. Testcases are generated such that the maximum min-product without modulo will fit in a 64-bit signed integer.\nA subarray is a contiguous part of an array.\n","2064":"Given a non-empty array of integers nums, every element appears twice except for one. Find that single one.\nYou must implement a solution with a linear runtime complexity and use only constant extra space.\n","2065":"Given a m x n binary matrix mat, find the 0-indexed position of the row that contains the maximum count of ones, and the number of ones in that row.\nIn case there are multiple rows that have the maximum count of ones, the row with the smallest row number should be selected.\nReturn an array containing the index of the row, and the number of ones in it.\n","2066":"Given an integer array arr, return the mean of the remaining integers after removing the smallest 5% and the largest 5% of the elements.\nAnswers within 10-5 of the actual answer will be considered accepted.\n","2067":"You are given a string s and a robot that currently holds an empty string t. Apply one of the following operations until s and t are both empty:\nRemove the first character of a string s and give it to the robot. The robot will append this character to the string t.\nRemove the last character of a string t and give it to the robot. The robot will write this character on paper.\nReturn the lexicographically smallest string that can be written on the paper.\n","2068":"You are given a 0-indexed 2D integer array pairs where pairs[i] = [starti, endi]. An arrangement of pairs is valid if for every index i where 1 <= i < pairs.length, we have endi-1 == starti.\nReturn any valid arrangement of pairs.\nNote: The inputs will be generated such that there exists a valid arrangement of pairs.\n","2069":"The power of the string is the maximum length of a non-empty substring that contains only one unique character.\nGiven a string s, return the power of s.\n","2070":"You are building a string s of length n one character at a time, prepending each new character to the front of the string. The strings are labeled from 1 to n, where the string with length i is labeled si.\nFor example, for s = \"abaca\", s1 == \"a\", s2 == \"ca\", s3 == \"aca\", etc.\nThe score of si is the length of the longest common prefix between si and sn (Note that s == sn).\nGiven the final string s, return the sum of the score of every si.\n","2071":"There are n items each belonging to zero or one of m groups where group[i] is the group that the i-th item belongs to and it's equal to -1 if the i-th item belongs to no group. The items and the groups are zero indexed. A group can have no item belonging to it.\nReturn a sorted list of the items such that:\nThe items that belong to the same group are next to each other in the sorted list.\nThere are some relations between these items where beforeItems[i] is a list containing all the items that should come before the i-th item in the sorted array (to the left of the i-th item).\nReturn any solution if there is more than one solution and return an empty list if there is no solution.\n","2072":"Design a data structure to find the frequency of a given value in a given subarray.\nThe frequency of a value in a subarray is the number of occurrences of that value in the subarray.\nImplement the RangeFreqQuery class:\nRangeFreqQuery(int[] arr) Constructs an instance of the class with the given 0-indexed integer array arr.\nint query(int left, int right, int value) Returns the frequency of value in the subarray arr[left...right].\nA subarray is a contiguous sequence of elements within an array. arr[left...right] denotes the subarray that contains the elements of nums between indices left and right (inclusive).\n","2073":"Given the root of a binary tree, return all duplicate subtrees.\nFor each kind of duplicate subtrees, you only need to return the root node of any one of them.\nTwo trees are duplicate if they have the same structure with the same node values.\n","2074":"You are given a 2D array of axis-aligned rectangles. Each rectangle[i] = [xi1, yi1, xi2, yi2] denotes the ith rectangle where (xi1, yi1) are the coordinates of the bottom-left corner, and (xi2, yi2) are the coordinates of the top-right corner.\nCalculate the total area covered by all rectangles in the plane. Any area covered by two or more rectangles should only be counted once.\nReturn the total area. Since the answer may be too large, return it modulo 109 + 7.\n","2075":"You are given a 2D integer array intervals where intervals[i] = [starti, endi] represents all the integers from starti to endi inclusively.\nA containing set is an array nums where each interval from intervals has at least two integers in nums.\nFor example, if intervals = [[1,3], [3,7], [8,9]], then [1,2,4,7,8,9] and [2,3,4,8,9] are containing sets.\nReturn the minimum possible size of a containing set.\n","2076":"You are given a 0-indexed m x n binary matrix grid. You can move from a cell (row, col) to any of the cells (row + 1, col) or (row, col + 1) that has the value 1. The matrix is disconnected if there is no path from (0, 0) to (m - 1, n - 1).\nYou can flip the value of at most one (possibly none) cell. You cannot flip the cells (0, 0) and (m - 1, n - 1).\nReturn true if it is possible to make the matrix disconnect or false otherwise.\nNote that flipping a cell changes its value from 0 to 1 or from 1 to 0.\n","2077":"You have information about n different recipes. You are given a string array recipes and a 2D string array ingredients. The ith recipe has the name recipes[i], and you can create it if you have all the needed ingredients from ingredients[i]. Ingredients to a recipe may need to be created from other recipes, i.e., ingredients[i] may contain a string that is in recipes.\nYou are also given a string array supplies containing all the ingredients that you initially have, and you have an infinite supply of all of them.\nReturn a list of all the recipes that you can create. You may return the answer in any order.\nNote that two recipes may contain each other in their ingredients.\n","2078":"Given an array of integers citations where citations[i] is the number of citations a researcher received for their ith paper and citations is sorted in ascending order, return the researcher's h-index.\nAccording to the definition of h-index on Wikipedia: The h-index is defined as the maximum value of h such that the given researcher has published at least h papers that have each been cited at least h times.\nYou must write an algorithm that runs in logarithmic time.\n","2079":"You may recall that an array arr is a mountain array if and only if:\narr.length >= 3\nThere exists some index i (0-indexed) with 0 < i < arr.length - 1 such that:\narr[0] < arr[1] < ... < arr[i - 1] < arr[i]\narr[i] > arr[i + 1] > ... > arr[arr.length - 1]\nGiven an integer array arr, return the length of the longest subarray, which is a mountain. Return 0 if there is no mountain subarray.\n","2080":"Design a special dictionary that searches the words in it by a prefix and a suffix.\nImplement the WordFilter class:\nWordFilter(string[] words) Initializes the object with the words in the dictionary.\nf(string pref, string suff) Returns the index of the word in the dictionary, which has the prefix pref and the suffix suff. If there is more than one valid index, return the largest of them. If there is no such word in the dictionary, return -1.\n","2081":"An integer n is strictly palindromic if, for every base b between 2 and n - 2 (inclusive), the string representation of the integer n in base b is palindromic.\nGiven an integer n, return true if n is strictly palindromic and false otherwise.\nA string is palindromic if it reads the same forward and backward.\n","2082":"Given head, the head of a linked list, determine if the linked list has a cycle in it.\nThere is a cycle in a linked list if there is some node in the list that can be reached again by continuously following the next pointer. Internally, pos is used to denote the index of the node that tail's next pointer is connected to. Note that pos is not passed as a parameter.\nReturn true if there is a cycle in the linked list. Otherwise, return false.\n","2083":"Given an array nums with n integers, your task is to check if it could become non-decreasing by modifying at most one element.\nWe define an array is non-decreasing if nums[i] <= nums[i + 1] holds for every i (0-based) such that (0 <= i <= n - 2).\n","2084":"You are given an m x n binary matrix mat of 1's (representing soldiers) and 0's (representing civilians). The soldiers are positioned in front of the civilians. That is, all the 1's will appear to the left of all the 0's in each row.\nA row i is weaker than a row j if one of the following is true:\nThe number of soldiers in row i is less than the number of soldiers in row j.\nBoth rows have the same number of soldiers and i < j.\nReturn the indices of the k weakest rows in the matrix ordered from weakest to strongest.\n","2085":"A split of an integer array is good if:\nThe array is split into three non-empty contiguous subarrays - named left, mid, right respectively from left to right.\nThe sum of the elements in left is less than or equal to the sum of the elements in mid, and the sum of the elements in mid is less than or equal to the sum of the elements in right.\nGiven nums, an array of non-negative integers, return the number of good ways to split nums. As the number may be too large, return it modulo 109 + 7.\n","2086":"In an infinite binary tree where every node has two children, the nodes are labelled in row order.\nIn the odd numbered rows (ie., the first, third, fifth,...), the labelling is left to right, while in the even numbered rows (second, fourth, sixth,...), the labelling is right to left.\nGiven the label of a node in this tree, return the labels in the path from the root of the tree to the node with that label.\n","2087":"You are given an integer array deck. There is a deck of cards where every card has a unique integer. The integer on the ith card is deck[i].\nYou can order the deck in any order you want. Initially, all the cards start face down (unrevealed) in one deck.\nYou will do the following steps repeatedly until all cards are revealed:\nTake the top card of the deck, reveal it, and take it out of the deck.\nIf there are still cards in the deck then put the next top card of the deck at the bottom of the deck.\nIf there are still unrevealed cards, go back to step 1. Otherwise, stop.\nReturn an ordering of the deck that would reveal the cards in increasing order.\nNote that the first entry in the answer is considered to be the top of the deck.\n","2088":"Given a list of non-negative integers nums, arrange them such that they form the largest number and return it.\nSince the result may be very large, so you need to return a string instead of an integer.\n","2089":"You are given a 0-indexed integer array nums of length n and an integer k. In an operation, you can choose an element and multiply it by 2.\nReturn the maximum possible value of nums[0] | nums[1] | ... | nums[n - 1] that can be obtained after applying the operation on nums at most k times.\nNote that a | b denotes the bitwise or between two integers a and b.\n","2090":"Suppose an array of length n sorted in ascending order is rotated between 1 and n times. For example, the array nums = [0,1,2,4,5,6,7] might become:\n[4,5,6,7,0,1,2] if it was rotated 4 times.\n[0,1,2,4,5,6,7] if it was rotated 7 times.\nNotice that rotating an array [a[0], a[1], a[2], ..., a[n-1]] 1 time results in the array [a[n-1], a[0], a[1], a[2], ..., a[n-2]].\nGiven the sorted rotated array nums of unique elements, return the minimum element of this array.\nYou must write an algorithm that runs in O(log n) time.\n","2091":"Given two strings s and t, return true if t is an anagram of s, and false otherwise.\nAn Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.\n","2092":"You are given a 0-indexed integer array forts of length n representing the positions of several forts. forts[i] can be -1, 0, or 1 where:\n-1 represents there is no fort at the ith position.\n0 indicates there is an enemy fort at the ith position.\n1 indicates the fort at the ith the position is under your command.\nNow you have decided to move your army from one of your forts at position i to an empty position j such that:\n0 <= i, j <= n - 1\nThe army travels over enemy forts only. Formally, for all k where min(i,j) < k < max(i,j), forts[k] == 0.\nWhile moving the army, all the enemy forts that come in the way are captured.\nReturn the maximum number of enemy forts that can be captured. In case it is impossible to move your army, or you do not have any fort under your command, return 0.\n","2093":"Suppose LeetCode will start its IPO soon. In order to sell a good price of its shares to Venture Capital, LeetCode would like to work on some projects to increase its capital before the IPO. Since it has limited resources, it can only finish at most k distinct projects before the IPO. Help LeetCode design the best way to maximize its total capital after finishing at most k distinct projects.\nYou are given n projects where the ith project has a pure profit profits[i] and a minimum capital of capital[i] is needed to start it.\nInitially, you have w capital. When you finish a project, you will obtain its pure profit and the profit will be added to your total capital.\nPick a list of at most k distinct projects from given projects to maximize your final capital, and return the final maximized capital.\nThe answer is guaranteed to fit in a 32-bit signed integer.\n","2094":"There are n computers numbered from 0 to n - 1 connected by ethernet cables connections forming a network where connections[i] = [ai, bi] represents a connection between computers ai and bi. Any computer can reach any other computer directly or indirectly through the network.\nYou are given an initial computer network connections. You can extract certain cables between two directly connected computers, and place them between any pair of disconnected computers to make them directly connected.\nReturn the minimum number of times you need to do this in order to make all the computers connected. If it is not possible, return -1.\n","2095":"Given the array nums consisting of 2n elements in the form [x1,x2,...,xn,y1,y2,...,yn].\nReturn the array in the form [x1,y1,x2,y2,...,xn,yn].\n","2096":"The count-and-say sequence is a sequence of digit strings defined by the recursive formula:\ncountAndSay(1) = \"1\"\ncountAndSay(n) is the way you would \"say\" the digit string from countAndSay(n-1), which is then converted into a different digit string.\nTo determine how you \"say\" a digit string, split it into the minimal number of substrings such that each substring contains exactly one unique digit. Then for each substring, say the number of digits, then say the digit. Finally, concatenate every said digit.\nFor example, the saying and conversion for digit string \"3322251\":\nGiven a positive integer n, return the nth term of the count-and-say sequence.\n","2097":"There is a 1 million by 1 million grid on an XY-plane, and the coordinates of each grid square are (x, y).\nWe start at the source = [sx, sy] square and want to reach the target = [tx, ty] square. There is also an array of blocked squares, where each blocked[i] = [xi, yi] represents a blocked square with coordinates (xi, yi).\nEach move, we can walk one square north, east, south, or west if the square is not in the array of blocked squares. We are also not allowed to walk outside of the grid.\nReturn true if and only if it is possible to reach the target square from the source square through a sequence of valid moves.\n","2098":"You are given a 0-indexed integer array nums representing the strength of some heroes. The power of a group of heroes is defined as follows:\nLet i0, i1, ... ,ik be the indices of the heroes in a group. Then, the power of this group is max(nums[i0], nums[i1], ... ,nums[ik])2 * min(nums[i0], nums[i1], ... ,nums[ik]).\nReturn the sum of the power of all non-empty groups of heroes possible. Since the sum could be very large, return it modulo 109 + 7.\n","2099":"Given a string path, where path[i] = 'N', 'S', 'E' or 'W', each representing moving one unit north, south, east, or west, respectively. You start at the origin (0, 0) on a 2D plane and walk on the path specified by path.\nReturn true if the path crosses itself at any point, that is, if at any time you are on a location you have previously visited. Return false otherwise.\n","2100":"We are playing the Guess Game. The game is as follows:\nI pick a number from 1 to n. You have to guess which number I picked.\nEvery time you guess wrong, I will tell you whether the number I picked is higher or lower than your guess.\nYou call a pre-defined API int guess(int num), which returns three possible results:\n-1: Your guess is higher than the number I picked (i.e. num > pick).\n1: Your guess is lower than the number I picked (i.e. num < pick).\n0: your guess is equal to the number I picked (i.e. num == pick).\nReturn the number that I picked.\n","2101":"Given an array arr, replace every element in that array with the greatest element among the elements to its right, and replace the last element with -1.\nAfter doing so, return the array.\n","2102":"Given a string s and a character c that occurs in s, return an array of integers answer where answer.length == s.length and answer[i] is the distance from index i to the closest occurrence of character c in s.\nThe distance between two indices i and j is abs(i - j), where abs is the absolute value function.\n","2103":"Given a list of dominoes, dominoes[i] = [a, b] is equivalent to dominoes[j] = [c, d] if and only if either (a == c and b == d), or (a == d and b == c) - that is, one domino can be rotated to be equal to another domino.\nReturn the number of pairs (i, j) for which 0 <= i < j < dominoes.length, and dominoes[i] is equivalent to dominoes[j].\n","2104":"A Binary Matrix is a matrix in which all the elements are either 0 or 1.\nGiven quadTree1 and quadTree2. quadTree1 represents a n * n binary matrix and quadTree2 represents another n * n binary matrix.\nReturn a Quad-Tree representing the n * n binary matrix which is the result of logical bitwise OR of the two binary matrixes represented by quadTree1 and quadTree2.\nNotice that you can assign the value of a node to True or False when isLeaf is False, and both are accepted in the answer.\nA Quad-Tree is a tree data structure in which each internal node has exactly four children. Besides, each node has two attributes:\nval: True if the node represents a grid of 1's or False if the node represents a grid of 0's.\nisLeaf: True if the node is leaf node on the tree or False if the node has the four children.\nclass Node {\n    public boolean val;\n    public boolean isLeaf;\n    public Node topLeft;\n    public Node topRight;\n    public Node bottomLeft;\n    public Node bottomRight;\n}\nWe can construct a Quad-Tree from a two-dimensional area using the following steps:\nIf the current grid has the same value (i.e all 1's or all 0's) set isLeaf True and set val to the value of the grid and set the four children to Null and stop.\nIf the current grid has different values, set isLeaf to False and set val to any value and divide the current grid into four sub-grids as shown in the photo.\nRecurse for each of the children with the proper sub-grid.\nIf you want to know more about the Quad-Tree, you can refer to the wiki.\nQuad-Tree format:\nThe input\/output represents the serialized format of a Quad-Tree using level order traversal, where null signifies a path terminator where no node exists below.\nIt is very similar to the serialization of the binary tree. The only difference is that the node is represented as a list [isLeaf, val].\nIf the value of isLeaf or val is True we represent it as 1 in the list [isLeaf, val] and if the value of isLeaf or val is False we represent it as 0.\n","2105":"Given a string s, reverse only all the vowels in the string and return it.\nThe vowels are 'a', 'e', 'i', 'o', and 'u', and they can appear in both lower and upper cases, more than once.\n","2106":"You are given a binary string binary consisting of only 0's or 1's. You can apply each of the following operations any number of times:\nOperation 1: If the number contains the substring \"00\", you can replace it with \"10\".\nFor example, \"00010\" -> \"10010\"\nOperation 2: If the number contains the substring \"10\", you can replace it with \"01\".\nFor example, \"00010\" -> \"00001\"\nReturn the maximum binary string you can obtain after any number of operations. Binary string x is greater than binary string y if x's decimal representation is greater than y's decimal representation.\n","2107":"Create a class ArrayWrapper that accepts an array of integers in it's constructor. This class should have two features:\nWhen two instances of this class are added together with the + operator, the resulting value is the sum of all the elements in both arrays.\nWhen the String() function is called on the instance, it will return a comma separated string surrounded by brackets. For example, [1,2,3].\n","2108":"The chess knight has a unique movement, it may move two squares vertically and one square horizontally, or two squares horizontally and one square vertically (with both forming the shape of an L). The possible movements of chess knight are shown in this diagaram:\nA chess knight can move as indicated in the chess diagram below:\nWe have a chess knight and a phone pad as shown below, the knight can only stand on a numeric cell (i.e. blue cell).\nGiven an integer n, return how many distinct phone numbers of length n we can dial.\nYou are allowed to place the knight on any numeric cell initially and then you should perform n - 1 jumps to dial a number of length n. All jumps should be valid knight jumps.\nAs the answer may be very large, return the answer modulo 109 + 7.\n","2109":"Given a binary tree root, return the maximum sum of all keys of any sub-tree which is also a Binary Search Tree (BST).\nAssume a BST is defined as follows:\nThe left subtree of a node contains only nodes with keys less than the node's key.\nThe right subtree of a node contains only nodes with keys greater than the node's key.\nBoth the left and right subtrees must also be binary search trees.\n","2110":"Given two integers num1 and num2, return the sum of the two integers.\n","2111":"Given an integer array nums sorted in non-decreasing order, remove the duplicates in-place such that each unique element appears only once. The relative order of the elements should be kept the same. Then return the number of unique elements in nums.\nConsider the number of unique elements of nums to be k, to get accepted, you need to do the following things:\nChange the array nums such that the first k elements of nums contain the unique elements in the order they were present in nums initially. The remaining elements of nums are not important as well as the size of nums.\nReturn k.\nCustom Judge:\nThe judge will test your solution with the following code:\nint[] nums = [...]; \/\/ Input array\nint[] expectedNums = [...]; \/\/ The expected answer with correct length\n\nint k = removeDuplicates(nums); \/\/ Calls your implementation\n\nassert k == expectedNums.length;\nfor (int i = 0; i < k; i++) {\n    assert nums[i] == expectedNums[i];\n}\nIf all assertions pass, then your solution will be accepted.\n","2112":"Given a positive integer n, you can apply one of the following operations:\nIf n is even, replace n with n \/ 2.\nIf n is odd, replace n with either n + 1 or n - 1.\nReturn the minimum number of operations needed for n to become 1.\n","2113":"Reversing an integer means to reverse all its digits.\nFor example, reversing 2021 gives 1202. Reversing 12300 gives 321 as the leading zeros are not retained.\nGiven an integer num, reverse num to get reversed1, then reverse reversed1 to get reversed2. Return true if reversed2 equals num. Otherwise return false.\n","2114":"You are given an m x n integer matrix points (0-indexed). Starting with 0 points, you want to maximize the number of points you can get from the matrix.\nTo gain points, you must pick one cell in each row. Picking the cell at coordinates (r, c) will add points[r][c] to your score.\nHowever, you will lose points if you pick a cell too far from the cell that you picked in the previous row. For every two adjacent rows r and r + 1 (where 0 <= r < m - 1), picking cells at coordinates (r, c1) and (r + 1, c2) will subtract abs(c1 - c2) from your score.\nReturn the maximum number of points you can achieve.\nabs(x) is defined as:\nx for x >= 0.\n-x for x < 0.\n","2115":"Given a list of folders folder, return the folders after removing all sub-folders in those folders. You may return the answer in any order.\nIf a folder[i] is located within another folder[j], it is called a sub-folder of it.\nThe format of a path is one or more concatenated strings of the form: '\/' followed by one or more lowercase English letters.\nFor example, \"\/leetcode\" and \"\/leetcode\/problems\" are valid paths while an empty string and \"\/\" are not.\n","2116":"Given an input string s, reverse the order of the words.\nA word is defined as a sequence of non-space characters. The words in s will be separated by at least one space.\nReturn a string of the words in reverse order concatenated by a single space.\nNote that s may contain leading or trailing spaces or multiple spaces between two words. The returned string should only have a single space separating the words. Do not include any extra spaces.\n","2117":"A magical string s consists of only '1' and '2' and obeys the following rules:\nThe string s is magical because concatenating the number of contiguous occurrences of characters '1' and '2' generates the string s itself.\nThe first few elements of s is s = \"1221121221221121122\u2026\u2026\". If we group the consecutive 1's and 2's in s, it will be \"1 22 11 2 1 22 1 22 11 2 11 22 ......\" and the occurrences of 1's or 2's in each group are \"1 2 2 1 1 2 1 2 2 1 2 2 ......\". You can see that the occurrence sequence is s itself.\nGiven an integer n, return the number of 1's in the first n number in the magical string s.\n","2118":"You are given an m x n integer matrix grid.\nWe define an hourglass as a part of the matrix with the following form:\nReturn the maximum sum of the elements of an hourglass.\nNote that an hourglass cannot be rotated and must be entirely contained within the matrix.\n","2119":"Given a positive integer n, find and return the longest distance between any two adjacent 1's in the binary representation of n. If there are no two adjacent 1's, return 0.\nTwo 1's are adjacent if there are only 0's separating them (possibly no 0's). The distance between two 1's is the absolute difference between their bit positions. For example, the two 1's in \"1001\" have a distance of 3.\n","2120":"Given an m x n matrix mat, return an array of all the elements of the array in a diagonal order.\n","2121":"In a garden represented as an infinite 2D grid, there is an apple tree planted at every integer coordinate. The apple tree planted at an integer coordinate (i, j) has |i| + |j| apples growing on it.\nYou will buy an axis-aligned square plot of land that is centered at (0, 0).\nGiven an integer neededApples, return the minimum perimeter of a plot such that at least neededApples apples are inside or on the perimeter of that plot.\nThe value of |x| is defined as:\nx if x >= 0\n-x if x < 0\n","2122":"Given a string s, find two disjoint palindromic subsequences of s such that the product of their lengths is maximized. The two subsequences are disjoint if they do not both pick a character at the same index.\nReturn the maximum possible product of the lengths of the two palindromic subsequences.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters. A string is palindromic if it reads the same forward and backward.\n","2123":"Given an array nums of positive integers. Your task is to select some subset of nums, multiply each element by an integer and add all these numbers. The array is said to be good if you can obtain a sum of 1 from the array by any possible subset and multiplicand.\nReturn True if the array is good otherwise return False.\n","2124":"In a string s of lowercase letters, these letters form consecutive groups of the same character.\nFor example, a string like s = \"abbxxxxzyy\" has the groups \"a\", \"bb\", \"xxxx\", \"z\", and \"yy\".\nA group is identified by an interval [start, end], where start and end denote the start and end indices (inclusive) of the group. In the above example, \"xxxx\" has the interval [3,6].\nA group is considered large if it has 3 or more characters.\nReturn the intervals of every large group sorted in increasing order by start index.\n","2125":"Given an integer array nums, find three numbers whose product is maximum and return the maximum product.\n","2126":"Given two strings ransomNote and magazine, return true if ransomNote can be constructed by using the letters from magazine and false otherwise.\nEach letter in magazine can only be used once in ransomNote.\n","2127":"There is an integer array perm that is a permutation of the first n positive integers, where n is always odd.\nIt was encoded into another integer array encoded of length n - 1, such that encoded[i] = perm[i] XOR perm[i + 1]. For example, if perm = [1,3,2], then encoded = [2,1].\nGiven the encoded array, return the original array perm. It is guaranteed that the answer exists and is unique.\n","2128":"Given a function fn, return a curried version of that function.\nA curried function is a function that accepts fewer or an equal number of parameters as the original function and returns either another curried function or the same value the original function would have returned.\nIn practical terms, if you called the original function like sum(1,2,3), you would call the curried version like csum(1)(2)(3), csum(1)(2,3), csum(1,2)(3), or csum(1,2,3). All these methods of calling the curried function should return the same value as the original.\n","2129":"Due to a bug, there are many duplicate folders in a file system. You are given a 2D array paths, where paths[i] is an array representing an absolute path to the ith folder in the file system.\nFor example, [\"one\", \"two\", \"three\"] represents the path \"\/one\/two\/three\".\nTwo folders (not necessarily on the same level) are identical if they contain the same non-empty set of identical subfolders and underlying subfolder structure. The folders do not need to be at the root level to be identical. If two or more folders are identical, then mark the folders as well as all their subfolders.\nFor example, folders \"\/a\" and \"\/b\" in the file structure below are identical. They (as well as their subfolders) should all be marked:\n\/a\n\/a\/x\n\/a\/x\/y\n\/a\/z\n\/b\n\/b\/x\n\/b\/x\/y\n\/b\/z\nHowever, if the file structure also included the path \"\/b\/w\", then the folders \"\/a\" and \"\/b\" would not be identical. Note that \"\/a\/x\" and \"\/b\/x\" would still be considered identical even with the added folder.\nOnce all the identical folders and their subfolders have been marked, the file system will delete all of them. The file system only runs the deletion once, so any folders that become identical after the initial deletion are not deleted.\nReturn the 2D array ans containing the paths of the remaining folders after deleting all the marked folders. The paths may be returned in any order.\n","2130":"A string originalText is encoded using a slanted transposition cipher to a string encodedText with the help of a matrix having a fixed number of rows rows.\noriginalText is placed first in a top-left to bottom-right manner.\nThe blue cells are filled first, followed by the red cells, then the yellow cells, and so on, until we reach the end of originalText. The arrow indicates the order in which the cells are filled. All empty cells are filled with ' '. The number of columns is chosen such that the rightmost column will not be empty after filling in originalText.\nencodedText is then formed by appending all characters of the matrix in a row-wise fashion.\nThe characters in the blue cells are appended first to encodedText, then the red cells, and so on, and finally the yellow cells. The arrow indicates the order in which the cells are accessed.\nFor example, if originalText = \"cipher\" and rows = 3, then we encode it in the following manner:\nThe blue arrows depict how originalText is placed in the matrix, and the red arrows denote the order in which encodedText is formed. In the above example, encodedText = \"ch ie pr\".\nGiven the encoded string encodedText and number of rows rows, return the original string originalText.\nNote: originalText does not have any trailing spaces ' '. The test cases are generated such that there is only one possible originalText.\n","2131":"You are entering a competition, and are given two positive integers initialEnergy and initialExperience denoting your initial energy and initial experience respectively.\nYou are also given two 0-indexed integer arrays energy and experience, both of length n.\nYou will face n opponents in order. The energy and experience of the ith opponent is denoted by energy[i] and experience[i] respectively. When you face an opponent, you need to have both strictly greater experience and energy to defeat them and move to the next opponent if available.\nDefeating the ith opponent increases your experience by experience[i], but decreases your energy by energy[i].\nBefore starting the competition, you can train for some number of hours. After each hour of training, you can either choose to increase your initial experience by one, or increase your initial energy by one.\nReturn the minimum number of training hours required to defeat all n opponents.\n","2132":"Given two arrays of integers nums and index. Your task is to create target array under the following rules:\nInitially target array is empty.\nFrom left to right read nums[i] and index[i], insert at index index[i] the value nums[i] in target array.\nRepeat the previous step until there are no elements to read in nums and index.\nReturn the target array.\nIt is guaranteed that the insertion operations will be valid.\n","2133":"You're given strings jewels representing the types of stones that are jewels, and stones representing the stones you have. Each character in stones is a type of stone you have. You want to know how many of the stones you have are also jewels.\nLetters are case sensitive, so \"a\" is considered a different type of stone from \"A\".\n","2134":"Given the head of a singly linked list, return the middle node of the linked list.\nIf there are two middle nodes, return the second middle node.\n","2135":"Given an integer array nums, return the most frequent even element.\nIf there is a tie, return the smallest one. If there is no such element, return -1.\n","2136":"A perfect number is a positive integer that is equal to the sum of its positive divisors, excluding the number itself. A divisor of an integer x is an integer that can divide x evenly.\nGiven an integer n, return true if n is a perfect number, otherwise return false.\n","2137":"You are given an m x n grid. Each cell of grid represents a street. The street of grid[i][j] can be:\n1 which means a street connecting the left cell and the right cell.\n2 which means a street connecting the upper cell and the lower cell.\n3 which means a street connecting the left cell and the lower cell.\n4 which means a street connecting the right cell and the lower cell.\n5 which means a street connecting the left cell and the upper cell.\n6 which means a street connecting the right cell and the upper cell.\nYou will initially start at the street of the upper-left cell (0, 0). A valid path in the grid is a path that starts from the upper left cell (0, 0) and ends at the bottom-right cell (m - 1, n - 1). The path should only follow the streets.\nNotice that you are not allowed to change any street.\nReturn true if there is a valid path in the grid or false otherwise.\n","2138":"There are a total of numCourses courses you have to take, labeled from 0 to numCourses - 1. You are given an array prerequisites where prerequisites[i] = [ai, bi] indicates that you must take course ai first if you want to take course bi.\nFor example, the pair [0, 1] indicates that you have to take course 0 before you can take course 1.\nPrerequisites can also be indirect. If course a is a prerequisite of course b, and course b is a prerequisite of course c, then course a is a prerequisite of course c.\nYou are also given an array queries where queries[j] = [uj, vj]. For the jth query, you should answer whether course uj is a prerequisite of course vj or not.\nReturn a boolean array answer, where answer[j] is the answer to the jth query.\n","2139":"A boolean expression is an expression that evaluates to either true or false. It can be in one of the following shapes:\n't' that evaluates to true.\n'f' that evaluates to false.\n'!(subExpr)' that evaluates to the logical NOT of the inner expression subExpr.\n'&(subExpr1, subExpr2, ..., subExprn)' that evaluates to the logical AND of the inner expressions subExpr1, subExpr2, ..., subExprn where n >= 1.\n'|(subExpr1, subExpr2, ..., subExprn)' that evaluates to the logical OR of the inner expressions subExpr1, subExpr2, ..., subExprn where n >= 1.\nGiven a string expression that represents a boolean expression, return the evaluation of that expression.\nIt is guaranteed that the given expression is valid and follows the given rules.\n","2140":"Given a 0-indexed string word and a character ch, reverse the segment of word that starts at index 0 and ends at the index of the first occurrence of ch (inclusive). If the character ch does not exist in word, do nothing.\nFor example, if word = \"abcdefd\" and ch = \"d\", then you should reverse the segment that starts at 0 and ends at 3 (inclusive). The resulting string will be \"dcbaefd\".\nReturn the resulting string.\n","2141":"Given two integer arrays nums1 and nums2, return an array of their intersection. Each element in the result must be unique and you may return the result in any order.\n","2142":"We are given n different types of stickers. Each sticker has a lowercase English word on it.\nYou would like to spell out the given string target by cutting individual letters from your collection of stickers and rearranging them. You can use each sticker more than once if you want, and you have infinite quantities of each sticker.\nReturn the minimum number of stickers that you need to spell out target. If the task is impossible, return -1.\nNote: In all test cases, all words were chosen randomly from the 1000 most common US English words, and target was chosen as a concatenation of two random words.\n","2143":"Given 2 integers n and start. Your task is return any permutation p of (0,1,2.....,2^n -1) such that :\np[0] = start\np[i] and p[i+1] differ by only one bit in their binary representation.\np[0] and p[2^n -1] must also differ by only one bit in their binary representation.\n","2144":"You are given a positive integer num. You may swap any two digits of num that have the same parity (i.e. both odd digits or both even digits).\nReturn the largest possible value of num after any number of swaps.\n","2145":"The thief has found himself a new place for his thievery again. There is only one entrance to this area, called root.\nBesides the root, each house has one and only one parent house. After a tour, the smart thief realized that all houses in this place form a binary tree. It will automatically contact the police if two directly-linked houses were broken into on the same night.\nGiven the root of the binary tree, return the maximum amount of money the thief can rob without alerting the police.\n","2146":"You are given two strings s and t consisting of only lowercase English letters.\nReturn the minimum number of characters that need to be appended to the end of s so that t becomes a subsequence of s.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\n","2147":"You are given a string s and a positive integer k.\nSelect a set of non-overlapping substrings from the string s that satisfy the following conditions:\nThe length of each substring is at least k.\nEach substring is a palindrome.\nReturn the maximum number of substrings in an optimal selection.\nA substring is a contiguous sequence of characters within a string.\n","2148":"Given the root of a binary tree and an integer limit, delete all insufficient nodes in the tree simultaneously, and return the root of the resulting binary tree.\nA node is insufficient if every root to leaf path intersecting this node has a sum strictly less than limit.\nA leaf is a node with no children.\n","2149":"You have an initial power of power, an initial score of 0, and a bag of tokens where tokens[i] is the value of the ith token (0-indexed).\nYour goal is to maximize your total score by potentially playing each token in one of two ways:\nIf your current power is at least tokens[i], you may play the ith token face up, losing tokens[i] power and gaining 1 score.\nIf your current score is at least 1, you may play the ith token face down, gaining tokens[i] power and losing 1 score.\nEach token may be played at most once and in any order. You do not have to play all the tokens.\nReturn the largest possible score you can achieve after playing any number of tokens.\n","2150":"The next greater element of some element x in an array is the first greater element that is to the right of x in the same array.\nYou are given two distinct 0-indexed integer arrays nums1 and nums2, where nums1 is a subset of nums2.\nFor each 0 <= i < nums1.length, find the index j such that nums1[i] == nums2[j] and determine the next greater element of nums2[j] in nums2. If there is no next greater element, then the answer for this query is -1.\nReturn an array ans of length nums1.length such that ans[i] is the next greater element as described above.\n","2151":"Given a string representing a code snippet, implement a tag validator to parse the code and return whether it is valid.\nA code snippet is valid if all the following rules hold:\nThe code must be wrapped in a valid closed tag. Otherwise, the code is invalid.\nA closed tag (not necessarily valid) has exactly the following format : <TAG_NAME>TAG_CONTENT<\/TAG_NAME>. Among them, <TAG_NAME> is the start tag, and <\/TAG_NAME> is the end tag. The TAG_NAME in start and end tags should be the same. A closed tag is valid if and only if the TAG_NAME and TAG_CONTENT are valid.\nA valid TAG_NAME only contain upper-case letters, and has length in range [1,9]. Otherwise, the TAG_NAME is invalid.\nA valid TAG_CONTENT may contain other valid closed tags, cdata and any characters (see note1) EXCEPT unmatched <, unmatched start and end tag, and unmatched or closed tags with invalid TAG_NAME. Otherwise, the TAG_CONTENT is invalid.\nA start tag is unmatched if no end tag exists with the same TAG_NAME, and vice versa. However, you also need to consider the issue of unbalanced when tags are nested.\nA < is unmatched if you cannot find a subsequent >. And when you find a < or <\/, all the subsequent characters until the next > should be parsed as TAG_NAME (not necessarily valid).\nThe cdata has the following format : <![CDATA[CDATA_CONTENT]]>. The range of CDATA_CONTENT is defined as the characters between <![CDATA[ and the first subsequent ]]>.\nCDATA_CONTENT may contain any characters. The function of cdata is to forbid the validator to parse CDATA_CONTENT, so even it has some characters that can be parsed as tag (no matter valid or invalid), you should treat it as regular characters.\n","2152":"You are given an integer array nums. The adjacent integers in nums will perform the float division.\nFor example, for nums = [2,3,4], we will evaluate the expression \"2\/3\/4\".\nHowever, you can add any number of parenthesis at any position to change the priority of operations. You want to add these parentheses such the value of the expression after the evaluation is maximum.\nReturn the corresponding expression that has the maximum value in string format.\nNote: your expression should not contain redundant parenthesis.\n","2153":"Given a string s containing only three types of characters: '(', ')' and '*', return true if s is valid.\nThe following rules define a valid string:\nAny left parenthesis '(' must have a corresponding right parenthesis ')'.\nAny right parenthesis ')' must have a corresponding left parenthesis '('.\nLeft parenthesis '(' must go before the corresponding right parenthesis ')'.\n'*' could be treated as a single right parenthesis ')' or a single left parenthesis '(' or an empty string \"\".\n","2154":"You are given a string s and an integer array indices of the same length. The string s will be shuffled such that the character at the ith position moves to indices[i] in the shuffled string.\nReturn the shuffled string.\n","2155":"A certain bug's home is on the x-axis at position x. Help them get there from position 0.\nThe bug jumps according to the following rules:\nIt can jump exactly a positions forward (to the right).\nIt can jump exactly b positions backward (to the left).\nIt cannot jump backward twice in a row.\nIt cannot jump to any forbidden positions.\nThe bug may jump forward beyond its home, but it cannot jump to positions numbered with negative integers.\nGiven an array of integers forbidden, where forbidden[i] means that the bug cannot jump to the position forbidden[i], and integers a, b, and x, return the minimum number of jumps needed for the bug to reach its home. If there is no possible sequence of jumps that lands the bug on position x, return -1.\n","2156":"Alice has some number of cards and she wants to rearrange the cards into groups so that each group is of size groupSize, and consists of groupSize consecutive cards.\nGiven an integer array hand where hand[i] is the value written on the ith card and an integer groupSize, return true if she can rearrange the cards, or false otherwise.\n","2157":"Given the head of a singly linked list, group all the nodes with odd indices together followed by the nodes with even indices, and return the reordered list.\nThe first node is considered odd, and the second node is even, and so on.\nNote that the relative order inside both the even and odd groups should remain as it was in the input.\nYou must solve the problem in O(1) extra space complexity and O(n) time complexity.\n","2158":"Given an array of integers heights representing the histogram's bar height where the width of each bar is 1, return the area of the largest rectangle in the histogram.\n","2159":"You are given an integer array nums of size n.\nConsider a non-empty subarray from nums that has the maximum possible bitwise AND.\nIn other words, let k be the maximum value of the bitwise AND of any subarray of nums. Then, only subarrays with a bitwise AND equal to k should be considered.\nReturn the length of the longest such subarray.\nThe bitwise AND of an array is the bitwise AND of all the numbers in it.\nA subarray is a contiguous sequence of elements within an array.\n","2160":"There exists an infinitely large two-dimensional grid of uncolored unit cells. You are given a positive integer n, indicating that you must do the following routine for n minutes:\nAt the first minute, color any arbitrary unit cell blue.\nEvery minute thereafter, color blue every uncolored cell that touches a blue cell.\nBelow is a pictorial representation of the state of the grid after minutes 1, 2, and 3.\nReturn the number of colored cells at the end of n minutes.\n","2161":"A path in a binary tree is a sequence of nodes where each pair of adjacent nodes in the sequence has an edge connecting them. A node can only appear in the sequence at most once. Note that the path does not need to pass through the root.\nThe path sum of a path is the sum of the node's values in the path.\nGiven the root of a binary tree, return the maximum path sum of any non-empty path.\n","2162":"You are given an integer array nums sorted in non-decreasing order.\nBuild and return an integer array result with the same length as nums such that result[i] is equal to the summation of absolute differences between nums[i] and all the other elements in the array.\nIn other words, result[i] is equal to sum(|nums[i]-nums[j]|) where 0 <= j < nums.length and j != i (0-indexed).\n","2163":"You are given two 0-indexed integer arrays nums and multipliers of size n and m respectively, where n >= m.\nYou begin with a score of 0. You want to perform exactly m operations. On the ith operation (0-indexed) you will:\nChoose one integer x from either the start or the end of the array nums.\nAdd multipliers[i] * x to your score.\nNote that multipliers[0] corresponds to the first operation, multipliers[1] to the second operation, and so on.\nRemove x from nums.\nReturn the maximum score after performing m operations.\n","2164":"You are given a 0-indexed array of non-negative integers nums. For each integer in nums, you must find its respective second greater integer.\nThe second greater integer of nums[i] is nums[j] such that:\nj > i\nnums[j] > nums[i]\nThere exists exactly one index k such that nums[k] > nums[i] and i < k < j.\nIf there is no such nums[j], the second greater integer is considered to be -1.\nFor example, in the array [1, 2, 4, 3], the second greater integer of 1 is 4, 2 is 3, and that of 3 and 4 is -1.\nReturn an integer array answer, where answer[i] is the second greater integer of nums[i].\n","2165":"Given two integer arrays, preorder and postorder where preorder is the preorder traversal of a binary tree of distinct values and postorder is the postorder traversal of the same tree, reconstruct and return the binary tree.\nIf there exist multiple answers, you can return any of them.\n","2166":"Design a data structure that supports adding new words and finding if a string matches any previously added string.\nImplement the WordDictionary class:\nWordDictionary() Initializes the object.\nvoid addWord(word) Adds word to the data structure, it can be matched later.\nbool search(word) Returns true if there is any string in the data structure that matches word or false otherwise. word may contain dots '.' where dots can be matched with any letter.\n","2167":"Given an n x n integer matrix grid, return the minimum sum of a falling path with non-zero shifts.\nA falling path with non-zero shifts is a choice of exactly one element from each row of grid such that no two elements chosen in adjacent rows are in the same column.\n","2168":"A fancy string is a string where no three consecutive characters are equal.\nGiven a string s, delete the minimum possible number of characters from s to make it fancy.\nReturn the final string after the deletion. It can be shown that the answer will always be unique.\n","2169":"You are given two strings, word1 and word2. You want to construct a string in the following manner:\nChoose some non-empty subsequence subsequence1 from word1.\nChoose some non-empty subsequence subsequence2 from word2.\nConcatenate the subsequences: subsequence1 + subsequence2, to make the string.\nReturn the length of the longest palindrome that can be constructed in the described manner. If no palindromes can be constructed, return 0.\nA subsequence of a string s is a string that can be made by deleting some (possibly none) characters from s without changing the order of the remaining characters.\nA palindrome is a string that reads the same forward as well as backward.\n","2170":"You are given a stream of points on the X-Y plane. Design an algorithm that:\nAdds new points from the stream into a data structure. Duplicate points are allowed and should be treated as different points.\nGiven a query point, counts the number of ways to choose three points from the data structure such that the three points and the query point form an axis-aligned square with positive area.\nAn axis-aligned square is a square whose edges are all the same length and are either parallel or perpendicular to the x-axis and y-axis.\nImplement the DetectSquares class:\nDetectSquares() Initializes the object with an empty data structure.\nvoid add(int[] point) Adds a new point point = [x, y] to the data structure.\nint count(int[] point) Counts the number of ways to form axis-aligned squares with point point = [x, y] as described above.\n","2171":"You are given an integer array nums and an integer k.\nFor each index i where 0 <= i < nums.length, change nums[i] to be either nums[i] + k or nums[i] - k.\nThe score of nums is the difference between the maximum and minimum elements in nums.\nReturn the minimum score of nums after changing the values at each index.\n","2172":"Given an integer array nums, return the number of elements that have both a strictly smaller and a strictly greater element appear in nums.\n","2173":"Given an n x n array of integers matrix, return the minimum sum of any falling path through matrix.\nA falling path starts at any element in the first row and chooses the element in the next row that is either directly below or diagonally left\/right. Specifically, the next element from position (row, col) will be (row + 1, col - 1), (row + 1, col), or (row + 1, col + 1).\n","2174":"Given an integer n, return a list of all simplified fractions between 0 and 1 (exclusive) such that the denominator is less-than-or-equal-to n. You can return the answer in any order.\n","2175":"Write a program to solve a Sudoku puzzle by filling the empty cells.\nA sudoku solution must satisfy all of the following rules:\nEach of the digits 1-9 must occur exactly once in each row.\nEach of the digits 1-9 must occur exactly once in each column.\nEach of the digits 1-9 must occur exactly once in each of the 9 3x3 sub-boxes of the grid.\nThe '.' character indicates empty cells.\n","2176":"There are n points on a road you are driving your taxi on. The n points on the road are labeled from 1 to n in the direction you are going, and you want to drive from point 1 to point n to make money by picking up passengers. You cannot change the direction of the taxi.\nThe passengers are represented by a 0-indexed 2D integer array rides, where rides[i] = [starti, endi, tipi] denotes the ith passenger requesting a ride from point starti to point endi who is willing to give a tipi dollar tip.\nFor each passenger i you pick up, you earn endi - starti + tipi dollars. You may only drive at most one passenger at a time.\nGiven n and rides, return the maximum number of dollars you can earn by picking up the passengers optimally.\nNote: You may drop off a passenger and pick up a different passenger at the same point.\n","2177":"Given two arrays arr1 and arr2, the elements of arr2 are distinct, and all elements in arr2 are also in arr1.\nSort the elements of arr1 such that the relative ordering of items in arr1 are the same as in arr2. Elements that do not appear in arr2 should be placed at the end of arr1 in ascending order.\n","2178":"Given an m x n integer matrix matrix, if an element is 0, set its entire row and column to 0's.\nYou must do it in place.\n","2179":"You are given row x col grid representing a map where grid[i][j] = 1 represents land and grid[i][j] = 0 represents water.\nGrid cells are connected horizontally\/vertically (not diagonally). The grid is completely surrounded by water, and there is exactly one island (i.e., one or more connected land cells).\nThe island doesn't have \"lakes\", meaning the water inside isn't connected to the water around the island. One cell is a square with side length 1. The grid is rectangular, width and height don't exceed 100. Determine the perimeter of the island.\n","2180":"Let f(x) be the number of zeroes at the end of x!. Recall that x! = 1 * 2 * 3 * ... * x and by convention, 0! = 1.\nFor example, f(3) = 0 because 3! = 6 has no zeroes at the end, while f(11) = 2 because 11! = 39916800 has two zeroes at the end.\nGiven an integer k, return the number of non-negative integers x have the property that f(x) = k.\n","2181":"There is an undirected tree with n nodes labeled from 0 to n - 1, rooted at node 0. You are given a 2D integer array edges of length n - 1 where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nAt every node i, there is a gate. You are also given an array of even integers amount, where amount[i] represents:\nthe price needed to open the gate at node i, if amount[i] is negative, or,\nthe cash reward obtained on opening the gate at node i, otherwise.\nThe game goes on as follows:\nInitially, Alice is at node 0 and Bob is at node bob.\nAt every second, Alice and Bob each move to an adjacent node. Alice moves towards some leaf node, while Bob moves towards node 0.\nFor every node along their path, Alice and Bob either spend money to open the gate at that node, or accept the reward. Note that:\nIf the gate is already open, no price will be required, nor will there be any cash reward.\nIf Alice and Bob reach the node simultaneously, they share the price\/reward for opening the gate there. In other words, if the price to open the gate is c, then both Alice and Bob pay c \/ 2 each. Similarly, if the reward at the gate is c, both of them receive c \/ 2 each.\nIf Alice reaches a leaf node, she stops moving. Similarly, if Bob reaches node 0, he stops moving. Note that these events are independent of each other.\nReturn the maximum net income Alice can have if she travels towards the optimal leaf node.\n","2182":"You are given a string s.\nA split is called good if you can split s into two non-empty strings sleft and sright where their concatenation is equal to s (i.e., sleft + sright = s) and the number of distinct letters in sleft and sright is the same.\nReturn the number of good splits you can make in s.\n","2183":"You are given an integer array arr of length n that represents a permutation of the integers in the range [0, n - 1].\nWe split arr into some number of chunks (i.e., partitions), and individually sort each chunk. After concatenating them, the result should equal the sorted array.\nReturn the largest number of chunks we can make to sort the array.\n","2184":"Given an integer array nums of length n where all the integers of nums are in the range [1, n] and each integer appears once or twice, return an array of all the integers that appears twice.\nYou must write an algorithm that runs in O(n) time and uses only constant extra space.\n","2185":"Given a binary string s, return true if the longest contiguous segment of 1's is strictly longer than the longest contiguous segment of 0's in s, or return false otherwise.\nFor example, in s = \"110100010\" the longest continuous segment of 1s has length 2, and the longest continuous segment of 0s has length 3.\nNote that if there are no 0's, then the longest continuous segment of 0's is considered to have a length 0. The same applies if there is no 1's.\n","2186":"A program was supposed to print an array of integers. The program forgot to print whitespaces and the array is printed as a string of digits s and all we know is that all integers in the array were in the range [1, k] and there are no leading zeros in the array.\nGiven the string s and the integer k, return the number of the possible arrays that can be printed as s using the mentioned program. Since the answer may be very large, return it modulo 109 + 7.\n","2187":"Given an integer array nums and two integers lower and upper, return the number of range sums that lie in [lower, upper] inclusive.\nRange sum S(i, j) is defined as the sum of the elements in nums between indices i and j inclusive, where i <= j.\n","2188":"You are given a (0-indexed) array of positive integers candiesCount where candiesCount[i] represents the number of candies of the ith type you have. You are also given a 2D array queries where queries[i] = [favoriteTypei, favoriteDayi, dailyCapi].\nYou play a game with the following rules:\nYou start eating candies on day 0.\nYou cannot eat any candy of type i unless you have eaten all candies of type i - 1.\nYou must eat at least one candy per day until you have eaten all the candies.\nConstruct a boolean array answer such that answer.length == queries.length and answer[i] is true if you can eat a candy of type favoriteTypei on day favoriteDayi without eating more than dailyCapi candies on any day, and false otherwise. Note that you can eat different types of candy on the same day, provided that you follow rule 2.\nReturn the constructed array answer.\n","2189":"There is an undirected weighted connected graph. You are given a positive integer n which denotes that the graph has n nodes labeled from 1 to n, and an array edges where each edges[i] = [ui, vi, weighti] denotes that there is an edge between nodes ui and vi with weight equal to weighti.\nA path from node start to node end is a sequence of nodes [z0, z1, z2, ..., zk] such that z0 = start and zk = end and there is an edge between zi and zi+1 where 0 <= i <= k-1.\nThe distance of a path is the sum of the weights on the edges of the path. Let distanceToLastNode(x) denote the shortest distance of a path between node n and node x. A restricted path is a path that also satisfies that distanceToLastNode(zi) > distanceToLastNode(zi+1) where 0 <= i <= k-1.\nReturn the number of restricted paths from node 1 to node n. Since that number may be too large, return it modulo 109 + 7.\n","2190":"You are given an array nums consisting of positive integers.\nYou are also given an integer array queries of size m. For the ith query, you want to make all of the elements of nums equal to queries[i]. You can perform the following operation on the array any number of times:\nIncrease or decrease an element of the array by 1.\nReturn an array answer of size m where answer[i] is the minimum number of operations to make all elements of nums equal to queries[i].\nNote that after each query the array is reset to its original state.\n","2191":"On an alphabet board, we start at position (0, 0), corresponding to character board[0][0].\nHere, board = [\"abcde\", \"fghij\", \"klmno\", \"pqrst\", \"uvwxy\", \"z\"], as shown in the diagram below.\nWe may make the following moves:\n'U' moves our position up one row, if the position exists on the board;\n'D' moves our position down one row, if the position exists on the board;\n'L' moves our position left one column, if the position exists on the board;\n'R' moves our position right one column, if the position exists on the board;\n'!' adds the character board[r][c] at our current position (r, c) to the answer.\n(Here, the only positions that exist on the board are positions with letters on them.)\nReturn a sequence of moves that makes our answer equal to target in the minimum number of moves.  You may return any path that does so.\n","2192":"Given a 2D integer array circles where circles[i] = [xi, yi, ri] represents the center (xi, yi) and radius ri of the ith circle drawn on a grid, return the number of lattice points that are present inside at least one circle.\nNote:\nA lattice point is a point with integer coordinates.\nPoints that lie on the circumference of a circle are also considered to be inside it.\n","2193":"You are given the root of a binary tree with n nodes. Each node is uniquely assigned a value from 1 to n. You are also given an integer startValue representing the value of the start node s, and a different integer destValue representing the value of the destination node t.\nFind the shortest path starting from node s and ending at node t. Generate step-by-step directions of such path as a string consisting of only the uppercase letters 'L', 'R', and 'U'. Each letter indicates a specific direction:\n'L' means to go from a node to its left child node.\n'R' means to go from a node to its right child node.\n'U' means to go from a node to its parent node.\nReturn the step-by-step directions of the shortest path from node s to node t.\n","2194":"Your music player contains n different songs. You want to listen to goal songs (not necessarily different) during your trip. To avoid boredom, you will create a playlist so that:\nEvery song is played at least once.\nA song can only be played again only if k other songs have been played.\nGiven n, goal, and k, return the number of possible playlists that you can create. Since the answer can be very large, return it modulo 109 + 7.\n","2195":"You are given a 2D integer array logs where each logs[i] = [birthi, deathi] indicates the birth and death years of the ith person.\nThe population of some year x is the number of people alive during that year. The ith person is counted in year x's population if x is in the inclusive range [birthi, deathi - 1]. Note that the person is not counted in the year that they die.\nReturn the earliest year with the maximum population.\n","2196":"You are given an integer array nums and two integers minK and maxK.\nA fixed-bound subarray of nums is a subarray that satisfies the following conditions:\nThe minimum value in the subarray is equal to minK.\nThe maximum value in the subarray is equal to maxK.\nReturn the number of fixed-bound subarrays.\nA subarray is a contiguous part of an array.\n","2197":"There are n friends that are playing a game. The friends are sitting in a circle and are numbered from 1 to n in clockwise order. More formally, moving clockwise from the ith friend brings you to the (i+1)th friend for 1 <= i < n, and moving clockwise from the nth friend brings you to the 1st friend.\nThe rules of the game are as follows:\nStart at the 1st friend.\nCount the next k friends in the clockwise direction including the friend you started at. The counting wraps around the circle and may count some friends more than once.\nThe last friend you counted leaves the circle and loses the game.\nIf there is still more than one friend in the circle, go back to step 2 starting from the friend immediately clockwise of the friend who just lost and repeat.\nElse, the last friend in the circle wins the game.\nGiven the number of friends, n, and an integer k, return the winner of the game.\n","2198":"There are n cities numbered from 1 to n. You are given an array edges of size n-1, where edges[i] = [ui, vi] represents a bidirectional edge between cities ui and vi. There exists a unique path between each pair of cities. In other words, the cities form a tree.\nA subtree is a subset of cities where every city is reachable from every other city in the subset, where the path between each pair passes through only the cities from the subset. Two subtrees are different if there is a city in one subtree that is not present in the other.\nFor each d from 1 to n-1, find the number of subtrees in which the maximum distance between any two cities in the subtree is equal to d.\nReturn an array of size n-1 where the dth element (1-indexed) is the number of subtrees in which the maximum distance between any two cities is equal to d.\nNotice that the distance between the two cities is the number of edges in the path between them.\n","2199":"An array nums of length n is beautiful if:\nnums is a permutation of the integers in the range [1, n].\nFor every 0 <= i < j < n, there is no index k with i < k < j where 2 * nums[k] == nums[i] + nums[j].\nGiven the integer n, return any beautiful array nums of length n. There will be at least one valid answer for the given n.\n","2200":"Given n non-negative integers representing an elevation map where the width of each bar is 1, compute how much water it can trap after raining.\n","2201":"Given a valid (IPv4) IP address, return a defanged version of that IP address.\nA defanged IP address replaces every period \".\" with \"[.]\".\n","2202":"Reverse bits of a given 32 bits unsigned integer.\nNote:\nNote that in some languages, such as Java, there is no unsigned integer type. In this case, both input and output will be given as a signed integer type. They should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.\n","2203":"Design a system that manages the reservation state of n seats that are numbered from 1 to n.\nImplement the SeatManager class:\nSeatManager(int n) Initializes a SeatManager object that will manage n seats numbered from 1 to n. All seats are initially available.\nint reserve() Fetches the smallest-numbered unreserved seat, reserves it, and returns its number.\nvoid unreserve(int seatNumber) Unreserves the seat with the given seatNumber.\n","2204":"You are given a string s and array queries where queries[i] = [lefti, righti, ki]. We may rearrange the substring s[lefti...righti] for each query and then choose up to ki of them to replace with any lowercase English letter.\nIf the substring is possible to be a palindrome string after the operations above, the result of the query is true. Otherwise, the result is false.\nReturn a boolean array answer where answer[i] is the result of the ith query queries[i].\nNote that each letter is counted individually for replacement, so if, for example s[lefti...righti] = \"aaa\", and ki = 2, we can only replace two of the letters. Also, note that no query modifies the initial string s.\n","2205":"There is a bookstore owner that has a store open for n minutes. Every minute, some number of customers enter the store. You are given an integer array customers of length n where customers[i] is the number of the customer that enters the store at the start of the ith minute and all those customers leave after the end of that minute.\nOn some minutes, the bookstore owner is grumpy. You are given a binary array grumpy where grumpy[i] is 1 if the bookstore owner is grumpy during the ith minute, and is 0 otherwise.\nWhen the bookstore owner is grumpy, the customers of that minute are not satisfied, otherwise, they are satisfied.\nThe bookstore owner knows a secret technique to keep themselves not grumpy for minutes consecutive minutes, but can only use it once.\nReturn the maximum number of customers that can be satisfied throughout the day.\n","2206":"Given an integer n, return a string with n characters such that each character in such string occurs an odd number of times.\nThe returned string must contain only lowercase English letters. If there are multiples valid strings, return any of them.  \n","2207":"You are given a binary array nums and an integer k.\nA k-bit flip is choosing a subarray of length k from nums and simultaneously changing every 0 in the subarray to 1, and every 1 in the subarray to 0.\nReturn the minimum number of k-bit flips required so that there is no 0 in the array. If it is not possible, return -1.\nA subarray is a contiguous part of an array.\n","2208":"You are working in a ball factory where you have n balls numbered from lowLimit up to highLimit inclusive (i.e., n == highLimit - lowLimit + 1), and an infinite number of boxes numbered from 1 to infinity.\nYour job at this factory is to put each ball in the box with a number equal to the sum of digits of the ball's number. For example, the ball number 321 will be put in the box number 3 + 2 + 1 = 6 and the ball number 10 will be put in the box number 1 + 0 = 1.\nGiven two integers lowLimit and highLimit, return the number of balls in the box with the most balls.\n","2209":"SQL Schema\nTable: Person\n+-------------+---------+\n| Column Name | Type    |\n+-------------+---------+\n| id          | int     |\n| email       | varchar |\n+-------------+---------+\nid is the primary key column for this table.\nEach row of this table contains an email. The emails will not contain uppercase letters.\n  Write an SQL query to report all the duplicate emails. Note that it's guaranteed that the email field is not NULL.\nReturn the result table in any order.\nThe query result format is in the following example.\n","2210":"Given a string array words, return the maximum value of length(word[i]) * length(word[j]) where the two words do not share common letters. If no such two words exist, return 0.\n","2211":"You are given an integer array nums, and you can perform the following operation any number of times on nums:\nSwap the positions of two elements nums[i] and nums[j] if gcd(nums[i], nums[j]) > 1 where gcd(nums[i], nums[j]) is the greatest common divisor of nums[i] and nums[j].\nReturn true if it is possible to sort nums in non-decreasing order using the above swap method, or false otherwise.\n","2212":"You are given two strings a and b of the same length. Choose an index and split both strings at the same index, splitting a into two strings: aprefix and asuffix where a = aprefix + asuffix, and splitting b into two strings: bprefix and bsuffix where b = bprefix + bsuffix. Check if aprefix + bsuffix or bprefix + asuffix forms a palindrome.\nWhen you split a string s into sprefix and ssuffix, either ssuffix or sprefix is allowed to be empty. For example, if s = \"abc\", then \"\" + \"abc\", \"a\" + \"bc\", \"ab\" + \"c\" , and \"abc\" + \"\" are valid splits.\nReturn true if it is possible to form a palindrome string, otherwise return false.\nNotice that x + y denotes the concatenation of strings x and y.\n","2213":"There is an undirected connected tree with n nodes labeled from 0 to n - 1 and n - 1 edges.\nYou are given a 0-indexed integer array nums of length n where nums[i] represents the value of the ith node. You are also given a 2D integer array edges of length n - 1 where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the tree.\nRemove two distinct edges of the tree to form three connected components. For a pair of removed edges, the following steps are defined:\nGet the XOR of all the values of the nodes for each of the three components respectively.\nThe difference between the largest XOR value and the smallest XOR value is the score of the pair.\nFor example, say the three components have the node values: [4,5,7], [1,9], and [3,3,3]. The three XOR values are 4 ^ 5 ^ 7 = 6, 1 ^ 9 = 8, and 3 ^ 3 ^ 3 = 3. The largest XOR value is 8 and the smallest XOR value is 3. The score is then 8 - 3 = 5.\nReturn the minimum score of any possible pair of edge removals on the given tree.\n","2214":"Alice and Bob continue their games with stones. There is a row of n stones, and each stone has an associated value. You are given an integer array stones, where stones[i] is the value of the ith stone.\nAlice and Bob take turns, with Alice starting first. On each turn, the player may remove any stone from stones. The player who removes a stone loses if the sum of the values of all removed stones is divisible by 3. Bob will win automatically if there are no remaining stones (even if it is Alice's turn).\nAssuming both players play optimally, return true if Alice wins and false if Bob wins.\n","2215":"You have n  tiles, where each tile has one letter tiles[i] printed on it.\nReturn the number of possible non-empty sequences of letters you can make using the letters printed on those tiles.\n","2216":"You are given two strings s and t.\nYou are allowed to remove any number of characters from the string t.\nThe score of the string is 0 if no characters are removed from the string t, otherwise:\nLet left be the minimum index among all removed characters.\nLet right be the maximum index among all removed characters.\nThen the score of the string is right - left + 1.\nReturn the minimum possible score to make t a subsequence of s.\nA subsequence of a string is a new string that is formed from the original string by deleting some (can be none) of the characters without disturbing the relative positions of the remaining characters. (i.e., \"ace\" is a subsequence of \"abcde\" while \"aec\" is not).\n","2217":"You have a cubic storeroom where the width, length, and height of the room are all equal to n units. You are asked to place n boxes in this room where each box is a cube of unit side length. There are however some rules to placing the boxes:\nYou can place the boxes anywhere on the floor.\nIf box x is placed on top of the box y, then each side of the four vertical sides of the box y must either be adjacent to another box or to a wall.\nGiven an integer n, return the minimum possible number of boxes touching the floor.\n","2218":"There are n cars going to the same destination along a one-lane road. The destination is target miles away.\nYou are given two integer array position and speed, both of length n, where position[i] is the position of the ith car and speed[i] is the speed of the ith car (in miles per hour).\nA car can never pass another car ahead of it, but it can catch up to it and drive bumper to bumper at the same speed. The faster car will slow down to match the slower car's speed. The distance between these two cars is ignored (i.e., they are assumed to have the same position).\nA car fleet is some non-empty set of cars driving at the same position and same speed. Note that a single car is also a car fleet.\nIf a car catches up to a car fleet right at the destination point, it will still be considered as one car fleet.\nReturn the number of car fleets that will arrive at the destination.\n","2219":"We are given a list nums of integers representing a list compressed with run-length encoding.\nConsider each adjacent pair of elements [freq, val] = [nums[2*i], nums[2*i+1]] (with i >= 0).  For each such pair, there are freq elements with value val concatenated in a sublist. Concatenate all the sublists from left to right to generate the decompressed list.\nReturn the decompressed list.\n","2220":"A distinct string is a string that is present only once in an array.\nGiven an array of strings arr, and an integer k, return the kth distinct string present in arr. If there are fewer than k distinct strings, return an empty string \"\".\nNote that the strings are considered in the order in which they appear in the array.\n","2221":"You are given two strings of the same length s1 and s2 and a string baseStr.\nWe say s1[i] and s2[i] are equivalent characters.\nFor example, if s1 = \"abc\" and s2 = \"cde\", then we have 'a' == 'c', 'b' == 'd', and 'c' == 'e'.\nEquivalent characters follow the usual rules of any equivalence relation:\nReflexivity: 'a' == 'a'.\nSymmetry: 'a' == 'b' implies 'b' == 'a'.\nTransitivity: 'a' == 'b' and 'b' == 'c' implies 'a' == 'c'.\nFor example, given the equivalency information from s1 = \"abc\" and s2 = \"cde\", \"acd\" and \"aab\" are equivalent strings of baseStr = \"eed\", and \"aab\" is the lexicographically smallest equivalent string of baseStr.\nReturn the lexicographically smallest equivalent string of baseStr by using the equivalency information from s1 and s2.\n","2222":"You are given two integer arrays nums1 and nums2 of equal length n and an integer k. You can perform the following operation on nums1:\nChoose two indexes i and j and increment nums1[i] by k and decrement nums1[j] by k. In other words, nums1[i] = nums1[i] + k and nums1[j] = nums1[j] - k.\nnums1 is said to be equal to nums2 if for all indices i such that 0 <= i < n, nums1[i] == nums2[i].\nReturn the minimum number of operations required to make nums1 equal to nums2. If it is impossible to make them equal, return -1.\n","2223":"Given two strings s1 and s2, return the lowest ASCII sum of deleted characters to make two strings equal.\n","2224":"Given a sorted array of distinct integers and a target value, return the index if the target is found. If not, return the index where it would be if it were inserted in order.\nYou must write an algorithm with O(log n) runtime complexity.\n","2225":"You are given a 0-indexed binary string s which represents a sequence of train cars. s[i] = '0' denotes that the ith car does not contain illegal goods and s[i] = '1' denotes that the ith car does contain illegal goods.\nAs the train conductor, you would like to get rid of all the cars containing illegal goods. You can do any of the following three operations any number of times:\nRemove a train car from the left end (i.e., remove s[0]) which takes 1 unit of time.\nRemove a train car from the right end (i.e., remove s[s.length - 1]) which takes 1 unit of time.\nRemove a train car from anywhere in the sequence which takes 2 units of time.\nReturn the minimum time to remove all the cars containing illegal goods.\nNote that an empty sequence of cars is considered to have no cars containing illegal goods.\n","2226":"Two strings word1 and word2 are considered almost equivalent if the differences between the frequencies of each letter from 'a' to 'z' between word1 and word2 is at most 3.\nGiven two strings word1 and word2, each of length n, return true if word1 and word2 are almost equivalent, or false otherwise.\nThe frequency of a letter x is the number of times it occurs in the string.\n","2227":"You are given a positive integer n.\nLet even denote the number of even indices in the binary representation of n (0-indexed) with value 1.\nLet odd denote the number of odd indices in the binary representation of n (0-indexed) with value 1.\nReturn an integer array answer where answer = [even, odd].\n","2228":"Given an array of characters chars, compress it using the following algorithm:\nBegin with an empty string s. For each group of consecutive repeating characters in chars:\nIf the group's length is 1, append the character to s.\nOtherwise, append the character followed by the group's length.\nThe compressed string s should not be returned separately, but instead, be stored in the input character array chars. Note that group lengths that are 10 or longer will be split into multiple characters in chars.\nAfter you are done modifying the input array, return the new length of the array.\nYou must write an algorithm that uses only constant extra space.\n","2229":"Given an array of strings words and an integer k, return the k most frequent strings.\nReturn the answer sorted by the frequency from highest to lowest. Sort the words with the same frequency by their lexicographical order.\n","2230":"SQL Schema\nTable: Sales\n+-------------+-------+\n| Column Name | Type  |\n+-------------+-------+\n| sale_id     | int   |\n| product_id  | int   |\n| year        | int   |\n| quantity    | int   |\n| price       | int   |\n+-------------+-------+\n(sale_id, year) is the primary key of this table.\nproduct_id is a foreign key to Product table.\nEach row of this table shows a sale on the product product_id in a certain year.\nNote that the price is per unit.\n  Table: Product\n+--------------+---------+\n| Column Name  | Type    |\n+--------------+---------+\n| product_id   | int     |\n| product_name | varchar |\n+--------------+---------+\nproduct_id is the primary key of this table.\nEach row of this table indicates the product name of each product.\n  Write an SQL query that selects the product id, year, quantity, and price for the first year of every product sold.\nReturn the resulting table in any order.\nThe query result format is in the following example.\n","2231":"Given an integer array arr and a target value target, return the integer value such that when we change all the integers larger than value in the given array to be equal to value, the sum of the array gets as close as possible (in absolute difference) to target.\nIn case of a tie, return the minimum such integer.\nNotice that the answer is not neccesarilly a number from arr.\n","2232":"You are given an integer array jobs, where jobs[i] is the amount of time it takes to complete the ith job.\nThere are k workers that you can assign jobs to. Each job should be assigned to exactly one worker. The working time of a worker is the sum of the time it takes to complete all jobs assigned to them. Your goal is to devise an optimal assignment such that the maximum working time of any worker is minimized.\nReturn the minimum possible maximum working time of any assignment.\n","2233":"You are given four integers, m, n, introvertsCount, and extrovertsCount. You have an m x n grid, and there are two types of people: introverts and extroverts. There are introvertsCount introverts and extrovertsCount extroverts.\nYou should decide how many people you want to live in the grid and assign each of them one grid cell. Note that you do not have to have all the people living in the grid.\nThe happiness of each person is calculated as follows:\nIntroverts start with 120 happiness and lose 30 happiness for each neighbor (introvert or extrovert).\nExtroverts start with 40 happiness and gain 20 happiness for each neighbor (introvert or extrovert).\nNeighbors live in the directly adjacent cells north, east, south, and west of a person's cell.\nThe grid happiness is the sum of each person's happiness. Return the maximum possible grid happiness.\n","2234":"You are given a string s, a string chars of distinct characters and an integer array vals of the same length as chars.\nThe cost of the substring is the sum of the values of each character in the substring. The cost of an empty string is considered 0.\nThe value of the character is defined in the following way:\nIf the character is not in the string chars, then its value is its corresponding position (1-indexed) in the alphabet.\nFor example, the value of 'a' is 1, the value of 'b' is 2, and so on. The value of 'z' is 26.\nOtherwise, assuming i is the index where the character occurs in the string chars, then its value is vals[i].\nReturn the maximum cost among all substrings of the string s.\n","2235":"Given an array of positive integers nums, return the maximum possible sum of an ascending subarray in nums.\nA subarray is defined as a contiguous sequence of numbers in an array.\nA subarray [numsl, numsl+1, ..., numsr-1, numsr] is ascending if for all i where l <= i < r, numsi  < numsi+1. Note that a subarray of size 1 is ascending.\n","2236":"You are given a string s and two integers x and y. You can perform two types of operations any number of times.\nRemove substring \"ab\" and gain x points.\nFor example, when removing \"ab\" from \"cabxbae\" it becomes \"cxbae\".\nRemove substring \"ba\" and gain y points.\nFor example, when removing \"ba\" from \"cabxbae\" it becomes \"cabxe\".\nReturn the maximum points you can gain after applying the above operations on s.\n","2237":"You are given the root of a binary tree that consists of exactly 3 nodes: the root, its left child, and its right child.\nReturn true if the value of the root is equal to the sum of the values of its two children, or false otherwise.\n","2238":"You have the four functions:\nprintFizz that prints the word \"fizz\" to the console,\nprintBuzz that prints the word \"buzz\" to the console,\nprintFizzBuzz that prints the word \"fizzbuzz\" to the console, and\nprintNumber that prints a given integer to the console.\nYou are given an instance of the class FizzBuzz that has four functions: fizz, buzz, fizzbuzz and number. The same instance of FizzBuzz will be passed to four different threads:\nThread A: calls fizz() that should output the word \"fizz\".\nThread B: calls buzz() that should output the word \"buzz\".\nThread C: calls fizzbuzz() that should output the word \"fizzbuzz\".\nThread D: calls number() that should only output the integers.\nModify the given class to output the series [1, 2, \"fizz\", 4, \"buzz\", ...] where the ith token (1-indexed) of the series is:\n\"fizzbuzz\" if i is divisible by 3 and 5,\n\"fizz\" if i is divisible by 3 and not 5,\n\"buzz\" if i is divisible by 5 and not 3, or\ni if i is not divisible by 3 or 5.\nImplement the FizzBuzz class:\nFizzBuzz(int n) Initializes the object with the number n that represents the length of the sequence that should be printed.\nvoid fizz(printFizz) Calls printFizz to output \"fizz\".\nvoid buzz(printBuzz) Calls printBuzz to output \"buzz\".\nvoid fizzbuzz(printFizzBuzz) Calls printFizzBuzz to output \"fizzbuzz\".\nvoid number(printNumber) Calls printnumber to output the numbers.\n","2239":"Given a 0-indexed integer array nums, determine whether there exist two subarrays of length 2 with equal sum. Note that the two subarrays must begin at different indices.\nReturn true if these subarrays exist, and false otherwise.\nA subarray is a contiguous non-empty sequence of elements within an array.\n","2240":"You are given an m x n integer matrix mat and an integer target.\nChoose one integer from each row in the matrix such that the absolute difference between target and the sum of the chosen elements is minimized.\nReturn the minimum absolute difference.\nThe absolute difference between two numbers a and b is the absolute value of a - b.\n","2241":"The width of a sequence is the difference between the maximum and minimum elements in the sequence.\nGiven an array of integers nums, return the sum of the widths of all the non-empty subsequences of nums. Since the answer may be very large, return it modulo 109 + 7.\nA subsequence is a sequence that can be derived from an array by deleting some or no elements without changing the order of the remaining elements. For example, [3,6,2,7] is a subsequence of the array [0,3,1,6,2,2,7].\n","2242":"You are given a string s of even length. Split this string into two halves of equal lengths, and let a be the first half and b be the second half.\nTwo strings are alike if they have the same number of vowels ('a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'). Notice that s contains uppercase and lowercase letters.\nReturn true if a and b are alike. Otherwise, return false.\n","2243":"You are given an array of strings tokens that represents an arithmetic expression in a Reverse Polish Notation.\nEvaluate the expression. Return an integer that represents the value of the expression.\nNote that:\nThe valid operators are '+', '-', '*', and '\/'.\nEach operand may be an integer or another expression.\nThe division between two integers always truncates toward zero.\nThere will not be any division by zero.\nThe input represents a valid arithmetic expression in a reverse polish notation.\nThe answer and all the intermediate calculations can be represented in a 32-bit integer.\n","2244":"Given an m x n grid. Each cell of the grid has a sign pointing to the next cell you should visit if you are currently in this cell. The sign of grid[i][j] can be:\n1 which means go to the cell to the right. (i.e go from grid[i][j] to grid[i][j + 1])\n2 which means go to the cell to the left. (i.e go from grid[i][j] to grid[i][j - 1])\n3 which means go to the lower cell. (i.e go from grid[i][j] to grid[i + 1][j])\n4 which means go to the upper cell. (i.e go from grid[i][j] to grid[i - 1][j])\nNotice that there could be some signs on the cells of the grid that point outside the grid.\nYou will initially start at the upper left cell (0, 0). A valid path in the grid is a path that starts from the upper left cell (0, 0) and ends at the bottom-right cell (m - 1, n - 1) following the signs on the grid. The valid path does not have to be the shortest.\nYou can modify the sign on a cell with cost = 1. You can modify the sign on a cell one time only.\nReturn the minimum cost to make the grid have at least one valid path.\n","2245":"Given a rectangular pizza represented as a rows x cols matrix containing the following characters: 'A' (an apple) and '.' (empty cell) and given the integer k. You have to cut the pizza into k pieces using k-1 cuts. \nFor each cut you choose the direction: vertical or horizontal, then you choose a cut position at the cell boundary and cut the pizza into two pieces. If you cut the pizza vertically, give the left part of the pizza to a person. If you cut the pizza horizontally, give the upper part of the pizza to a person. Give the last piece of pizza to the last person.\nReturn the number of ways of cutting the pizza such that each piece contains at least one apple. Since the answer can be a huge number, return this modulo 10^9 + 7.\n","2246":"Given a string s and an array of strings words, determine whether s is a prefix string of words.\nA string s is a prefix string of words if s can be made by concatenating the first k strings in words for some positive k no larger than words.length.\nReturn true if s is a prefix string of words, or false otherwise.\n","2247":"Given a non-negative integer num, return true if num can be expressed as the sum of any non-negative integer and its reverse, or false otherwise.\n","2248":"You are given an integer array nums and an array queries where queries[i] = [vali, indexi].\nFor each query i, first, apply nums[indexi] = nums[indexi] + vali, then print the sum of the even values of nums.\nReturn an integer array answer where answer[i] is the answer to the ith query.\n","2249":"There are n piles of coins on a table. Each pile consists of a positive number of coins of assorted denominations.\nIn one move, you can choose any coin on top of any pile, remove it, and add it to your wallet.\nGiven a list piles, where piles[i] is a list of integers denoting the composition of the ith pile from top to bottom, and a positive integer k, return the maximum total value of coins you can have in your wallet if you choose exactly k coins optimally.\n","2250":"You are given a tree with n nodes numbered from 0 to n - 1 in the form of a parent array parent where parent[i] is the parent of ith node. The root of the tree is node 0. Find the kth ancestor of a given node.\nThe kth ancestor of a tree node is the kth node in the path from that node to the root node.\nImplement the TreeAncestor class:\nTreeAncestor(int n, int[] parent) Initializes the object with the number of nodes in the tree and the parent array.\nint getKthAncestor(int node, int k) return the kth ancestor of the given node node. If there is no such ancestor, return -1.\n","2251":"Given an array arr of positive integers, consider all binary trees such that:\nEach node has either 0 or 2 children;\nThe values of arr correspond to the values of each leaf in an in-order traversal of the tree.\nThe value of each non-leaf node is equal to the product of the largest leaf value in its left and right subtree, respectively.\nAmong all possible binary trees considered, return the smallest possible sum of the values of each non-leaf node. It is guaranteed this sum fits into a 32-bit integer.\nA node is a leaf if and only if it has zero children.\n","2252":"There are n rooms labeled from 0 to n - 1 and all the rooms are locked except for room 0. Your goal is to visit all the rooms. However, you cannot enter a locked room without having its key.\nWhen you visit a room, you may find a set of distinct keys in it. Each key has a number on it, denoting which room it unlocks, and you can take all of them with you to unlock the other rooms.\nGiven an array rooms where rooms[i] is the set of keys that you can obtain if you visited room i, return true if you can visit all the rooms, or false otherwise.\n","2253":"SQL Schema\nTable: Employees\n+-------------+------+\n| Column Name | Type |\n+-------------+------+\n| emp_id      | int  |\n| event_day   | date |\n| in_time     | int  |\n| out_time    | int  |\n+-------------+------+\n(emp_id, event_day, in_time) is the primary key of this table.\nThe table shows the employees' entries and exits in an office.\nevent_day is the day at which this event happened, in_time is the minute at which the employee entered the office, and out_time is the minute at which they left the office.\nin_time and out_time are between 1 and 1440.\nIt is guaranteed that no two events on the same day intersect in time, and in_time < out_time.\n  Write an SQL query to calculate the total time in minutes spent by each employee on each day at the office. Note that within one day, an employee can enter and leave more than once. The time spent in the office for a single entry is out_time - in_time.\nReturn the result table in any order.\nThe query result format is in the following example.\n","2254":"For a binary tree T, we can define a flip operation as follows: choose any node, and swap the left and right child subtrees.\nA binary tree X is flip equivalent to a binary tree Y if and only if we can make X equal to Y after some number of flip operations.\nGiven the roots of two binary trees root1 and root2, return true if the two trees are flip equivalent or false otherwise.\n","2255":"You are given a 0-indexed integer array arr, and an m x n integer matrix mat. arr and mat both contain all the integers in the range [1, m * n].\nGo through each index i in arr starting from index 0 and paint the cell in mat containing the integer arr[i].\nReturn the smallest index i at which either a row or a column will be completely painted in mat.\n","2256":"Alice and Bob have an undirected graph of n nodes and three types of edges:\nType 1: Can be traversed by Alice only.\nType 2: Can be traversed by Bob only.\nType 3: Can be traversed by both Alice and Bob.\nGiven an array edges where edges[i] = [typei, ui, vi] represents a bidirectional edge of type typei between nodes ui and vi, find the maximum number of edges you can remove so that after removing the edges, the graph can still be fully traversed by both Alice and Bob. The graph is fully traversed by Alice and Bob if starting from any node, they can reach all other nodes.\nReturn the maximum number of edges you can remove, or return -1 if Alice and Bob cannot fully traverse the graph.\n","2257":"You are given an array time where time[i] denotes the time taken by the ith bus to complete one trip.\nEach bus can make multiple trips successively; that is, the next trip can start immediately after completing the current trip. Also, each bus operates independently; that is, the trips of one bus do not influence the trips of any other bus.\nYou are also given an integer totalTrips, which denotes the number of trips all buses should make in total. Return the minimum time required for all buses to complete at least totalTrips trips.\n","2258":"You are given a 0-indexed 2D integer array grid of size m x n which represents a field. Each cell has one of three values:\n0 represents grass,\n1 represents fire,\n2 represents a wall that you and fire cannot pass through.\nYou are situated in the top-left cell, (0, 0), and you want to travel to the safehouse at the bottom-right cell, (m - 1, n - 1). Every minute, you may move to an adjacent grass cell. After your move, every fire cell will spread to all adjacent cells that are not walls.\nReturn the maximum number of minutes that you can stay in your initial position before moving while still safely reaching the safehouse. If this is impossible, return -1. If you can always reach the safehouse regardless of the minutes stayed, return 109.\nNote that even if the fire spreads to the safehouse immediately after you have reached it, it will be counted as safely reaching the safehouse.\nA cell is adjacent to another cell if the former is directly north, east, south, or west of the latter (i.e., their sides are touching).\n","2259":"Given a string s, check if it can be constructed by taking a substring of it and appending multiple copies of the substring together.\n","2260":"You are given two positive integers startPos and endPos. Initially, you are standing at position startPos on an infinite number line. With one step, you can move either one position to the left, or one position to the right.\nGiven a positive integer k, return the number of different ways to reach the position endPos starting from startPos, such that you perform exactly k steps. Since the answer may be very large, return it modulo 109 + 7.\nTwo ways are considered different if the order of the steps made is not exactly the same.\nNote that the number line includes negative integers.\n","2261":"Given a string s consisting of lowercase English letters, return the first letter to appear twice.\nNote:\nA letter a appears twice before another letter b if the second occurrence of a is before the second occurrence of b.\ns will contain at least one letter that appears twice.\n","2262":"Given the following details of a matrix with n columns and 2 rows :\nThe matrix is a binary matrix, which means each element in the matrix can be 0 or 1.\nThe sum of elements of the 0-th(upper) row is given as upper.\nThe sum of elements of the 1-st(lower) row is given as lower.\nThe sum of elements in the i-th column(0-indexed) is colsum[i], where colsum is given as an integer array with length n.\nYour task is to reconstruct the matrix with upper, lower and colsum.\nReturn it as a 2-D integer array.\nIf there are more than one valid solution, any of them will be accepted.\nIf no valid solution exists, return an empty 2-D array.\n","2263":"You have been tasked with writing a program for a popular bank that will automate all its incoming transactions (transfer, deposit, and withdraw). The bank has n accounts numbered from 1 to n. The initial balance of each account is stored in a 0-indexed integer array balance, with the (i + 1)th account having an initial balance of balance[i].\nExecute all the valid transactions. A transaction is valid if:\nThe given account number(s) are between 1 and n, and\nThe amount of money withdrawn or transferred from is less than or equal to the balance of the account.\nImplement the Bank class:\nBank(long[] balance) Initializes the object with the 0-indexed integer array balance.\nboolean transfer(int account1, int account2, long money) Transfers money dollars from the account numbered account1 to the account numbered account2. Return true if the transaction was successful, false otherwise.\nboolean deposit(int account, long money) Deposit money dollars into the account numbered account. Return true if the transaction was successful, false otherwise.\nboolean withdraw(int account, long money) Withdraw money dollars from the account numbered account. Return true if the transaction was successful, false otherwise.\n","2264":"You are given a 0-indexed array of n integers arr.\nThe interval between two elements in arr is defined as the absolute difference between their indices. More formally, the interval between arr[i] and arr[j] is |i - j|.\nReturn an array intervals of length n where intervals[i] is the sum of intervals between arr[i] and each element in arr with the same value as arr[i].\nNote: |x| is the absolute value of x.\n","2265":"You are given a 0-indexed integer array nums.\nThe concatenation of two numbers is the number formed by concatenating their numerals.\nFor example, the concatenation of 15, 49 is 1549.\nThe concatenation value of nums is initially equal to 0. Perform this operation until nums becomes empty:\nIf there exists more than one number in nums, pick the first element and last element in nums respectively and add the value of their concatenation to the concatenation value of nums, then delete the first and last element from nums.\nIf one element exists, add its value to the concatenation value of nums, then delete it.\nReturn the concatenation value of the nums.\n","2266":"You are given a 2D integer array intervals where intervals[i] = [lefti, righti] represents the inclusive interval [lefti, righti].\nYou have to divide the intervals into one or more groups such that each interval is in exactly one group, and no two intervals that are in the same group intersect each other.\nReturn the minimum number of groups you need to make.\nTwo intervals intersect if there is at least one common number between them. For example, the intervals [1, 5] and [5, 8] intersect.\n","2267":"Given a string s which consists of lowercase or uppercase letters, return the length of the longest palindrome that can be built with those letters.\nLetters are case sensitive, for example, \"Aa\" is not considered a palindrome here.\n","2268":"You are given a large integer represented as an integer array digits, where each digits[i] is the ith digit of the integer. The digits are ordered from most significant to least significant in left-to-right order. The large integer does not contain any leading 0's.\nIncrement the large integer by one and return the resulting array of digits.\n","2269":"Alice and Bob take turns playing a game, with Alice starting first.\nThere are n stones arranged in a row. On each player's turn, they can remove either the leftmost stone or the rightmost stone from the row and receive points equal to the sum of the remaining stones' values in the row. The winner is the one with the higher score when there are no stones left to remove.\nBob found that he will always lose this game (poor Bob, he always loses), so he decided to minimize the score's difference. Alice's goal is to maximize the difference in the score.\nGiven an array of integers stones where stones[i] represents the value of the ith stone from the left, return the difference in Alice and Bob's score if they both play optimally.\n","2270":"You are given a 0-indexed integer array stations of length n, where stations[i] represents the number of power stations in the ith city.\nEach power station can provide power to every city in a fixed range. In other words, if the range is denoted by r, then a power station at city i can provide power to all cities j such that |i - j| <= r and 0 <= i, j <= n - 1.\nNote that |x| denotes absolute value. For example, |7 - 5| = 2 and |3 - 10| = 7.\nThe power of a city is the total number of power stations it is being provided power from.\nThe government has sanctioned building k more power stations, each of which can be built in any city, and have the same range as the pre-existing ones.\nGiven the two integers r and k, return the maximum possible minimum power of a city, if the additional power stations are built optimally.\nNote that you can build the k power stations in multiple cities.\n","2271":"Sometimes you have a long running task, and you may wish to cancel it before it completes. To help with this goal, write a function cancellable that accepts a generator object and returns an array of two values: a cancel function and a promise.\nYou may assume the generator function will only yield promises. It is your function's responsibility to pass the values resolved by the promise back to the generator. If the promise rejects, your function should throw that error back to the generator.\nIf the cancel callback is called before the generator is done, your function should throw an error back to the generator. That error should be the string \"Cancelled\" (Not an Error object). If the error was caught, the returned promise should resolve with the next value that was yielded or returned. Otherwise, the promise should reject with the thrown error. No more code should be executed.\nWhen the generator is done, the promise your function returned should resolve the value the generator returned. If, however, the generator throws an error, the returned promise should reject with the error.\nAn example of how your code would be used:\nfunction* tasks() {\n  const val = yield new Promise(resolve => resolve(2 + 2));\n  yield new Promise(resolve => setTimeout(resolve, 100));\n  return val + 1; \/\/ calculation shouldn't be done.\n}\nconst [cancel, promise] = cancellable(tasks());\nsetTimeout(cancel, 50);\npromise.catch(console.log); \/\/ logs \"Cancelled\" at t=50ms\nIf instead cancel() was not called or was called after t=100ms, the promise would have resolved 5.\n","2272":"You have planned some train traveling one year in advance. The days of the year in which you will travel are given as an integer array days. Each day is an integer from 1 to 365.\nTrain tickets are sold in three different ways:\na 1-day pass is sold for costs[0] dollars,\na 7-day pass is sold for costs[1] dollars, and\na 30-day pass is sold for costs[2] dollars.\nThe passes allow that many days of consecutive travel.\nFor example, if we get a 7-day pass on day 2, then we can travel for 7 days: 2, 3, 4, 5, 6, 7, and 8.\nReturn the minimum number of dollars you need to travel every day in the given list of days.\n","2273":"You are given an array of n pairs pairs where pairs[i] = [lefti, righti] and lefti < righti.\nA pair p2 = [c, d] follows a pair p1 = [a, b] if b < c. A chain of pairs can be formed in this fashion.\nReturn the length longest chain which can be formed.\nYou do not need to use up all the given intervals. You can select pairs in any order.\n","2274":"Given a string array words, return an array of all characters that show up in all strings within the words (including duplicates). You may return the answer in any order.\n","2275":"You are given an array of strings words (0-indexed).\nIn one operation, pick two distinct indices i and j, where words[i] is a non-empty string, and move any character from words[i] to any position in words[j].\nReturn true if you can make every string in words equal using any number of operations, and false otherwise.\n","2276":"You are the operator of a Centennial Wheel that has four gondolas, and each gondola has room for up to four people. You have the ability to rotate the gondolas counterclockwise, which costs you runningCost dollars.\nYou are given an array customers of length n where customers[i] is the number of new customers arriving just before the ith rotation (0-indexed). This means you must rotate the wheel i times before the customers[i] customers arrive. You cannot make customers wait if there is room in the gondola. Each customer pays boardingCost dollars when they board on the gondola closest to the ground and will exit once that gondola reaches the ground again.\nYou can stop the wheel at any time, including before serving all customers. If you decide to stop serving customers, all subsequent rotations are free in order to get all the customers down safely. Note that if there are currently more than four customers waiting at the wheel, only four will board the gondola, and the rest will wait for the next rotation.\nReturn the minimum number of rotations you need to perform to maximize your profit. If there is no scenario where the profit is positive, return -1.\n","2277":"You are assigned to put some amount of boxes onto one truck. You are given a 2D array boxTypes, where boxTypes[i] = [numberOfBoxesi, numberOfUnitsPerBoxi]:\nnumberOfBoxesi is the number of boxes of type i.\nnumberOfUnitsPerBoxi is the number of units in each box of the type i.\nYou are also given an integer truckSize, which is the maximum number of boxes that can be put on the truck. You can choose any boxes to put on the truck as long as the number of boxes does not exceed truckSize.\nReturn the maximum total number of units that can be put on the truck.\n","2278":"Given an integer array nums, partition it into two (contiguous) subarrays left and right so that:\nEvery element in left is less than or equal to every element in right.\nleft and right are non-empty.\nleft has the smallest possible size.\nReturn the length of left after such a partitioning.\nTest cases are generated such that partitioning exists.\n","2279":"You are given a 0-indexed 2D integer array questions where questions[i] = [pointsi, brainpoweri].\nThe array describes the questions of an exam, where you have to process the questions in order (i.e., starting from question 0) and make a decision whether to solve or skip each question. Solving question i will earn you pointsi points but you will be unable to solve each of the next brainpoweri questions. If you skip question i, you get to make the decision on the next question.\nFor example, given questions = [[3, 2], [4, 3], [4, 4], [2, 5]]:\nIf question 0 is solved, you will earn 3 points but you will be unable to solve questions 1 and 2.\nIf instead, question 0 is skipped and question 1 is solved, you will earn 4 points but you will be unable to solve questions 2 and 3.\nReturn the maximum points you can earn for the exam.\n","2280":"You are given a 0-indexed integer array nums. There exists an array arr of length nums.length, where arr[i] is the sum of |i - j| over all j such that nums[j] == nums[i] and j != i. If there is no such j, set arr[i] to be 0.\nReturn the array arr.\n","2281":"Given an n-ary tree, return the level order traversal of its nodes' values.\nNary-Tree input serialization is represented in their level order traversal, each group of children is separated by the null value (See examples).\n","2282":"Given an integer n, find a sequence that satisfies all of the following:\nThe integer 1 occurs once in the sequence.\nEach integer between 2 and n occurs twice in the sequence.\nFor every integer i between 2 and n, the distance between the two occurrences of i is exactly i.\nThe distance between two numbers on the sequence, a[i] and a[j], is the absolute difference of their indices, |j - i|.\nReturn the lexicographically largest sequence. It is guaranteed that under the given constraints, there is always a solution.\nA sequence a is lexicographically larger than a sequence b (of the same length) if in the first position where a and b differ, sequence a has a number greater than the corresponding number in b. For example, [0,1,9,0] is lexicographically larger than [0,1,5,6] because the first position they differ is at the third number, and 9 is greater than 5.\n","2283":"Write a function that accepts two deeply nested objects or arrays obj1 and obj2 and returns a new object representing their differences.\nThe function should compare the properties of the two objects and identify any changes. The returned object should only contains keys where the value is different from obj1 to obj2. For each changed key, the value should be represented as an array [obj1 value, obj2 value]. Keys that exist in one object but not in the other should not be included in the returned object. When comparing two arrays, the indices of the arrays are considered to be their keys. The end result should be a deeply nested object where each leaf value is a difference array.\nYou may assume that both objects are the output of JSON.parse.\n","2284":"You are given two m x n binary matrices grid1 and grid2 containing only 0's (representing water) and 1's (representing land). An island is a group of 1's connected 4-directionally (horizontal or vertical). Any cells outside of the grid are considered water cells.\nAn island in grid2 is considered a sub-island if there is an island in grid1 that contains all the cells that make up this island in grid2.\nReturn the number of islands in grid2 that are considered sub-islands.\n","2285":"There is a 3 lane road of length n that consists of n + 1 points labeled from 0 to n. A frog starts at point 0 in the second lane and wants to jump to point n. However, there could be obstacles along the way.\nYou are given an array obstacles of length n + 1 where each obstacles[i] (ranging from 0 to 3) describes an obstacle on the lane obstacles[i] at point i. If obstacles[i] == 0, there are no obstacles at point i. There will be at most one obstacle in the 3 lanes at each point.\nFor example, if obstacles[2] == 1, then there is an obstacle on lane 1 at point 2.\nThe frog can only travel from point i to point i + 1 on the same lane if there is not an obstacle on the lane at point i + 1. To avoid obstacles, the frog can also perform a side jump to jump to another lane (even if they are not adjacent) at the same point if there is no obstacle on the new lane.\nFor example, the frog can jump from lane 3 at point 3 to lane 1 at point 3.\nReturn the minimum number of side jumps the frog needs to reach any lane at point n starting from lane 2 at point 0.\nNote: There will be no obstacles on points 0 and n.\n","2286":"Given an integer n and an integer array rounds. We have a circular track which consists of n sectors labeled from 1 to n. A marathon will be held on this track, the marathon consists of m rounds. The ith round starts at sector rounds[i - 1] and ends at sector rounds[i]. For example, round 1 starts at sector rounds[0] and ends at sector rounds[1]\nReturn an array of the most visited sectors sorted in ascending order.\nNotice that you circulate the track in ascending order of sector numbers in the counter-clockwise direction (See the first example).\n","2287":"You are given an integer array cost where cost[i] is the cost of ith step on a staircase. Once you pay the cost, you can either climb one or two steps.\nYou can either start from the step with index 0, or the step with index 1.\nReturn the minimum cost to reach the top of the floor.\n","2288":"You are given an array nums that consists of positive integers.\nThe GCD of a sequence of numbers is defined as the greatest integer that divides all the numbers in the sequence evenly.\nFor example, the GCD of the sequence [4,6,16] is 2.\nA subsequence of an array is a sequence that can be formed by removing some elements (possibly none) of the array.\nFor example, [2,5,10] is a subsequence of [1,2,1,2,4,1,5,10].\nReturn the number of different GCDs among all non-empty subsequences of nums.\n","2289":"Given a text file file.txt, transpose its content.\nYou may assume that each row has the same number of columns, and each field is separated by the ' ' character.\n","2290":"You are given an array of strings arr. A string s is formed by the concatenation of a subsequence of arr that has unique characters.\nReturn the maximum possible length of s.\nA subsequence is an array that can be derived from another array by deleting some or no elements without changing the order of the remaining elements.\n","2291":"Given the root of a complete binary tree, return the number of the nodes in the tree.\nAccording to Wikipedia, every level, except possibly the last, is completely filled in a complete binary tree, and all nodes in the last level are as far left as possible. It can have between 1 and 2h nodes inclusive at the last level h.\nDesign an algorithm that runs in less than O(n) time complexity.\n","2292":"You are given an integer array banned and two integers n and maxSum. You are choosing some number of integers following the below rules:\nThe chosen integers have to be in the range [1, n].\nEach integer can be chosen at most once.\nThe chosen integers should not be in the array banned.\nThe sum of the chosen integers should not exceed maxSum.\nReturn the maximum number of integers you can choose following the mentioned rules.\n","2293":"You are an ant tasked with adding n new rooms numbered 0 to n-1 to your colony. You are given the expansion plan as a 0-indexed integer array of length n, prevRoom, where prevRoom[i] indicates that you must build room prevRoom[i] before building room i, and these two rooms must be connected directly. Room 0 is already built, so prevRoom[0] = -1. The expansion plan is given such that once all the rooms are built, every room will be reachable from room 0.\nYou can only build one room at a time, and you can travel freely between rooms you have already built only if they are connected. You can choose to build any room as long as its previous room is already built.\nReturn the number of different orders you can build all the rooms in. Since the answer may be large, return it modulo 109 + 7.\n","2294":"A binary tree is named Even-Odd if it meets the following conditions:\nThe root of the binary tree is at level index 0, its children are at level index 1, their children are at level index 2, etc.\nFor every even-indexed level, all nodes at the level have odd integer values in strictly increasing order (from left to right).\nFor every odd-indexed level, all nodes at the level have even integer values in strictly decreasing order (from left to right).\nGiven the root of a binary tree, return true if the binary tree is Even-Odd, otherwise return false.\n","2295":"You are given an integer n, the number of nodes in a directed graph where the nodes are labeled from 0 to n - 1. Each edge is red or blue in this graph, and there could be self-edges and parallel edges.\nYou are given two arrays redEdges and blueEdges where:\nredEdges[i] = [ai, bi] indicates that there is a directed red edge from node ai to node bi in the graph, and\nblueEdges[j] = [uj, vj] indicates that there is a directed blue edge from node uj to node vj in the graph.\nReturn an array answer of length n, where each answer[x] is the length of the shortest path from node 0 to node x such that the edge colors alternate along the path, or -1 if such a path does not exist.\n","2296":"You are given a string s consisting of lowercase letters and an integer k. We call a string t ideal if the following conditions are satisfied:\nt is a subsequence of the string s.\nThe absolute difference in the alphabet order of every two adjacent letters in t is less than or equal to k.\nReturn the length of the longest ideal string.\nA subsequence is a string that can be derived from another string by deleting some or no characters without changing the order of the remaining characters.\nNote that the alphabet order is not cyclic. For example, the absolute difference in the alphabet order of 'a' and 'z' is 25, not 1.\n","2297":"Given a binary array nums, return the maximum length of a contiguous subarray with an equal number of 0 and 1.\n","2298":"You are given a 0-indexed array nums consisting of positive integers. You can choose two indices i and j, such that i != j, and the sum of digits of the number nums[i] is equal to that of nums[j].\nReturn the maximum value of nums[i] + nums[j] that you can obtain over all possible indices i and j that satisfy the conditions.\n","2299":"You are given the root of a binary tree and an integer distance. A pair of two different leaf nodes of a binary tree is said to be good if the length of the shortest path between them is less than or equal to distance.\nReturn the number of good leaf node pairs in the tree.\n","2300":"There is an undirected graph with n nodes, where each node is numbered between 0 and n - 1. You are given a 2D array graph, where graph[u] is an array of nodes that node u is adjacent to. More formally, for each v in graph[u], there is an undirected edge between node u and node v. The graph has the following properties:\nThere are no self-edges (graph[u] does not contain u).\nThere are no parallel edges (graph[u] does not contain duplicate values).\nIf v is in graph[u], then u is in graph[v] (the graph is undirected).\nThe graph may not be connected, meaning there may be two nodes u and v such that there is no path between them.\nA graph is bipartite if the nodes can be partitioned into two independent sets A and B such that every edge in the graph connects a node in set A and a node in set B.\nReturn true if and only if it is bipartite.\n","2301":"Given the string s, return the size of the longest substring containing each vowel an even number of times. That is, 'a', 'e', 'i', 'o', and 'u' must appear an even number of times.\n","2302":"Given an integer num, return a string representing its hexadecimal representation. For negative integers, two\u2019s complement method is used.\nAll the letters in the answer string should be lowercase characters, and there should not be any leading zeros in the answer except for the zero itself.\nNote: You are not allowed to use any built-in library method to directly solve this problem.\n","2303":"You are given an integer n. There is a complete binary tree with 2n - 1 nodes. The root of that tree is the node with the value 1, and every node with a value val in the range [1, 2n - 1 - 1] has two children where:\nThe left node has the value 2 * val, and\nThe right node has the value 2 * val + 1.\nYou are also given a 2D integer array queries of length m, where queries[i] = [ai, bi]. For each query, solve the following problem:\nAdd an edge between the nodes with values ai and bi.\nFind the length of the cycle in the graph.\nRemove the added edge between nodes with values ai and bi.\nNote that:\nA cycle is a path that starts and ends at the same node, and each edge in the path is visited only once.\nThe length of a cycle is the number of edges visited in the cycle.\nThere could be multiple edges between two nodes in the tree after adding the edge of the query.\nReturn an array answer of length m where answer[i] is the answer to the ith query.\n","2304":"Given an array of string words, return all strings in words that is a substring of another word. You can return the answer in any order.\nA substring is a contiguous sequence of characters within a string\n","2305":"You are given an integer array matchsticks where matchsticks[i] is the length of the ith matchstick. You want to use all the matchsticks to make one square. You should not break any stick, but you can link them up, and each matchstick must be used exactly one time.\nReturn true if you can make this square and false otherwise.\n","2306":"Given an integer n, return the count of all numbers with unique digits, x, where 0 <= x < 10n.\n","2307":"Given a rectangle of size n x m, return the minimum number of integer-sided squares that tile the rectangle.\n","2308":"Given a parentheses string s containing only the characters '(' and ')'. A parentheses string is balanced if:\nAny left parenthesis '(' must have a corresponding two consecutive right parenthesis '))'.\nLeft parenthesis '(' must go before the corresponding two consecutive right parenthesis '))'.\nIn other words, we treat '(' as an opening parenthesis and '))' as a closing parenthesis.\nFor example, \"())\", \"())(())))\" and \"(())())))\" are balanced, \")()\", \"()))\" and \"(()))\" are not balanced.\nYou can insert the characters '(' and ')' at any position of the string to balance it if needed.\nReturn the minimum number of insertions needed to make s balanced.\n","2309":"You are given a 0-indexed integer array nums. You are also given an integer key, which is present in nums.\nFor every unique integer target in nums, count the number of times target immediately follows an occurrence of key in nums. In other words, count the number of indices i such that:\n0 <= i <= nums.length - 2,\nnums[i] == key and,\nnums[i + 1] == target.\nReturn the target with the maximum count. The test cases will be generated such that the target with maximum count is unique.\n","2310":"Given an integer array nums where the elements are sorted in ascending order, convert it to a\nheight-balanced\nbinary search tree.\n","2311":"You have a RecentCounter class which counts the number of recent requests within a certain time frame.\nImplement the RecentCounter class:\nRecentCounter() Initializes the counter with zero recent requests.\nint ping(int t) Adds a new request at time t, where t represents some time in milliseconds, and returns the number of requests that has happened in the past 3000 milliseconds (including the new request). Specifically, return the number of requests that have happened in the inclusive range [t - 3000, t].\nIt is guaranteed that every call to ping uses a strictly larger value of t than the previous call.\n","2312":"Write a function that takes the binary representation of an unsigned integer and returns the number of '1' bits it has (also known as the Hamming weight).\nNote:\nNote that in some languages, such as Java, there is no unsigned integer type. In this case, the input will be given as a signed integer type. It should not affect your implementation, as the integer's internal binary representation is the same, whether it is signed or unsigned.\n","2313":"Given an array of non-negative integers arr, you are initially positioned at start index of the array. When you are at index i, you can jump to i + arr[i] or i - arr[i], check if you can reach to any index with value 0.\nNotice that you can not jump outside of the array at any time.\n","2314":"Given a binary tree root, a node X in the tree is named good if in the path from root to X there are no nodes with a value greater than X.\nReturn the number of good nodes in the binary tree.\n","2315":"You are given a 0-indexed integer array nums and an integer k. You have a starting score of 0.\nIn one operation:\nchoose an index i such that 0 <= i < nums.length,\nincrease your score by nums[i], and\nreplace nums[i] with ceil(nums[i] \/ 3).\nReturn the maximum possible score you can attain after applying exactly k operations.\nThe ceiling function ceil(val) is the least integer greater than or equal to val.\n","2316":"There is a school that has classes of students and each class will be having a final exam. You are given a 2D integer array classes, where classes[i] = [passi, totali]. You know beforehand that in the ith class, there are totali total students, but only passi number of students will pass the exam.\nYou are also given an integer extraStudents. There are another extraStudents brilliant students that are guaranteed to pass the exam of any class they are assigned to. You want to assign each of the extraStudents students to a class in a way that maximizes the average pass ratio across all the classes.\nThe pass ratio of a class is equal to the number of students of the class that will pass the exam divided by the total number of students of the class. The average pass ratio is the sum of pass ratios of all the classes divided by the number of the classes.\nReturn the maximum possible average pass ratio after assigning the extraStudents students. Answers within 10-5 of the actual answer will be accepted.\n","2317":"Implement the BSTIterator class that represents an iterator over the in-order traversal of a binary search tree (BST):\nBSTIterator(TreeNode root) Initializes an object of the BSTIterator class. The root of the BST is given as part of the constructor. The pointer should be initialized to a non-existent number smaller than any element in the BST.\nboolean hasNext() Returns true if there exists a number in the traversal to the right of the pointer, otherwise returns false.\nint next() Moves the pointer to the right, then returns the number at the pointer.\nNotice that by initializing the pointer to a non-existent smallest number, the first call to next() will return the smallest element in the BST.\nYou may assume that next() calls will always be valid. That is, there will be at least a next number in the in-order traversal when next() is called.\n","2318":"You are given an undirected weighted connected graph containing n nodes labeled from 0 to n - 1, and an integer array edges where edges[i] = [ai, bi, wi] indicates that there is an edge between nodes ai and bi with weight wi.\nSome edges have a weight of -1 (wi = -1), while others have a positive weight (wi > 0).\nYour task is to modify all edges with a weight of -1 by assigning them positive integer values in the range [1, 2 * 109] so that the shortest distance between the nodes source and destination becomes equal to an integer target. If there are multiple modifications that make the shortest distance between source and destination equal to target, any of them will be considered correct.\nReturn an array containing all edges (even unmodified ones) in any order if it is possible to make the shortest distance from source to destination equal to target, or an empty array if it's impossible.\nNote: You are not allowed to modify the weights of edges with initial positive weights.\n","2319":"You are given a positive integer p. Consider an array nums (1-indexed) that consists of the integers in the inclusive range [1, 2p - 1] in their binary representations. You are allowed to do the following operation any number of times:\nChoose two elements x and y from nums.\nChoose a bit in x and swap it with its corresponding bit in y. Corresponding bit refers to the bit that is in the same position in the other integer.\nFor example, if x = 1101 and y = 0011, after swapping the 2nd bit from the right, we have x = 1111 and y = 0001.\nFind the minimum non-zero product of nums after performing the above operation any number of times. Return this product modulo 109 + 7.\nNote: The answer should be the minimum product before the modulo operation is done.\n","2320":"You are given an integer n representing the number of nodes in a perfect binary tree consisting of nodes numbered from 1 to n. The root of the tree is node 1 and each node i in the tree has two children where the left child is the node 2 * i and the right child is 2 * i + 1.\nEach node in the tree also has a cost represented by a given 0-indexed integer array cost of size n where cost[i] is the cost of node i + 1. You are allowed to increment the cost of any node by 1 any number of times.\nReturn the minimum number of increments you need to make the cost of paths from the root to each leaf node equal.\nNote:\nA perfect binary tree is a tree where each node, except the leaf nodes, has exactly 2 children.\nThe cost of a path is the sum of costs of nodes in the path.\n","2321":"Design an EventEmitter class. This interface is similar (but with some differences) to the one found in Node.js or the Event Target interface of the DOM. The EventEmitter should allow for subscribing to events and emitting them.\nYour EventEmitter class should have the following two methods:\nsubscribe - This method takes in two arguments: the name of an event as a string and a callback function. This callback function will later be called when the event is emitted.\nAn event should be able to have multiple listeners for the same event. When emitting an event with multiple callbacks, each should be called in the order in which they were subscribed. An array of results should be returned. You can assume no callbacks passed to subscribe are referentially identical.\nThe subscribe method should also return an object with an unsubscribe method that enables the user to unsubscribe. When it is called, the callback should be removed from the list of subscriptions and undefined should be returned.\nemit - This method takes in two arguments: the name of an event as a string and an optional array of arguments that will be passed to the callback(s). If there are no callbacks subscribed to the given event, return an empty array. Otherwise, return an array of the results of all callback calls in the order they were subscribed.\n","2322":"You are given two 0-indexed integer arrays nums1 and nums2, of equal length n.\nIn one operation, you can swap the values of any two indices of nums1. The cost of this operation is the sum of the indices.\nFind the minimum total cost of performing the given operation any number of times such that nums1[i] != nums2[i] for all 0 <= i <= n - 1 after performing all the operations.\nReturn the minimum total cost such that nums1 and nums2 satisfy the above condition. In case it is not possible, return -1.\n","2323":"Design a stack that supports increment operations on its elements.\nImplement the CustomStack class:\nCustomStack(int maxSize) Initializes the object with maxSize which is the maximum number of elements in the stack.\nvoid push(int x) Adds x to the top of the stack if the stack has not reached the maxSize.\nint pop() Pops and returns the top of the stack or -1 if the stack is empty.\nvoid inc(int k, int val) Increments the bottom k elements of the stack by val. If there are less than k elements in the stack, increment all the elements in the stack.\n","2324":"You are given a 0-indexed string s consisting of only lowercase English letters, where each letter in s appears exactly twice. You are also given a 0-indexed integer array distance of length 26.\nEach letter in the alphabet is numbered from 0 to 25 (i.e. 'a' -> 0, 'b' -> 1, 'c' -> 2, ... , 'z' -> 25).\nIn a well-spaced string, the number of letters between the two occurrences of the ith letter is distance[i]. If the ith letter does not appear in s, then distance[i] can be ignored.\nReturn true if s is a well-spaced string, otherwise return false.\n","2325":"You are given a 0-indexed m x n binary matrix grid.\nA 0-indexed m x n difference matrix diff is created with the following procedure:\nLet the number of ones in the ith row be onesRowi.\nLet the number of ones in the jth column be onesColj.\nLet the number of zeros in the ith row be zerosRowi.\nLet the number of zeros in the jth column be zerosColj.\ndiff[i][j] = onesRowi + onesColj - zerosRowi - zerosColj\nReturn the difference matrix diff.\n","2326":"Given a string queryIP, return \"IPv4\" if IP is a valid IPv4 address, \"IPv6\" if IP is a valid IPv6 address or \"Neither\" if IP is not a correct IP of any type.\nA valid IPv4 address is an IP in the form \"x1.x2.x3.x4\" where 0 <= xi <= 255 and xi cannot contain leading zeros. For example, \"192.168.1.1\" and \"192.168.1.0\" are valid IPv4 addresses while \"192.168.01.1\", \"192.168.1.00\", and \"192.168@1.1\" are invalid IPv4 addresses.\nA valid IPv6 address is an IP in the form \"x1:x2:x3:x4:x5:x6:x7:x8\" where:\n1 <= xi.length <= 4\nxi is a hexadecimal string which may contain digits, lowercase English letter ('a' to 'f') and upper-case English letters ('A' to 'F').\nLeading zeros are allowed in xi.\nFor example, \"2001:0db8:85a3:0000:0000:8a2e:0370:7334\" and \"2001:db8:85a3:0:0:8A2E:0370:7334\" are valid IPv6 addresses, while \"2001:0db8:85a3::8A2E:037j:7334\" and \"02001:0db8:85a3:0000:0000:8a2e:0370:7334\" are invalid IPv6 addresses.\n","2327":"Given a string s, return the length of the longest substring between two equal characters, excluding the two characters. If there is no such substring return -1.\nA substring is a contiguous sequence of characters within a string.\n","2328":"There is a group of n people labeled from 0 to n - 1 where each person has a different amount of money and a different level of quietness.\nYou are given an array richer where richer[i] = [ai, bi] indicates that ai has more money than bi and an integer array quiet where quiet[i] is the quietness of the ith person. All the given data in richer are logically correct (i.e., the data will not lead you to a situation where x is richer than y and y is richer than x at the same time).\nReturn an integer array answer where answer[x] = y if y is the least quiet person (that is, the person y with the smallest value of quiet[y]) among all people who definitely have equal to or more money than the person x.\n","2329":"Given the root of a binary tree, return the sum of all left leaves.\nA leaf is a node with no children. A left leaf is a leaf that is the left child of another node.\n","2330":"Given the root of a binary tree, return the same tree where every subtree (of the given tree) not containing a 1 has been removed.\nA subtree of a node node is node plus every node that is a descendant of node.\n","2331":"You are given four integers row, cols, rCenter, and cCenter. There is a rows x cols matrix and you are on the cell with the coordinates (rCenter, cCenter).\nReturn the coordinates of all cells in the matrix, sorted by their distance from (rCenter, cCenter) from the smallest distance to the largest distance. You may return the answer in any order that satisfies this condition.\nThe distance between two cells (r1, c1) and (r2, c2) is |r1 - r2| + |c1 - c2|.\n","2332":"Given an array of integers arr, find the sum of min(b), where b ranges over every (contiguous) subarray of arr. Since the answer may be large, return the answer modulo 109 + 7.\n","2333":"Given two binary strings a and b, return their sum as a binary string.\n","2334":"A chef has collected data on the satisfaction level of his n dishes. Chef can cook any dish in 1 unit of time.\nLike-time coefficient of a dish is defined as the time taken to cook that dish including previous dishes multiplied by its satisfaction level i.e. time[i] * satisfaction[i].\nReturn the maximum sum of like-time coefficient that the chef can obtain after dishes preparation.\nDishes can be prepared in any order and the chef can discard some dishes to get this maximum value.\n","2335":"You are given a sorted unique integer array nums.\nA range [a,b] is the set of all integers from a to b (inclusive).\nReturn the smallest sorted list of ranges that cover all the numbers in the array exactly. That is, each element of nums is covered by exactly one of the ranges, and there is no integer x such that x is in one of the ranges but not in nums.\nEach range [a,b] in the list should be output as:\n\"a->b\" if a != b\n\"a\" if a == b\n","2336":"You are given a 0-indexed 2D integer array nums. Initially, your score is 0. Perform the following operations until the matrix becomes empty:\nFrom each row in the matrix, select the largest number and remove it. In the case of a tie, it does not matter which number is chosen.\nIdentify the highest number amongst all those removed in step 1. Add that number to your score.\nReturn the final score.\n","2337":"Given an integer k, return the minimum number of Fibonacci numbers whose sum is equal to k. The same Fibonacci number can be used multiple times.\nThe Fibonacci numbers are defined as:\nF1 = 1\nF2 = 1\nFn = Fn-1 + Fn-2 for n > 2.\nIt is guaranteed that for the given constraints we can always find such Fibonacci numbers that sum up to k.\n","2338":"An ugly number is a positive integer whose prime factors are limited to 2, 3, and 5.\nGiven an integer n, return true if n is an ugly number.\n","2339":"Given the array of integers nums, you will choose two different indices i and j of that array. Return the maximum value of (nums[i]-1)*(nums[j]-1).\n","2340":"There is an m x n rectangular island that borders both the Pacific Ocean and Atlantic Ocean. The Pacific Ocean touches the island's left and top edges, and the Atlantic Ocean touches the island's right and bottom edges.\nThe island is partitioned into a grid of square cells. You are given an m x n integer matrix heights where heights[r][c] represents the height above sea level of the cell at coordinate (r, c).\nThe island receives a lot of rain, and the rain water can flow to neighboring cells directly north, south, east, and west if the neighboring cell's height is less than or equal to the current cell's height. Water can flow from any cell adjacent to an ocean into the ocean.\nReturn a 2D list of grid coordinates result where result[i] = [ri, ci] denotes that rain water can flow from cell (ri, ci) to both the Pacific and Atlantic oceans.\n","2341":"You are given an array of non-overlapping intervals intervals where intervals[i] = [starti, endi] represent the start and the end of the ith interval and intervals is sorted in ascending order by starti. You are also given an interval newInterval = [start, end] that represents the start and end of another interval.\nInsert newInterval into intervals such that intervals is still sorted in ascending order by starti and intervals still does not have any overlapping intervals (merge overlapping intervals if necessary).\nReturn intervals after the insertion.\n","2342":"Given a positive integer num, split it into two non-negative integers num1 and num2 such that:\nThe concatenation of num1 and num2 is a permutation of num.\nIn other words, the sum of the number of occurrences of each digit in num1 and num2 is equal to the number of occurrences of that digit in num.\nnum1 and num2 can contain leading zeros.\nReturn the minimum possible sum of num1 and num2.\nNotes:\nIt is guaranteed that num does not contain any leading zeros.\nThe order of occurrence of the digits in num1 and num2 may differ from the order of occurrence of num.\n","2343":"You are given two integers memory1 and memory2 representing the available memory in bits on two memory sticks. There is currently a faulty program running that consumes an increasing amount of memory every second.\nAt the ith second (starting from 1), i bits of memory are allocated to the stick with more available memory (or from the first memory stick if both have the same available memory). If neither stick has at least i bits of available memory, the program crashes.\nReturn an array containing [crashTime, memory1crash, memory2crash], where crashTime is the time (in seconds) when the program crashed and memory1crash and memory2crash are the available bits of memory in the first and second sticks respectively.\n","2344":"Given an integer array of size n, find all elements that appear more than \u230a n\/3 \u230b times.\n","2345":"A sentence is a string of single-space separated words where each word can contain digits, lowercase letters, and the dollar sign '$'. A word represents a price if it is a sequence of digits preceded by a dollar sign.\nFor example, \"$100\", \"$23\", and \"$6\" represent prices while \"100\", \"$\", and \"$1e5\" do not.\nYou are given a string sentence representing a sentence and an integer discount. For each word representing a price, apply a discount of discount% on the price and update the word in the sentence. All updated prices should be represented with exactly two decimal places.\nReturn a string representing the modified sentence.\nNote that all prices will contain at most 10 digits.\n","2346":"A transaction is possibly invalid if:\nthe amount exceeds $1000, or;\nif it occurs within (and including) 60 minutes of another transaction with the same name in a different city.\nYou are given an array of strings transaction where transactions[i] consists of comma-separated values representing the name, time (in minutes), amount, and city of the transaction.\nReturn a list of transactions that are possibly invalid. You may return the answer in any order.\n","2347":"Given a function fn, return a new function that is identical to the original function except that it ensures fn is called at most once.\nThe first time the returned function is called, it should return the same result as fn.\nEvery subsequent time it is called, it should return undefined.\n","2348":"There is a long and thin painting that can be represented by a number line. The painting was painted with multiple overlapping segments where each segment was painted with a unique color. You are given a 2D integer array segments, where segments[i] = [starti, endi, colori] represents the half-closed segment [starti, endi) with colori as the color.\nThe colors in the overlapping segments of the painting were mixed when it was painted. When two or more colors mix, they form a new color that can be represented as a set of mixed colors.\nFor example, if colors 2, 4, and 6 are mixed, then the resulting mixed color is {2,4,6}.\nFor the sake of simplicity, you should only output the sum of the elements in the set rather than the full set.\nYou want to describe the painting with the minimum number of non-overlapping half-closed segments of these mixed colors. These segments can be represented by the 2D array painting where painting[j] = [leftj, rightj, mixj] describes a half-closed segment [leftj, rightj) with the mixed color sum of mixj.\nFor example, the painting created with segments = [[1,4,5],[1,7,7]] can be described by painting = [[1,4,12],[4,7,7]] because:\n[1,4) is colored {5,7} (with a sum of 12) from both the first and second segments.\n[4,7) is colored {7} from only the second segment.\nReturn the 2D array painting describing the finished painting (excluding any parts that are not painted). You may return the segments in any order.\nA half-closed segment [a, b) is the section of the number line between points a and b including point a and not including point b.\n","2349":"There are two mice and n different types of cheese, each type of cheese should be eaten by exactly one mouse.\nA point of the cheese with index i (0-indexed) is:\nreward1[i] if the first mouse eats it.\nreward2[i] if the second mouse eats it.\nYou are given a positive integer array reward1, a positive integer array reward2, and a non-negative integer k.\nReturn the maximum points the mice can achieve if the first mouse eats exactly k types of cheese.\n","2350":"A bit flip of a number x is choosing a bit in the binary representation of x and flipping it from either 0 to 1 or 1 to 0.\nFor example, for x = 7, the binary representation is 111 and we may choose any bit (including any leading zeros not shown) and flip it. We can flip the first bit from the right to get 110, flip the second bit from the right to get 101, flip the fifth bit from the right (a leading zero) to get 10111, etc.\nGiven two integers start and goal, return the minimum number of bit flips to convert start to goal.\n","2351":"Given a m x n binary matrix mat. In one step, you can choose one cell and flip it and all the four neighbors of it if they exist (Flip is changing 1 to 0 and 0 to 1). A pair of cells are called neighbors if they share one edge.\nReturn the minimum number of steps required to convert mat to a zero matrix or -1 if you cannot.\nA binary matrix is a matrix with all cells equal to 0 or 1 only.\nA zero matrix is a matrix with all cells equal to 0.\n","2352":"Given a multi-dimensional array arr and a depth n, return a flattened version of that array.\nA multi-dimensional array is a recursive data structure that contains integers or other multi-dimensional arrays.\nA flattened array is a version of that array with some or all of the sub-arrays removed and replaced with the actual elements in that sub-array. This flattening operation should only be done if the current depth of nesting is less than n. The depth of the elements in the first array are considered to be 0.\nPlease solve it without the built-in Array.flat method.\n","2353":"Given two non-negative integers low and high. Return the count of odd numbers between low and high (inclusive).\n","2354":"Given an array nums of n integers where nums[i] is in the range [1, n], return an array of all the integers in the range [1, n] that do not appear in nums.\n","2355":"You are given a tree with n nodes numbered from 0 to n - 1 in the form of a parent array parent where parent[i] is the parent of the ith node. The root of the tree is node 0, so parent[0] = -1 since it has no parent. You want to design a data structure that allows users to lock, unlock, and upgrade nodes in the tree.\nThe data structure should support the following functions:\nLock: Locks the given node for the given user and prevents other users from locking the same node. You may only lock a node using this function if the node is unlocked.\nUnlock: Unlocks the given node for the given user. You may only unlock a node using this function if it is currently locked by the same user.\nUpgrade: Locks the given node for the given user and unlocks all of its descendants regardless of who locked it. You may only upgrade a node if all 3 conditions are true:\nThe node is unlocked,\nIt has at least one locked descendant (by any user), and\nIt does not have any locked ancestors.\nImplement the LockingTree class:\nLockingTree(int[] parent) initializes the data structure with the parent array.\nlock(int num, int user) returns true if it is possible for the user with id user to lock the node num, or false otherwise. If it is possible, the node num will become locked by the user with id user.\nunlock(int num, int user) returns true if it is possible for the user with id user to unlock the node num, or false otherwise. If it is possible, the node num will become unlocked.\nupgrade(int num, int user) returns true if it is possible for the user with id user to upgrade the node num, or false otherwise. If it is possible, the node num will be upgraded.\n","2356":"Given an integer array nums, return the number of reverse pairs in the array.\nA reverse pair is a pair (i, j) where:\n0 <= i < j < nums.length and\nnums[i] > 2 * nums[j].\n","2357":"You are the manager of a basketball team. For the upcoming tournament, you want to choose the team with the highest overall score. The score of the team is the sum of scores of all the players in the team.\nHowever, the basketball team is not allowed to have conflicts. A conflict exists if a younger player has a strictly higher score than an older player. A conflict does not occur between players of the same age.\nGiven two lists, scores and ages, where each scores[i] and ages[i] represents the score and age of the ith player, respectively, return the highest overall score of all possible basketball teams.\n","2358":"Given an integer n, return the number of structurally unique BST's (binary search trees) which has exactly n nodes of unique values from 1 to n.\n","2359":"Given a positive integer n, find the pivot integer x such that:\nThe sum of all elements between 1 and x inclusively equals the sum of all elements between x and n inclusively.\nReturn the pivot integer x. If no such integer exists, return -1. It is guaranteed that there will be at most one pivot index for the given input.\n","2360":"You are given a 0-indexed string s and are tasked with finding two non-intersecting palindromic substrings of odd length such that the product of their lengths is maximized.\nMore formally, you want to choose four integers i, j, k, l such that 0 <= i <= j < k <= l < s.length and both the substrings s[i...j] and s[k...l] are palindromes and have odd lengths. s[i...j] denotes a substring from index i to index j inclusive.\nReturn the maximum possible product of the lengths of the two non-intersecting palindromic substrings.\nA palindrome is a string that is the same forward and backward. A substring is a contiguous sequence of characters in a string.\n","2361":"There is a special kind of apple tree that grows apples every day for n days. On the ith day, the tree grows apples[i] apples that will rot after days[i] days, that is on day i + days[i] the apples will be rotten and cannot be eaten. On some days, the apple tree does not grow any apples, which are denoted by apples[i] == 0 and days[i] == 0.\nYou decided to eat at most one apple a day (to keep the doctors away). Note that you can keep eating after the first n days.\nGiven two integer arrays days and apples of length n, return the maximum number of apples you can eat.\n","2362":"In this problem, a tree is an undirected graph that is connected and has no cycles.\nYou are given a graph that started as a tree with n nodes labeled from 1 to n, with one additional edge added. The added edge has two different vertices chosen from 1 to n, and was not an edge that already existed. The graph is represented as an array edges of length n where edges[i] = [ai, bi] indicates that there is an edge between nodes ai and bi in the graph.\nReturn an edge that can be removed so that the resulting graph is a tree of n nodes. If there are multiple answers, return the answer that occurs last in the input.\n","2363":"Given an integer array queries and a positive integer intLength, return an array answer where answer[i] is either the queries[i]th smallest positive palindrome of length intLength or -1 if no such palindrome exists.\nA palindrome is a number that reads the same backwards and forwards. Palindromes cannot have leading zeros.\n","2364":"Given a binary array nums, return the maximum number of consecutive 1's in the array.\n","2365":"You have a water dispenser that can dispense cold, warm, and hot water. Every second, you can either fill up 2 cups with different types of water, or 1 cup of any type of water.\nYou are given a 0-indexed integer array amount of length 3 where amount[0], amount[1], and amount[2] denote the number of cold, warm, and hot water cups you need to fill respectively. Return the minimum number of seconds needed to fill up all the cups.\n","2366":"You are given a 0-indexed array of unique strings words.\nA palindrome pair is a pair of integers (i, j) such that:\n0 <= i, j < words.length,\ni != j, and\nwords[i] + words[j] (the concatenation of the two strings) is a\npalindrome\n.\nReturn an array of all the palindrome pairs of words.\n","2367":"We have n jobs, where every job is scheduled to be done from startTime[i] to endTime[i], obtaining a profit of profit[i].\nYou're given the startTime, endTime and profit arrays, return the maximum profit you can take such that there are no two jobs in the subset with overlapping time range.\nIf you choose a job that ends at time X you will be able to start another job that starts at time X.\n","2368":"You are given a string of digits num, such as \"123456579\". We can split it into a Fibonacci-like sequence [123, 456, 579].\nFormally, a Fibonacci-like sequence is a list f of non-negative integers such that:\n0 <= f[i] < 231, (that is, each integer fits in a 32-bit signed integer type),\nf.length >= 3, and\nf[i] + f[i + 1] == f[i + 2] for all 0 <= i < f.length - 2.\nNote that when splitting the string into pieces, each piece must not have extra leading zeroes, except if the piece is the number 0 itself.\nReturn any Fibonacci-like sequence split from num, or return [] if it cannot be done.\n","2369":"You are given a string s, where every two consecutive vertical bars '|' are grouped into a pair. In other words, the 1st and 2nd '|' make a pair, the 3rd and 4th '|' make a pair, and so forth.\nReturn the number of '*' in s, excluding the '*' between each pair of '|'.\nNote that each '|' will belong to exactly one pair.\n","2370":"A swap is defined as taking two distinct positions in an array and swapping the values in them.\nA circular array is defined as an array where we consider the first element and the last element to be adjacent.\nGiven a binary circular array nums, return the minimum number of swaps required to group all 1's present in the array together at any location.\n","2371":"Given an array of distinct integers arr, find all pairs of elements with the minimum absolute difference of any two elements.\nReturn a list of pairs in ascending order(with respect to pairs), each pair [a, b] follows\na, b are from arr\na < b\nb - a equals to the minimum absolute difference of any two elements in arr\n","2372":"Given an array of intervals where intervals[i] = [starti, endi], merge all overlapping intervals, and return an array of the non-overlapping intervals that cover all the intervals in the input.\n","2373":"The array-form of an integer num is an array representing its digits in left to right order.\nFor example, for num = 1321, the array form is [1,3,2,1].\nGiven num, the array-form of an integer, and an integer k, return the array-form of the integer num + k.\n","2374":"Given a 0-indexed integer array nums of length n and an integer k, return the number of pairs (i, j) where 0 <= i < j < n, such that nums[i] == nums[j] and (i * j) is divisible by k.\n","2375":"Given a 0-indexed n x n integer matrix grid, return the number of pairs (ri, cj) such that row ri and column cj are equal.\nA row and column pair is considered equal if they contain the same elements in the same order (i.e., an equal array).\n","2376":"You are given an m x n grid grid where:\n'.' is an empty cell.\n'#' is a wall.\n'@' is the starting point.\nLowercase letters represent keys.\nUppercase letters represent locks.\nYou start at the starting point and one move consists of walking one space in one of the four cardinal directions. You cannot walk outside the grid, or walk into a wall.\nIf you walk over a key, you can pick it up and you cannot walk over a lock unless you have its corresponding key.\nFor some 1 <= k <= 6, there is exactly one lowercase and one uppercase letter of the first k letters of the English alphabet in the grid. This means that there is exactly one key for each lock, and one lock for each key; and also that the letters used to represent the keys and locks were chosen in the same order as the English alphabet.\nReturn the lowest number of moves to acquire all keys. If it is impossible, return -1.\n","2377":"You are given a 0-indexed array of string words and two integers left and right.\nA string is called a vowel string if it starts with a vowel character and ends with a vowel character where vowel characters are 'a', 'e', 'i', 'o', and 'u'.\nReturn the number of vowel strings words[i] where i belongs to the inclusive range [left, right].\n","2378":"The DNA sequence is composed of a series of nucleotides abbreviated as 'A', 'C', 'G', and 'T'.\nFor example, \"ACGAATTCCG\" is a DNA sequence.\nWhen studying DNA, it is useful to identify repeated sequences within the DNA.\nGiven a string s that represents a DNA sequence, return all the 10-letter-long sequences (substrings) that occur more than once in a DNA molecule. You may return the answer in any order.\n","2379":"There exists an infinitely large grid. You are currently at point (1, 1), and you need to reach the point (targetX, targetY) using a finite number of steps.\nIn one step, you can move from point (x, y) to any one of the following points:\n(x, y - x)\n(x - y, y)\n(2 * x, y)\n(x, 2 * y)\nGiven two integers targetX and targetY representing the X-coordinate and Y-coordinate of your final position, return true if you can reach the point from (1, 1) using some number of steps, and false otherwise.\n","2380":"SQL Schema\nTable: Employees\n+-------------+----------+\n| Column Name | Type     |\n+-------------+----------+\n| employee_id | int      |\n| name        | varchar  |\n| reports_to  | int      |\n| age         | int      |\n+-------------+----------+\nemployee_id is the primary key for this table.\nThis table contains information about the employees and the id of the manager they report to. Some employees do not report to anyone (reports_to is null). \n  For this problem, we will consider a manager an employee who has at least 1 other employee reporting to them.\nWrite an SQL query to report the ids and the names of all managers, the number of employees who report directly to them, and the average age of the reports rounded to the nearest integer.\nReturn the result table ordered by employee_id.\nThe query result format is in the following example.\n","2381":"Implement the class SubrectangleQueries which receives a rows x cols rectangle as a matrix of integers in the constructor and supports two methods:\n1. updateSubrectangle(int row1, int col1, int row2, int col2, int newValue)\nUpdates all values with newValue in the subrectangle whose upper left coordinate is (row1,col1) and bottom right coordinate is (row2,col2).\n2. getValue(int row, int col)\nReturns the current value of the coordinate (row,col) from the rectangle.\n","2382":"You are given a string s. We want to partition the string into as many parts as possible so that each letter appears in at most one part.\nNote that the partition is done so that after concatenating all the parts in order, the resultant string should be s.\nReturn a list of integers representing the size of these parts.\n","2383":"Given a string s, return the number of different non-empty palindromic subsequences in s. Since the answer may be very large, return it modulo 109 + 7.\nA subsequence of a string is obtained by deleting zero or more characters from the string.\nA sequence is palindromic if it is equal to the sequence reversed.\nTwo sequences a1, a2, ... and b1, b2, ... are different if there is some i for which ai != bi.\n","2384":"You are given a binary string s. In one second, all occurrences of \"01\" are simultaneously replaced with \"10\". This process repeats until no occurrences of \"01\" exist.\nReturn the number of seconds needed to complete this process.\n","2385":"There are n people, each person has a unique id between 0 and n-1. Given the arrays watchedVideos and friends, where watchedVideos[i] and friends[i] contain the list of watched videos and the list of friends respectively for the person with id = i.\nLevel 1 of videos are all watched videos by your friends, level 2 of videos are all watched videos by the friends of your friends and so on. In general, the level k of videos are all watched videos by people with the shortest path exactly equal to k with you. Given your id and the level of videos, return the list of videos ordered by their frequencies (increasing). For videos with the same frequency order them alphabetically from least to greatest. \n","2386":"Given a string s of lower and upper case English letters.\nA good string is a string which doesn't have two adjacent characters s[i] and s[i + 1] where:\n0 <= i <= s.length - 2\ns[i] is a lower-case letter and s[i + 1] is the same letter but in upper-case or vice-versa.\nTo make the string good, you can choose two adjacent characters that make the string bad and remove them. You can keep doing this until the string becomes good.\nReturn the string after making it good. The answer is guaranteed to be unique under the given constraints.\nNotice that an empty string is also good.\n","2387":"Write a function that converts an array of objects arr into a matrix m.\narr is an array of objects or arrays. Each item in the array can be deeply nested with child arrays and child objects. It can also contain numbers, strings, booleans, and null values.\nThe first row m should be the column names. If there is no nesting, the column names are the unique keys within the objects. If there is nesting, the column names are the respective paths in the object separated by \".\".\nEach of the remaining rows corresponds to an object in arr. Each value in the matrix corresponds to a value in an object. If a given object doesn't contain a value for a given column, the cell should contain an empty string \"\".\nThe colums in the matrix should be in lexographically ascending order.\n","2388":"Implement the myAtoi(string s) function, which converts a string to a 32-bit signed integer (similar to C\/C++'s atoi function).\nThe algorithm for myAtoi(string s) is as follows:\nRead in and ignore any leading whitespace.\nCheck if the next character (if not already at the end of the string) is '-' or '+'. Read this character in if it is either. This determines if the final result is negative or positive respectively. Assume the result is positive if neither is present.\nRead in next the characters until the next non-digit character or the end of the input is reached. The rest of the string is ignored.\nConvert these digits into an integer (i.e. \"123\" -> 123, \"0032\" -> 32). If no digits were read, then the integer is 0. Change the sign as necessary (from step 2).\nIf the integer is out of the 32-bit signed integer range [-231, 231 - 1], then clamp the integer so that it remains in the range. Specifically, integers less than -231 should be clamped to -231, and integers greater than 231 - 1 should be clamped to 231 - 1.\nReturn the integer as the final result.\nNote:\nOnly the space character ' ' is considered a whitespace character.\nDo not ignore any characters other than the leading whitespace or the rest of the string after the digits.\n","2389":"You are in a city that consists of n intersections numbered from 0 to n - 1 with bi-directional roads between some intersections. The inputs are generated such that you can reach any intersection from any other intersection and that there is at most one road between any two intersections.\nYou are given an integer n and a 2D integer array roads where roads[i] = [ui, vi, timei] means that there is a road between intersections ui and vi that takes timei minutes to travel. You want to know in how many ways you can travel from intersection 0 to intersection n - 1 in the shortest amount of time.\nReturn the number of ways you can arrive at your destination in the shortest amount of time. Since the answer may be large, return it modulo 109 + 7.\n","2390":"SQL Schema\nTable: Users\n+----------------+---------+\n| Column Name    | Type    |\n+----------------+---------+\n| user_id        | int     |\n| join_date      | date    |\n| favorite_brand | varchar |\n+----------------+---------+\nuser_id is the primary key of this table.\nThis table has the info of the users of an online shopping website where users can sell and buy items.\n  Table: Orders\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| order_id      | int     |\n| order_date    | date    |\n| item_id       | int     |\n| buyer_id      | int     |\n| seller_id     | int     |\n+---------------+---------+\norder_id is the primary key of this table.\nitem_id is a foreign key to the Items table.\nbuyer_id and seller_id are foreign keys to the Users table.\n  Table: Items\n+---------------+---------+\n| Column Name   | Type    |\n+---------------+---------+\n| item_id       | int     |\n| item_brand    | varchar |\n+---------------+---------+\nitem_id is the primary key of this table.\n  Write an SQL query to find for each user, the join date and the number of orders they made as a buyer in 2019.\nReturn the result table in any order.\nThe query result format is in the following example.\n","2391":"You are given a string s consisting of lowercase English letters, and you are allowed to perform operations on it. In one operation, you can replace a character in s with another lowercase English letter.\nYour task is to make s a palindrome with the minimum number of operations possible. If there are multiple palindromes that can be made using the minimum number of operations, make the lexicographically smallest one.\nA string a is lexicographically smaller than a string b (of the same length) if in the first position where a and b differ, string a has a letter that appears earlier in the alphabet than the corresponding letter in b.\nReturn the resulting palindrome string.\n","2392":"You are given an integer array nums and an integer k. You may partition nums into one or more subsequences such that each element in nums appears in exactly one of the subsequences.\nReturn the minimum number of subsequences needed such that the difference between the maximum and minimum values in each subsequence is at most k.\nA subsequence is a sequence that can be derived from another sequence by deleting some or no elements without changing the order of the remaining elements.\n","2393":"You are given two integers m and n, which represent the dimensions of a matrix.\nYou are also given the head of a linked list of integers.\nGenerate an m x n matrix that contains the integers in the linked list presented in spiral order (clockwise), starting from the top-left of the matrix. If there are remaining empty spaces, fill them with -1.\nReturn the generated matrix.\n","2394":"You are given a 0-indexed integer array arr and an integer k. The array arr is circular. In other words, the first element of the array is the next element of the last element, and the last element of the array is the previous element of the first element.\nYou can do the following operation any number of times:\nPick any element from arr and increase or decrease it by 1.\nReturn the minimum number of operations such that the sum of each subarray of length k is equal.\nA subarray is a contiguous part of the array.\n","2395":"Given a string expression representing an expression of fraction addition and subtraction, return the calculation result in string format.\nThe final result should be an irreducible fraction. If your final result is an integer, change it to the format of a fraction that has a denominator 1. So in this case, 2 should be converted to 2\/1.\n","2396":"The Hamming distance between two integers is the number of positions at which the corresponding bits are different.\nGiven an integer array nums, return the sum of Hamming distances between all the pairs of the integers in nums.\n","2397":"You are given the root of a binary tree. We install cameras on the tree nodes where each camera at a node can monitor its parent, itself, and its immediate children.\nReturn the minimum number of cameras needed to monitor all nodes of the tree.\n","2398":"You are given an integer array nums. The absolute sum of a subarray [numsl, numsl+1, ..., numsr-1, numsr] is abs(numsl + numsl+1 + ... + numsr-1 + numsr).\nReturn the maximum absolute sum of any (possibly empty) subarray of nums.\nNote that abs(x) is defined as follows:\nIf x is a negative integer, then abs(x) = -x.\nIf x is a non-negative integer, then abs(x) = x.\n","2399":"A game is played by a cat and a mouse named Cat and Mouse.\nThe environment is represented by a grid of size rows x cols, where each element is a wall, floor, player (Cat, Mouse), or food.\nPlayers are represented by the characters 'C'(Cat),'M'(Mouse).\nFloors are represented by the character '.' and can be walked on.\nWalls are represented by the character '#' and cannot be walked on.\nFood is represented by the character 'F' and can be walked on.\nThere is only one of each character 'C', 'M', and 'F' in grid.\nMouse and Cat play according to the following rules:\nMouse moves first, then they take turns to move.\nDuring each turn, Cat and Mouse can jump in one of the four directions (left, right, up, down). They cannot jump over the wall nor outside of the grid.\ncatJump, mouseJump are the maximum lengths Cat and Mouse can jump at a time, respectively. Cat and Mouse can jump less than the maximum length.\nStaying in the same position is allowed.\nMouse can jump over Cat.\nThe game can end in 4 ways:\nIf Cat occupies the same position as Mouse, Cat wins.\nIf Cat reaches the food first, Cat wins.\nIf Mouse reaches the food first, Mouse wins.\nIf Mouse cannot get to the food within 1000 turns, Cat wins.\nGiven a rows x cols matrix grid and two integers catJump and mouseJump, return true if Mouse can win the game if both Cat and Mouse play optimally, otherwise return false.\n","2400":"An array is squareful if the sum of every pair of adjacent elements is a perfect square.\nGiven an integer array nums, return the number of permutations of nums that are squareful.\nTwo permutations perm1 and perm2 are different if there is some index i such that perm1[i] != perm2[i].\n","2401":"You are given a 0-indexed array nums of n integers, and an integer k.\nThe k-radius average for a subarray of nums centered at some index i with the radius k is the average of all elements in nums between the indices i - k and i + k (inclusive). If there are less than k elements before or after the index i, then the k-radius average is -1.\nBuild and return an array avgs of length n where avgs[i] is the k-radius average for the subarray centered at index i.\nThe average of x elements is the sum of the x elements divided by x, using integer division. The integer division truncates toward zero, which means losing its fractional part.\nFor example, the average of four elements 2, 3, 1, and 5 is (2 + 3 + 1 + 5) \/ 4 = 11 \/ 4 = 2.75, which truncates to 2.\n","2402":"You are given an integer array nums with no duplicates. A maximum binary tree can be built recursively from nums using the following algorithm:\nCreate a root node whose value is the maximum value in nums.\nRecursively build the left subtree on the subarray prefix to the left of the maximum value.\nRecursively build the right subtree on the subarray suffix to the right of the maximum value.\nReturn the maximum binary tree built from nums.\n","2403":"Given the root of a binary tree, construct a string consisting of parenthesis and integers from a binary tree with the preorder traversal way, and return it.\nOmit all the empty parenthesis pairs that do not affect the one-to-one mapping relationship between the string and the original binary tree.\n","2404":"You have n jobs and m workers. You are given three arrays: difficulty, profit, and worker where:\ndifficulty[i] and profit[i] are the difficulty and the profit of the ith job, and\nworker[j] is the ability of jth worker (i.e., the jth worker can only complete a job with difficulty at most worker[j]).\nEvery worker can be assigned at most one job, but one job can be completed multiple times.\nFor example, if three workers attempt the same job that pays $1, then the total profit will be $3. If a worker cannot complete any job, their profit is $0.\nReturn the maximum profit we can achieve after assigning the workers to the jobs.\n","2405":"You are given a list of airline tickets where tickets[i] = [fromi, toi] represent the departure and the arrival airports of one flight. Reconstruct the itinerary in order and return it.\nAll of the tickets belong to a man who departs from \"JFK\", thus, the itinerary must begin with \"JFK\". If there are multiple valid itineraries, you should return the itinerary that has the smallest lexical order when read as a single string.\nFor example, the itinerary [\"JFK\", \"LGA\"] has a smaller lexical order than [\"JFK\", \"LGB\"].\nYou may assume all tickets form at least one valid itinerary. You must use all the tickets once and only once.\n"},"qlink":{"1":"https:\/\/leetcode.com\/problems\/delete-the-middle-node-of-a-linked-list\/","2":"https:\/\/leetcode.com\/problems\/minimum-difference-between-largest-and-smallest-value-in-three-moves\/","3":"https:\/\/leetcode.com\/problems\/minimum-number-of-frogs-croaking\/","4":"https:\/\/leetcode.com\/problems\/replace-words\/","5":"https:\/\/leetcode.com\/problems\/remove-all-adjacent-duplicates-in-string-ii\/","6":"https:\/\/leetcode.com\/problems\/longest-path-with-different-adjacent-characters\/","7":"https:\/\/leetcode.com\/problems\/roman-to-integer\/","8":"https:\/\/leetcode.com\/problems\/smallest-value-of-the-rearranged-number\/","9":"https:\/\/leetcode.com\/problems\/contains-duplicate\/","10":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-make-strings-equal\/","11":"https:\/\/leetcode.com\/problems\/longest-common-subsequence\/","12":"https:\/\/leetcode.com\/problems\/strange-printer-ii\/","13":"https:\/\/leetcode.com\/problems\/maximum-ice-cream-bars\/","14":"https:\/\/leetcode.com\/problems\/linked-list-in-binary-tree\/","15":"https:\/\/leetcode.com\/problems\/find-the-student-that-will-replace-the-chalk\/","16":"https:\/\/leetcode.com\/problems\/median-of-two-sorted-arrays\/","17":"https:\/\/leetcode.com\/problems\/decode-ways\/","18":"https:\/\/leetcode.com\/problems\/rotate-image\/","19":"https:\/\/leetcode.com\/problems\/find-and-replace-pattern\/","20":"https:\/\/leetcode.com\/problems\/time-needed-to-buy-tickets\/","21":"https:\/\/leetcode.com\/problems\/pairs-of-songs-with-total-durations-divisible-by-60\/","22":"https:\/\/leetcode.com\/problems\/longest-repeating-character-replacement\/","23":"https:\/\/leetcode.com\/problems\/check-if-an-original-string-exists-given-two-encoded-strings\/","24":"https:\/\/leetcode.com\/problems\/add-two-numbers-ii\/","25":"https:\/\/leetcode.com\/problems\/construct-quad-tree\/","26":"https:\/\/leetcode.com\/problems\/minimum-window-substring\/","27":"https:\/\/leetcode.com\/problems\/maximum-height-by-stacking-cuboids\/","28":"https:\/\/leetcode.com\/problems\/palindrome-partitioning\/","29":"https:\/\/leetcode.com\/problems\/sum-of-digits-of-string-after-convert\/","30":"https:\/\/leetcode.com\/problems\/cells-with-odd-values-in-a-matrix\/","31":"https:\/\/leetcode.com\/problems\/minimum-genetic-mutation\/","32":"https:\/\/leetcode.com\/problems\/closest-room\/","33":"https:\/\/leetcode.com\/problems\/combine-two-tables\/","34":"https:\/\/leetcode.com\/problems\/largest-number-at-least-twice-of-others\/","35":"https:\/\/leetcode.com\/problems\/kth-smallest-product-of-two-sorted-arrays\/","36":"https:\/\/leetcode.com\/problems\/vertical-order-traversal-of-a-binary-tree\/","37":"https:\/\/leetcode.com\/problems\/last-day-where-you-can-still-cross\/","38":"https:\/\/leetcode.com\/problems\/classes-more-than-5-students\/","39":"https:\/\/leetcode.com\/problems\/coloring-a-border\/","40":"https:\/\/leetcode.com\/problems\/count-number-of-homogenous-substrings\/","41":"https:\/\/leetcode.com\/problems\/first-bad-version\/","42":"https:\/\/leetcode.com\/problems\/valid-perfect-square\/","43":"https:\/\/leetcode.com\/problems\/special-positions-in-a-binary-matrix\/","44":"https:\/\/leetcode.com\/problems\/k-items-with-the-maximum-sum\/","45":"https:\/\/leetcode.com\/problems\/make-two-arrays-equal-by-reversing-subarrays\/","46":"https:\/\/leetcode.com\/problems\/minimum-cost-of-buying-candies-with-discount\/","47":"https:\/\/leetcode.com\/problems\/construct-the-rectangle\/","48":"https:\/\/leetcode.com\/problems\/number-of-sets-of-k-non-overlapping-line-segments\/","49":"https:\/\/leetcode.com\/problems\/circular-array-loop\/","50":"https:\/\/leetcode.com\/problems\/minimum-recolors-to-get-k-consecutive-black-blocks\/","51":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock\/","52":"https:\/\/leetcode.com\/problems\/greatest-sum-divisible-by-three\/","53":"https:\/\/leetcode.com\/problems\/remove-digit-from-number-to-maximize-result\/","54":"https:\/\/leetcode.com\/problems\/check-if-number-is-a-sum-of-powers-of-three\/","55":"https:\/\/leetcode.com\/problems\/uncrossed-lines\/","56":"https:\/\/leetcode.com\/problems\/path-sum-ii\/","57":"https:\/\/leetcode.com\/problems\/search-a-2d-matrix\/","58":"https:\/\/leetcode.com\/problems\/prime-in-diagonal\/","59":"https:\/\/leetcode.com\/problems\/second-minimum-node-in-a-binary-tree\/","60":"https:\/\/leetcode.com\/problems\/non-overlapping-intervals\/","61":"https:\/\/leetcode.com\/problems\/freedom-trail\/","62":"https:\/\/leetcode.com\/problems\/super-palindromes\/","63":"https:\/\/leetcode.com\/problems\/course-schedule-iii\/","64":"https:\/\/leetcode.com\/problems\/teemo-attacking\/","65":"https:\/\/leetcode.com\/problems\/determine-if-two-events-have-conflict\/","66":"https:\/\/leetcode.com\/problems\/calculate-digit-sum-of-a-string\/","67":"https:\/\/leetcode.com\/problems\/consecutive-numbers-sum\/","68":"https:\/\/leetcode.com\/problems\/reorder-data-in-log-files\/","69":"https:\/\/leetcode.com\/problems\/investments-in-2016\/","70":"https:\/\/leetcode.com\/problems\/display-table-of-food-orders-in-a-restaurant\/","71":"https:\/\/leetcode.com\/problems\/burst-balloons\/","72":"https:\/\/leetcode.com\/problems\/design-underground-system\/","73":"https:\/\/leetcode.com\/problems\/smallest-good-base\/","74":"https:\/\/leetcode.com\/problems\/count-number-of-teams\/","75":"https:\/\/leetcode.com\/problems\/employee-importance\/","76":"https:\/\/leetcode.com\/problems\/calculate-amount-paid-in-taxes\/","77":"https:\/\/leetcode.com\/problems\/airplane-seat-assignment-probability\/","78":"https:\/\/leetcode.com\/problems\/closest-nodes-queries-in-a-binary-search-tree\/","79":"https:\/\/leetcode.com\/problems\/distribute-money-to-maximum-children\/","80":"https:\/\/leetcode.com\/problems\/insertion-sort-list\/","81":"https:\/\/leetcode.com\/problems\/number-of-longest-increasing-subsequence\/","82":"https:\/\/leetcode.com\/problems\/query-kth-smallest-trimmed-number\/","83":"https:\/\/leetcode.com\/problems\/plates-between-candles\/","84":"https:\/\/leetcode.com\/problems\/find-a-peak-element-ii\/","85":"https:\/\/leetcode.com\/problems\/number-of-ways-to-reorder-array-to-get-same-bst\/","86":"https:\/\/leetcode.com\/problems\/split-linked-list-in-parts\/","87":"https:\/\/leetcode.com\/problems\/permutations\/","88":"https:\/\/leetcode.com\/problems\/intersection-of-multiple-arrays\/","89":"https:\/\/leetcode.com\/problems\/minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits\/","90":"https:\/\/leetcode.com\/problems\/lowest-common-ancestor-of-a-binary-search-tree\/","91":"https:\/\/leetcode.com\/problems\/count-the-number-of-beautiful-subarrays\/","92":"https:\/\/leetcode.com\/problems\/array-of-doubled-pairs\/","93":"https:\/\/leetcode.com\/problems\/encrypt-and-decrypt-strings\/","94":"https:\/\/leetcode.com\/problems\/time-to-cross-a-bridge\/","95":"https:\/\/leetcode.com\/problems\/reach-a-number\/","96":"https:\/\/leetcode.com\/problems\/the-latest-time-to-catch-a-bus\/","97":"https:\/\/leetcode.com\/problems\/maximum-sum-with-exactly-k-elements\/","98":"https:\/\/leetcode.com\/problems\/sort-integers-by-the-power-value\/","99":"https:\/\/leetcode.com\/problems\/maximum-tastiness-of-candy-basket\/","100":"https:\/\/leetcode.com\/problems\/rectangle-overlap\/","101":"https:\/\/leetcode.com\/problems\/self-crossing\/","102":"https:\/\/leetcode.com\/problems\/allocate-mailboxes\/","103":"https:\/\/leetcode.com\/problems\/stone-game-viii\/","104":"https:\/\/leetcode.com\/problems\/employees-earning-more-than-their-managers\/","105":"https:\/\/leetcode.com\/problems\/maximize-the-confusion-of-an-exam\/","106":"https:\/\/leetcode.com\/problems\/percentage-of-letter-in-string\/","107":"https:\/\/leetcode.com\/problems\/open-the-lock\/","108":"https:\/\/leetcode.com\/problems\/remove-stones-to-minimize-the-total\/","109":"https:\/\/leetcode.com\/problems\/maximum-frequency-stack\/","110":"https:\/\/leetcode.com\/problems\/finding-3-digit-even-numbers\/","111":"https:\/\/leetcode.com\/problems\/get-maximum-in-generated-array\/","112":"https:\/\/leetcode.com\/problems\/partition-list\/","113":"https:\/\/leetcode.com\/problems\/array-partition\/","114":"https:\/\/leetcode.com\/problems\/triangle\/","115":"https:\/\/leetcode.com\/problems\/get-equal-substrings-within-budget\/","116":"https:\/\/leetcode.com\/problems\/same-tree\/","117":"https:\/\/leetcode.com\/problems\/minimized-maximum-of-products-distributed-to-any-store\/","118":"https:\/\/leetcode.com\/problems\/all-divisions-with-the-highest-score-of-a-binary-array\/","119":"https:\/\/leetcode.com\/problems\/number-of-distinct-roll-sequences\/","120":"https:\/\/leetcode.com\/problems\/find-all-good-indices\/","121":"https:\/\/leetcode.com\/problems\/stock-price-fluctuation\/","122":"https:\/\/leetcode.com\/problems\/sliding-subarray-beauty\/","123":"https:\/\/leetcode.com\/problems\/check-if-a-string-can-break-another-string\/","124":"https:\/\/leetcode.com\/problems\/average-time-of-process-per-machine\/","125":"https:\/\/leetcode.com\/problems\/integer-to-english-words\/","126":"https:\/\/leetcode.com\/problems\/count-the-number-of-good-subarrays\/","127":"https:\/\/leetcode.com\/problems\/find-all-lonely-numbers-in-the-array\/","128":"https:\/\/leetcode.com\/problems\/spiral-matrix-iii\/","129":"https:\/\/leetcode.com\/problems\/jump-game-vi\/","130":"https:\/\/leetcode.com\/problems\/minimum-adjacent-swaps-for-k-consecutive-ones\/","131":"https:\/\/leetcode.com\/problems\/rank-transform-of-a-matrix\/","132":"https:\/\/leetcode.com\/problems\/patients-with-a-condition\/","133":"https:\/\/leetcode.com\/problems\/special-binary-string\/","134":"https:\/\/leetcode.com\/problems\/minimum-time-visiting-all-points\/","135":"https:\/\/leetcode.com\/problems\/managers-with-at-least-5-direct-reports\/","136":"https:\/\/leetcode.com\/problems\/minimum-average-difference\/","137":"https:\/\/leetcode.com\/problems\/set-mismatch\/","138":"https:\/\/leetcode.com\/problems\/swapping-nodes-in-a-linked-list\/","139":"https:\/\/leetcode.com\/problems\/design-graph-with-shortest-path-calculator\/","140":"https:\/\/leetcode.com\/problems\/decode-the-message\/","141":"https:\/\/leetcode.com\/problems\/shortest-cycle-in-a-graph\/","142":"https:\/\/leetcode.com\/problems\/binary-tree-coloring-game\/","143":"https:\/\/leetcode.com\/problems\/distribute-candies-to-people\/","144":"https:\/\/leetcode.com\/problems\/scramble-string\/","145":"https:\/\/leetcode.com\/problems\/sort-the-jumbled-numbers\/","146":"https:\/\/leetcode.com\/problems\/find-minimum-in-rotated-sorted-array-ii\/","147":"https:\/\/leetcode.com\/problems\/split-a-string-in-balanced-strings\/","148":"https:\/\/leetcode.com\/problems\/range-sum-query-mutable\/","149":"https:\/\/leetcode.com\/problems\/recyclable-and-low-fat-products\/","150":"https:\/\/leetcode.com\/problems\/running-sum-of-1d-array\/","151":"https:\/\/leetcode.com\/problems\/customers-who-never-order\/","152":"https:\/\/leetcode.com\/problems\/patching-array\/","153":"https:\/\/leetcode.com\/problems\/find-n-unique-integers-sum-up-to-zero\/","154":"https:\/\/leetcode.com\/problems\/implement-rand10-using-rand7\/","155":"https:\/\/leetcode.com\/problems\/design-a-text-editor\/","156":"https:\/\/leetcode.com\/problems\/minimum-number-of-vertices-to-reach-all-nodes\/","157":"https:\/\/leetcode.com\/problems\/guess-number-higher-or-lower-ii\/","158":"https:\/\/leetcode.com\/problems\/min-stack\/","159":"https:\/\/leetcode.com\/problems\/number-of-different-integers-in-a-string\/","160":"https:\/\/leetcode.com\/problems\/maximum-xor-for-each-query\/","161":"https:\/\/leetcode.com\/problems\/distinct-subsequences-ii\/","162":"https:\/\/leetcode.com\/problems\/divide-a-string-into-groups-of-size-k\/","163":"https:\/\/leetcode.com\/problems\/sort-the-matrix-diagonally\/","164":"https:\/\/leetcode.com\/problems\/check-if-there-is-a-valid-partition-for-the-array\/","165":"https:\/\/leetcode.com\/problems\/build-an-array-with-stack-operations\/","166":"https:\/\/leetcode.com\/problems\/find-players-with-zero-or-one-losses\/","167":"https:\/\/leetcode.com\/problems\/design-parking-system\/","168":"https:\/\/leetcode.com\/problems\/stone-game\/","169":"https:\/\/leetcode.com\/problems\/valid-parentheses\/","170":"https:\/\/leetcode.com\/problems\/flipping-an-image\/","171":"https:\/\/leetcode.com\/problems\/minimum-operations-to-reduce-x-to-zero\/","172":"https:\/\/leetcode.com\/problems\/adding-two-negabinary-numbers\/","173":"https:\/\/leetcode.com\/problems\/sentence-similarity-iii\/","174":"https:\/\/leetcode.com\/problems\/separate-the-digits-in-an-array\/","175":"https:\/\/leetcode.com\/problems\/triples-with-bitwise-and-equal-to-zero\/","176":"https:\/\/leetcode.com\/problems\/longest-arithmetic-subsequence-of-given-difference\/","177":"https:\/\/leetcode.com\/problems\/print-in-order\/","178":"https:\/\/leetcode.com\/problems\/largest-local-values-in-a-matrix\/","179":"https:\/\/leetcode.com\/problems\/minimum-moves-to-move-a-box-to-their-target-location\/","180":"https:\/\/leetcode.com\/problems\/longest-subsequence-repeated-k-times\/","181":"https:\/\/leetcode.com\/problems\/path-with-minimum-effort\/","182":"https:\/\/leetcode.com\/problems\/all-ancestors-of-a-node-in-a-directed-acyclic-graph\/","183":"https:\/\/leetcode.com\/problems\/magic-squares-in-grid\/","184":"https:\/\/leetcode.com\/problems\/maximum-total-importance-of-roads\/","185":"https:\/\/leetcode.com\/problems\/check-if-numbers-are-ascending-in-a-sentence\/","186":"https:\/\/leetcode.com\/problems\/car-pooling\/","187":"https:\/\/leetcode.com\/problems\/can-place-flowers\/","188":"https:\/\/leetcode.com\/problems\/count-fertile-pyramids-in-a-land\/","189":"https:\/\/leetcode.com\/problems\/day-of-the-week\/","190":"https:\/\/leetcode.com\/problems\/word-ladder-ii\/","191":"https:\/\/leetcode.com\/problems\/dota2-senate\/","192":"https:\/\/leetcode.com\/problems\/parallel-courses-ii\/","193":"https:\/\/leetcode.com\/problems\/largest-positive-integer-that-exists-with-its-negative\/","194":"https:\/\/leetcode.com\/problems\/find-substring-with-given-hash-value\/","195":"https:\/\/leetcode.com\/problems\/maximal-rectangle\/","196":"https:\/\/leetcode.com\/problems\/evaluate-boolean-binary-tree\/","197":"https:\/\/leetcode.com\/problems\/binary-tree-level-order-traversal-ii\/","198":"https:\/\/leetcode.com\/problems\/verify-preorder-serialization-of-a-binary-tree\/","199":"https:\/\/leetcode.com\/problems\/generate-random-point-in-a-circle\/","200":"https:\/\/leetcode.com\/problems\/minimum-cost-to-make-array-equal\/","201":"https:\/\/leetcode.com\/problems\/wiggle-subsequence\/","202":"https:\/\/leetcode.com\/problems\/number-of-wonderful-substrings\/","203":"https:\/\/leetcode.com\/problems\/edit-distance\/","204":"https:\/\/leetcode.com\/problems\/monotone-increasing-digits\/","205":"https:\/\/leetcode.com\/problems\/count-days-spent-together\/","206":"https:\/\/leetcode.com\/problems\/di-string-match\/","207":"https:\/\/leetcode.com\/problems\/numbers-with-repeated-digits\/","208":"https:\/\/leetcode.com\/problems\/number-of-unequal-triplets-in-array\/","209":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-make-sequences-increasing\/","210":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-reinitialize-a-permutation\/","211":"https:\/\/leetcode.com\/problems\/intersection-of-two-arrays-ii\/","212":"https:\/\/leetcode.com\/problems\/find-the-difference-of-two-arrays\/","213":"https:\/\/leetcode.com\/problems\/subarray-product-less-than-k\/","214":"https:\/\/leetcode.com\/problems\/flower-planting-with-no-adjacent\/","215":"https:\/\/leetcode.com\/problems\/maximum-gap\/","216":"https:\/\/leetcode.com\/problems\/maximum-number-of-ways-to-partition-an-array\/","217":"https:\/\/leetcode.com\/problems\/maximum-score-of-a-good-subarray\/","218":"https:\/\/leetcode.com\/problems\/factorial-trailing-zeroes\/","219":"https:\/\/leetcode.com\/problems\/increasing-triplet-subsequence\/","220":"https:\/\/leetcode.com\/problems\/counting-words-with-a-given-prefix\/","221":"https:\/\/leetcode.com\/problems\/check-if-all-as-appears-before-all-bs\/","222":"https:\/\/leetcode.com\/problems\/subarrays-with-k-different-integers\/","223":"https:\/\/leetcode.com\/problems\/tweet-counts-per-frequency\/","224":"https:\/\/leetcode.com\/problems\/lucky-numbers-in-a-matrix\/","225":"https:\/\/leetcode.com\/problems\/water-bottles\/","226":"https:\/\/leetcode.com\/problems\/stream-of-characters\/","227":"https:\/\/leetcode.com\/problems\/repeated-string-match\/","228":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-iv\/","229":"https:\/\/leetcode.com\/problems\/reverse-linked-list\/","230":"https:\/\/leetcode.com\/problems\/ugly-number-iii\/","231":"https:\/\/leetcode.com\/problems\/find-elements-in-a-contaminated-binary-tree\/","232":"https:\/\/leetcode.com\/problems\/capital-gainloss\/","233":"https:\/\/leetcode.com\/problems\/cinema-seat-allocation\/","234":"https:\/\/leetcode.com\/problems\/sliding-puzzle\/","235":"https:\/\/leetcode.com\/problems\/longest-word-in-dictionary-through-deleting\/","236":"https:\/\/leetcode.com\/problems\/snail-traversal\/","237":"https:\/\/leetcode.com\/problems\/univalued-binary-tree\/","238":"https:\/\/leetcode.com\/problems\/create-components-with-same-value\/","239":"https:\/\/leetcode.com\/problems\/largest-perimeter-triangle\/","240":"https:\/\/leetcode.com\/problems\/concatenated-words\/","241":"https:\/\/leetcode.com\/problems\/shopping-offers\/","242":"https:\/\/leetcode.com\/problems\/maximum-number-of-achievable-transfer-requests\/","243":"https:\/\/leetcode.com\/problems\/self-dividing-numbers\/","244":"https:\/\/leetcode.com\/problems\/check-array-formation-through-concatenation\/","245":"https:\/\/leetcode.com\/problems\/slowest-key\/","246":"https:\/\/leetcode.com\/problems\/number-of-students-doing-homework-at-a-given-time\/","247":"https:\/\/leetcode.com\/problems\/count-vowel-substrings-of-a-string\/","248":"https:\/\/leetcode.com\/problems\/convert-bst-to-greater-tree\/","249":"https:\/\/leetcode.com\/problems\/escape-the-ghosts\/","250":"https:\/\/leetcode.com\/problems\/maximum-length-of-repeated-subarray\/","251":"https:\/\/leetcode.com\/problems\/letter-combinations-of-a-phone-number\/","252":"https:\/\/leetcode.com\/problems\/top-k-frequent-elements\/","253":"https:\/\/leetcode.com\/problems\/shifting-letters\/","254":"https:\/\/leetcode.com\/problems\/finding-mk-average\/","255":"https:\/\/leetcode.com\/problems\/diagonal-traverse-ii\/","256":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-list\/","257":"https:\/\/leetcode.com\/problems\/longest-consecutive-sequence\/","258":"https:\/\/leetcode.com\/problems\/find-the-width-of-columns-of-a-grid\/","259":"https:\/\/leetcode.com\/problems\/data-stream-as-disjoint-intervals\/","260":"https:\/\/leetcode.com\/problems\/the-time-when-the-network-becomes-idle\/","261":"https:\/\/leetcode.com\/problems\/linked-list-components\/","262":"https:\/\/leetcode.com\/problems\/find-array-given-subset-sums\/","263":"https:\/\/leetcode.com\/problems\/container-with-most-water\/","264":"https:\/\/leetcode.com\/problems\/contain-virus\/","265":"https:\/\/leetcode.com\/problems\/reverse-integer\/","266":"https:\/\/leetcode.com\/problems\/vowels-of-all-substrings\/","267":"https:\/\/leetcode.com\/problems\/find-the-divisibility-array-of-a-string\/","268":"https:\/\/leetcode.com\/problems\/binary-tree-preorder-traversal\/","269":"https:\/\/leetcode.com\/problems\/similar-string-groups\/","270":"https:\/\/leetcode.com\/problems\/number-of-orders-in-the-backlog\/","271":"https:\/\/leetcode.com\/problems\/game-play-analysis-i\/","272":"https:\/\/leetcode.com\/problems\/sequential-digits\/","273":"https:\/\/leetcode.com\/problems\/knight-probability-in-chessboard\/","274":"https:\/\/leetcode.com\/problems\/check-if-a-string-contains-all-binary-codes-of-size-k\/","275":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-sort-a-binary-tree-by-level\/","276":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-string-sorted\/","277":"https:\/\/leetcode.com\/problems\/tree-node\/","278":"https:\/\/leetcode.com\/problems\/k-inverse-pairs-array\/","279":"https:\/\/leetcode.com\/problems\/find-duplicate-file-in-system\/","280":"https:\/\/leetcode.com\/problems\/the-score-of-students-solving-math-expression\/","281":"https:\/\/leetcode.com\/problems\/most-stones-removed-with-same-row-or-column\/","282":"https:\/\/leetcode.com\/problems\/integer-to-roman\/","283":"https:\/\/leetcode.com\/problems\/customer-who-visited-but-did-not-make-any-transactions\/","284":"https:\/\/leetcode.com\/problems\/robot-bounded-in-circle\/","285":"https:\/\/leetcode.com\/problems\/find-the-distance-value-between-two-arrays\/","286":"https:\/\/leetcode.com\/problems\/maximum-width-of-binary-tree\/","287":"https:\/\/leetcode.com\/problems\/design-twitter\/","288":"https:\/\/leetcode.com\/problems\/convert-1d-array-into-2d-array\/","289":"https:\/\/leetcode.com\/problems\/utf-8-validation\/","290":"https:\/\/leetcode.com\/problems\/number-of-flowers-in-full-bloom\/","291":"https:\/\/leetcode.com\/problems\/count-ways-to-make-array-with-product\/","292":"https:\/\/leetcode.com\/problems\/backspace-string-compare\/","293":"https:\/\/leetcode.com\/problems\/check-if-string-is-transformable-with-substring-sort-operations\/","294":"https:\/\/leetcode.com\/problems\/count-all-possible-routes\/","295":"https:\/\/leetcode.com\/problems\/last-stone-weight-ii\/","296":"https:\/\/leetcode.com\/problems\/divide-nodes-into-the-maximum-number-of-groups\/","297":"https:\/\/leetcode.com\/problems\/ugly-number-ii\/","298":"https:\/\/leetcode.com\/problems\/detect-pattern-of-length-m-repeated-k-or-more-times\/","299":"https:\/\/leetcode.com\/problems\/binary-trees-with-factors\/","300":"https:\/\/leetcode.com\/problems\/minimum-time-to-finish-the-race\/","301":"https:\/\/leetcode.com\/problems\/second-largest-digit-in-a-string\/","302":"https:\/\/leetcode.com\/problems\/most-common-word\/","303":"https:\/\/leetcode.com\/problems\/complex-number-multiplication\/","304":"https:\/\/leetcode.com\/problems\/fair-distribution-of-cookies\/","305":"https:\/\/leetcode.com\/problems\/stamping-the-sequence\/","306":"https:\/\/leetcode.com\/problems\/minimum-add-to-make-parentheses-valid\/","307":"https:\/\/leetcode.com\/problems\/remove-invalid-parentheses\/","308":"https:\/\/leetcode.com\/problems\/not-boring-movies\/","309":"https:\/\/leetcode.com\/problems\/binary-tree-tilt\/","310":"https:\/\/leetcode.com\/problems\/count-artifacts-that-can-be-extracted\/","311":"https:\/\/leetcode.com\/problems\/number-of-pairs-of-interchangeable-rectangles\/","312":"https:\/\/leetcode.com\/problems\/number-of-students-unable-to-eat-lunch\/","313":"https:\/\/leetcode.com\/problems\/maximum-width-ramp\/","314":"https:\/\/leetcode.com\/problems\/find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows\/","315":"https:\/\/leetcode.com\/problems\/maximum-number-of-removable-characters\/","316":"https:\/\/leetcode.com\/problems\/valid-mountain-array\/","317":"https:\/\/leetcode.com\/problems\/find-the-town-judge\/","318":"https:\/\/leetcode.com\/problems\/minimum-number-of-days-to-eat-n-oranges\/","319":"https:\/\/leetcode.com\/problems\/path-with-maximum-gold\/","320":"https:\/\/leetcode.com\/problems\/count-substrings-that-differ-by-one-character\/","321":"https:\/\/leetcode.com\/problems\/odd-even-jump\/","322":"https:\/\/leetcode.com\/problems\/random-pick-with-blacklist\/","323":"https:\/\/leetcode.com\/problems\/make-sum-divisible-by-p\/","324":"https:\/\/leetcode.com\/problems\/last-person-to-fit-in-the-bus\/","325":"https:\/\/leetcode.com\/problems\/iterator-for-combination\/","326":"https:\/\/leetcode.com\/problems\/merge-strings-alternately\/","327":"https:\/\/leetcode.com\/problems\/longest-binary-subsequence-less-than-or-equal-to-k\/","328":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-arrays-similar\/","329":"https:\/\/leetcode.com\/problems\/critical-connections-in-a-network\/","330":"https:\/\/leetcode.com\/problems\/goat-latin\/","331":"https:\/\/leetcode.com\/problems\/number-of-pairs-satisfying-inequality\/","332":"https:\/\/leetcode.com\/problems\/number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers\/","333":"https:\/\/leetcode.com\/problems\/smallest-range-i\/","334":"https:\/\/leetcode.com\/problems\/wiggle-sort-ii\/","335":"https:\/\/leetcode.com\/problems\/jump-game-vii\/","336":"https:\/\/leetcode.com\/problems\/student-attendance-record-ii\/","337":"https:\/\/leetcode.com\/problems\/find-the-index-of-the-first-occurrence-in-a-string\/","338":"https:\/\/leetcode.com\/problems\/count-primes\/","339":"https:\/\/leetcode.com\/problems\/contains-duplicate-iii\/","340":"https:\/\/leetcode.com\/problems\/reorder-routes-to-make-all-paths-lead-to-the-city-zero\/","341":"https:\/\/leetcode.com\/problems\/smallest-subtree-with-all-the-deepest-nodes\/","342":"https:\/\/leetcode.com\/problems\/minimum-cost-to-reach-destination-in-time\/","343":"https:\/\/leetcode.com\/problems\/replace-non-coprime-numbers-in-array\/","344":"https:\/\/leetcode.com\/problems\/palindrome-partitioning-iv\/","345":"https:\/\/leetcode.com\/problems\/longest-harmonious-subsequence\/","346":"https:\/\/leetcode.com\/problems\/avoid-flood-in-the-city\/","347":"https:\/\/leetcode.com\/problems\/minimum-penalty-for-a-shop\/","348":"https:\/\/leetcode.com\/problems\/redundant-connection-ii\/","349":"https:\/\/leetcode.com\/problems\/watering-plants\/","350":"https:\/\/leetcode.com\/problems\/super-ugly-number\/","351":"https:\/\/leetcode.com\/problems\/short-encoding-of-words\/","352":"https:\/\/leetcode.com\/problems\/minimum-number-of-arrows-to-burst-balloons\/","353":"https:\/\/leetcode.com\/problems\/first-missing-positive\/","354":"https:\/\/leetcode.com\/problems\/find-longest-awesome-substring\/","355":"https:\/\/leetcode.com\/problems\/number-of-ways-to-rearrange-sticks-with-k-sticks-visible\/","356":"https:\/\/leetcode.com\/problems\/reachable-nodes-in-subdivided-graph\/","357":"https:\/\/leetcode.com\/problems\/recover-binary-search-tree\/","358":"https:\/\/leetcode.com\/problems\/print-words-vertically\/","359":"https:\/\/leetcode.com\/problems\/number-of-ways-to-split-a-string\/","360":"https:\/\/leetcode.com\/problems\/n-queens-ii\/","361":"https:\/\/leetcode.com\/problems\/largest-1-bordered-square\/","362":"https:\/\/leetcode.com\/problems\/design-hashset\/","363":"https:\/\/leetcode.com\/problems\/most-frequent-subtree-sum\/","364":"https:\/\/leetcode.com\/problems\/apply-bitwise-operations-to-make-strings-equal\/","365":"https:\/\/leetcode.com\/problems\/triangle-judgement\/","366":"https:\/\/leetcode.com\/problems\/number-of-good-pairs\/","367":"https:\/\/leetcode.com\/problems\/check-if-a-parentheses-string-can-be-valid\/","368":"https:\/\/leetcode.com\/problems\/sort-list\/","369":"https:\/\/leetcode.com\/problems\/count-good-meals\/","370":"https:\/\/leetcode.com\/problems\/maximum-compatibility-score-sum\/","371":"https:\/\/leetcode.com\/problems\/increment-submatrices-by-one\/","372":"https:\/\/leetcode.com\/problems\/cat-and-mouse\/","373":"https:\/\/leetcode.com\/problems\/create-sorted-array-through-instructions\/","374":"https:\/\/leetcode.com\/problems\/frog-jump-ii\/","375":"https:\/\/leetcode.com\/problems\/increasing-decreasing-string\/","376":"https:\/\/leetcode.com\/problems\/convert-binary-number-in-a-linked-list-to-integer\/","377":"https:\/\/leetcode.com\/problems\/find-the-kth-largest-integer-in-the-array\/","378":"https:\/\/leetcode.com\/problems\/reverse-odd-levels-of-binary-tree\/","379":"https:\/\/leetcode.com\/problems\/minimum-moves-to-equal-array-elements-ii\/","380":"https:\/\/leetcode.com\/problems\/range-module\/","381":"https:\/\/leetcode.com\/problems\/number-of-laser-beams-in-a-bank\/","382":"https:\/\/leetcode.com\/problems\/substring-xor-queries\/","383":"https:\/\/leetcode.com\/problems\/squares-of-a-sorted-array\/","384":"https:\/\/leetcode.com\/problems\/find-all-people-with-secret\/","385":"https:\/\/leetcode.com\/problems\/where-will-the-ball-fall\/","386":"https:\/\/leetcode.com\/problems\/customers-who-bought-all-products\/","387":"https:\/\/leetcode.com\/problems\/max-difference-you-can-get-from-changing-an-integer\/","388":"https:\/\/leetcode.com\/problems\/minimum-number-of-increments-on-subarrays-to-form-a-target-array\/","389":"https:\/\/leetcode.com\/problems\/combination-sum-iii\/","390":"https:\/\/leetcode.com\/problems\/closest-divisors\/","391":"https:\/\/leetcode.com\/problems\/arranging-coins\/","392":"https:\/\/leetcode.com\/problems\/design-linked-list\/","393":"https:\/\/leetcode.com\/problems\/minimum-distance-to-type-a-word-using-two-fingers\/","394":"https:\/\/leetcode.com\/problems\/number-of-ways-to-form-a-target-string-given-a-dictionary\/","395":"https:\/\/leetcode.com\/problems\/additive-number\/","396":"https:\/\/leetcode.com\/problems\/maximum-candies-allocated-to-k-children\/","397":"https:\/\/leetcode.com\/problems\/number-of-segments-in-a-string\/","398":"https:\/\/leetcode.com\/problems\/number-of-days-between-two-dates\/","399":"https:\/\/leetcode.com\/problems\/maximum-rows-covered-by-columns\/","400":"https:\/\/leetcode.com\/problems\/restore-ip-addresses\/","401":"https:\/\/leetcode.com\/problems\/word-search-ii\/","402":"https:\/\/leetcode.com\/problems\/binary-tree-postorder-traversal\/","403":"https:\/\/leetcode.com\/problems\/count-good-numbers\/","404":"https:\/\/leetcode.com\/problems\/longest-arithmetic-subsequence\/","405":"https:\/\/leetcode.com\/problems\/card-flipping-game\/","406":"https:\/\/leetcode.com\/problems\/height-of-binary-tree-after-subtree-removal-queries\/","407":"https:\/\/leetcode.com\/problems\/cells-in-a-range-on-an-excel-sheet\/","408":"https:\/\/leetcode.com\/problems\/largest-number-after-mutating-substring\/","409":"https:\/\/leetcode.com\/problems\/count-number-of-pairs-with-absolute-difference-k\/","410":"https:\/\/leetcode.com\/problems\/smallest-rotation-with-highest-score\/","411":"https:\/\/leetcode.com\/problems\/check-if-array-is-sorted-and-rotated\/","412":"https:\/\/leetcode.com\/problems\/break-a-palindrome\/","413":"https:\/\/leetcode.com\/problems\/count-number-of-rectangles-containing-each-point\/","414":"https:\/\/leetcode.com\/problems\/stone-game-iv\/","415":"https:\/\/leetcode.com\/problems\/prime-number-of-set-bits-in-binary-representation\/","416":"https:\/\/leetcode.com\/problems\/unique-morse-code-words\/","417":"https:\/\/leetcode.com\/problems\/reverse-nodes-in-even-length-groups\/","418":"https:\/\/leetcode.com\/problems\/sleep\/","419":"https:\/\/leetcode.com\/problems\/maximum-sum-of-two-non-overlapping-subarrays\/","420":"https:\/\/leetcode.com\/problems\/odd-string-difference\/","421":"https:\/\/leetcode.com\/problems\/minimum-number-of-flips-to-make-the-binary-string-alternating\/","422":"https:\/\/leetcode.com\/problems\/excel-sheet-column-number\/","423":"https:\/\/leetcode.com\/problems\/rearrange-spaces-between-words\/","424":"https:\/\/leetcode.com\/problems\/largest-combination-with-bitwise-and-greater-than-zero\/","425":"https:\/\/leetcode.com\/problems\/number-of-visible-people-in-a-queue\/","426":"https:\/\/leetcode.com\/problems\/minimum-cost-to-merge-stones\/","427":"https:\/\/leetcode.com\/problems\/maximum-genetic-difference-query\/","428":"https:\/\/leetcode.com\/problems\/rearrange-words-in-a-sentence\/","429":"https:\/\/leetcode.com\/problems\/closest-prime-numbers-in-range\/","430":"https:\/\/leetcode.com\/problems\/strange-printer\/","431":"https:\/\/leetcode.com\/problems\/count-the-number-of-complete-components\/","432":"https:\/\/leetcode.com\/problems\/minimum-score-triangulation-of-polygon\/","433":"https:\/\/leetcode.com\/problems\/equal-rational-numbers\/","434":"https:\/\/leetcode.com\/problems\/largest-time-for-given-digits\/","435":"https:\/\/leetcode.com\/problems\/split-the-array-to-make-coprime-products\/","436":"https:\/\/leetcode.com\/problems\/sliding-window-median\/","437":"https:\/\/leetcode.com\/problems\/climbing-stairs\/","438":"https:\/\/leetcode.com\/problems\/minimum-total-distance-traveled\/","439":"https:\/\/leetcode.com\/problems\/find-missing-observations\/","440":"https:\/\/leetcode.com\/problems\/count-the-digits-that-divide-a-number\/","441":"https:\/\/leetcode.com\/problems\/collect-coins-in-a-tree\/","442":"https:\/\/leetcode.com\/problems\/concatenation-of-array\/","443":"https:\/\/leetcode.com\/problems\/check-if-all-characters-have-equal-number-of-occurrences\/","444":"https:\/\/leetcode.com\/problems\/encode-and-decode-tinyurl\/","445":"https:\/\/leetcode.com\/problems\/binary-prefix-divisible-by-5\/","446":"https:\/\/leetcode.com\/problems\/minimum-one-bit-operations-to-make-integers-zero\/","447":"https:\/\/leetcode.com\/problems\/partition-to-k-equal-sum-subsets\/","448":"https:\/\/leetcode.com\/problems\/snakes-and-ladders\/","449":"https:\/\/leetcode.com\/problems\/equal-sum-arrays-with-minimum-number-of-operations\/","450":"https:\/\/leetcode.com\/problems\/walking-robot-simulation\/","451":"https:\/\/leetcode.com\/problems\/find-the-middle-index-in-array\/","452":"https:\/\/leetcode.com\/problems\/optimal-partition-of-string\/","453":"https:\/\/leetcode.com\/problems\/least-operators-to-express-number\/","454":"https:\/\/leetcode.com\/problems\/merge-sorted-array\/","455":"https:\/\/leetcode.com\/problems\/largest-multiple-of-three\/","456":"https:\/\/leetcode.com\/problems\/sell-diminishing-valued-colored-balls\/","457":"https:\/\/leetcode.com\/problems\/put-marbles-in-bags\/","458":"https:\/\/leetcode.com\/problems\/boats-to-save-people\/","459":"https:\/\/leetcode.com\/problems\/divide-players-into-teams-of-equal-skill\/","460":"https:\/\/leetcode.com\/problems\/sorting-the-sentence\/","461":"https:\/\/leetcode.com\/problems\/move-pieces-to-obtain-a-string\/","462":"https:\/\/leetcode.com\/problems\/string-without-aaa-or-bbb\/","463":"https:\/\/leetcode.com\/problems\/split-array-with-same-average\/","464":"https:\/\/leetcode.com\/problems\/soup-servings\/","465":"https:\/\/leetcode.com\/problems\/stamping-the-grid\/","466":"https:\/\/leetcode.com\/problems\/maximum-non-negative-product-in-a-matrix\/","467":"https:\/\/leetcode.com\/problems\/single-threaded-cpu\/","468":"https:\/\/leetcode.com\/problems\/candy\/","469":"https:\/\/leetcode.com\/problems\/successful-pairs-of-spells-and-potions\/","470":"https:\/\/leetcode.com\/problems\/sum-multiples\/","471":"https:\/\/leetcode.com\/problems\/minimum-rounds-to-complete-all-tasks\/","472":"https:\/\/leetcode.com\/problems\/smallest-missing-non-negative-integer-after-operations\/","473":"https:\/\/leetcode.com\/problems\/champagne-tower\/","474":"https:\/\/leetcode.com\/problems\/rearrange-array-to-maximize-prefix-score\/","475":"https:\/\/leetcode.com\/problems\/solve-the-equation\/","476":"https:\/\/leetcode.com\/problems\/word-pattern\/","477":"https:\/\/leetcode.com\/problems\/my-calendar-ii\/","478":"https:\/\/leetcode.com\/problems\/sum-of-k-mirror-numbers\/","479":"https:\/\/leetcode.com\/problems\/split-a-string-into-the-max-number-of-unique-substrings\/","480":"https:\/\/leetcode.com\/problems\/trim-a-binary-search-tree\/","481":"https:\/\/leetcode.com\/problems\/minimum-time-to-type-word-using-special-typewriter\/","482":"https:\/\/leetcode.com\/problems\/minimum-number-of-removals-to-make-mountain-array\/","483":"https:\/\/leetcode.com\/problems\/substring-with-largest-variance\/","484":"https:\/\/leetcode.com\/problems\/keep-multiplying-found-values-by-two\/","485":"https:\/\/leetcode.com\/problems\/check-if-the-sentence-is-pangram\/","486":"https:\/\/leetcode.com\/problems\/fizz-buzz\/","487":"https:\/\/leetcode.com\/problems\/unique-binary-search-trees-ii\/","488":"https:\/\/leetcode.com\/problems\/number-of-substrings-with-only-1s\/","489":"https:\/\/leetcode.com\/problems\/smallest-index-with-equal-value\/","490":"https:\/\/leetcode.com\/problems\/bitwise-and-of-numbers-range\/","491":"https:\/\/leetcode.com\/problems\/categorize-box-according-to-criteria\/","492":"https:\/\/leetcode.com\/problems\/invert-binary-tree\/","493":"https:\/\/leetcode.com\/problems\/longest-univalue-path\/","494":"https:\/\/leetcode.com\/problems\/array-nesting\/","495":"https:\/\/leetcode.com\/problems\/maximum-value-after-insertion\/","496":"https:\/\/leetcode.com\/problems\/largest-odd-number-in-string\/","497":"https:\/\/leetcode.com\/problems\/combination-sum-iv\/","498":"https:\/\/leetcode.com\/problems\/make-number-of-distinct-characters-equal\/","499":"https:\/\/leetcode.com\/problems\/minimum-absolute-sum-difference\/","500":"https:\/\/leetcode.com\/problems\/sequentially-ordinal-rank-tracker\/","501":"https:\/\/leetcode.com\/problems\/count-integers-with-even-digit-sum\/","502":"https:\/\/leetcode.com\/problems\/gas-station\/","503":"https:\/\/leetcode.com\/problems\/bricks-falling-when-hit\/","504":"https:\/\/leetcode.com\/problems\/validate-stack-sequences\/","505":"https:\/\/leetcode.com\/problems\/lowest-common-ancestor-of-deepest-leaves\/","506":"https:\/\/leetcode.com\/problems\/find-the-difference\/","507":"https:\/\/leetcode.com\/problems\/asteroid-collision\/","508":"https:\/\/leetcode.com\/problems\/minimum-operations-to-reduce-an-integer-to-0\/","509":"https:\/\/leetcode.com\/problems\/permutation-sequence\/","510":"https:\/\/leetcode.com\/problems\/binary-subarrays-with-sum\/","511":"https:\/\/leetcode.com\/problems\/largest-sum-of-averages\/","512":"https:\/\/leetcode.com\/problems\/search-in-a-binary-search-tree\/","513":"https:\/\/leetcode.com\/problems\/russian-doll-envelopes\/","514":"https:\/\/leetcode.com\/problems\/number-of-distinct-averages\/","515":"https:\/\/leetcode.com\/problems\/maximum-number-of-words-found-in-sentences\/","516":"https:\/\/leetcode.com\/problems\/groups-of-special-equivalent-strings\/","517":"https:\/\/leetcode.com\/problems\/word-ladder\/","518":"https:\/\/leetcode.com\/problems\/fair-candy-swap\/","519":"https:\/\/leetcode.com\/problems\/user-activity-for-the-past-30-days-i\/","520":"https:\/\/leetcode.com\/problems\/3sum-with-multiplicity\/","521":"https:\/\/leetcode.com\/problems\/find-if-path-exists-in-graph\/","522":"https:\/\/leetcode.com\/problems\/minimum-number-of-food-buckets-to-feed-the-hamsters\/","523":"https:\/\/leetcode.com\/problems\/make-the-xor-of-all-segments-equal-to-zero\/","524":"https:\/\/leetcode.com\/problems\/nth-magical-number\/","525":"https:\/\/leetcode.com\/problems\/sum-of-square-numbers\/","526":"https:\/\/leetcode.com\/problems\/4sum\/","527":"https:\/\/leetcode.com\/problems\/nearest-exit-from-entrance-in-maze\/","528":"https:\/\/leetcode.com\/problems\/distinct-echo-substrings\/","529":"https:\/\/leetcode.com\/problems\/distance-between-bus-stops\/","530":"https:\/\/leetcode.com\/problems\/promise-pool\/","531":"https:\/\/leetcode.com\/problems\/remove-boxes\/","532":"https:\/\/leetcode.com\/problems\/find-kth-largest-xor-coordinate-value\/","533":"https:\/\/leetcode.com\/problems\/students-and-examinations\/","534":"https:\/\/leetcode.com\/problems\/construct-target-array-with-multiple-sums\/","535":"https:\/\/leetcode.com\/problems\/pascals-triangle-ii\/","536":"https:\/\/leetcode.com\/problems\/design-a-food-rating-system\/","537":"https:\/\/leetcode.com\/problems\/number-complement\/","538":"https:\/\/leetcode.com\/problems\/palindrome-linked-list\/","539":"https:\/\/leetcode.com\/problems\/smallest-missing-genetic-value-in-each-subtree\/","540":"https:\/\/leetcode.com\/problems\/design-memory-allocator\/","541":"https:\/\/leetcode.com\/problems\/capitalize-the-title\/","542":"https:\/\/leetcode.com\/problems\/valid-permutations-for-di-sequence\/","543":"https:\/\/leetcode.com\/problems\/the-kth-factor-of-n\/","544":"https:\/\/leetcode.com\/problems\/booking-concert-tickets-in-groups\/","545":"https:\/\/leetcode.com\/problems\/people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list\/","546":"https:\/\/leetcode.com\/problems\/maximum-white-tiles-covered-by-a-carpet\/","547":"https:\/\/leetcode.com\/problems\/different-ways-to-add-parentheses\/","548":"https:\/\/leetcode.com\/problems\/super-washing-machines\/","549":"https:\/\/leetcode.com\/problems\/count-ways-to-build-good-strings\/","550":"https:\/\/leetcode.com\/problems\/masking-personal-information\/","551":"https:\/\/leetcode.com\/problems\/strong-password-checker\/","552":"https:\/\/leetcode.com\/problems\/two-best-non-overlapping-events\/","553":"https:\/\/leetcode.com\/problems\/combination-sum\/","554":"https:\/\/leetcode.com\/problems\/minimum-money-required-before-transactions\/","555":"https:\/\/leetcode.com\/problems\/minimum-difference-between-highest-and-lowest-of-k-scores\/","556":"https:\/\/leetcode.com\/problems\/consecutive-numbers\/","557":"https:\/\/leetcode.com\/problems\/count-triplets-that-can-form-two-arrays-of-equal-xor\/","558":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-list-ii\/","559":"https:\/\/leetcode.com\/problems\/poor-pigs\/","560":"https:\/\/leetcode.com\/problems\/surface-area-of-3d-shapes\/","561":"https:\/\/leetcode.com\/problems\/find-right-interval\/","562":"https:\/\/leetcode.com\/problems\/sum-of-prefix-scores-of-strings\/","563":"https:\/\/leetcode.com\/problems\/number-of-ways-to-wear-different-hats-to-each-other\/","564":"https:\/\/leetcode.com\/problems\/cheapest-flights-within-k-stops\/","565":"https:\/\/leetcode.com\/problems\/search-in-rotated-sorted-array-ii\/","566":"https:\/\/leetcode.com\/problems\/find-good-days-to-rob-the-bank\/","567":"https:\/\/leetcode.com\/problems\/divide-array-into-equal-pairs\/","568":"https:\/\/leetcode.com\/problems\/longest-nice-subarray\/","569":"https:\/\/leetcode.com\/problems\/surrounded-regions\/","570":"https:\/\/leetcode.com\/problems\/count-array-pairs-divisible-by-k\/","571":"https:\/\/leetcode.com\/problems\/maximum-trailing-zeros-in-a-cornered-path\/","572":"https:\/\/leetcode.com\/problems\/bulb-switcher-ii\/","573":"https:\/\/leetcode.com\/problems\/design-front-middle-back-queue\/","574":"https:\/\/leetcode.com\/problems\/three-consecutive-odds\/","575":"https:\/\/leetcode.com\/problems\/the-number-of-beautiful-subsets\/","576":"https:\/\/leetcode.com\/problems\/count-binary-substrings\/","577":"https:\/\/leetcode.com\/problems\/minimum-additions-to-make-valid-string\/","578":"https:\/\/leetcode.com\/problems\/determine-color-of-a-chessboard-square\/","579":"https:\/\/leetcode.com\/problems\/remove-k-digits\/","580":"https:\/\/leetcode.com\/problems\/painting-a-grid-with-three-different-colors\/","581":"https:\/\/leetcode.com\/problems\/non-negative-integers-without-consecutive-ones\/","582":"https:\/\/leetcode.com\/problems\/design-circular-queue\/","583":"https:\/\/leetcode.com\/problems\/sort-characters-by-frequency\/","584":"https:\/\/leetcode.com\/problems\/valid-palindrome\/","585":"https:\/\/leetcode.com\/problems\/gray-code\/","586":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-array-increasing\/","587":"https:\/\/leetcode.com\/problems\/find-closest-number-to-zero\/","588":"https:\/\/leetcode.com\/problems\/check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence\/","589":"https:\/\/leetcode.com\/problems\/rotting-oranges\/","590":"https:\/\/leetcode.com\/problems\/number-of-boomerangs\/","591":"https:\/\/leetcode.com\/problems\/find-numbers-with-even-number-of-digits\/","592":"https:\/\/leetcode.com\/problems\/partition-equal-subset-sum\/","593":"https:\/\/leetcode.com\/problems\/minimum-area-rectangle-ii\/","594":"https:\/\/leetcode.com\/problems\/power-of-three\/","595":"https:\/\/leetcode.com\/problems\/find-xor-sum-of-all-pairs-bitwise-and\/","596":"https:\/\/leetcode.com\/problems\/mini-parser\/","597":"https:\/\/leetcode.com\/problems\/kth-smallest-element-in-a-sorted-matrix\/","598":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-array-beautiful\/","599":"https:\/\/leetcode.com\/problems\/range-sum-of-sorted-subarray-sums\/","600":"https:\/\/leetcode.com\/problems\/finding-the-users-active-minutes\/","601":"https:\/\/leetcode.com\/problems\/delete-leaves-with-a-given-value\/","602":"https:\/\/leetcode.com\/problems\/apply-discount-every-n-orders\/","603":"https:\/\/leetcode.com\/problems\/valid-square\/","604":"https:\/\/leetcode.com\/problems\/remove-nth-node-from-end-of-list\/","605":"https:\/\/leetcode.com\/problems\/reduce-array-size-to-the-half\/","606":"https:\/\/leetcode.com\/problems\/arithmetic-subarrays\/","607":"https:\/\/leetcode.com\/problems\/paths-in-matrix-whose-sum-is-divisible-by-k\/","608":"https:\/\/leetcode.com\/problems\/palindrome-partitioning-ii\/","609":"https:\/\/leetcode.com\/problems\/lfu-cache\/","610":"https:\/\/leetcode.com\/problems\/reverse-substrings-between-each-pair-of-parentheses\/","611":"https:\/\/leetcode.com\/problems\/count-the-number-of-square-free-subsets\/","612":"https:\/\/leetcode.com\/problems\/valid-boomerang\/","613":"https:\/\/leetcode.com\/problems\/sort-array-by-parity\/","614":"https:\/\/leetcode.com\/problems\/longest-happy-prefix\/","615":"https:\/\/leetcode.com\/problems\/shortest-distance-to-target-string-in-a-circular-array\/","616":"https:\/\/leetcode.com\/problems\/pass-the-pillow\/","617":"https:\/\/leetcode.com\/problems\/number-of-subarrays-with-gcd-equal-to-k\/","618":"https:\/\/leetcode.com\/problems\/maximum-students-taking-exam\/","619":"https:\/\/leetcode.com\/problems\/find-the-longest-valid-obstacle-course-at-each-position\/","620":"https:\/\/leetcode.com\/problems\/merge-triplets-to-form-target-triplet\/","621":"https:\/\/leetcode.com\/problems\/koko-eating-bananas\/","622":"https:\/\/leetcode.com\/problems\/maximum-number-of-non-overlapping-subarrays-with-sum-equals-target\/","623":"https:\/\/leetcode.com\/problems\/frequency-of-the-most-frequent-element\/","624":"https:\/\/leetcode.com\/problems\/build-array-from-permutation\/","625":"https:\/\/leetcode.com\/problems\/remove-comments\/","626":"https:\/\/leetcode.com\/problems\/remove-letter-to-equalize-frequency\/","627":"https:\/\/leetcode.com\/problems\/rle-iterator\/","628":"https:\/\/leetcode.com\/problems\/maximum-number-of-coins-you-can-get\/","629":"https:\/\/leetcode.com\/problems\/count-nodes-equal-to-average-of-subtree\/","630":"https:\/\/leetcode.com\/problems\/detonate-the-maximum-bombs\/","631":"https:\/\/leetcode.com\/problems\/shortest-completing-word\/","632":"https:\/\/leetcode.com\/problems\/isomorphic-strings\/","633":"https:\/\/leetcode.com\/problems\/cousins-in-binary-tree\/","634":"https:\/\/leetcode.com\/problems\/parallel-courses-iii\/","635":"https:\/\/leetcode.com\/problems\/minimum-speed-to-arrive-on-time\/","636":"https:\/\/leetcode.com\/problems\/partition-array-into-two-arrays-to-minimize-sum-difference\/","637":"https:\/\/leetcode.com\/problems\/diameter-of-binary-tree\/","638":"https:\/\/leetcode.com\/problems\/number-of-paths-with-max-score\/","639":"https:\/\/leetcode.com\/problems\/jump-game-ii\/","640":"https:\/\/leetcode.com\/problems\/maximum-score-after-splitting-a-string\/","641":"https:\/\/leetcode.com\/problems\/count-the-number-of-fair-pairs\/","642":"https:\/\/leetcode.com\/problems\/increasing-order-search-tree\/","643":"https:\/\/leetcode.com\/problems\/n-repeated-element-in-size-2n-array\/","644":"https:\/\/leetcode.com\/problems\/biggest-single-number\/","645":"https:\/\/leetcode.com\/problems\/subtree-of-another-tree\/","646":"https:\/\/leetcode.com\/problems\/greatest-english-letter-in-upper-and-lower-case\/","647":"https:\/\/leetcode.com\/problems\/merge-bsts-to-create-single-bst\/","648":"https:\/\/leetcode.com\/problems\/maximum-depth-of-n-ary-tree\/","649":"https:\/\/leetcode.com\/problems\/excel-sheet-column-title\/","650":"https:\/\/leetcode.com\/problems\/minimum-elements-to-add-to-form-a-given-sum\/","651":"https:\/\/leetcode.com\/problems\/product-of-array-except-self\/","652":"https:\/\/leetcode.com\/problems\/unique-email-addresses\/","653":"https:\/\/leetcode.com\/problems\/smallest-integer-divisible-by-k\/","654":"https:\/\/leetcode.com\/problems\/maximum-star-sum-of-a-graph\/","655":"https:\/\/leetcode.com\/problems\/frog-jump\/","656":"https:\/\/leetcode.com\/problems\/majority-element\/","657":"https:\/\/leetcode.com\/problems\/truncate-sentence\/","658":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-array-ii\/","659":"https:\/\/leetcode.com\/problems\/two-furthest-houses-with-different-colors\/","660":"https:\/\/leetcode.com\/problems\/filter-elements-from-array\/","661":"https:\/\/leetcode.com\/problems\/exclusive-time-of-functions\/","662":"https:\/\/leetcode.com\/problems\/count-unguarded-cells-in-the-grid\/","663":"https:\/\/leetcode.com\/problems\/html-entity-parser\/","664":"https:\/\/leetcode.com\/problems\/maximum-level-sum-of-a-binary-tree\/","665":"https:\/\/leetcode.com\/problems\/count-words-obtained-after-adding-a-letter\/","666":"https:\/\/leetcode.com\/problems\/maximum-of-absolute-value-expression\/","667":"https:\/\/leetcode.com\/problems\/handling-sum-queries-after-update\/","668":"https:\/\/leetcode.com\/problems\/find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree\/","669":"https:\/\/leetcode.com\/problems\/count-pairs-with-xor-in-a-range\/","670":"https:\/\/leetcode.com\/problems\/maximum-fruits-harvested-after-at-most-k-steps\/","671":"https:\/\/leetcode.com\/problems\/delete-columns-to-make-sorted-ii\/","672":"https:\/\/leetcode.com\/problems\/calculate-special-bonus\/","673":"https:\/\/leetcode.com\/problems\/find-k-closest-elements\/","674":"https:\/\/leetcode.com\/problems\/evaluate-the-bracket-pairs-of-a-string\/","675":"https:\/\/leetcode.com\/problems\/corporate-flight-bookings\/","676":"https:\/\/leetcode.com\/problems\/tree-of-coprimes\/","677":"https:\/\/leetcode.com\/problems\/verbal-arithmetic-puzzle\/","678":"https:\/\/leetcode.com\/problems\/single-number-ii\/","679":"https:\/\/leetcode.com\/problems\/detect-cycles-in-2d-grid\/","680":"https:\/\/leetcode.com\/problems\/find-in-mountain-array\/","681":"https:\/\/leetcode.com\/problems\/largest-3-same-digit-number-in-string\/","682":"https:\/\/leetcode.com\/problems\/product-price-at-a-given-date\/","683":"https:\/\/leetcode.com\/problems\/fix-names-in-a-table\/","684":"https:\/\/leetcode.com\/problems\/populating-next-right-pointers-in-each-node-ii\/","685":"https:\/\/leetcode.com\/problems\/maximum-distance-between-a-pair-of-values\/","686":"https:\/\/leetcode.com\/problems\/degree-of-an-array\/","687":"https:\/\/leetcode.com\/problems\/count-of-smaller-numbers-after-self\/","688":"https:\/\/leetcode.com\/problems\/maximum-69-number\/","689":"https:\/\/leetcode.com\/problems\/maximum-number-of-tasks-you-can-assign\/","690":"https:\/\/leetcode.com\/problems\/count-all-valid-pickup-and-delivery-options\/","691":"https:\/\/leetcode.com\/problems\/longest-substring-with-at-least-k-repeating-characters\/","692":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-array-alternating\/","693":"https:\/\/leetcode.com\/problems\/neighboring-bitwise-xor\/","694":"https:\/\/leetcode.com\/problems\/buddy-strings\/","695":"https:\/\/leetcode.com\/problems\/lexicographical-numbers\/","696":"https:\/\/leetcode.com\/problems\/maximum-sum-obtained-of-any-permutation\/","697":"https:\/\/leetcode.com\/problems\/recover-a-tree-from-preorder-traversal\/","698":"https:\/\/leetcode.com\/problems\/search-in-rotated-sorted-array\/","699":"https:\/\/leetcode.com\/problems\/add-edges-to-make-degrees-of-all-nodes-even\/","700":"https:\/\/leetcode.com\/problems\/partition-string-into-substrings-with-values-at-most-k\/","701":"https:\/\/leetcode.com\/problems\/range-sum-query-2d-immutable\/","702":"https:\/\/leetcode.com\/problems\/maximum-number-of-consecutive-values-you-can-make\/","703":"https:\/\/leetcode.com\/problems\/find-the-highest-altitude\/","704":"https:\/\/leetcode.com\/problems\/tenth-line\/","705":"https:\/\/leetcode.com\/problems\/minimum-xor-sum-of-two-arrays\/","706":"https:\/\/leetcode.com\/problems\/count-the-hidden-sequences\/","707":"https:\/\/leetcode.com\/problems\/minimum-number-of-refueling-stops\/","708":"https:\/\/leetcode.com\/problems\/count-integers-in-intervals\/","709":"https:\/\/leetcode.com\/problems\/swap-salary\/","710":"https:\/\/leetcode.com\/problems\/maximum-equal-frequency\/","711":"https:\/\/leetcode.com\/problems\/symmetric-tree\/","712":"https:\/\/leetcode.com\/problems\/smallest-range-covering-elements-from-k-lists\/","713":"https:\/\/leetcode.com\/problems\/basic-calculator-iv\/","714":"https:\/\/leetcode.com\/problems\/elimination-game\/","715":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference-in-bst\/","716":"https:\/\/leetcode.com\/problems\/sales-person\/","717":"https:\/\/leetcode.com\/problems\/ways-to-make-a-fair-array\/","718":"https:\/\/leetcode.com\/problems\/first-day-where-you-have-been-in-all-the-rooms\/","719":"https:\/\/leetcode.com\/problems\/kth-largest-sum-in-a-binary-tree\/","720":"https:\/\/leetcode.com\/problems\/flip-string-to-monotone-increasing\/","721":"https:\/\/leetcode.com\/problems\/remove-all-adjacent-duplicates-in-string\/","722":"https:\/\/leetcode.com\/problems\/get-biggest-three-rhombus-sums-in-a-grid\/","723":"https:\/\/leetcode.com\/problems\/number-of-senior-citizens\/","724":"https:\/\/leetcode.com\/problems\/goal-parser-interpretation\/","725":"https:\/\/leetcode.com\/problems\/single-element-in-a-sorted-array\/","726":"https:\/\/leetcode.com\/problems\/primary-department-for-each-employee\/","727":"https:\/\/leetcode.com\/problems\/next-permutation\/","728":"https:\/\/leetcode.com\/problems\/house-robber-iv\/","729":"https:\/\/leetcode.com\/problems\/make-array-empty\/","730":"https:\/\/leetcode.com\/problems\/possible-bipartition\/","731":"https:\/\/leetcode.com\/problems\/find-lucky-integer-in-an-array\/","732":"https:\/\/leetcode.com\/problems\/flood-fill\/","733":"https:\/\/leetcode.com\/problems\/reverse-subarray-to-maximize-array-value\/","734":"https:\/\/leetcode.com\/problems\/find-greatest-common-divisor-of-array\/","735":"https:\/\/leetcode.com\/problems\/find-original-array-from-doubled-array\/","736":"https:\/\/leetcode.com\/problems\/alert-using-same-key-card-three-or-more-times-in-a-one-hour-period\/","737":"https:\/\/leetcode.com\/problems\/sum-of-total-strength-of-wizards\/","738":"https:\/\/leetcode.com\/problems\/minimize-the-total-price-of-the-trips\/","739":"https:\/\/leetcode.com\/problems\/camelcase-matching\/","740":"https:\/\/leetcode.com\/problems\/vowel-spellchecker\/","741":"https:\/\/leetcode.com\/problems\/count-number-of-bad-pairs\/","742":"https:\/\/leetcode.com\/problems\/copy-list-with-random-pointer\/","743":"https:\/\/leetcode.com\/problems\/lemonade-change\/","744":"https:\/\/leetcode.com\/problems\/the-skyline-problem\/","745":"https:\/\/leetcode.com\/problems\/contains-duplicate-ii\/","746":"https:\/\/leetcode.com\/problems\/minimum-obstacle-removal-to-reach-corner\/","747":"https:\/\/leetcode.com\/problems\/the-employee-that-worked-on-the-longest-task\/","748":"https:\/\/leetcode.com\/problems\/n-queens\/","749":"https:\/\/leetcode.com\/problems\/watering-plants-ii\/","750":"https:\/\/leetcode.com\/problems\/erect-the-fence\/","751":"https:\/\/leetcode.com\/problems\/groups-of-strings\/","752":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-convert-time\/","753":"https:\/\/leetcode.com\/problems\/spiral-matrix\/","754":"https:\/\/leetcode.com\/problems\/number-of-ways-to-select-buildings\/","755":"https:\/\/leetcode.com\/problems\/minimum-cost-to-connect-two-groups-of-points\/","756":"https:\/\/leetcode.com\/problems\/maximum-matching-of-players-with-trainers\/","757":"https:\/\/leetcode.com\/problems\/reverse-nodes-in-k-group\/","758":"https:\/\/leetcode.com\/problems\/minimum-impossible-or\/","759":"https:\/\/leetcode.com\/problems\/execution-of-all-suffix-instructions-staying-in-a-grid\/","760":"https:\/\/leetcode.com\/problems\/the-earliest-and-latest-rounds-where-players-compete\/","761":"https:\/\/leetcode.com\/problems\/convert-sorted-list-to-binary-search-tree\/","762":"https:\/\/leetcode.com\/problems\/promise-time-limit\/","763":"https:\/\/leetcode.com\/problems\/number-of-lines-to-write-string\/","764":"https:\/\/leetcode.com\/problems\/maximize-greatness-of-an-array\/","765":"https:\/\/leetcode.com\/problems\/graph-connectivity-with-threshold\/","766":"https:\/\/leetcode.com\/problems\/path-sum-iii\/","767":"https:\/\/leetcode.com\/problems\/reduction-operations-to-make-the-array-elements-equal\/","768":"https:\/\/leetcode.com\/problems\/find-smallest-letter-greater-than-target\/","769":"https:\/\/leetcode.com\/problems\/length-of-longest-fibonacci-subsequence\/","770":"https:\/\/leetcode.com\/problems\/process-tasks-using-servers\/","771":"https:\/\/leetcode.com\/problems\/longest-palindromic-substring\/","772":"https:\/\/leetcode.com\/problems\/daily-leads-and-partners\/","773":"https:\/\/leetcode.com\/problems\/search-suggestions-system\/","774":"https:\/\/leetcode.com\/problems\/random-pick-with-weight\/","775":"https:\/\/leetcode.com\/problems\/snapshot-array\/","776":"https:\/\/leetcode.com\/problems\/number-of-steps-to-reduce-a-number-to-zero\/","777":"https:\/\/leetcode.com\/problems\/minimum-height-trees\/","778":"https:\/\/leetcode.com\/problems\/check-if-n-and-its-double-exist\/","779":"https:\/\/leetcode.com\/problems\/unique-paths-ii\/","780":"https:\/\/leetcode.com\/problems\/nth-highest-salary\/","781":"https:\/\/leetcode.com\/problems\/number-of-rectangles-that-can-form-the-largest-square\/","782":"https:\/\/leetcode.com\/problems\/valid-palindrome-ii\/","783":"https:\/\/leetcode.com\/problems\/find-the-duplicate-number\/","784":"https:\/\/leetcode.com\/problems\/number-of-pairs-of-strings-with-concatenation-equal-to-target\/","785":"https:\/\/leetcode.com\/problems\/brace-expansion-ii\/","786":"https:\/\/leetcode.com\/problems\/number-of-submatrices-that-sum-to-target\/","787":"https:\/\/leetcode.com\/problems\/brick-wall\/","788":"https:\/\/leetcode.com\/problems\/random-flip-matrix\/","789":"https:\/\/leetcode.com\/problems\/power-of-two\/","790":"https:\/\/leetcode.com\/problems\/maximum-bags-with-full-capacity-of-rocks\/","791":"https:\/\/leetcode.com\/problems\/implement-stack-using-queues\/","792":"https:\/\/leetcode.com\/problems\/create-binary-tree-from-descriptions\/","793":"https:\/\/leetcode.com\/problems\/minimum-path-cost-in-a-grid\/","794":"https:\/\/leetcode.com\/problems\/basic-calculator\/","795":"https:\/\/leetcode.com\/problems\/minimum-depth-of-binary-tree\/","796":"https:\/\/leetcode.com\/problems\/transform-to-chessboard\/","797":"https:\/\/leetcode.com\/problems\/json-deep-equal\/","798":"https:\/\/leetcode.com\/problems\/check-if-word-is-valid-after-substitutions\/","799":"https:\/\/leetcode.com\/problems\/maximal-square\/","800":"https:\/\/leetcode.com\/problems\/longest-cycle-in-a-graph\/","801":"https:\/\/leetcode.com\/problems\/baseball-game\/","802":"https:\/\/leetcode.com\/problems\/queue-reconstruction-by-height\/","803":"https:\/\/leetcode.com\/problems\/maximum-product-of-splitted-binary-tree\/","804":"https:\/\/leetcode.com\/problems\/maximum-matrix-sum\/","805":"https:\/\/leetcode.com\/problems\/matrix-block-sum\/","806":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-array-divisible\/","807":"https:\/\/leetcode.com\/problems\/time-based-key-value-store\/","808":"https:\/\/leetcode.com\/problems\/find-the-k-sum-of-an-array\/","809":"https:\/\/leetcode.com\/problems\/kth-largest-element-in-an-array\/","810":"https:\/\/leetcode.com\/problems\/pascals-triangle\/","811":"https:\/\/leetcode.com\/problems\/binary-string-with-substrings-representing-1-to-n\/","812":"https:\/\/leetcode.com\/problems\/throne-inheritance\/","813":"https:\/\/leetcode.com\/problems\/online-election\/","814":"https:\/\/leetcode.com\/problems\/memoize\/","815":"https:\/\/leetcode.com\/problems\/hamming-distance\/","816":"https:\/\/leetcode.com\/problems\/subarray-sums-divisible-by-k\/","817":"https:\/\/leetcode.com\/problems\/kth-missing-positive-number\/","818":"https:\/\/leetcode.com\/problems\/stone-game-iii\/","819":"https:\/\/leetcode.com\/problems\/find-resultant-array-after-removing-anagrams\/","820":"https:\/\/leetcode.com\/problems\/count-number-of-special-subsequences\/","821":"https:\/\/leetcode.com\/problems\/destroy-sequential-targets\/","822":"https:\/\/leetcode.com\/problems\/numbers-with-same-consecutive-differences\/","823":"https:\/\/leetcode.com\/problems\/accounts-merge\/","824":"https:\/\/leetcode.com\/problems\/rank-teams-by-votes\/","825":"https:\/\/leetcode.com\/problems\/maximum-good-people-based-on-statements\/","826":"https:\/\/leetcode.com\/problems\/check-if-word-can-be-placed-in-crossword\/","827":"https:\/\/leetcode.com\/problems\/minimum-weighted-subgraph-with-the-required-paths\/","828":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-arrange-a-binary-grid\/","829":"https:\/\/leetcode.com\/problems\/cache-with-time-limit\/","830":"https:\/\/leetcode.com\/problems\/count-subarrays-with-median-k\/","831":"https:\/\/leetcode.com\/problems\/minesweeper\/","832":"https:\/\/leetcode.com\/problems\/maximum-sum-of-distinct-subarrays-with-length-k\/","833":"https:\/\/leetcode.com\/problems\/merge-nodes-in-between-zeros\/","834":"https:\/\/leetcode.com\/problems\/smallest-string-with-a-given-numeric-value\/","835":"https:\/\/leetcode.com\/problems\/number-of-ways-to-split-array\/","836":"https:\/\/leetcode.com\/problems\/subsets-ii\/","837":"https:\/\/leetcode.com\/problems\/bitwise-ors-of-subarrays\/","838":"https:\/\/leetcode.com\/problems\/race-car\/","839":"https:\/\/leetcode.com\/problems\/number-of-valid-words-in-a-sentence\/","840":"https:\/\/leetcode.com\/problems\/delete-and-earn\/","841":"https:\/\/leetcode.com\/problems\/chunk-array\/","842":"https:\/\/leetcode.com\/problems\/shuffle-an-array\/","843":"https:\/\/leetcode.com\/problems\/longest-subsequence-with-limited-sum\/","844":"https:\/\/leetcode.com\/problems\/check-if-there-is-a-valid-parentheses-string-path\/","845":"https:\/\/leetcode.com\/problems\/path-sum\/","846":"https:\/\/leetcode.com\/problems\/earliest-possible-day-of-full-bloom\/","847":"https:\/\/leetcode.com\/problems\/reverse-only-letters\/","848":"https:\/\/leetcode.com\/problems\/count-anagrams\/","849":"https:\/\/leetcode.com\/problems\/check-if-two-string-arrays-are-equivalent\/","850":"https:\/\/leetcode.com\/problems\/subarray-with-elements-greater-than-varying-threshold\/","851":"https:\/\/leetcode.com\/problems\/design-authentication-manager\/","852":"https:\/\/leetcode.com\/problems\/number-of-closed-islands\/","853":"https:\/\/leetcode.com\/problems\/nim-game\/","854":"https:\/\/leetcode.com\/problems\/minimum-subsequence-in-non-increasing-order\/","855":"https:\/\/leetcode.com\/problems\/assign-cookies\/","856":"https:\/\/leetcode.com\/problems\/finding-pairs-with-a-certain-sum\/","857":"https:\/\/leetcode.com\/problems\/fibonacci-number\/","858":"https:\/\/leetcode.com\/problems\/split-array-largest-sum\/","859":"https:\/\/leetcode.com\/problems\/print-binary-tree\/","860":"https:\/\/leetcode.com\/problems\/integer-break\/","861":"https:\/\/leetcode.com\/problems\/sum-of-beauty-in-the-array\/","862":"https:\/\/leetcode.com\/problems\/find-followers-count\/","863":"https:\/\/leetcode.com\/problems\/number-of-people-aware-of-a-secret\/","864":"https:\/\/leetcode.com\/problems\/kids-with-the-greatest-number-of-candies\/","865":"https:\/\/leetcode.com\/problems\/complete-binary-tree-inserter\/","866":"https:\/\/leetcode.com\/problems\/occurrences-after-bigram\/","867":"https:\/\/leetcode.com\/problems\/serialize-and-deserialize-bst\/","868":"https:\/\/leetcode.com\/problems\/valid-number\/","869":"https:\/\/leetcode.com\/problems\/trapping-rain-water-ii\/","870":"https:\/\/leetcode.com\/problems\/jump-game-iv\/","871":"https:\/\/leetcode.com\/problems\/number-of-ways-to-earn-points\/","872":"https:\/\/leetcode.com\/problems\/flatten-binary-tree-to-linked-list\/","873":"https:\/\/leetcode.com\/problems\/actors-and-directors-who-cooperated-at-least-three-times\/","874":"https:\/\/leetcode.com\/problems\/maximize-number-of-nice-divisors\/","875":"https:\/\/leetcode.com\/problems\/minimum-cost-to-set-cooking-time\/","876":"https:\/\/leetcode.com\/problems\/online-stock-span\/","877":"https:\/\/leetcode.com\/problems\/minimum-cost-to-hire-k-workers\/","878":"https:\/\/leetcode.com\/problems\/minimum-number-of-steps-to-make-two-strings-anagram\/","879":"https:\/\/leetcode.com\/problems\/count-submatrices-with-all-ones\/","880":"https:\/\/leetcode.com\/problems\/maximum-product-after-k-increments\/","881":"https:\/\/leetcode.com\/problems\/relative-ranks\/","882":"https:\/\/leetcode.com\/problems\/maximize-number-of-subsequences-in-a-string\/","883":"https:\/\/leetcode.com\/problems\/three-divisors\/","884":"https:\/\/leetcode.com\/problems\/find-the-smallest-divisor-given-a-threshold\/","885":"https:\/\/leetcode.com\/problems\/number-of-digit-one\/","886":"https:\/\/leetcode.com\/problems\/flip-columns-for-maximum-number-of-equal-rows\/","887":"https:\/\/leetcode.com\/problems\/sales-analysis-iii\/","888":"https:\/\/leetcode.com\/problems\/smallest-string-starting-from-leaf\/","889":"https:\/\/leetcode.com\/problems\/my-calendar-i\/","890":"https:\/\/leetcode.com\/problems\/append-k-integers-with-minimal-sum\/","891":"https:\/\/leetcode.com\/problems\/can-i-win\/","892":"https:\/\/leetcode.com\/problems\/construct-binary-search-tree-from-preorder-traversal\/","893":"https:\/\/leetcode.com\/problems\/find-the-distinct-difference-array\/","894":"https:\/\/leetcode.com\/problems\/student-attendance-record-i\/","895":"https:\/\/leetcode.com\/problems\/available-captures-for-rook\/","896":"https:\/\/leetcode.com\/problems\/group-the-people-given-the-group-size-they-belong-to\/","897":"https:\/\/leetcode.com\/problems\/sign-of-the-product-of-an-array\/","898":"https:\/\/leetcode.com\/problems\/design-bitset\/","899":"https:\/\/leetcode.com\/problems\/sum-root-to-leaf-numbers\/","900":"https:\/\/leetcode.com\/problems\/trips-and-users\/","901":"https:\/\/leetcode.com\/problems\/interleaving-string\/","902":"https:\/\/leetcode.com\/problems\/peeking-iterator\/","903":"https:\/\/leetcode.com\/problems\/maximize-win-from-two-segments\/","904":"https:\/\/leetcode.com\/problems\/frog-position-after-t-seconds\/","905":"https:\/\/leetcode.com\/problems\/minimum-distance-between-bst-nodes\/","906":"https:\/\/leetcode.com\/problems\/distribute-candies\/","907":"https:\/\/leetcode.com\/problems\/profitable-schemes\/","908":"https:\/\/leetcode.com\/problems\/linked-list-random-node\/","909":"https:\/\/leetcode.com\/problems\/maximum-element-after-decreasing-and-rearranging\/","910":"https:\/\/leetcode.com\/problems\/calculate-money-in-leetcode-bank\/","911":"https:\/\/leetcode.com\/problems\/count-subarrays-with-score-less-than-k\/","912":"https:\/\/leetcode.com\/problems\/find-closest-node-to-given-two-nodes\/","913":"https:\/\/leetcode.com\/problems\/longest-nice-substring\/","914":"https:\/\/leetcode.com\/problems\/valid-triangle-number\/","915":"https:\/\/leetcode.com\/problems\/minimum-score-of-a-path-between-two-cities\/","916":"https:\/\/leetcode.com\/problems\/find-consecutive-integers-from-a-data-stream\/","917":"https:\/\/leetcode.com\/problems\/design-hashmap\/","918":"https:\/\/leetcode.com\/problems\/maximum-erasure-value\/","919":"https:\/\/leetcode.com\/problems\/exchange-seats\/","920":"https:\/\/leetcode.com\/problems\/maximum-score-of-spliced-array\/","921":"https:\/\/leetcode.com\/problems\/daily-temperatures\/","922":"https:\/\/leetcode.com\/problems\/check-completeness-of-a-binary-tree\/","923":"https:\/\/leetcode.com\/problems\/group-sold-products-by-the-date\/","924":"https:\/\/leetcode.com\/problems\/find-the-string-with-lcp\/","925":"https:\/\/leetcode.com\/problems\/remove-colored-pieces-if-both-neighbors-are-the-same-color\/","926":"https:\/\/leetcode.com\/problems\/top-travellers\/","927":"https:\/\/leetcode.com\/problems\/adding-spaces-to-a-string\/","928":"https:\/\/leetcode.com\/problems\/naming-a-company\/","929":"https:\/\/leetcode.com\/problems\/bank-account-summary-ii\/","930":"https:\/\/leetcode.com\/problems\/maximum-subarray-sum-with-one-deletion\/","931":"https:\/\/leetcode.com\/problems\/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree\/","932":"https:\/\/leetcode.com\/problems\/count-items-matching-a-rule\/","933":"https:\/\/leetcode.com\/problems\/sum-of-two-integers\/","934":"https:\/\/leetcode.com\/problems\/sum-of-distances-in-tree\/","935":"https:\/\/leetcode.com\/problems\/two-city-scheduling\/","936":"https:\/\/leetcode.com\/problems\/average-of-levels-in-binary-tree\/","937":"https:\/\/leetcode.com\/problems\/132-pattern\/","938":"https:\/\/leetcode.com\/problems\/shift-2d-grid\/","939":"https:\/\/leetcode.com\/problems\/path-with-maximum-probability\/","940":"https:\/\/leetcode.com\/problems\/maximum-number-of-darts-inside-of-a-circular-dartboard\/","941":"https:\/\/leetcode.com\/problems\/find-bottom-left-tree-value\/","942":"https:\/\/leetcode.com\/problems\/find-and-replace-in-string\/","943":"https:\/\/leetcode.com\/problems\/minimum-number-of-visited-cells-in-a-grid\/","944":"https:\/\/leetcode.com\/problems\/longest-square-streak-in-an-array\/","945":"https:\/\/leetcode.com\/problems\/rotated-digits\/","946":"https:\/\/leetcode.com\/problems\/longest-increasing-subsequence-ii\/","947":"https:\/\/leetcode.com\/problems\/binary-watch\/","948":"https:\/\/leetcode.com\/problems\/longest-substring-without-repeating-characters\/","949":"https:\/\/leetcode.com\/problems\/make-array-zero-by-subtracting-equal-amounts\/","950":"https:\/\/leetcode.com\/problems\/third-maximum-number\/","951":"https:\/\/leetcode.com\/problems\/sum-of-beauty-of-all-substrings\/","952":"https:\/\/leetcode.com\/problems\/generate-fibonacci-sequence\/","953":"https:\/\/leetcode.com\/problems\/longest-turbulent-subarray\/","954":"https:\/\/leetcode.com\/problems\/last-moment-before-all-ants-fall-out-of-a-plank\/","955":"https:\/\/leetcode.com\/problems\/find-score-of-an-array-after-marking-all-elements\/","956":"https:\/\/leetcode.com\/problems\/find-first-palindromic-string-in-the-array\/","957":"https:\/\/leetcode.com\/problems\/counter\/","958":"https:\/\/leetcode.com\/problems\/build-array-where-you-can-find-the-maximum-exactly-k-comparisons\/","959":"https:\/\/leetcode.com\/problems\/take-gifts-from-the-richest-pile\/","960":"https:\/\/leetcode.com\/problems\/rotate-string\/","961":"https:\/\/leetcode.com\/problems\/maximize-sum-of-array-after-k-negations\/","962":"https:\/\/leetcode.com\/problems\/best-position-for-a-service-centre\/","963":"https:\/\/leetcode.com\/problems\/minimum-initial-energy-to-finish-tasks\/","964":"https:\/\/leetcode.com\/problems\/range-sum-query-immutable\/","965":"https:\/\/leetcode.com\/problems\/find-servers-that-handled-most-number-of-requests\/","966":"https:\/\/leetcode.com\/problems\/find-three-consecutive-integers-that-sum-to-a-given-number\/","967":"https:\/\/leetcode.com\/problems\/regions-cut-by-slashes\/","968":"https:\/\/leetcode.com\/problems\/maximum-points-you-can-obtain-from-cards\/","969":"https:\/\/leetcode.com\/problems\/count-special-integers\/","970":"https:\/\/leetcode.com\/problems\/domino-and-tromino-tiling\/","971":"https:\/\/leetcode.com\/problems\/maximum-split-of-positive-even-integers\/","972":"https:\/\/leetcode.com\/problems\/swap-nodes-in-pairs\/","973":"https:\/\/leetcode.com\/problems\/maximum-number-of-visible-points\/","974":"https:\/\/leetcode.com\/problems\/print-foobar-alternately\/","975":"https:\/\/leetcode.com\/problems\/maximum-candies-you-can-get-from-boxes\/","976":"https:\/\/leetcode.com\/problems\/convert-the-temperature\/","977":"https:\/\/leetcode.com\/problems\/maximum-xor-after-operations\/","978":"https:\/\/leetcode.com\/problems\/minimum-numbers-of-function-calls-to-make-target-array\/","979":"https:\/\/leetcode.com\/problems\/minimum-number-of-taps-to-open-to-water-a-garden\/","980":"https:\/\/leetcode.com\/problems\/count-common-words-with-one-occurrence\/","981":"https:\/\/leetcode.com\/problems\/count-good-triplets\/","982":"https:\/\/leetcode.com\/problems\/maximum-repeating-substring\/","983":"https:\/\/leetcode.com\/problems\/sum-game\/","984":"https:\/\/leetcode.com\/problems\/number-of-nodes-in-the-sub-tree-with-the-same-label\/","985":"https:\/\/leetcode.com\/problems\/minimum-domino-rotations-for-equal-row\/","986":"https:\/\/leetcode.com\/problems\/can-convert-string-in-k-moves\/","987":"https:\/\/leetcode.com\/problems\/maximum-difference-between-node-and-ancestor\/","988":"https:\/\/leetcode.com\/problems\/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n\/","989":"https:\/\/leetcode.com\/problems\/friends-of-appropriate-ages\/","990":"https:\/\/leetcode.com\/problems\/number-of-good-paths\/","991":"https:\/\/leetcode.com\/problems\/height-checker\/","992":"https:\/\/leetcode.com\/problems\/range-sum-of-bst\/","993":"https:\/\/leetcode.com\/problems\/minimum-cost-of-a-path-with-special-roads\/","994":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference-queries\/","995":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-array-k-increasing\/","996":"https:\/\/leetcode.com\/problems\/latest-time-by-replacing-hidden-digits\/","997":"https:\/\/leetcode.com\/problems\/maximum-number-of-groups-entering-a-competition\/","998":"https:\/\/leetcode.com\/problems\/n-ary-tree-preorder-traversal\/","999":"https:\/\/leetcode.com\/problems\/sum-of-subarray-ranges\/","1000":"https:\/\/leetcode.com\/problems\/least-number-of-unique-integers-after-k-removals\/","1001":"https:\/\/leetcode.com\/problems\/reverse-string\/","1002":"https:\/\/leetcode.com\/problems\/unique-substrings-in-wraparound-string\/","1003":"https:\/\/leetcode.com\/problems\/minimum-remove-to-make-valid-parentheses\/","1004":"https:\/\/leetcode.com\/problems\/design-circular-deque\/","1005":"https:\/\/leetcode.com\/problems\/maximum-number-of-balloons\/","1006":"https:\/\/leetcode.com\/problems\/count-number-of-possible-root-nodes\/","1007":"https:\/\/leetcode.com\/problems\/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit\/","1008":"https:\/\/leetcode.com\/problems\/unique-paths-iii\/","1009":"https:\/\/leetcode.com\/problems\/minimum-value-to-get-positive-step-by-step-sum\/","1010":"https:\/\/leetcode.com\/problems\/check-if-binary-string-has-at-most-one-segment-of-ones\/","1011":"https:\/\/leetcode.com\/problems\/partition-array-for-maximum-sum\/","1012":"https:\/\/leetcode.com\/problems\/minimum-adjacent-swaps-to-reach-the-kth-smallest-number\/","1013":"https:\/\/leetcode.com\/problems\/maximize-distance-to-closest-person\/","1014":"https:\/\/leetcode.com\/problems\/satisfiability-of-equality-equations\/","1015":"https:\/\/leetcode.com\/problems\/merge-similar-items\/","1016":"https:\/\/leetcode.com\/problems\/best-poker-hand\/","1017":"https:\/\/leetcode.com\/problems\/decoded-string-at-index\/","1018":"https:\/\/leetcode.com\/problems\/cousins-in-binary-tree-ii\/","1019":"https:\/\/leetcode.com\/problems\/find-the-closest-palindrome\/","1020":"https:\/\/leetcode.com\/problems\/keyboard-row\/","1021":"https:\/\/leetcode.com\/problems\/construct-smallest-number-from-di-string\/","1022":"https:\/\/leetcode.com\/problems\/binary-tree-right-side-view\/","1023":"https:\/\/leetcode.com\/problems\/largest-merge-of-two-strings\/","1024":"https:\/\/leetcode.com\/problems\/rearrange-characters-to-make-target-string\/","1025":"https:\/\/leetcode.com\/problems\/largest-palindromic-number\/","1026":"https:\/\/leetcode.com\/problems\/maximum-subsequence-score\/","1027":"https:\/\/leetcode.com\/problems\/largest-component-size-by-common-factor\/","1028":"https:\/\/leetcode.com\/problems\/find-latest-group-of-size-m\/","1029":"https:\/\/leetcode.com\/problems\/3sum-closest\/","1030":"https:\/\/leetcode.com\/problems\/minimum-white-tiles-after-covering-with-carpets\/","1031":"https:\/\/leetcode.com\/problems\/maximum-score-from-removing-stones\/","1032":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-all-array-elements-equal-to-1\/","1033":"https:\/\/leetcode.com\/problems\/rising-temperature\/","1034":"https:\/\/leetcode.com\/problems\/apply-transform-over-each-element-in-array\/","1035":"https:\/\/leetcode.com\/problems\/long-pressed-name\/","1036":"https:\/\/leetcode.com\/problems\/number-of-atoms\/","1037":"https:\/\/leetcode.com\/problems\/build-a-matrix-with-conditions\/","1038":"https:\/\/leetcode.com\/problems\/k-diff-pairs-in-an-array\/","1039":"https:\/\/leetcode.com\/problems\/apply-operations-to-an-array\/","1040":"https:\/\/leetcode.com\/problems\/maximum-difference-between-increasing-elements\/","1041":"https:\/\/leetcode.com\/problems\/delete-columns-to-make-sorted\/","1042":"https:\/\/leetcode.com\/problems\/task-scheduler-ii\/","1043":"https:\/\/leetcode.com\/problems\/decrypt-string-from-alphabet-to-integer-mapping\/","1044":"https:\/\/leetcode.com\/problems\/longest-uploaded-prefix\/","1045":"https:\/\/leetcode.com\/problems\/longest-common-subpath\/","1046":"https:\/\/leetcode.com\/problems\/number-of-ways-to-stay-in-the-same-place-after-some-steps\/","1047":"https:\/\/leetcode.com\/problems\/video-stitching\/","1048":"https:\/\/leetcode.com\/problems\/find-customer-referee\/","1049":"https:\/\/leetcode.com\/problems\/minimize-malware-spread-ii\/","1050":"https:\/\/leetcode.com\/problems\/richest-customer-wealth\/","1051":"https:\/\/leetcode.com\/problems\/shortest-subarray-to-be-removed-to-make-array-sorted\/","1052":"https:\/\/leetcode.com\/problems\/words-within-two-edits-of-dictionary\/","1053":"https:\/\/leetcode.com\/problems\/powerful-integers\/","1054":"https:\/\/leetcode.com\/problems\/unique-number-of-occurrences\/","1055":"https:\/\/leetcode.com\/problems\/cherry-pickup\/","1056":"https:\/\/leetcode.com\/problems\/as-far-from-land-as-possible\/","1057":"https:\/\/leetcode.com\/problems\/minimum-degree-of-a-connected-trio-in-a-graph\/","1058":"https:\/\/leetcode.com\/problems\/course-schedule-ii\/","1059":"https:\/\/leetcode.com\/problems\/maximum-nesting-depth-of-two-valid-parentheses-strings\/","1060":"https:\/\/leetcode.com\/problems\/range-product-queries-of-powers\/","1061":"https:\/\/leetcode.com\/problems\/check-if-object-instance-of-class\/","1062":"https:\/\/leetcode.com\/problems\/clumsy-factorial\/","1063":"https:\/\/leetcode.com\/problems\/random-point-in-non-overlapping-rectangles\/","1064":"https:\/\/leetcode.com\/problems\/x-of-a-kind-in-a-deck-of-cards\/","1065":"https:\/\/leetcode.com\/problems\/pyramid-transition-matrix\/","1066":"https:\/\/leetcode.com\/problems\/sort-array-by-increasing-frequency\/","1067":"https:\/\/leetcode.com\/problems\/merge-two-2d-arrays-by-summing-values\/","1068":"https:\/\/leetcode.com\/problems\/beautiful-arrangement-ii\/","1069":"https:\/\/leetcode.com\/problems\/minimum-total-space-wasted-with-k-resizing-operations\/","1070":"https:\/\/leetcode.com\/problems\/insert-into-a-binary-search-tree\/","1071":"https:\/\/leetcode.com\/problems\/shortest-unsorted-continuous-subarray\/","1072":"https:\/\/leetcode.com\/problems\/prison-cells-after-n-days\/","1073":"https:\/\/leetcode.com\/problems\/reordered-power-of-2\/","1074":"https:\/\/leetcode.com\/problems\/removing-minimum-number-of-magic-beans\/","1075":"https:\/\/leetcode.com\/problems\/minimum-addition-to-make-integer-beautiful\/","1076":"https:\/\/leetcode.com\/problems\/find-pivot-index\/","1077":"https:\/\/leetcode.com\/problems\/find-the-maximum-number-of-marked-indices\/","1078":"https:\/\/leetcode.com\/problems\/counter-ii\/","1079":"https:\/\/leetcode.com\/problems\/first-unique-character-in-a-string\/","1080":"https:\/\/leetcode.com\/problems\/longest-happy-string\/","1081":"https:\/\/leetcode.com\/problems\/function-composition\/","1082":"https:\/\/leetcode.com\/problems\/remove-one-element-to-make-the-array-strictly-increasing\/","1083":"https:\/\/leetcode.com\/problems\/longest-substring-of-one-repeating-character\/","1084":"https:\/\/leetcode.com\/problems\/immediate-food-delivery-ii\/","1085":"https:\/\/leetcode.com\/problems\/number-of-zero-filled-subarrays\/","1086":"https:\/\/leetcode.com\/problems\/maximum-nesting-depth-of-the-parentheses\/","1087":"https:\/\/leetcode.com\/problems\/design-a-number-container-system\/","1088":"https:\/\/leetcode.com\/problems\/maximal-network-rank\/","1089":"https:\/\/leetcode.com\/problems\/merge-in-between-linked-lists\/","1090":"https:\/\/leetcode.com\/problems\/construct-k-palindrome-strings\/","1091":"https:\/\/leetcode.com\/problems\/find-target-indices-after-sorting-array\/","1092":"https:\/\/leetcode.com\/problems\/check-if-array-pairs-are-divisible-by-k\/","1093":"https:\/\/leetcode.com\/problems\/maximum-alternating-subsequence-sum\/","1094":"https:\/\/leetcode.com\/problems\/powx-n\/","1095":"https:\/\/leetcode.com\/problems\/maximum-difference-by-remapping-a-digit\/","1096":"https:\/\/leetcode.com\/problems\/projection-area-of-3d-shapes\/","1097":"https:\/\/leetcode.com\/problems\/day-of-the-year\/","1098":"https:\/\/leetcode.com\/problems\/meeting-rooms-iii\/","1099":"https:\/\/leetcode.com\/problems\/find-largest-value-in-each-tree-row\/","1100":"https:\/\/leetcode.com\/problems\/maximum-number-of-non-overlapping-substrings\/","1101":"https:\/\/leetcode.com\/problems\/maximum-number-of-points-from-grid-queries\/","1102":"https:\/\/leetcode.com\/problems\/friend-requests-ii-who-has-the-most-friends\/","1103":"https:\/\/leetcode.com\/problems\/left-and-right-sum-differences\/","1104":"https:\/\/leetcode.com\/problems\/distinct-subsequences\/","1105":"https:\/\/leetcode.com\/problems\/permutations-ii\/","1106":"https:\/\/leetcode.com\/problems\/cyclically-rotating-a-grid\/","1107":"https:\/\/leetcode.com\/problems\/rearrange-array-elements-by-sign\/","1108":"https:\/\/leetcode.com\/problems\/partitioning-into-minimum-number-of-deci-binary-numbers\/","1109":"https:\/\/leetcode.com\/problems\/jump-game\/","1110":"https:\/\/leetcode.com\/problems\/concatenation-of-consecutive-binary-numbers\/","1111":"https:\/\/leetcode.com\/problems\/find-the-maximum-divisibility-score\/","1112":"https:\/\/leetcode.com\/problems\/difference-between-maximum-and-minimum-price-sum\/","1113":"https:\/\/leetcode.com\/problems\/count-servers-that-communicate\/","1114":"https:\/\/leetcode.com\/problems\/count-largest-group\/","1115":"https:\/\/leetcode.com\/problems\/check-if-all-the-integers-in-a-range-are-covered\/","1116":"https:\/\/leetcode.com\/problems\/second-minimum-time-to-reach-destination\/","1117":"https:\/\/leetcode.com\/problems\/shortest-palindrome\/","1118":"https:\/\/leetcode.com\/problems\/maximum-sum-of-3-non-overlapping-subarrays\/","1119":"https:\/\/leetcode.com\/problems\/group-by\/","1120":"https:\/\/leetcode.com\/problems\/remove-duplicate-letters\/","1121":"https:\/\/leetcode.com\/problems\/special-array-with-x-elements-greater-than-or-equal-x\/","1122":"https:\/\/leetcode.com\/problems\/bus-routes\/","1123":"https:\/\/leetcode.com\/problems\/maximum-subarray\/","1124":"https:\/\/leetcode.com\/problems\/sum-of-nodes-with-even-valued-grandparent\/","1125":"https:\/\/leetcode.com\/problems\/three-equal-parts\/","1126":"https:\/\/leetcode.com\/problems\/permutation-in-string\/","1127":"https:\/\/leetcode.com\/problems\/maximum-points-in-an-archery-competition\/","1128":"https:\/\/leetcode.com\/problems\/sum-of-floored-pairs\/","1129":"https:\/\/leetcode.com\/problems\/remove-all-occurrences-of-a-substring\/","1130":"https:\/\/leetcode.com\/problems\/find-k-th-smallest-pair-distance\/","1131":"https:\/\/leetcode.com\/problems\/01-matrix\/","1132":"https:\/\/leetcode.com\/problems\/my-calendar-iii\/","1133":"https:\/\/leetcode.com\/problems\/minimum-reverse-operations\/","1134":"https:\/\/leetcode.com\/problems\/removing-minimum-and-maximum-from-array\/","1135":"https:\/\/leetcode.com\/problems\/deepest-leaves-sum\/","1136":"https:\/\/leetcode.com\/problems\/multiply-strings\/","1137":"https:\/\/leetcode.com\/problems\/making-file-names-unique\/","1138":"https:\/\/leetcode.com\/problems\/peak-index-in-a-mountain-array\/","1139":"https:\/\/leetcode.com\/problems\/longest-subarray-of-1s-after-deleting-one-element\/","1140":"https:\/\/leetcode.com\/problems\/take-k-of-each-character-from-left-and-right\/","1141":"https:\/\/leetcode.com\/problems\/reverse-words-in-a-string-iii\/","1142":"https:\/\/leetcode.com\/problems\/shortest-subarray-with-sum-at-least-k\/","1143":"https:\/\/leetcode.com\/problems\/reverse-string-ii\/","1144":"https:\/\/leetcode.com\/problems\/daily-temperatures\/","1145":"https:\/\/leetcode.com\/problems\/check-completeness-of-a-binary-tree\/","1146":"https:\/\/leetcode.com\/problems\/group-sold-products-by-the-date\/","1147":"https:\/\/leetcode.com\/problems\/find-the-string-with-lcp\/","1148":"https:\/\/leetcode.com\/problems\/remove-colored-pieces-if-both-neighbors-are-the-same-color\/","1149":"https:\/\/leetcode.com\/problems\/top-travellers\/","1150":"https:\/\/leetcode.com\/problems\/adding-spaces-to-a-string\/","1151":"https:\/\/leetcode.com\/problems\/naming-a-company\/","1152":"https:\/\/leetcode.com\/problems\/bank-account-summary-ii\/","1153":"https:\/\/leetcode.com\/problems\/maximum-subarray-sum-with-one-deletion\/","1154":"https:\/\/leetcode.com\/problems\/find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree\/","1155":"https:\/\/leetcode.com\/problems\/count-items-matching-a-rule\/","1156":"https:\/\/leetcode.com\/problems\/sum-of-two-integers\/","1157":"https:\/\/leetcode.com\/problems\/sum-of-distances-in-tree\/","1158":"https:\/\/leetcode.com\/problems\/two-city-scheduling\/","1159":"https:\/\/leetcode.com\/problems\/average-of-levels-in-binary-tree\/","1160":"https:\/\/leetcode.com\/problems\/132-pattern\/","1161":"https:\/\/leetcode.com\/problems\/shift-2d-grid\/","1162":"https:\/\/leetcode.com\/problems\/path-with-maximum-probability\/","1163":"https:\/\/leetcode.com\/problems\/maximum-number-of-darts-inside-of-a-circular-dartboard\/","1164":"https:\/\/leetcode.com\/problems\/find-bottom-left-tree-value\/","1165":"https:\/\/leetcode.com\/problems\/find-and-replace-in-string\/","1166":"https:\/\/leetcode.com\/problems\/minimum-number-of-visited-cells-in-a-grid\/","1167":"https:\/\/leetcode.com\/problems\/longest-square-streak-in-an-array\/","1168":"https:\/\/leetcode.com\/problems\/rotated-digits\/","1169":"https:\/\/leetcode.com\/problems\/longest-increasing-subsequence-ii\/","1170":"https:\/\/leetcode.com\/problems\/binary-watch\/","1171":"https:\/\/leetcode.com\/problems\/longest-substring-without-repeating-characters\/","1172":"https:\/\/leetcode.com\/problems\/make-array-zero-by-subtracting-equal-amounts\/","1173":"https:\/\/leetcode.com\/problems\/third-maximum-number\/","1174":"https:\/\/leetcode.com\/problems\/sum-of-beauty-of-all-substrings\/","1175":"https:\/\/leetcode.com\/problems\/generate-fibonacci-sequence\/","1176":"https:\/\/leetcode.com\/problems\/longest-turbulent-subarray\/","1177":"https:\/\/leetcode.com\/problems\/last-moment-before-all-ants-fall-out-of-a-plank\/","1178":"https:\/\/leetcode.com\/problems\/find-score-of-an-array-after-marking-all-elements\/","1179":"https:\/\/leetcode.com\/problems\/find-first-palindromic-string-in-the-array\/","1180":"https:\/\/leetcode.com\/problems\/counter\/","1181":"https:\/\/leetcode.com\/problems\/build-array-where-you-can-find-the-maximum-exactly-k-comparisons\/","1182":"https:\/\/leetcode.com\/problems\/take-gifts-from-the-richest-pile\/","1183":"https:\/\/leetcode.com\/problems\/rotate-string\/","1184":"https:\/\/leetcode.com\/problems\/maximize-sum-of-array-after-k-negations\/","1185":"https:\/\/leetcode.com\/problems\/best-position-for-a-service-centre\/","1186":"https:\/\/leetcode.com\/problems\/minimum-initial-energy-to-finish-tasks\/","1187":"https:\/\/leetcode.com\/problems\/range-sum-query-immutable\/","1188":"https:\/\/leetcode.com\/problems\/find-servers-that-handled-most-number-of-requests\/","1189":"https:\/\/leetcode.com\/problems\/find-three-consecutive-integers-that-sum-to-a-given-number\/","1190":"https:\/\/leetcode.com\/problems\/regions-cut-by-slashes\/","1191":"https:\/\/leetcode.com\/problems\/maximum-points-you-can-obtain-from-cards\/","1192":"https:\/\/leetcode.com\/problems\/count-special-integers\/","1193":"https:\/\/leetcode.com\/problems\/domino-and-tromino-tiling\/","1194":"https:\/\/leetcode.com\/problems\/maximum-split-of-positive-even-integers\/","1195":"https:\/\/leetcode.com\/problems\/swap-nodes-in-pairs\/","1196":"https:\/\/leetcode.com\/problems\/maximum-number-of-visible-points\/","1197":"https:\/\/leetcode.com\/problems\/print-foobar-alternately\/","1198":"https:\/\/leetcode.com\/problems\/maximum-candies-you-can-get-from-boxes\/","1199":"https:\/\/leetcode.com\/problems\/convert-the-temperature\/","1200":"https:\/\/leetcode.com\/problems\/maximum-xor-after-operations\/","1201":"https:\/\/leetcode.com\/problems\/minimum-numbers-of-function-calls-to-make-target-array\/","1202":"https:\/\/leetcode.com\/problems\/minimum-number-of-taps-to-open-to-water-a-garden\/","1203":"https:\/\/leetcode.com\/problems\/count-common-words-with-one-occurrence\/","1204":"https:\/\/leetcode.com\/problems\/count-good-triplets\/","1205":"https:\/\/leetcode.com\/problems\/maximum-repeating-substring\/","1206":"https:\/\/leetcode.com\/problems\/sum-game\/","1207":"https:\/\/leetcode.com\/problems\/number-of-nodes-in-the-sub-tree-with-the-same-label\/","1208":"https:\/\/leetcode.com\/problems\/minimum-domino-rotations-for-equal-row\/","1209":"https:\/\/leetcode.com\/problems\/can-convert-string-in-k-moves\/","1210":"https:\/\/leetcode.com\/problems\/maximum-difference-between-node-and-ancestor\/","1211":"https:\/\/leetcode.com\/problems\/the-k-th-lexicographical-string-of-all-happy-strings-of-length-n\/","1212":"https:\/\/leetcode.com\/problems\/friends-of-appropriate-ages\/","1213":"https:\/\/leetcode.com\/problems\/number-of-good-paths\/","1214":"https:\/\/leetcode.com\/problems\/height-checker\/","1215":"https:\/\/leetcode.com\/problems\/range-sum-of-bst\/","1216":"https:\/\/leetcode.com\/problems\/minimum-cost-of-a-path-with-special-roads\/","1217":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference-queries\/","1218":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-the-array-k-increasing\/","1219":"https:\/\/leetcode.com\/problems\/latest-time-by-replacing-hidden-digits\/","1220":"https:\/\/leetcode.com\/problems\/maximum-number-of-groups-entering-a-competition\/","1221":"https:\/\/leetcode.com\/problems\/n-ary-tree-preorder-traversal\/","1222":"https:\/\/leetcode.com\/problems\/sum-of-subarray-ranges\/","1223":"https:\/\/leetcode.com\/problems\/least-number-of-unique-integers-after-k-removals\/","1224":"https:\/\/leetcode.com\/problems\/reverse-string\/","1225":"https:\/\/leetcode.com\/problems\/unique-substrings-in-wraparound-string\/","1226":"https:\/\/leetcode.com\/problems\/minimum-remove-to-make-valid-parentheses\/","1227":"https:\/\/leetcode.com\/problems\/design-circular-deque\/","1228":"https:\/\/leetcode.com\/problems\/maximum-number-of-balloons\/","1229":"https:\/\/leetcode.com\/problems\/count-number-of-possible-root-nodes\/","1230":"https:\/\/leetcode.com\/problems\/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit\/","1231":"https:\/\/leetcode.com\/problems\/unique-paths-iii\/","1232":"https:\/\/leetcode.com\/problems\/minimum-value-to-get-positive-step-by-step-sum\/","1233":"https:\/\/leetcode.com\/problems\/check-if-binary-string-has-at-most-one-segment-of-ones\/","1234":"https:\/\/leetcode.com\/problems\/partition-array-for-maximum-sum\/","1235":"https:\/\/leetcode.com\/problems\/minimum-adjacent-swaps-to-reach-the-kth-smallest-number\/","1236":"https:\/\/leetcode.com\/problems\/maximize-distance-to-closest-person\/","1237":"https:\/\/leetcode.com\/problems\/satisfiability-of-equality-equations\/","1238":"https:\/\/leetcode.com\/problems\/merge-similar-items\/","1239":"https:\/\/leetcode.com\/problems\/best-poker-hand\/","1240":"https:\/\/leetcode.com\/problems\/decoded-string-at-index\/","1241":"https:\/\/leetcode.com\/problems\/cousins-in-binary-tree-ii\/","1242":"https:\/\/leetcode.com\/problems\/find-the-closest-palindrome\/","1243":"https:\/\/leetcode.com\/problems\/keyboard-row\/","1244":"https:\/\/leetcode.com\/problems\/construct-smallest-number-from-di-string\/","1245":"https:\/\/leetcode.com\/problems\/binary-tree-right-side-view\/","1246":"https:\/\/leetcode.com\/problems\/largest-merge-of-two-strings\/","1247":"https:\/\/leetcode.com\/problems\/rearrange-characters-to-make-target-string\/","1248":"https:\/\/leetcode.com\/problems\/largest-palindromic-number\/","1249":"https:\/\/leetcode.com\/problems\/maximum-subsequence-score\/","1250":"https:\/\/leetcode.com\/problems\/largest-component-size-by-common-factor\/","1251":"https:\/\/leetcode.com\/problems\/find-latest-group-of-size-m\/","1252":"https:\/\/leetcode.com\/problems\/3sum-closest\/","1253":"https:\/\/leetcode.com\/problems\/minimum-white-tiles-after-covering-with-carpets\/","1254":"https:\/\/leetcode.com\/problems\/maximum-score-from-removing-stones\/","1255":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-all-array-elements-equal-to-1\/","1256":"https:\/\/leetcode.com\/problems\/rising-temperature\/","1257":"https:\/\/leetcode.com\/problems\/apply-transform-over-each-element-in-array\/","1258":"https:\/\/leetcode.com\/problems\/long-pressed-name\/","1259":"https:\/\/leetcode.com\/problems\/number-of-atoms\/","1260":"https:\/\/leetcode.com\/problems\/build-a-matrix-with-conditions\/","1261":"https:\/\/leetcode.com\/problems\/k-diff-pairs-in-an-array\/","1262":"https:\/\/leetcode.com\/problems\/apply-operations-to-an-array\/","1263":"https:\/\/leetcode.com\/problems\/maximum-difference-between-increasing-elements\/","1264":"https:\/\/leetcode.com\/problems\/delete-columns-to-make-sorted\/","1265":"https:\/\/leetcode.com\/problems\/task-scheduler-ii\/","1266":"https:\/\/leetcode.com\/problems\/decrypt-string-from-alphabet-to-integer-mapping\/","1267":"https:\/\/leetcode.com\/problems\/longest-uploaded-prefix\/","1268":"https:\/\/leetcode.com\/problems\/longest-common-subpath\/","1269":"https:\/\/leetcode.com\/problems\/number-of-ways-to-stay-in-the-same-place-after-some-steps\/","1270":"https:\/\/leetcode.com\/problems\/video-stitching\/","1271":"https:\/\/leetcode.com\/problems\/find-customer-referee\/","1272":"https:\/\/leetcode.com\/problems\/minimize-malware-spread-ii\/","1273":"https:\/\/leetcode.com\/problems\/richest-customer-wealth\/","1274":"https:\/\/leetcode.com\/problems\/shortest-subarray-to-be-removed-to-make-array-sorted\/","1275":"https:\/\/leetcode.com\/problems\/words-within-two-edits-of-dictionary\/","1276":"https:\/\/leetcode.com\/problems\/powerful-integers\/","1277":"https:\/\/leetcode.com\/problems\/unique-number-of-occurrences\/","1278":"https:\/\/leetcode.com\/problems\/cherry-pickup\/","1279":"https:\/\/leetcode.com\/problems\/as-far-from-land-as-possible\/","1280":"https:\/\/leetcode.com\/problems\/minimum-degree-of-a-connected-trio-in-a-graph\/","1281":"https:\/\/leetcode.com\/problems\/course-schedule-ii\/","1282":"https:\/\/leetcode.com\/problems\/maximum-nesting-depth-of-two-valid-parentheses-strings\/","1283":"https:\/\/leetcode.com\/problems\/range-product-queries-of-powers\/","1284":"https:\/\/leetcode.com\/problems\/check-if-object-instance-of-class\/","1285":"https:\/\/leetcode.com\/problems\/clumsy-factorial\/","1286":"https:\/\/leetcode.com\/problems\/random-point-in-non-overlapping-rectangles\/","1287":"https:\/\/leetcode.com\/problems\/x-of-a-kind-in-a-deck-of-cards\/","1288":"https:\/\/leetcode.com\/problems\/pyramid-transition-matrix\/","1289":"https:\/\/leetcode.com\/problems\/sort-array-by-increasing-frequency\/","1290":"https:\/\/leetcode.com\/problems\/merge-two-2d-arrays-by-summing-values\/","1291":"https:\/\/leetcode.com\/problems\/beautiful-arrangement-ii\/","1292":"https:\/\/leetcode.com\/problems\/minimum-total-space-wasted-with-k-resizing-operations\/","1293":"https:\/\/leetcode.com\/problems\/insert-into-a-binary-search-tree\/","1294":"https:\/\/leetcode.com\/problems\/shortest-unsorted-continuous-subarray\/","1295":"https:\/\/leetcode.com\/problems\/prison-cells-after-n-days\/","1296":"https:\/\/leetcode.com\/problems\/reordered-power-of-2\/","1297":"https:\/\/leetcode.com\/problems\/removing-minimum-number-of-magic-beans\/","1298":"https:\/\/leetcode.com\/problems\/minimum-addition-to-make-integer-beautiful\/","1299":"https:\/\/leetcode.com\/problems\/find-pivot-index\/","1300":"https:\/\/leetcode.com\/problems\/find-the-maximum-number-of-marked-indices\/","1301":"https:\/\/leetcode.com\/problems\/counter-ii\/","1302":"https:\/\/leetcode.com\/problems\/first-unique-character-in-a-string\/","1303":"https:\/\/leetcode.com\/problems\/longest-happy-string\/","1304":"https:\/\/leetcode.com\/problems\/function-composition\/","1305":"https:\/\/leetcode.com\/problems\/remove-one-element-to-make-the-array-strictly-increasing\/","1306":"https:\/\/leetcode.com\/problems\/longest-substring-of-one-repeating-character\/","1307":"https:\/\/leetcode.com\/problems\/immediate-food-delivery-ii\/","1308":"https:\/\/leetcode.com\/problems\/number-of-zero-filled-subarrays\/","1309":"https:\/\/leetcode.com\/problems\/maximum-nesting-depth-of-the-parentheses\/","1310":"https:\/\/leetcode.com\/problems\/design-a-number-container-system\/","1311":"https:\/\/leetcode.com\/problems\/maximal-network-rank\/","1312":"https:\/\/leetcode.com\/problems\/merge-in-between-linked-lists\/","1313":"https:\/\/leetcode.com\/problems\/construct-k-palindrome-strings\/","1314":"https:\/\/leetcode.com\/problems\/find-target-indices-after-sorting-array\/","1315":"https:\/\/leetcode.com\/problems\/check-if-array-pairs-are-divisible-by-k\/","1316":"https:\/\/leetcode.com\/problems\/maximum-alternating-subsequence-sum\/","1317":"https:\/\/leetcode.com\/problems\/powx-n\/","1318":"https:\/\/leetcode.com\/problems\/maximum-difference-by-remapping-a-digit\/","1319":"https:\/\/leetcode.com\/problems\/projection-area-of-3d-shapes\/","1320":"https:\/\/leetcode.com\/problems\/day-of-the-year\/","1321":"https:\/\/leetcode.com\/problems\/meeting-rooms-iii\/","1322":"https:\/\/leetcode.com\/problems\/find-largest-value-in-each-tree-row\/","1323":"https:\/\/leetcode.com\/problems\/maximum-number-of-non-overlapping-substrings\/","1324":"https:\/\/leetcode.com\/problems\/maximum-number-of-points-from-grid-queries\/","1325":"https:\/\/leetcode.com\/problems\/friend-requests-ii-who-has-the-most-friends\/","1326":"https:\/\/leetcode.com\/problems\/left-and-right-sum-differences\/","1327":"https:\/\/leetcode.com\/problems\/distinct-subsequences\/","1328":"https:\/\/leetcode.com\/problems\/permutations-ii\/","1329":"https:\/\/leetcode.com\/problems\/cyclically-rotating-a-grid\/","1330":"https:\/\/leetcode.com\/problems\/rearrange-array-elements-by-sign\/","1331":"https:\/\/leetcode.com\/problems\/partitioning-into-minimum-number-of-deci-binary-numbers\/","1332":"https:\/\/leetcode.com\/problems\/jump-game\/","1333":"https:\/\/leetcode.com\/problems\/concatenation-of-consecutive-binary-numbers\/","1334":"https:\/\/leetcode.com\/problems\/find-the-maximum-divisibility-score\/","1335":"https:\/\/leetcode.com\/problems\/difference-between-maximum-and-minimum-price-sum\/","1336":"https:\/\/leetcode.com\/problems\/count-servers-that-communicate\/","1337":"https:\/\/leetcode.com\/problems\/count-largest-group\/","1338":"https:\/\/leetcode.com\/problems\/check-if-all-the-integers-in-a-range-are-covered\/","1339":"https:\/\/leetcode.com\/problems\/second-minimum-time-to-reach-destination\/","1340":"https:\/\/leetcode.com\/problems\/shortest-palindrome\/","1341":"https:\/\/leetcode.com\/problems\/maximum-sum-of-3-non-overlapping-subarrays\/","1342":"https:\/\/leetcode.com\/problems\/group-by\/","1343":"https:\/\/leetcode.com\/problems\/remove-duplicate-letters\/","1344":"https:\/\/leetcode.com\/problems\/special-array-with-x-elements-greater-than-or-equal-x\/","1345":"https:\/\/leetcode.com\/problems\/bus-routes\/","1346":"https:\/\/leetcode.com\/problems\/maximum-subarray\/","1347":"https:\/\/leetcode.com\/problems\/sum-of-nodes-with-even-valued-grandparent\/","1348":"https:\/\/leetcode.com\/problems\/three-equal-parts\/","1349":"https:\/\/leetcode.com\/problems\/permutation-in-string\/","1350":"https:\/\/leetcode.com\/problems\/maximum-points-in-an-archery-competition\/","1351":"https:\/\/leetcode.com\/problems\/sum-of-floored-pairs\/","1352":"https:\/\/leetcode.com\/problems\/remove-all-occurrences-of-a-substring\/","1353":"https:\/\/leetcode.com\/problems\/find-k-th-smallest-pair-distance\/","1354":"https:\/\/leetcode.com\/problems\/01-matrix\/","1355":"https:\/\/leetcode.com\/problems\/my-calendar-iii\/","1356":"https:\/\/leetcode.com\/problems\/minimum-reverse-operations\/","1357":"https:\/\/leetcode.com\/problems\/removing-minimum-and-maximum-from-array\/","1358":"https:\/\/leetcode.com\/problems\/deepest-leaves-sum\/","1359":"https:\/\/leetcode.com\/problems\/multiply-strings\/","1360":"https:\/\/leetcode.com\/problems\/making-file-names-unique\/","1361":"https:\/\/leetcode.com\/problems\/peak-index-in-a-mountain-array\/","1362":"https:\/\/leetcode.com\/problems\/longest-subarray-of-1s-after-deleting-one-element\/","1363":"https:\/\/leetcode.com\/problems\/take-k-of-each-character-from-left-and-right\/","1364":"https:\/\/leetcode.com\/problems\/reverse-words-in-a-string-iii\/","1365":"https:\/\/leetcode.com\/problems\/shortest-subarray-with-sum-at-least-k\/","1366":"https:\/\/leetcode.com\/problems\/reverse-string-ii\/","1367":"https:\/\/leetcode.com\/problems\/capacity-to-ship-packages-within-d-days\/","1368":"https:\/\/leetcode.com\/problems\/sum-of-numbers-with-units-digit-k\/","1369":"https:\/\/leetcode.com\/problems\/count-the-number-of-ideal-arrays\/","1370":"https:\/\/leetcode.com\/problems\/binary-number-with-alternating-bits\/","1371":"https:\/\/leetcode.com\/problems\/all-nodes-distance-k-in-binary-tree\/","1372":"https:\/\/leetcode.com\/problems\/numbers-at-most-n-given-digit-set\/","1373":"https:\/\/leetcode.com\/problems\/process-restricted-friend-requests\/","1374":"https:\/\/leetcode.com\/problems\/egg-drop-with-2-eggs-and-n-floors\/","1375":"https:\/\/leetcode.com\/problems\/minimum-cost-to-move-chips-to-the-same-position\/","1376":"https:\/\/leetcode.com\/problems\/reverse-linked-list-ii\/","1377":"https:\/\/leetcode.com\/problems\/rotate-list\/","1378":"https:\/\/leetcode.com\/problems\/word-search\/","1379":"https:\/\/leetcode.com\/problems\/binary-search\/","1380":"https:\/\/leetcode.com\/problems\/decode-ways-ii\/","1381":"https:\/\/leetcode.com\/problems\/number-of-matching-subsequences\/","1382":"https:\/\/leetcode.com\/problems\/expression-add-operators\/","1383":"https:\/\/leetcode.com\/problems\/count-number-of-nice-subarrays\/","1384":"https:\/\/leetcode.com\/problems\/count-nice-pairs-in-an-array\/","1385":"https:\/\/leetcode.com\/problems\/word-break-ii\/","1386":"https:\/\/leetcode.com\/problems\/prime-palindrome\/","1387":"https:\/\/leetcode.com\/problems\/second-highest-salary\/","1388":"https:\/\/leetcode.com\/problems\/removing-stars-from-a-string\/","1389":"https:\/\/leetcode.com\/problems\/find-the-punishment-number-of-an-integer\/","1390":"https:\/\/leetcode.com\/problems\/maximum-total-beauty-of-the-gardens\/","1391":"https:\/\/leetcode.com\/problems\/rectangle-area\/","1392":"https:\/\/leetcode.com\/problems\/employee-bonus\/","1393":"https:\/\/leetcode.com\/problems\/sum-of-all-subset-xor-totals\/","1394":"https:\/\/leetcode.com\/problems\/minimum-length-of-string-after-deleting-similar-ends\/","1395":"https:\/\/leetcode.com\/problems\/compare-version-numbers\/","1396":"https:\/\/leetcode.com\/problems\/bulb-switcher\/","1397":"https:\/\/leetcode.com\/problems\/check-if-word-equals-summation-of-two-words\/","1398":"https:\/\/leetcode.com\/problems\/remove-covered-intervals\/","1399":"https:\/\/leetcode.com\/problems\/non-decreasing-subsequences\/","1400":"https:\/\/leetcode.com\/problems\/largest-palindrome-product\/","1401":"https:\/\/leetcode.com\/problems\/next-greater-node-in-linked-list\/","1402":"https:\/\/leetcode.com\/problems\/sort-colors\/","1403":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-with-transaction-fee\/","1404":"https:\/\/leetcode.com\/problems\/maximum-number-of-fish-in-a-grid\/","1405":"https:\/\/leetcode.com\/problems\/reformat-date\/","1406":"https:\/\/leetcode.com\/problems\/count-negative-numbers-in-a-sorted-matrix\/","1407":"https:\/\/leetcode.com\/problems\/find-all-good-strings\/","1408":"https:\/\/leetcode.com\/problems\/minimum-string-length-after-removing-substrings\/","1409":"https:\/\/leetcode.com\/problems\/cut-off-trees-for-golf-event\/","1410":"https:\/\/leetcode.com\/problems\/maximum-xor-with-an-element-from-array\/","1411":"https:\/\/leetcode.com\/problems\/get-the-maximum-score\/","1412":"https:\/\/leetcode.com\/problems\/minimum-distance-to-the-target-element\/","1413":"https:\/\/leetcode.com\/problems\/intersection-of-two-linked-lists\/","1414":"https:\/\/leetcode.com\/problems\/k-concatenation-maximum-sum\/","1415":"https:\/\/leetcode.com\/problems\/replace-elements-in-an-array\/","1416":"https:\/\/leetcode.com\/problems\/element-appearing-more-than-25-in-sorted-array\/","1417":"https:\/\/leetcode.com\/problems\/predict-the-winner\/","1418":"https:\/\/leetcode.com\/problems\/sort-integers-by-the-number-of-1-bits\/","1419":"https:\/\/leetcode.com\/problems\/count-salary-categories\/","1420":"https:\/\/leetcode.com\/problems\/implement-queue-using-stacks\/","1421":"https:\/\/leetcode.com\/problems\/minimum-difficulty-of-a-job-schedule\/","1422":"https:\/\/leetcode.com\/problems\/number-of-ways-to-separate-numbers\/","1423":"https:\/\/leetcode.com\/problems\/two-sum\/","1424":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-a-subsequence\/","1425":"https:\/\/leetcode.com\/problems\/regular-expression-matching\/","1426":"https:\/\/leetcode.com\/problems\/binary-tree-level-order-traversal\/","1427":"https:\/\/leetcode.com\/problems\/split-message-based-on-limit\/","1428":"https:\/\/leetcode.com\/problems\/maximum-number-of-vowels-in-a-substring-of-given-length\/","1429":"https:\/\/leetcode.com\/problems\/minimum-number-of-swaps-to-make-the-binary-string-alternating\/","1430":"https:\/\/leetcode.com\/problems\/rotating-the-box\/","1431":"https:\/\/leetcode.com\/problems\/confirmation-rate\/","1432":"https:\/\/leetcode.com\/problems\/array-prototype-last\/","1433":"https:\/\/leetcode.com\/problems\/subsets\/","1434":"https:\/\/leetcode.com\/problems\/arithmetic-slices\/","1435":"https:\/\/leetcode.com\/problems\/thousand-separator\/","1436":"https:\/\/leetcode.com\/problems\/reshape-the-matrix\/","1437":"https:\/\/leetcode.com\/problems\/count-vowels-permutation\/","1438":"https:\/\/leetcode.com\/problems\/maximum-depth-of-binary-tree\/","1439":"https:\/\/leetcode.com\/problems\/swap-for-longest-repeated-character-substring\/","1440":"https:\/\/leetcode.com\/problems\/maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts\/","1441":"https:\/\/leetcode.com\/problems\/combination-sum-ii\/","1442":"https:\/\/leetcode.com\/problems\/add-minimum-number-of-rungs\/","1443":"https:\/\/leetcode.com\/problems\/simplify-path\/","1444":"https:\/\/leetcode.com\/problems\/continuous-subarray-sum\/","1445":"https:\/\/leetcode.com\/problems\/house-robber-ii\/","1446":"https:\/\/leetcode.com\/problems\/number-of-smooth-descent-periods-of-a-stock\/","1447":"https:\/\/leetcode.com\/problems\/can-make-arithmetic-progression-from-sequence\/","1448":"https:\/\/leetcode.com\/problems\/minimum-fuel-cost-to-report-to-the-capital\/","1449":"https:\/\/leetcode.com\/problems\/circular-sentence\/","1450":"https:\/\/leetcode.com\/problems\/group-anagrams\/","1451":"https:\/\/leetcode.com\/problems\/word-subsets\/","1452":"https:\/\/leetcode.com\/problems\/delete-operation-for-two-strings\/","1453":"https:\/\/leetcode.com\/problems\/create-hello-world-function\/","1454":"https:\/\/leetcode.com\/problems\/maximum-number-of-events-that-can-be-attended\/","1455":"https:\/\/leetcode.com\/problems\/check-if-number-has-equal-digit-count-and-digit-value\/","1456":"https:\/\/leetcode.com\/problems\/reformat-phone-number\/","1457":"https:\/\/leetcode.com\/problems\/word-break\/","1458":"https:\/\/leetcode.com\/problems\/longest-duplicate-substring\/","1459":"https:\/\/leetcode.com\/problems\/ones-and-zeroes\/","1460":"https:\/\/leetcode.com\/problems\/score-after-flipping-matrix\/","1461":"https:\/\/leetcode.com\/problems\/average-salary-excluding-the-minimum-and-maximum-salary\/","1462":"https:\/\/leetcode.com\/problems\/delivering-boxes-from-storage-to-ports\/","1463":"https:\/\/leetcode.com\/problems\/debounce\/","1464":"https:\/\/leetcode.com\/problems\/minimum-area-rectangle\/","1465":"https:\/\/leetcode.com\/problems\/count-square-sum-triples\/","1466":"https:\/\/leetcode.com\/problems\/reaching-points\/","1467":"https:\/\/leetcode.com\/problems\/employees-with-missing-information\/","1468":"https:\/\/leetcode.com\/problems\/number-of-valid-clock-times\/","1469":"https:\/\/leetcode.com\/problems\/dice-roll-simulation\/","1470":"https:\/\/leetcode.com\/problems\/maximum-binary-tree-ii\/","1471":"https:\/\/leetcode.com\/problems\/delete-greatest-value-in-each-row\/","1472":"https:\/\/leetcode.com\/problems\/count-vowel-strings-in-ranges\/","1473":"https:\/\/leetcode.com\/problems\/sum-of-root-to-leaf-binary-numbers\/","1474":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-a-uni-value-grid\/","1475":"https:\/\/leetcode.com\/problems\/remove-linked-list-elements\/","1476":"https:\/\/leetcode.com\/problems\/max-dot-product-of-two-subsequences\/","1477":"https:\/\/leetcode.com\/problems\/count-square-submatrices-with-all-ones\/","1478":"https:\/\/leetcode.com\/problems\/prime-subtraction-operation\/","1479":"https:\/\/leetcode.com\/problems\/partition-array-into-three-parts-with-equal-sum\/","1480":"https:\/\/leetcode.com\/problems\/stone-game-ii\/","1481":"https:\/\/leetcode.com\/problems\/water-and-jug-problem\/","1482":"https:\/\/leetcode.com\/problems\/xor-queries-of-a-subarray\/","1483":"https:\/\/leetcode.com\/problems\/largest-magic-square\/","1484":"https:\/\/leetcode.com\/problems\/advantage-shuffle\/","1485":"https:\/\/leetcode.com\/problems\/maximum-length-of-subarray-with-positive-product\/","1486":"https:\/\/leetcode.com\/problems\/missing-number\/","1487":"https:\/\/leetcode.com\/problems\/random-pick-index\/","1488":"https:\/\/leetcode.com\/problems\/big-countries\/","1489":"https:\/\/leetcode.com\/problems\/min-cost-to-connect-all-points\/","1490":"https:\/\/leetcode.com\/problems\/rotate-function\/","1491":"https:\/\/leetcode.com\/problems\/find-all-anagrams-in-a-string\/","1492":"https:\/\/leetcode.com\/problems\/find-the-losers-of-the-circular-game\/","1493":"https:\/\/leetcode.com\/problems\/xor-operation-in-an-array\/","1494":"https:\/\/leetcode.com\/problems\/prime-arrangements\/","1495":"https:\/\/leetcode.com\/problems\/super-egg-drop\/","1496":"https:\/\/leetcode.com\/problems\/reachable-nodes-with-restrictions\/","1497":"https:\/\/leetcode.com\/problems\/making-a-large-island\/","1498":"https:\/\/leetcode.com\/problems\/maximum-swap\/","1499":"https:\/\/leetcode.com\/problems\/4sum-ii\/","1500":"https:\/\/leetcode.com\/problems\/minimum-number-of-work-sessions-to-finish-the-tasks\/","1501":"https:\/\/leetcode.com\/problems\/range-addition-ii\/","1502":"https:\/\/leetcode.com\/problems\/reorganize-string\/","1503":"https:\/\/leetcode.com\/problems\/minimum-skips-to-arrive-at-meeting-on-time\/","1504":"https:\/\/leetcode.com\/problems\/valid-tic-tac-toe-state\/","1505":"https:\/\/leetcode.com\/problems\/delete-columns-to-make-sorted-iii\/","1506":"https:\/\/leetcode.com\/problems\/longest-chunked-palindrome-decomposition\/","1507":"https:\/\/leetcode.com\/problems\/filter-restaurants-by-vegan-friendly-price-and-distance\/","1508":"https:\/\/leetcode.com\/problems\/k-th-symbol-in-grammar\/","1509":"https:\/\/leetcode.com\/problems\/split-array-into-consecutive-subsequences\/","1510":"https:\/\/leetcode.com\/problems\/binary-tree-inorder-traversal\/","1511":"https:\/\/leetcode.com\/problems\/broken-calculator\/","1512":"https:\/\/leetcode.com\/problems\/falling-squares\/","1513":"https:\/\/leetcode.com\/problems\/queries-quality-and-percentage\/","1514":"https:\/\/leetcode.com\/problems\/time-needed-to-inform-all-employees\/","1515":"https:\/\/leetcode.com\/problems\/letter-case-permutation\/","1516":"https:\/\/leetcode.com\/problems\/k-similar-strings\/","1517":"https:\/\/leetcode.com\/problems\/binary-tree-zigzag-level-order-traversal\/","1518":"https:\/\/leetcode.com\/problems\/remove-nodes-from-linked-list\/","1519":"https:\/\/leetcode.com\/problems\/minimum-number-of-days-to-disconnect-island\/","1520":"https:\/\/leetcode.com\/problems\/number-of-valid-move-combinations-on-chessboard\/","1521":"https:\/\/leetcode.com\/problems\/number-of-times-binary-string-is-prefix-aligned\/","1522":"https:\/\/leetcode.com\/problems\/interval-list-intersections\/","1523":"https:\/\/leetcode.com\/problems\/global-and-local-inversions\/","1524":"https:\/\/leetcode.com\/problems\/cracking-the-safe\/","1525":"https:\/\/leetcode.com\/problems\/custom-sort-string\/","1526":"https:\/\/leetcode.com\/problems\/find-all-groups-of-farmland\/","1527":"https:\/\/leetcode.com\/problems\/design-browser-history\/","1528":"https:\/\/leetcode.com\/problems\/rearranging-fruits\/","1529":"https:\/\/leetcode.com\/problems\/minimum-sum-of-four-digit-number-after-splitting-digits\/","1530":"https:\/\/leetcode.com\/problems\/minimum-moves-to-reach-target-score\/","1531":"https:\/\/leetcode.com\/problems\/furthest-building-you-can-reach\/","1532":"https:\/\/leetcode.com\/problems\/count-ways-to-group-overlapping-ranges\/","1533":"https:\/\/leetcode.com\/problems\/all-paths-from-source-to-target\/","1534":"https:\/\/leetcode.com\/problems\/shortest-impossible-sequence-of-rolls\/","1535":"https:\/\/leetcode.com\/problems\/k-highest-ranked-items-within-a-price-range\/","1536":"https:\/\/leetcode.com\/problems\/largest-divisible-subset\/","1537":"https:\/\/leetcode.com\/problems\/subarray-sum-equals-k\/","1538":"https:\/\/leetcode.com\/problems\/number-of-ways-to-buy-pens-and-pencils\/","1539":"https:\/\/leetcode.com\/problems\/throttle\/","1540":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-string-balanced\/","1541":"https:\/\/leetcode.com\/problems\/restore-the-array-from-adjacent-pairs\/","1542":"https:\/\/leetcode.com\/problems\/perfect-squares\/","1543":"https:\/\/leetcode.com\/problems\/construct-string-with-repeat-limit\/","1544":"https:\/\/leetcode.com\/problems\/find-the-original-array-of-prefix-xor\/","1545":"https:\/\/leetcode.com\/problems\/verifying-an-alien-dictionary\/","1546":"https:\/\/leetcode.com\/problems\/parse-lisp-expression\/","1547":"https:\/\/leetcode.com\/problems\/game-play-analysis-iv\/","1548":"https:\/\/leetcode.com\/problems\/max-chunks-to-make-sorted-ii\/","1549":"https:\/\/leetcode.com\/problems\/find-mode-in-binary-search-tree\/","1550":"https:\/\/leetcode.com\/problems\/shortest-path-in-binary-matrix\/","1551":"https:\/\/leetcode.com\/problems\/exam-room\/","1552":"https:\/\/leetcode.com\/problems\/find-winner-on-a-tic-tac-toe-game\/","1553":"https:\/\/leetcode.com\/problems\/count-unique-characters-of-all-substrings-of-a-given-string\/","1554":"https:\/\/leetcode.com\/problems\/construct-binary-tree-from-preorder-and-inorder-traversal\/","1555":"https:\/\/leetcode.com\/problems\/complement-of-base-10-integer\/","1556":"https:\/\/leetcode.com\/problems\/moving-stones-until-consecutive-ii\/","1557":"https:\/\/leetcode.com\/problems\/convert-to-base-2\/","1558":"https:\/\/leetcode.com\/problems\/lru-cache\/","1559":"https:\/\/leetcode.com\/problems\/filling-bookcase-shelves\/","1560":"https:\/\/leetcode.com\/problems\/department-highest-salary\/","1561":"https:\/\/leetcode.com\/problems\/k-th-smallest-in-lexicographical-order\/","1562":"https:\/\/leetcode.com\/problems\/queries-on-a-permutation-with-key\/","1563":"https:\/\/leetcode.com\/problems\/remove-zero-sum-consecutive-nodes-from-linked-list\/","1564":"https:\/\/leetcode.com\/problems\/palindromic-substrings\/","1565":"https:\/\/leetcode.com\/problems\/monotonic-array\/","1566":"https:\/\/leetcode.com\/problems\/count-operations-to-obtain-zero\/","1567":"https:\/\/leetcode.com\/problems\/maximize-score-after-n-operations\/","1568":"https:\/\/leetcode.com\/problems\/number-of-strings-that-appear-as-substrings-in-word\/","1569":"https:\/\/leetcode.com\/problems\/bitwise-xor-of-all-pairings\/","1570":"https:\/\/leetcode.com\/problems\/find-k-pairs-with-smallest-sums\/","1571":"https:\/\/leetcode.com\/problems\/product-sales-analysis-i\/","1572":"https:\/\/leetcode.com\/problems\/counting-bits\/","1573":"https:\/\/leetcode.com\/problems\/department-top-three-salaries\/","1574":"https:\/\/leetcode.com\/problems\/minimum-flips-to-make-a-or-b-equal-to-c\/","1575":"https:\/\/leetcode.com\/problems\/four-divisors\/","1576":"https:\/\/leetcode.com\/problems\/replace-the-substring-for-balanced-string\/","1577":"https:\/\/leetcode.com\/problems\/detect-capital\/","1578":"https:\/\/leetcode.com\/problems\/coordinate-with-maximum-network-quality\/","1579":"https:\/\/leetcode.com\/problems\/n-th-tribonacci-number\/","1580":"https:\/\/leetcode.com\/problems\/compare-strings-by-frequency-of-the-smallest-character\/","1581":"https:\/\/leetcode.com\/problems\/convert-object-to-json-string\/","1582":"https:\/\/leetcode.com\/problems\/maximum-value-at-a-given-index-in-a-bounded-array\/","1583":"https:\/\/leetcode.com\/problems\/human-traffic-of-stadium\/","1584":"https:\/\/leetcode.com\/problems\/flatten-nested-list-iterator\/","1585":"https:\/\/leetcode.com\/problems\/h-index\/","1586":"https:\/\/leetcode.com\/problems\/shortest-bridge\/","1587":"https:\/\/leetcode.com\/problems\/lowest-common-ancestor-of-a-binary-tree\/","1588":"https:\/\/leetcode.com\/problems\/basic-calculator-ii\/","1589":"https:\/\/leetcode.com\/problems\/smallest-k-length-subsequence-with-occurrences-of-a-letter\/","1590":"https:\/\/leetcode.com\/problems\/destination-city\/","1591":"https:\/\/leetcode.com\/problems\/max-value-of-equation\/","1592":"https:\/\/leetcode.com\/problems\/minimum-time-to-complete-all-tasks\/","1593":"https:\/\/leetcode.com\/problems\/two-sum-ii-input-array-is-sorted\/","1594":"https:\/\/leetcode.com\/problems\/paint-house-iii\/","1595":"https:\/\/leetcode.com\/problems\/maximum-building-height\/","1596":"https:\/\/leetcode.com\/problems\/smallest-string-with-swaps\/","1597":"https:\/\/leetcode.com\/problems\/max-increase-to-keep-city-skyline\/","1598":"https:\/\/leetcode.com\/problems\/insert-delete-getrandom-o1\/","1599":"https:\/\/leetcode.com\/problems\/delete-node-in-a-bst\/","1600":"https:\/\/leetcode.com\/problems\/minimum-moves-to-equal-array-elements\/","1601":"https:\/\/leetcode.com\/problems\/longest-well-performing-interval\/","1602":"https:\/\/leetcode.com\/problems\/longest-absolute-file-path\/","1603":"https:\/\/leetcode.com\/problems\/find-valid-matrix-given-row-and-column-sums\/","1604":"https:\/\/leetcode.com\/problems\/minimum-moves-to-make-array-complementary\/","1605":"https:\/\/leetcode.com\/problems\/decode-xored-array\/","1606":"https:\/\/leetcode.com\/problems\/fancy-sequence\/","1607":"https:\/\/leetcode.com\/problems\/next-greater-element-ii\/","1608":"https:\/\/leetcode.com\/problems\/largest-triangle-area\/","1609":"https:\/\/leetcode.com\/problems\/flatten-a-multilevel-doubly-linked-list\/","1610":"https:\/\/leetcode.com\/problems\/robot-return-to-origin\/","1611":"https:\/\/leetcode.com\/problems\/longest-palindromic-subsequence\/","1612":"https:\/\/leetcode.com\/problems\/subtract-the-product-and-sum-of-digits-of-an-integer\/","1613":"https:\/\/leetcode.com\/problems\/minimum-moves-to-convert-string\/","1614":"https:\/\/leetcode.com\/problems\/array-reduce-transformation\/","1615":"https:\/\/leetcode.com\/problems\/largest-plus-sign\/","1616":"https:\/\/leetcode.com\/problems\/car-fleet-ii\/","1617":"https:\/\/leetcode.com\/problems\/the-latest-login-in-2020\/","1618":"https:\/\/leetcode.com\/problems\/rabbits-in-forest\/","1619":"https:\/\/leetcode.com\/problems\/number-of-excellent-pairs\/","1620":"https:\/\/leetcode.com\/problems\/minimum-time-to-repair-cars\/","1621":"https:\/\/leetcode.com\/problems\/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance\/","1622":"https:\/\/leetcode.com\/problems\/minimize-maximum-of-array\/","1623":"https:\/\/leetcode.com\/problems\/match-substring-after-replacement\/","1624":"https:\/\/leetcode.com\/problems\/determine-whether-matrix-can-be-obtained-by-rotation\/","1625":"https:\/\/leetcode.com\/problems\/design-an-ordered-stream\/","1626":"https:\/\/leetcode.com\/problems\/minimum-interval-to-include-each-query\/","1627":"https:\/\/leetcode.com\/problems\/minimum-cuts-to-divide-a-circle\/","1628":"https:\/\/leetcode.com\/problems\/minimum-number-of-moves-to-seat-everyone\/","1629":"https:\/\/leetcode.com\/problems\/the-number-of-the-smallest-unoccupied-chair\/","1630":"https:\/\/leetcode.com\/problems\/sliding-window-maximum\/","1631":"https:\/\/leetcode.com\/problems\/network-delay-time\/","1632":"https:\/\/leetcode.com\/problems\/maximum-segment-sum-after-removals\/","1633":"https:\/\/leetcode.com\/problems\/find-users-with-valid-e-mails\/","1634":"https:\/\/leetcode.com\/problems\/max-number-of-k-sum-pairs\/","1635":"https:\/\/leetcode.com\/problems\/find-all-k-distant-indices-in-an-array\/","1636":"https:\/\/leetcode.com\/problems\/number-of-burgers-with-no-waste-of-ingredients\/","1637":"https:\/\/leetcode.com\/problems\/minimum-time-difference\/","1638":"https:\/\/leetcode.com\/problems\/all-oone-data-structure\/","1639":"https:\/\/leetcode.com\/problems\/maximum-xor-of-two-numbers-in-an-array\/","1640":"https:\/\/leetcode.com\/problems\/sum-of-digits-in-base-k\/","1641":"https:\/\/leetcode.com\/problems\/design-skiplist\/","1642":"https:\/\/leetcode.com\/problems\/count-prefixes-of-a-given-string\/","1643":"https:\/\/leetcode.com\/problems\/fruit-into-baskets\/","1644":"https:\/\/leetcode.com\/problems\/maximum-number-of-robots-within-budget\/","1645":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-with-cooldown\/","1646":"https:\/\/leetcode.com\/problems\/count-number-of-ways-to-place-houses\/","1647":"https:\/\/leetcode.com\/problems\/minimum-cost-homecoming-of-a-robot-in-a-grid\/","1648":"https:\/\/leetcode.com\/problems\/beautiful-arrangement\/","1649":"https:\/\/leetcode.com\/problems\/sort-array-by-parity-ii\/","1650":"https:\/\/leetcode.com\/problems\/merge-two-binary-trees\/","1651":"https:\/\/leetcode.com\/problems\/final-prices-with-a-special-discount-in-a-shop\/","1652":"https:\/\/leetcode.com\/problems\/battleships-in-a-board\/","1653":"https:\/\/leetcode.com\/problems\/uncommon-words-from-two-sentences\/","1654":"https:\/\/leetcode.com\/problems\/n-ary-tree-postorder-traversal\/","1655":"https:\/\/leetcode.com\/problems\/sum-of-all-odd-length-subarrays\/","1656":"https:\/\/leetcode.com\/problems\/grid-game\/","1657":"https:\/\/leetcode.com\/problems\/add-two-numbers\/","1658":"https:\/\/leetcode.com\/problems\/smallest-sufficient-team\/","1659":"https:\/\/leetcode.com\/problems\/binary-tree-paths\/","1660":"https:\/\/leetcode.com\/problems\/minimize-malware-spread\/","1661":"https:\/\/leetcode.com\/problems\/count-pairs-of-similar-strings\/","1662":"https:\/\/leetcode.com\/problems\/min-max-game\/","1663":"https:\/\/leetcode.com\/problems\/difference-between-element-sum-and-digit-sum-of-an-array\/","1664":"https:\/\/leetcode.com\/problems\/validate-binary-search-tree\/","1665":"https:\/\/leetcode.com\/problems\/number-of-ways-to-divide-a-long-corridor\/","1666":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-make-array-continuous\/","1667":"https:\/\/leetcode.com\/problems\/minimum-suffix-flips\/","1668":"https:\/\/leetcode.com\/problems\/minimum-time-to-collect-all-apples-in-a-tree\/","1669":"https:\/\/leetcode.com\/problems\/reformat-department-table\/","1670":"https:\/\/leetcode.com\/problems\/happy-number\/","1671":"https:\/\/leetcode.com\/problems\/maximum-sum-circular-subarray\/","1672":"https:\/\/leetcode.com\/problems\/reward-top-k-students\/","1673":"https:\/\/leetcode.com\/problems\/sender-with-largest-word-count\/","1674":"https:\/\/leetcode.com\/problems\/minimum-sum-of-squared-difference\/","1675":"https:\/\/leetcode.com\/problems\/super-pow\/","1676":"https:\/\/leetcode.com\/problems\/decrease-elements-to-make-array-zigzag\/","1677":"https:\/\/leetcode.com\/problems\/total-cost-to-hire-k-workers\/","1678":"https:\/\/leetcode.com\/problems\/minimize-result-by-adding-parentheses-to-expression\/","1679":"https:\/\/leetcode.com\/problems\/longest-continuous-increasing-subsequence\/","1680":"https:\/\/leetcode.com\/problems\/image-smoother\/","1681":"https:\/\/leetcode.com\/problems\/max-consecutive-ones-iii\/","1682":"https:\/\/leetcode.com\/problems\/count-number-of-distinct-integers-after-reverse-operations\/","1683":"https:\/\/leetcode.com\/problems\/rearrange-products-table\/","1684":"https:\/\/leetcode.com\/problems\/make-array-strictly-increasing\/","1685":"https:\/\/leetcode.com\/problems\/divisor-game\/","1686":"https:\/\/leetcode.com\/problems\/nth-digit\/","1687":"https:\/\/leetcode.com\/problems\/employees-whose-manager-left-the-company\/","1688":"https:\/\/leetcode.com\/problems\/clone-graph\/","1689":"https:\/\/leetcode.com\/problems\/number-of-beautiful-partitions\/","1690":"https:\/\/leetcode.com\/problems\/minimum-number-of-steps-to-make-two-strings-anagram-ii\/","1691":"https:\/\/leetcode.com\/problems\/call-function-with-custom-context\/","1692":"https:\/\/leetcode.com\/problems\/power-of-four\/","1693":"https:\/\/leetcode.com\/problems\/maximize-the-topmost-element-after-k-moves\/","1694":"https:\/\/leetcode.com\/problems\/minimum-number-of-moves-to-make-palindrome\/","1695":"https:\/\/leetcode.com\/problems\/probability-of-a-two-boxes-having-the-same-number-of-distinct-balls\/","1696":"https:\/\/leetcode.com\/problems\/minimum-increment-to-make-array-unique\/","1697":"https:\/\/leetcode.com\/problems\/minimum-score-by-changing-two-elements\/","1698":"https:\/\/leetcode.com\/problems\/delete-duplicate-emails\/","1699":"https:\/\/leetcode.com\/problems\/number-of-subarrays-with-lcm-equal-to-k\/","1700":"https:\/\/leetcode.com\/problems\/form-array-by-concatenating-subarrays-of-another-array\/","1701":"https:\/\/leetcode.com\/problems\/constrained-subsequence-sum\/","1702":"https:\/\/leetcode.com\/problems\/valid-phone-numbers\/","1703":"https:\/\/leetcode.com\/problems\/best-sightseeing-pair\/","1704":"https:\/\/leetcode.com\/problems\/minimum-path-sum\/","1705":"https:\/\/leetcode.com\/problems\/angle-between-hands-of-a-clock\/","1706":"https:\/\/leetcode.com\/problems\/minimum-time-to-make-rope-colorful\/","1707":"https:\/\/leetcode.com\/problems\/maximum-deletions-on-a-string\/","1708":"https:\/\/leetcode.com\/problems\/find-a-value-of-a-mysterious-function-closest-to-target\/","1709":"https:\/\/leetcode.com\/problems\/maximum-count-of-positive-integer-and-negative-integer\/","1710":"https:\/\/leetcode.com\/problems\/maximum-product-subarray\/","1711":"https:\/\/leetcode.com\/problems\/change-minimum-characters-to-satisfy-one-of-three-conditions\/","1712":"https:\/\/leetcode.com\/problems\/remove-palindromic-subsequences\/","1713":"https:\/\/leetcode.com\/problems\/base-7\/","1714":"https:\/\/leetcode.com\/problems\/count-nodes-with-the-highest-score\/","1715":"https:\/\/leetcode.com\/problems\/divide-two-integers\/","1716":"https:\/\/leetcode.com\/problems\/maximum-twin-sum-of-a-linked-list\/","1717":"https:\/\/leetcode.com\/problems\/arithmetic-slices-ii-subsequence\/","1718":"https:\/\/leetcode.com\/problems\/tuple-with-same-product\/","1719":"https:\/\/leetcode.com\/problems\/shifting-letters-ii\/","1720":"https:\/\/leetcode.com\/problems\/number-of-unique-good-subsequences\/","1721":"https:\/\/leetcode.com\/problems\/number-of-sub-arrays-with-odd-sum\/","1722":"https:\/\/leetcode.com\/problems\/widest-vertical-area-between-two-points-containing-no-points\/","1723":"https:\/\/leetcode.com\/problems\/find-the-score-of-all-prefixes-of-an-array\/","1724":"https:\/\/leetcode.com\/problems\/largest-color-value-in-a-directed-graph\/","1725":"https:\/\/leetcode.com\/problems\/toeplitz-matrix\/","1726":"https:\/\/leetcode.com\/problems\/count-the-number-of-consistent-strings\/","1727":"https:\/\/leetcode.com\/problems\/distinct-prime-factors-of-product-of-array\/","1728":"https:\/\/leetcode.com\/problems\/destroying-asteroids\/","1729":"https:\/\/leetcode.com\/problems\/queens-that-can-attack-the-king\/","1730":"https:\/\/leetcode.com\/problems\/monthly-transactions-i\/","1731":"https:\/\/leetcode.com\/problems\/last-substring-in-lexicographical-order\/","1732":"https:\/\/leetcode.com\/problems\/maximum-number-of-weeks-for-which-you-can-work\/","1733":"https:\/\/leetcode.com\/problems\/length-of-last-word\/","1734":"https:\/\/leetcode.com\/problems\/maximum-number-of-groups-getting-fresh-donuts\/","1735":"https:\/\/leetcode.com\/problems\/map-of-highest-peak\/","1736":"https:\/\/leetcode.com\/problems\/average-waiting-time\/","1737":"https:\/\/leetcode.com\/problems\/flip-binary-tree-to-match-preorder-traversal\/","1738":"https:\/\/leetcode.com\/problems\/maximum-consecutive-floors-without-special-floors\/","1739":"https:\/\/leetcode.com\/problems\/maximum-score-words-formed-by-letters\/","1740":"https:\/\/leetcode.com\/problems\/minimize-xor\/","1741":"https:\/\/leetcode.com\/problems\/check-if-every-row-and-column-contains-all-numbers\/","1742":"https:\/\/leetcode.com\/problems\/longest-valid-parentheses\/","1743":"https:\/\/leetcode.com\/problems\/dinner-plate-stacks\/","1744":"https:\/\/leetcode.com\/problems\/map-sum-pairs\/","1745":"https:\/\/leetcode.com\/problems\/find-median-from-data-stream\/","1746":"https:\/\/leetcode.com\/problems\/node-with-highest-edge-score\/","1747":"https:\/\/leetcode.com\/problems\/stone-game-v\/","1748":"https:\/\/leetcode.com\/problems\/list-the-products-ordered-in-a-period\/","1749":"https:\/\/leetcode.com\/problems\/count-special-quadruplets\/","1750":"https:\/\/leetcode.com\/problems\/longest-common-prefix\/","1751":"https:\/\/leetcode.com\/problems\/how-many-numbers-are-smaller-than-the-current-number\/","1752":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-string-after-applying-operations\/","1753":"https:\/\/leetcode.com\/problems\/amount-of-time-for-binary-tree-to-be-infected\/","1754":"https:\/\/leetcode.com\/problems\/maximum-number-of-occurrences-of-a-substring\/","1755":"https:\/\/leetcode.com\/problems\/balance-a-binary-search-tree\/","1756":"https:\/\/leetcode.com\/problems\/minimum-replacements-to-sort-the-array\/","1757":"https:\/\/leetcode.com\/problems\/closest-dessert-cost\/","1758":"https:\/\/leetcode.com\/problems\/word-frequency\/","1759":"https:\/\/leetcode.com\/problems\/check-if-all-1s-are-at-least-length-k-places-away\/","1760":"https:\/\/leetcode.com\/problems\/kth-largest-element-in-a-stream\/","1761":"https:\/\/leetcode.com\/problems\/form-smallest-number-from-two-digit-arrays\/","1762":"https:\/\/leetcode.com\/problems\/palindrome-partitioning-iii\/","1763":"https:\/\/leetcode.com\/problems\/bulls-and-cows\/","1764":"https:\/\/leetcode.com\/problems\/find-subsequence-of-length-k-with-the-largest-sum\/","1765":"https:\/\/leetcode.com\/problems\/minimum-number-of-swaps-to-make-the-string-balanced\/","1766":"https:\/\/leetcode.com\/problems\/longest-substring-of-all-vowels-in-order\/","1767":"https:\/\/leetcode.com\/problems\/sqrtx\/","1768":"https:\/\/leetcode.com\/problems\/stone-game-vi\/","1769":"https:\/\/leetcode.com\/problems\/longest-word-in-dictionary\/","1770":"https:\/\/leetcode.com\/problems\/minimum-number-of-days-to-make-m-bouquets\/","1771":"https:\/\/leetcode.com\/problems\/dungeon-game\/","1772":"https:\/\/leetcode.com\/problems\/minimum-changes-to-make-alternating-binary-string\/","1773":"https:\/\/leetcode.com\/problems\/minimum-size-subarray-sum\/","1774":"https:\/\/leetcode.com\/problems\/maximum-number-of-moves-in-a-grid\/","1775":"https:\/\/leetcode.com\/problems\/reconstruct-original-digits-from-english\/","1776":"https:\/\/leetcode.com\/problems\/number-of-unique-subjects-taught-by-each-teacher\/","1777":"https:\/\/leetcode.com\/problems\/minimum-space-wasted-from-packaging\/","1778":"https:\/\/leetcode.com\/problems\/rotate-array\/","1779":"https:\/\/leetcode.com\/problems\/expressive-words\/","1780":"https:\/\/leetcode.com\/problems\/smallest-subsequence-of-distinct-characters\/","1781":"https:\/\/leetcode.com\/problems\/queries-on-number-of-points-inside-a-circle\/","1782":"https:\/\/leetcode.com\/problems\/minimize-maximum-pair-sum-in-array\/","1783":"https:\/\/leetcode.com\/problems\/check-if-matrix-is-x-matrix\/","1784":"https:\/\/leetcode.com\/problems\/couples-holding-hands\/","1785":"https:\/\/leetcode.com\/problems\/maximum-score-of-a-node-sequence\/","1786":"https:\/\/leetcode.com\/problems\/statistics-from-a-large-sample\/","1787":"https:\/\/leetcode.com\/problems\/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold\/","1788":"https:\/\/leetcode.com\/problems\/final-value-of-variable-after-performing-operations\/","1789":"https:\/\/leetcode.com\/problems\/subdomain-visit-count\/","1790":"https:\/\/leetcode.com\/problems\/form-largest-integer-with-digits-that-add-up-to-target\/","1791":"https:\/\/leetcode.com\/problems\/swim-in-rising-water\/","1792":"https:\/\/leetcode.com\/problems\/number-of-valid-words-for-each-puzzle\/","1793":"https:\/\/leetcode.com\/problems\/find-first-and-last-position-of-element-in-sorted-array\/","1794":"https:\/\/leetcode.com\/problems\/online-majority-element-in-subarray\/","1795":"https:\/\/leetcode.com\/problems\/check-if-it-is-a-straight-line\/","1796":"https:\/\/leetcode.com\/problems\/minimum-difference-in-sums-after-removal-of-elements\/","1797":"https:\/\/leetcode.com\/problems\/distribute-repeating-integers\/","1798":"https:\/\/leetcode.com\/problems\/find-words-that-can-be-formed-by-characters\/","1799":"https:\/\/leetcode.com\/problems\/memoize-ii\/","1800":"https:\/\/leetcode.com\/problems\/text-justification\/","1801":"https:\/\/leetcode.com\/problems\/number-of-adjacent-elements-with-the-same-color\/","1802":"https:\/\/leetcode.com\/problems\/find-unique-binary-string\/","1803":"https:\/\/leetcode.com\/problems\/the-k-strongest-values-in-an-array\/","1804":"https:\/\/leetcode.com\/problems\/replace-all-digits-with-characters\/","1805":"https:\/\/leetcode.com\/problems\/circle-and-rectangle-overlapping\/","1806":"https:\/\/leetcode.com\/problems\/maximum-number-of-words-you-can-type\/","1807":"https:\/\/leetcode.com\/problems\/number-of-great-partitions\/","1808":"https:\/\/leetcode.com\/problems\/chalkboard-xor-game\/","1809":"https:\/\/leetcode.com\/problems\/check-knight-tour-configuration\/","1810":"https:\/\/leetcode.com\/problems\/two-sum-iv-input-is-a-bst\/","1811":"https:\/\/leetcode.com\/problems\/combinations\/","1812":"https:\/\/leetcode.com\/problems\/cherry-pickup-ii\/","1813":"https:\/\/leetcode.com\/problems\/tallest-billboard\/","1814":"https:\/\/leetcode.com\/problems\/number-of-subarrays-with-bounded-maximum\/","1815":"https:\/\/leetcode.com\/problems\/count-increasing-quadruplets\/","1816":"https:\/\/leetcode.com\/problems\/count-collisions-of-monkeys-on-a-polygon\/","1817":"https:\/\/leetcode.com\/problems\/minimum-index-sum-of-two-lists\/","1818":"https:\/\/leetcode.com\/problems\/find-the-winner-of-an-array-game\/","1819":"https:\/\/leetcode.com\/problems\/validate-binary-tree-nodes\/","1820":"https:\/\/leetcode.com\/problems\/add-digits\/","1821":"https:\/\/leetcode.com\/problems\/perfect-rectangle\/","1822":"https:\/\/leetcode.com\/problems\/coin-change-ii\/","1823":"https:\/\/leetcode.com\/problems\/is-subsequence\/","1824":"https:\/\/leetcode.com\/problems\/number-of-ways-to-paint-n-3-grid\/","1825":"https:\/\/leetcode.com\/problems\/pseudo-palindromic-paths-in-a-binary-tree\/","1826":"https:\/\/leetcode.com\/problems\/minimum-amount-of-time-to-collect-garbage\/","1827":"https:\/\/leetcode.com\/problems\/the-number-of-full-rounds-you-have-played\/","1828":"https:\/\/leetcode.com\/problems\/count-good-triplets-in-an-array\/","1829":"https:\/\/leetcode.com\/problems\/remove-element\/","1830":"https:\/\/leetcode.com\/problems\/replace-employee-id-with-the-unique-identifier\/","1831":"https:\/\/leetcode.com\/problems\/house-robber\/","1832":"https:\/\/leetcode.com\/problems\/total-appeal-of-a-string\/","1833":"https:\/\/leetcode.com\/problems\/minimum-operations-to-convert-number\/","1834":"https:\/\/leetcode.com\/problems\/splitting-a-string-into-descending-consecutive-values\/","1835":"https:\/\/leetcode.com\/problems\/count-the-repetitions\/","1836":"https:\/\/leetcode.com\/problems\/eliminate-maximum-number-of-monsters\/","1837":"https:\/\/leetcode.com\/problems\/target-sum\/","1838":"https:\/\/leetcode.com\/problems\/minimum-moves-to-reach-target-with-rotations\/","1839":"https:\/\/leetcode.com\/problems\/last-stone-weight\/","1840":"https:\/\/leetcode.com\/problems\/largest-submatrix-with-rearrangements\/","1841":"https:\/\/leetcode.com\/problems\/longest-zigzag-path-in-a-binary-tree\/","1842":"https:\/\/leetcode.com\/problems\/sort-the-students-by-their-kth-score\/","1843":"https:\/\/leetcode.com\/problems\/mirror-reflection\/","1844":"https:\/\/leetcode.com\/problems\/rank-scores\/","1845":"https:\/\/leetcode.com\/problems\/score-of-parentheses\/","1846":"https:\/\/leetcode.com\/problems\/longest-string-chain\/","1847":"https:\/\/leetcode.com\/problems\/all-elements-in-two-binary-search-trees\/","1848":"https:\/\/leetcode.com\/problems\/find-two-non-overlapping-sub-arrays-each-with-target-sum\/","1849":"https:\/\/leetcode.com\/problems\/k-divisible-elements-subarrays\/","1850":"https:\/\/leetcode.com\/problems\/minimum-lines-to-represent-a-line-chart\/","1851":"https:\/\/leetcode.com\/problems\/evaluate-division\/","1852":"https:\/\/leetcode.com\/problems\/substrings-of-size-three-with-distinct-characters\/","1853":"https:\/\/leetcode.com\/problems\/minimum-cost-to-change-the-final-value-of-expression\/","1854":"https:\/\/leetcode.com\/problems\/maximum-number-of-events-that-can-be-attended-ii\/","1855":"https:\/\/leetcode.com\/problems\/most-popular-video-creator\/","1856":"https:\/\/leetcode.com\/problems\/next-greater-element-iii\/","1857":"https:\/\/leetcode.com\/problems\/transpose-matrix\/","1858":"https:\/\/leetcode.com\/problems\/selling-pieces-of-wood\/","1859":"https:\/\/leetcode.com\/problems\/most-beautiful-item-for-each-query\/","1860":"https:\/\/leetcode.com\/problems\/divide-array-in-sets-of-k-consecutive-numbers\/","1861":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-beautiful-string\/","1862":"https:\/\/leetcode.com\/problems\/fraction-to-recurring-decimal\/","1863":"https:\/\/leetcode.com\/problems\/minimum-insertion-steps-to-make-a-string-palindrome\/","1864":"https:\/\/leetcode.com\/problems\/two-out-of-three\/","1865":"https:\/\/leetcode.com\/problems\/grid-illumination\/","1866":"https:\/\/leetcode.com\/problems\/maximum-employees-to-be-invited-to-a-meeting\/","1867":"https:\/\/leetcode.com\/problems\/minimize-hamming-distance-after-swap-operations\/","1868":"https:\/\/leetcode.com\/problems\/the-number-of-good-subsets\/","1869":"https:\/\/leetcode.com\/problems\/longest-uncommon-subsequence-i\/","1870":"https:\/\/leetcode.com\/problems\/count-number-of-maximum-bitwise-or-subsets\/","1871":"https:\/\/leetcode.com\/problems\/checking-existence-of-edge-length-limited-paths\/","1872":"https:\/\/leetcode.com\/problems\/recover-the-original-array\/","1873":"https:\/\/leetcode.com\/problems\/find-kth-bit-in-nth-binary-string\/","1874":"https:\/\/leetcode.com\/problems\/maximum-product-difference-between-two-pairs\/","1875":"https:\/\/leetcode.com\/problems\/spiral-matrix-ii\/","1876":"https:\/\/leetcode.com\/problems\/minimum-common-value\/","1877":"https:\/\/leetcode.com\/problems\/crawler-log-folder\/","1878":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-array-equal\/","1879":"https:\/\/leetcode.com\/problems\/replace-all-s-to-avoid-consecutive-repeating-characters\/","1880":"https:\/\/leetcode.com\/problems\/sort-the-people\/","1881":"https:\/\/leetcode.com\/problems\/closest-subsequence-sum\/","1882":"https:\/\/leetcode.com\/problems\/minimum-cost-to-split-an-array\/","1883":"https:\/\/leetcode.com\/problems\/shortest-path-visiting-all-nodes\/","1884":"https:\/\/leetcode.com\/problems\/find-triangular-sum-of-an-array\/","1885":"https:\/\/leetcode.com\/problems\/merge-k-sorted-lists\/","1886":"https:\/\/leetcode.com\/problems\/find-eventual-safe-states\/","1887":"https:\/\/leetcode.com\/problems\/palindrome-number\/","1888":"https:\/\/leetcode.com\/problems\/maximum-path-quality-of-a-graph\/","1889":"https:\/\/leetcode.com\/problems\/maximum-average-subarray-i\/","1890":"https:\/\/leetcode.com\/problems\/array-with-elements-not-equal-to-average-of-neighbors\/","1891":"https:\/\/leetcode.com\/problems\/find-xor-beauty-of-array\/","1892":"https:\/\/leetcode.com\/problems\/2-keys-keyboard\/","1893":"https:\/\/leetcode.com\/problems\/minimum-operations-to-halve-array-sum\/","1894":"https:\/\/leetcode.com\/problems\/find-the-minimum-and-maximum-number-of-nodes-between-critical-points\/","1895":"https:\/\/leetcode.com\/problems\/push-dominoes\/","1896":"https:\/\/leetcode.com\/problems\/number-of-substrings-containing-all-three-characters\/","1897":"https:\/\/leetcode.com\/problems\/zigzag-conversion\/","1898":"https:\/\/leetcode.com\/problems\/largest-values-from-labels\/","1899":"https:\/\/leetcode.com\/problems\/number-of-common-factors\/","1900":"https:\/\/leetcode.com\/problems\/find-the-prefix-common-array-of-two-arrays\/","1901":"https:\/\/leetcode.com\/problems\/maximum-performance-of-a-team\/","1902":"https:\/\/leetcode.com\/problems\/restaurant-growth\/","1903":"https:\/\/leetcode.com\/problems\/serialize-and-deserialize-binary-tree\/","1904":"https:\/\/leetcode.com\/problems\/smallest-subarrays-with-maximum-bitwise-or\/","1905":"https:\/\/leetcode.com\/problems\/determine-the-winner-of-a-bowling-game\/","1906":"https:\/\/leetcode.com\/problems\/minimum-deletions-to-make-character-frequencies-unique\/","1907":"https:\/\/leetcode.com\/problems\/coin-change\/","1908":"https:\/\/leetcode.com\/problems\/minimum-time-to-visit-a-cell-in-a-grid\/","1909":"https:\/\/leetcode.com\/problems\/check-if-move-is-legal\/","1910":"https:\/\/leetcode.com\/problems\/swap-adjacent-in-lr-string\/","1911":"https:\/\/leetcode.com\/problems\/count-of-matches-in-tournament\/","1912":"https:\/\/leetcode.com\/problems\/determine-if-two-strings-are-close\/","1913":"https:\/\/leetcode.com\/problems\/single-number-iii\/","1914":"https:\/\/leetcode.com\/problems\/3sum\/","1915":"https:\/\/leetcode.com\/problems\/linked-list-cycle-ii\/","1916":"https:\/\/leetcode.com\/problems\/sort-an-array\/","1917":"https:\/\/leetcode.com\/problems\/minimum-limit-of-balls-in-a-bag\/","1918":"https:\/\/leetcode.com\/problems\/minimize-the-maximum-difference-of-pairs\/","1919":"https:\/\/leetcode.com\/problems\/count-unhappy-friends\/","1920":"https:\/\/leetcode.com\/problems\/count-hills-and-valleys-in-an-array\/","1921":"https:\/\/leetcode.com\/problems\/count-distinct-numbers-on-board\/","1922":"https:\/\/leetcode.com\/problems\/count-number-of-texts\/","1923":"https:\/\/leetcode.com\/problems\/abbreviating-the-product-of-a-range\/","1924":"https:\/\/leetcode.com\/problems\/minimum-incompatibility\/","1925":"https:\/\/leetcode.com\/problems\/remove-outermost-parentheses\/","1926":"https:\/\/leetcode.com\/problems\/zuma-game\/","1927":"https:\/\/leetcode.com\/problems\/maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold\/","1928":"https:\/\/leetcode.com\/problems\/populating-next-right-pointers-in-each-node\/","1929":"https:\/\/leetcode.com\/problems\/insert-delete-getrandom-o1-duplicates-allowed\/","1930":"https:\/\/leetcode.com\/problems\/partition-array-according-to-given-pivot\/","1931":"https:\/\/leetcode.com\/problems\/maximum-running-time-of-n-computers\/","1932":"https:\/\/leetcode.com\/problems\/find-positive-integer-solution-for-a-given-equation\/","1933":"https:\/\/leetcode.com\/problems\/convert-integer-to-the-sum-of-two-no-zero-integers\/","1934":"https:\/\/leetcode.com\/problems\/max-points-on-a-line\/","1935":"https:\/\/leetcode.com\/problems\/generate-parentheses\/","1936":"https:\/\/leetcode.com\/problems\/average-value-of-even-numbers-that-are-divisible-by-three\/","1937":"https:\/\/leetcode.com\/problems\/sum-of-unique-elements\/","1938":"https:\/\/leetcode.com\/problems\/distribute-coins-in-binary-tree\/","1939":"https:\/\/leetcode.com\/problems\/number-of-arithmetic-triplets\/","1940":"https:\/\/leetcode.com\/problems\/greatest-common-divisor-of-strings\/","1941":"https:\/\/leetcode.com\/problems\/number-of-enclaves\/","1942":"https:\/\/leetcode.com\/problems\/string-compression-ii\/","1943":"https:\/\/leetcode.com\/problems\/max-area-of-island\/","1944":"https:\/\/leetcode.com\/problems\/valid-sudoku\/","1945":"https:\/\/leetcode.com\/problems\/balanced-binary-tree\/","1946":"https:\/\/leetcode.com\/problems\/count-collisions-on-a-road\/","1947":"https:\/\/leetcode.com\/problems\/course-schedule\/","1948":"https:\/\/leetcode.com\/problems\/24-game\/","1949":"https:\/\/leetcode.com\/problems\/find-the-shortest-superstring\/","1950":"https:\/\/leetcode.com\/problems\/add-one-row-to-tree\/","1951":"https:\/\/leetcode.com\/problems\/delete-nodes-and-return-forest\/","1952":"https:\/\/leetcode.com\/problems\/smallest-even-multiple\/","1953":"https:\/\/leetcode.com\/problems\/substring-with-concatenation-of-all-words\/","1954":"https:\/\/leetcode.com\/problems\/design-movie-rental-system\/","1955":"https:\/\/leetcode.com\/problems\/rank-transform-of-an-array\/","1956":"https:\/\/leetcode.com\/problems\/search-a-2d-matrix-ii\/","1957":"https:\/\/leetcode.com\/problems\/number-of-increasing-paths-in-a-grid\/","1958":"https:\/\/leetcode.com\/problems\/nested-array-generator\/","1959":"https:\/\/leetcode.com\/problems\/percentage-of-users-attended-a-contest\/","1960":"https:\/\/leetcode.com\/problems\/customer-placing-the-largest-number-of-orders\/","1961":"https:\/\/leetcode.com\/problems\/alternating-digit-sum\/","1962":"https:\/\/leetcode.com\/problems\/number-of-provinces\/","1963":"https:\/\/leetcode.com\/problems\/max-sum-of-rectangle-no-larger-than-k\/","1964":"https:\/\/leetcode.com\/problems\/license-key-formatting\/","1965":"https:\/\/leetcode.com\/problems\/next-greater-numerically-balanced-number\/","1966":"https:\/\/leetcode.com\/problems\/implement-magic-dictionary\/","1967":"https:\/\/leetcode.com\/problems\/the-number-of-weak-characters-in-the-game\/","1968":"https:\/\/leetcode.com\/problems\/product-of-the-last-k-numbers\/","1969":"https:\/\/leetcode.com\/problems\/article-views-i\/","1970":"https:\/\/leetcode.com\/problems\/the-dining-philosophers\/","1971":"https:\/\/leetcode.com\/problems\/distant-barcodes\/","1972":"https:\/\/leetcode.com\/problems\/length-of-the-longest-alphabetical-continuous-substring\/","1973":"https:\/\/leetcode.com\/problems\/find-center-of-star-graph\/","1974":"https:\/\/leetcode.com\/problems\/jump-game-v\/","1975":"https:\/\/leetcode.com\/problems\/guess-the-word\/","1976":"https:\/\/leetcode.com\/problems\/longest-increasing-path-in-a-matrix\/","1977":"https:\/\/leetcode.com\/problems\/longest-palindrome-by-concatenating-two-letter-words\/","1978":"https:\/\/leetcode.com\/problems\/unique-paths\/","1979":"https:\/\/leetcode.com\/problems\/game-of-life\/","1980":"https:\/\/leetcode.com\/problems\/count-pairs-of-nodes\/","1981":"https:\/\/leetcode.com\/problems\/kth-smallest-number-in-multiplication-table\/","1982":"https:\/\/leetcode.com\/problems\/heaters\/","1983":"https:\/\/leetcode.com\/problems\/minimize-deviation-in-array\/","1984":"https:\/\/leetcode.com\/problems\/minimum-number-of-people-to-teach\/","1985":"https:\/\/leetcode.com\/problems\/to-lower-case\/","1986":"https:\/\/leetcode.com\/problems\/maximum-value-of-a-string-in-an-array\/","1987":"https:\/\/leetcode.com\/problems\/delete-node-in-a-linked-list\/","1988":"https:\/\/leetcode.com\/problems\/all-possible-full-binary-trees\/","1989":"https:\/\/leetcode.com\/problems\/matrix-diagonal-sum\/","1990":"https:\/\/leetcode.com\/problems\/new-21-game\/","1991":"https:\/\/leetcode.com\/problems\/minimum-cost-to-cut-a-stick\/","1992":"https:\/\/leetcode.com\/problems\/kth-smallest-instructions\/","1993":"https:\/\/leetcode.com\/problems\/ambiguous-coordinates\/","1994":"https:\/\/leetcode.com\/problems\/calculate-delayed-arrival-time\/","1995":"https:\/\/leetcode.com\/problems\/count-palindromic-subsequences\/","1996":"https:\/\/leetcode.com\/problems\/reformat-the-string\/","1997":"https:\/\/leetcode.com\/problems\/building-h2o\/","1998":"https:\/\/leetcode.com\/problems\/smallest-number-in-infinite-set\/","1999":"https:\/\/leetcode.com\/problems\/leaf-similar-trees\/","2000":"https:\/\/leetcode.com\/problems\/image-overlap\/","2001":"https:\/\/leetcode.com\/problems\/average-selling-price\/","2002":"https:\/\/leetcode.com\/problems\/steps-to-make-array-non-decreasing\/","2003":"https:\/\/leetcode.com\/problems\/wildcard-matching\/","2004":"https:\/\/leetcode.com\/problems\/longest-increasing-subsequence\/","2005":"https:\/\/leetcode.com\/problems\/check-if-one-string-swap-can-make-strings-equal\/","2006":"https:\/\/leetcode.com\/problems\/smallest-value-after-replacing-with-sum-of-prime-factors\/","2007":"https:\/\/leetcode.com\/problems\/unique-length-3-palindromic-subsequences\/","2008":"https:\/\/leetcode.com\/problems\/duplicate-zeros\/","2009":"https:\/\/leetcode.com\/problems\/minimum-consecutive-cards-to-pick-up\/","2010":"https:\/\/leetcode.com\/problems\/add-strings\/","2011":"https:\/\/leetcode.com\/problems\/binary-search-tree-to-greater-sum-tree\/","2012":"https:\/\/leetcode.com\/problems\/count-unreachable-pairs-of-nodes-in-an-undirected-graph\/","2013":"https:\/\/leetcode.com\/problems\/construct-binary-tree-from-inorder-and-postorder-traversal\/","2014":"https:\/\/leetcode.com\/problems\/orderly-queue\/","2015":"https:\/\/leetcode.com\/problems\/magnetic-force-between-two-balls\/","2016":"https:\/\/leetcode.com\/problems\/design-an-atm-machine\/","2017":"https:\/\/leetcode.com\/problems\/number-of-ways-to-reconstruct-a-tree\/","2018":"https:\/\/leetcode.com\/problems\/implement-trie-prefix-tree\/","2019":"https:\/\/leetcode.com\/problems\/pancake-sorting\/","2020":"https:\/\/leetcode.com\/problems\/reorder-list\/","2021":"https:\/\/leetcode.com\/problems\/defuse-the-bomb\/","2022":"https:\/\/leetcode.com\/problems\/merge-two-sorted-lists\/","2023":"https:\/\/leetcode.com\/problems\/number-of-subsequences-that-satisfy-the-given-sum-condition\/","2024":"https:\/\/leetcode.com\/problems\/k-closest-points-to-origin\/","2025":"https:\/\/leetcode.com\/problems\/decode-string\/","2026":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-ii\/","2027":"https:\/\/leetcode.com\/problems\/maximum-and-sum-of-array\/","2028":"https:\/\/leetcode.com\/problems\/count-sorted-vowel-strings\/","2029":"https:\/\/leetcode.com\/problems\/task-scheduler\/","2030":"https:\/\/leetcode.com\/problems\/project-employees-i\/","2031":"https:\/\/leetcode.com\/problems\/find-the-most-competitive-subsequence\/","2032":"https:\/\/leetcode.com\/problems\/previous-permutation-with-one-swap\/","2033":"https:\/\/leetcode.com\/problems\/longest-uncommon-subsequence-ii\/","2034":"https:\/\/leetcode.com\/problems\/pizza-with-3n-slices\/","2035":"https:\/\/leetcode.com\/problems\/find-nearest-point-that-has-the-same-x-or-y-coordinate\/","2036":"https:\/\/leetcode.com\/problems\/print-zero-even-odd\/","2037":"https:\/\/leetcode.com\/problems\/kth-smallest-element-in-a-bst\/","2038":"https:\/\/leetcode.com\/problems\/sort-even-and-odd-indices-independently\/","2039":"https:\/\/leetcode.com\/problems\/moving-stones-until-consecutive\/","2040":"https:\/\/leetcode.com\/problems\/create-maximum-number\/","2041":"https:\/\/leetcode.com\/problems\/movie-rating\/","2042":"https:\/\/leetcode.com\/problems\/find-the-longest-balanced-substring-of-a-binary-string\/","2043":"https:\/\/leetcode.com\/problems\/best-time-to-buy-and-sell-stock-iii\/","2044":"https:\/\/leetcode.com\/problems\/k-th-smallest-prime-fraction\/","2045":"https:\/\/leetcode.com\/problems\/1-bit-and-2-bit-characters\/","2046":"https:\/\/leetcode.com\/problems\/frequency-tracker\/","2047":"https:\/\/leetcode.com\/problems\/out-of-boundary-paths\/","2048":"https:\/\/leetcode.com\/problems\/number-of-islands\/","2049":"https:\/\/leetcode.com\/problems\/find-peak-element\/","2050":"https:\/\/leetcode.com\/problems\/invalid-tweets\/","2051":"https:\/\/leetcode.com\/problems\/number-of-steps-to-reduce-a-number-in-binary-representation-to-one\/","2052":"https:\/\/leetcode.com\/problems\/maximum-number-of-pairs-in-array\/","2053":"https:\/\/leetcode.com\/problems\/minimum-number-of-operations-to-move-all-balls-to-each-box\/","2054":"https:\/\/leetcode.com\/problems\/convert-an-array-into-a-2d-array-with-conditions\/","2055":"https:\/\/leetcode.com\/problems\/find-the-k-beauty-of-a-number\/","2056":"https:\/\/leetcode.com\/problems\/shortest-common-supersequence\/","2057":"https:\/\/leetcode.com\/problems\/shortest-path-in-a-grid-with-obstacles-elimination\/","2058":"https:\/\/leetcode.com\/problems\/move-zeroes\/","2059":"https:\/\/leetcode.com\/problems\/minimize-the-maximum-of-two-arrays\/","2060":"https:\/\/leetcode.com\/problems\/walking-robot-simulation-ii\/","2061":"https:\/\/leetcode.com\/problems\/rings-and-rods\/","2062":"https:\/\/leetcode.com\/problems\/strong-password-checker-ii\/","2063":"https:\/\/leetcode.com\/problems\/maximum-subarray-min-product\/","2064":"https:\/\/leetcode.com\/problems\/single-number\/","2065":"https:\/\/leetcode.com\/problems\/row-with-maximum-ones\/","2066":"https:\/\/leetcode.com\/problems\/mean-of-array-after-removing-some-elements\/","2067":"https:\/\/leetcode.com\/problems\/using-a-robot-to-print-the-lexicographically-smallest-string\/","2068":"https:\/\/leetcode.com\/problems\/valid-arrangement-of-pairs\/","2069":"https:\/\/leetcode.com\/problems\/consecutive-characters\/","2070":"https:\/\/leetcode.com\/problems\/sum-of-scores-of-built-strings\/","2071":"https:\/\/leetcode.com\/problems\/sort-items-by-groups-respecting-dependencies\/","2072":"https:\/\/leetcode.com\/problems\/range-frequency-queries\/","2073":"https:\/\/leetcode.com\/problems\/find-duplicate-subtrees\/","2074":"https:\/\/leetcode.com\/problems\/rectangle-area-ii\/","2075":"https:\/\/leetcode.com\/problems\/set-intersection-size-at-least-two\/","2076":"https:\/\/leetcode.com\/problems\/disconnect-path-in-a-binary-matrix-by-at-most-one-flip\/","2077":"https:\/\/leetcode.com\/problems\/find-all-possible-recipes-from-given-supplies\/","2078":"https:\/\/leetcode.com\/problems\/h-index-ii\/","2079":"https:\/\/leetcode.com\/problems\/longest-mountain-in-array\/","2080":"https:\/\/leetcode.com\/problems\/prefix-and-suffix-search\/","2081":"https:\/\/leetcode.com\/problems\/strictly-palindromic-number\/","2082":"https:\/\/leetcode.com\/problems\/linked-list-cycle\/","2083":"https:\/\/leetcode.com\/problems\/non-decreasing-array\/","2084":"https:\/\/leetcode.com\/problems\/the-k-weakest-rows-in-a-matrix\/","2085":"https:\/\/leetcode.com\/problems\/ways-to-split-array-into-three-subarrays\/","2086":"https:\/\/leetcode.com\/problems\/path-in-zigzag-labelled-binary-tree\/","2087":"https:\/\/leetcode.com\/problems\/reveal-cards-in-increasing-order\/","2088":"https:\/\/leetcode.com\/problems\/largest-number\/","2089":"https:\/\/leetcode.com\/problems\/maximum-or\/","2090":"https:\/\/leetcode.com\/problems\/find-minimum-in-rotated-sorted-array\/","2091":"https:\/\/leetcode.com\/problems\/valid-anagram\/","2092":"https:\/\/leetcode.com\/problems\/maximum-enemy-forts-that-can-be-captured\/","2093":"https:\/\/leetcode.com\/problems\/ipo\/","2094":"https:\/\/leetcode.com\/problems\/number-of-operations-to-make-network-connected\/","2095":"https:\/\/leetcode.com\/problems\/shuffle-the-array\/","2096":"https:\/\/leetcode.com\/problems\/count-and-say\/","2097":"https:\/\/leetcode.com\/problems\/escape-a-large-maze\/","2098":"https:\/\/leetcode.com\/problems\/power-of-heroes\/","2099":"https:\/\/leetcode.com\/problems\/path-crossing\/","2100":"https:\/\/leetcode.com\/problems\/guess-number-higher-or-lower\/","2101":"https:\/\/leetcode.com\/problems\/replace-elements-with-greatest-element-on-right-side\/","2102":"https:\/\/leetcode.com\/problems\/shortest-distance-to-a-character\/","2103":"https:\/\/leetcode.com\/problems\/number-of-equivalent-domino-pairs\/","2104":"https:\/\/leetcode.com\/problems\/logical-or-of-two-binary-grids-represented-as-quad-trees\/","2105":"https:\/\/leetcode.com\/problems\/reverse-vowels-of-a-string\/","2106":"https:\/\/leetcode.com\/problems\/maximum-binary-string-after-change\/","2107":"https:\/\/leetcode.com\/problems\/array-wrapper\/","2108":"https:\/\/leetcode.com\/problems\/knight-dialer\/","2109":"https:\/\/leetcode.com\/problems\/maximum-sum-bst-in-binary-tree\/","2110":"https:\/\/leetcode.com\/problems\/add-two-integers\/","2111":"https:\/\/leetcode.com\/problems\/remove-duplicates-from-sorted-array\/","2112":"https:\/\/leetcode.com\/problems\/integer-replacement\/","2113":"https:\/\/leetcode.com\/problems\/a-number-after-a-double-reversal\/","2114":"https:\/\/leetcode.com\/problems\/maximum-number-of-points-with-cost\/","2115":"https:\/\/leetcode.com\/problems\/remove-sub-folders-from-the-filesystem\/","2116":"https:\/\/leetcode.com\/problems\/reverse-words-in-a-string\/","2117":"https:\/\/leetcode.com\/problems\/magical-string\/","2118":"https:\/\/leetcode.com\/problems\/maximum-sum-of-an-hourglass\/","2119":"https:\/\/leetcode.com\/problems\/binary-gap\/","2120":"https:\/\/leetcode.com\/problems\/diagonal-traverse\/","2121":"https:\/\/leetcode.com\/problems\/minimum-garden-perimeter-to-collect-enough-apples\/","2122":"https:\/\/leetcode.com\/problems\/maximum-product-of-the-length-of-two-palindromic-subsequences\/","2123":"https:\/\/leetcode.com\/problems\/check-if-it-is-a-good-array\/","2124":"https:\/\/leetcode.com\/problems\/positions-of-large-groups\/","2125":"https:\/\/leetcode.com\/problems\/maximum-product-of-three-numbers\/","2126":"https:\/\/leetcode.com\/problems\/ransom-note\/","2127":"https:\/\/leetcode.com\/problems\/decode-xored-permutation\/","2128":"https:\/\/leetcode.com\/problems\/curry\/","2129":"https:\/\/leetcode.com\/problems\/delete-duplicate-folders-in-system\/","2130":"https:\/\/leetcode.com\/problems\/decode-the-slanted-ciphertext\/","2131":"https:\/\/leetcode.com\/problems\/minimum-hours-of-training-to-win-a-competition\/","2132":"https:\/\/leetcode.com\/problems\/create-target-array-in-the-given-order\/","2133":"https:\/\/leetcode.com\/problems\/jewels-and-stones\/","2134":"https:\/\/leetcode.com\/problems\/middle-of-the-linked-list\/","2135":"https:\/\/leetcode.com\/problems\/most-frequent-even-element\/","2136":"https:\/\/leetcode.com\/problems\/perfect-number\/","2137":"https:\/\/leetcode.com\/problems\/check-if-there-is-a-valid-path-in-a-grid\/","2138":"https:\/\/leetcode.com\/problems\/course-schedule-iv\/","2139":"https:\/\/leetcode.com\/problems\/parsing-a-boolean-expression\/","2140":"https:\/\/leetcode.com\/problems\/reverse-prefix-of-word\/","2141":"https:\/\/leetcode.com\/problems\/intersection-of-two-arrays\/","2142":"https:\/\/leetcode.com\/problems\/stickers-to-spell-word\/","2143":"https:\/\/leetcode.com\/problems\/circular-permutation-in-binary-representation\/","2144":"https:\/\/leetcode.com\/problems\/largest-number-after-digit-swaps-by-parity\/","2145":"https:\/\/leetcode.com\/problems\/house-robber-iii\/","2146":"https:\/\/leetcode.com\/problems\/append-characters-to-string-to-make-subsequence\/","2147":"https:\/\/leetcode.com\/problems\/maximum-number-of-non-overlapping-palindrome-substrings\/","2148":"https:\/\/leetcode.com\/problems\/insufficient-nodes-in-root-to-leaf-paths\/","2149":"https:\/\/leetcode.com\/problems\/bag-of-tokens\/","2150":"https:\/\/leetcode.com\/problems\/next-greater-element-i\/","2151":"https:\/\/leetcode.com\/problems\/tag-validator\/","2152":"https:\/\/leetcode.com\/problems\/optimal-division\/","2153":"https:\/\/leetcode.com\/problems\/valid-parenthesis-string\/","2154":"https:\/\/leetcode.com\/problems\/shuffle-string\/","2155":"https:\/\/leetcode.com\/problems\/minimum-jumps-to-reach-home\/","2156":"https:\/\/leetcode.com\/problems\/hand-of-straights\/","2157":"https:\/\/leetcode.com\/problems\/odd-even-linked-list\/","2158":"https:\/\/leetcode.com\/problems\/largest-rectangle-in-histogram\/","2159":"https:\/\/leetcode.com\/problems\/longest-subarray-with-maximum-bitwise-and\/","2160":"https:\/\/leetcode.com\/problems\/count-total-number-of-colored-cells\/","2161":"https:\/\/leetcode.com\/problems\/binary-tree-maximum-path-sum\/","2162":"https:\/\/leetcode.com\/problems\/sum-of-absolute-differences-in-a-sorted-array\/","2163":"https:\/\/leetcode.com\/problems\/maximum-score-from-performing-multiplication-operations\/","2164":"https:\/\/leetcode.com\/problems\/next-greater-element-iv\/","2165":"https:\/\/leetcode.com\/problems\/construct-binary-tree-from-preorder-and-postorder-traversal\/","2166":"https:\/\/leetcode.com\/problems\/design-add-and-search-words-data-structure\/","2167":"https:\/\/leetcode.com\/problems\/minimum-falling-path-sum-ii\/","2168":"https:\/\/leetcode.com\/problems\/delete-characters-to-make-fancy-string\/","2169":"https:\/\/leetcode.com\/problems\/maximize-palindrome-length-from-subsequences\/","2170":"https:\/\/leetcode.com\/problems\/detect-squares\/","2171":"https:\/\/leetcode.com\/problems\/smallest-range-ii\/","2172":"https:\/\/leetcode.com\/problems\/count-elements-with-strictly-smaller-and-greater-elements\/","2173":"https:\/\/leetcode.com\/problems\/minimum-falling-path-sum\/","2174":"https:\/\/leetcode.com\/problems\/simplified-fractions\/","2175":"https:\/\/leetcode.com\/problems\/sudoku-solver\/","2176":"https:\/\/leetcode.com\/problems\/maximum-earnings-from-taxi\/","2177":"https:\/\/leetcode.com\/problems\/relative-sort-array\/","2178":"https:\/\/leetcode.com\/problems\/set-matrix-zeroes\/","2179":"https:\/\/leetcode.com\/problems\/island-perimeter\/","2180":"https:\/\/leetcode.com\/problems\/preimage-size-of-factorial-zeroes-function\/","2181":"https:\/\/leetcode.com\/problems\/most-profitable-path-in-a-tree\/","2182":"https:\/\/leetcode.com\/problems\/number-of-good-ways-to-split-a-string\/","2183":"https:\/\/leetcode.com\/problems\/max-chunks-to-make-sorted\/","2184":"https:\/\/leetcode.com\/problems\/find-all-duplicates-in-an-array\/","2185":"https:\/\/leetcode.com\/problems\/longer-contiguous-segments-of-ones-than-zeros\/","2186":"https:\/\/leetcode.com\/problems\/restore-the-array\/","2187":"https:\/\/leetcode.com\/problems\/count-of-range-sum\/","2188":"https:\/\/leetcode.com\/problems\/can-you-eat-your-favorite-candy-on-your-favorite-day\/","2189":"https:\/\/leetcode.com\/problems\/number-of-restricted-paths-from-first-to-last-node\/","2190":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-all-array-elements-equal\/","2191":"https:\/\/leetcode.com\/problems\/alphabet-board-path\/","2192":"https:\/\/leetcode.com\/problems\/count-lattice-points-inside-a-circle\/","2193":"https:\/\/leetcode.com\/problems\/step-by-step-directions-from-a-binary-tree-node-to-another\/","2194":"https:\/\/leetcode.com\/problems\/number-of-music-playlists\/","2195":"https:\/\/leetcode.com\/problems\/maximum-population-year\/","2196":"https:\/\/leetcode.com\/problems\/count-subarrays-with-fixed-bounds\/","2197":"https:\/\/leetcode.com\/problems\/find-the-winner-of-the-circular-game\/","2198":"https:\/\/leetcode.com\/problems\/count-subtrees-with-max-distance-between-cities\/","2199":"https:\/\/leetcode.com\/problems\/beautiful-array\/","2200":"https:\/\/leetcode.com\/problems\/trapping-rain-water\/","2201":"https:\/\/leetcode.com\/problems\/defanging-an-ip-address\/","2202":"https:\/\/leetcode.com\/problems\/reverse-bits\/","2203":"https:\/\/leetcode.com\/problems\/seat-reservation-manager\/","2204":"https:\/\/leetcode.com\/problems\/can-make-palindrome-from-substring\/","2205":"https:\/\/leetcode.com\/problems\/grumpy-bookstore-owner\/","2206":"https:\/\/leetcode.com\/problems\/generate-a-string-with-characters-that-have-odd-counts\/","2207":"https:\/\/leetcode.com\/problems\/minimum-number-of-k-consecutive-bit-flips\/","2208":"https:\/\/leetcode.com\/problems\/maximum-number-of-balls-in-a-box\/","2209":"https:\/\/leetcode.com\/problems\/duplicate-emails\/","2210":"https:\/\/leetcode.com\/problems\/maximum-product-of-word-lengths\/","2211":"https:\/\/leetcode.com\/problems\/gcd-sort-of-an-array\/","2212":"https:\/\/leetcode.com\/problems\/split-two-strings-to-make-palindrome\/","2213":"https:\/\/leetcode.com\/problems\/minimum-score-after-removals-on-a-tree\/","2214":"https:\/\/leetcode.com\/problems\/stone-game-ix\/","2215":"https:\/\/leetcode.com\/problems\/letter-tile-possibilities\/","2216":"https:\/\/leetcode.com\/problems\/subsequence-with-the-minimum-score\/","2217":"https:\/\/leetcode.com\/problems\/building-boxes\/","2218":"https:\/\/leetcode.com\/problems\/car-fleet\/","2219":"https:\/\/leetcode.com\/problems\/decompress-run-length-encoded-list\/","2220":"https:\/\/leetcode.com\/problems\/kth-distinct-string-in-an-array\/","2221":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-equivalent-string\/","2222":"https:\/\/leetcode.com\/problems\/minimum-operations-to-make-array-equal-ii\/","2223":"https:\/\/leetcode.com\/problems\/minimum-ascii-delete-sum-for-two-strings\/","2224":"https:\/\/leetcode.com\/problems\/search-insert-position\/","2225":"https:\/\/leetcode.com\/problems\/minimum-time-to-remove-all-cars-containing-illegal-goods\/","2226":"https:\/\/leetcode.com\/problems\/check-whether-two-strings-are-almost-equivalent\/","2227":"https:\/\/leetcode.com\/problems\/number-of-even-and-odd-bits\/","2228":"https:\/\/leetcode.com\/problems\/string-compression\/","2229":"https:\/\/leetcode.com\/problems\/top-k-frequent-words\/","2230":"https:\/\/leetcode.com\/problems\/product-sales-analysis-iii\/","2231":"https:\/\/leetcode.com\/problems\/sum-of-mutated-array-closest-to-target\/","2232":"https:\/\/leetcode.com\/problems\/find-minimum-time-to-finish-all-jobs\/","2233":"https:\/\/leetcode.com\/problems\/maximize-grid-happiness\/","2234":"https:\/\/leetcode.com\/problems\/find-the-substring-with-maximum-cost\/","2235":"https:\/\/leetcode.com\/problems\/maximum-ascending-subarray-sum\/","2236":"https:\/\/leetcode.com\/problems\/maximum-score-from-removing-substrings\/","2237":"https:\/\/leetcode.com\/problems\/root-equals-sum-of-children\/","2238":"https:\/\/leetcode.com\/problems\/fizz-buzz-multithreaded\/","2239":"https:\/\/leetcode.com\/problems\/find-subarrays-with-equal-sum\/","2240":"https:\/\/leetcode.com\/problems\/minimize-the-difference-between-target-and-chosen-elements\/","2241":"https:\/\/leetcode.com\/problems\/sum-of-subsequence-widths\/","2242":"https:\/\/leetcode.com\/problems\/determine-if-string-halves-are-alike\/","2243":"https:\/\/leetcode.com\/problems\/evaluate-reverse-polish-notation\/","2244":"https:\/\/leetcode.com\/problems\/minimum-cost-to-make-at-least-one-valid-path-in-a-grid\/","2245":"https:\/\/leetcode.com\/problems\/number-of-ways-of-cutting-a-pizza\/","2246":"https:\/\/leetcode.com\/problems\/check-if-string-is-a-prefix-of-array\/","2247":"https:\/\/leetcode.com\/problems\/sum-of-number-and-its-reverse\/","2248":"https:\/\/leetcode.com\/problems\/sum-of-even-numbers-after-queries\/","2249":"https:\/\/leetcode.com\/problems\/maximum-value-of-k-coins-from-piles\/","2250":"https:\/\/leetcode.com\/problems\/kth-ancestor-of-a-tree-node\/","2251":"https:\/\/leetcode.com\/problems\/minimum-cost-tree-from-leaf-values\/","2252":"https:\/\/leetcode.com\/problems\/keys-and-rooms\/","2253":"https:\/\/leetcode.com\/problems\/find-total-time-spent-by-each-employee\/","2254":"https:\/\/leetcode.com\/problems\/flip-equivalent-binary-trees\/","2255":"https:\/\/leetcode.com\/problems\/first-completely-painted-row-or-column\/","2256":"https:\/\/leetcode.com\/problems\/remove-max-number-of-edges-to-keep-graph-fully-traversable\/","2257":"https:\/\/leetcode.com\/problems\/minimum-time-to-complete-trips\/","2258":"https:\/\/leetcode.com\/problems\/escape-the-spreading-fire\/","2259":"https:\/\/leetcode.com\/problems\/repeated-substring-pattern\/","2260":"https:\/\/leetcode.com\/problems\/number-of-ways-to-reach-a-position-after-exactly-k-steps\/","2261":"https:\/\/leetcode.com\/problems\/first-letter-to-appear-twice\/","2262":"https:\/\/leetcode.com\/problems\/reconstruct-a-2-row-binary-matrix\/","2263":"https:\/\/leetcode.com\/problems\/simple-bank-system\/","2264":"https:\/\/leetcode.com\/problems\/intervals-between-identical-elements\/","2265":"https:\/\/leetcode.com\/problems\/find-the-array-concatenation-value\/","2266":"https:\/\/leetcode.com\/problems\/divide-intervals-into-minimum-number-of-groups\/","2267":"https:\/\/leetcode.com\/problems\/longest-palindrome\/","2268":"https:\/\/leetcode.com\/problems\/plus-one\/","2269":"https:\/\/leetcode.com\/problems\/stone-game-vii\/","2270":"https:\/\/leetcode.com\/problems\/maximize-the-minimum-powered-city\/","2271":"https:\/\/leetcode.com\/problems\/design-cancellable-function\/","2272":"https:\/\/leetcode.com\/problems\/minimum-cost-for-tickets\/","2273":"https:\/\/leetcode.com\/problems\/maximum-length-of-pair-chain\/","2274":"https:\/\/leetcode.com\/problems\/find-common-characters\/","2275":"https:\/\/leetcode.com\/problems\/redistribute-characters-to-make-all-strings-equal\/","2276":"https:\/\/leetcode.com\/problems\/maximum-profit-of-operating-a-centennial-wheel\/","2277":"https:\/\/leetcode.com\/problems\/maximum-units-on-a-truck\/","2278":"https:\/\/leetcode.com\/problems\/partition-array-into-disjoint-intervals\/","2279":"https:\/\/leetcode.com\/problems\/solving-questions-with-brainpower\/","2280":"https:\/\/leetcode.com\/problems\/sum-of-distances\/","2281":"https:\/\/leetcode.com\/problems\/n-ary-tree-level-order-traversal\/","2282":"https:\/\/leetcode.com\/problems\/construct-the-lexicographically-largest-valid-sequence\/","2283":"https:\/\/leetcode.com\/problems\/differences-between-two-objects\/","2284":"https:\/\/leetcode.com\/problems\/count-sub-islands\/","2285":"https:\/\/leetcode.com\/problems\/minimum-sideway-jumps\/","2286":"https:\/\/leetcode.com\/problems\/most-visited-sector-in-a-circular-track\/","2287":"https:\/\/leetcode.com\/problems\/min-cost-climbing-stairs\/","2288":"https:\/\/leetcode.com\/problems\/number-of-different-subsequences-gcds\/","2289":"https:\/\/leetcode.com\/problems\/transpose-file\/","2290":"https:\/\/leetcode.com\/problems\/maximum-length-of-a-concatenated-string-with-unique-characters\/","2291":"https:\/\/leetcode.com\/problems\/count-complete-tree-nodes\/","2292":"https:\/\/leetcode.com\/problems\/maximum-number-of-integers-to-choose-from-a-range-i\/","2293":"https:\/\/leetcode.com\/problems\/count-ways-to-build-rooms-in-an-ant-colony\/","2294":"https:\/\/leetcode.com\/problems\/even-odd-tree\/","2295":"https:\/\/leetcode.com\/problems\/shortest-path-with-alternating-colors\/","2296":"https:\/\/leetcode.com\/problems\/longest-ideal-subsequence\/","2297":"https:\/\/leetcode.com\/problems\/contiguous-array\/","2298":"https:\/\/leetcode.com\/problems\/max-sum-of-a-pair-with-equal-sum-of-digits\/","2299":"https:\/\/leetcode.com\/problems\/number-of-good-leaf-nodes-pairs\/","2300":"https:\/\/leetcode.com\/problems\/is-graph-bipartite\/","2301":"https:\/\/leetcode.com\/problems\/find-the-longest-substring-containing-vowels-in-even-counts\/","2302":"https:\/\/leetcode.com\/problems\/convert-a-number-to-hexadecimal\/","2303":"https:\/\/leetcode.com\/problems\/cycle-length-queries-in-a-tree\/","2304":"https:\/\/leetcode.com\/problems\/string-matching-in-an-array\/","2305":"https:\/\/leetcode.com\/problems\/matchsticks-to-square\/","2306":"https:\/\/leetcode.com\/problems\/count-numbers-with-unique-digits\/","2307":"https:\/\/leetcode.com\/problems\/tiling-a-rectangle-with-the-fewest-squares\/","2308":"https:\/\/leetcode.com\/problems\/minimum-insertions-to-balance-a-parentheses-string\/","2309":"https:\/\/leetcode.com\/problems\/most-frequent-number-following-key-in-an-array\/","2310":"https:\/\/leetcode.com\/problems\/convert-sorted-array-to-binary-search-tree\/","2311":"https:\/\/leetcode.com\/problems\/number-of-recent-calls\/","2312":"https:\/\/leetcode.com\/problems\/number-of-1-bits\/","2313":"https:\/\/leetcode.com\/problems\/jump-game-iii\/","2314":"https:\/\/leetcode.com\/problems\/count-good-nodes-in-binary-tree\/","2315":"https:\/\/leetcode.com\/problems\/maximal-score-after-applying-k-operations\/","2316":"https:\/\/leetcode.com\/problems\/maximum-average-pass-ratio\/","2317":"https:\/\/leetcode.com\/problems\/binary-search-tree-iterator\/","2318":"https:\/\/leetcode.com\/problems\/modify-graph-edge-weights\/","2319":"https:\/\/leetcode.com\/problems\/minimum-non-zero-product-of-the-array-elements\/","2320":"https:\/\/leetcode.com\/problems\/make-costs-of-paths-equal-in-a-binary-tree\/","2321":"https:\/\/leetcode.com\/problems\/event-emitter\/","2322":"https:\/\/leetcode.com\/problems\/minimum-total-cost-to-make-arrays-unequal\/","2323":"https:\/\/leetcode.com\/problems\/design-a-stack-with-increment-operation\/","2324":"https:\/\/leetcode.com\/problems\/check-distances-between-same-letters\/","2325":"https:\/\/leetcode.com\/problems\/difference-between-ones-and-zeros-in-row-and-column\/","2326":"https:\/\/leetcode.com\/problems\/validate-ip-address\/","2327":"https:\/\/leetcode.com\/problems\/largest-substring-between-two-equal-characters\/","2328":"https:\/\/leetcode.com\/problems\/loud-and-rich\/","2329":"https:\/\/leetcode.com\/problems\/sum-of-left-leaves\/","2330":"https:\/\/leetcode.com\/problems\/binary-tree-pruning\/","2331":"https:\/\/leetcode.com\/problems\/matrix-cells-in-distance-order\/","2332":"https:\/\/leetcode.com\/problems\/sum-of-subarray-minimums\/","2333":"https:\/\/leetcode.com\/problems\/add-binary\/","2334":"https:\/\/leetcode.com\/problems\/reducing-dishes\/","2335":"https:\/\/leetcode.com\/problems\/summary-ranges\/","2336":"https:\/\/leetcode.com\/problems\/sum-in-a-matrix\/","2337":"https:\/\/leetcode.com\/problems\/find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k\/","2338":"https:\/\/leetcode.com\/problems\/ugly-number\/","2339":"https:\/\/leetcode.com\/problems\/maximum-product-of-two-elements-in-an-array\/","2340":"https:\/\/leetcode.com\/problems\/pacific-atlantic-water-flow\/","2341":"https:\/\/leetcode.com\/problems\/insert-interval\/","2342":"https:\/\/leetcode.com\/problems\/split-with-minimum-sum\/","2343":"https:\/\/leetcode.com\/problems\/incremental-memory-leak\/","2344":"https:\/\/leetcode.com\/problems\/majority-element-ii\/","2345":"https:\/\/leetcode.com\/problems\/apply-discount-to-prices\/","2346":"https:\/\/leetcode.com\/problems\/invalid-transactions\/","2347":"https:\/\/leetcode.com\/problems\/allow-one-function-call\/","2348":"https:\/\/leetcode.com\/problems\/describe-the-painting\/","2349":"https:\/\/leetcode.com\/problems\/mice-and-cheese\/","2350":"https:\/\/leetcode.com\/problems\/minimum-bit-flips-to-convert-number\/","2351":"https:\/\/leetcode.com\/problems\/minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix\/","2352":"https:\/\/leetcode.com\/problems\/flatten-deeply-nested-array\/","2353":"https:\/\/leetcode.com\/problems\/count-odd-numbers-in-an-interval-range\/","2354":"https:\/\/leetcode.com\/problems\/find-all-numbers-disappeared-in-an-array\/","2355":"https:\/\/leetcode.com\/problems\/operations-on-tree\/","2356":"https:\/\/leetcode.com\/problems\/reverse-pairs\/","2357":"https:\/\/leetcode.com\/problems\/best-team-with-no-conflicts\/","2358":"https:\/\/leetcode.com\/problems\/unique-binary-search-trees\/","2359":"https:\/\/leetcode.com\/problems\/find-the-pivot-integer\/","2360":"https:\/\/leetcode.com\/problems\/maximum-product-of-the-length-of-two-palindromic-substrings\/","2361":"https:\/\/leetcode.com\/problems\/maximum-number-of-eaten-apples\/","2362":"https:\/\/leetcode.com\/problems\/redundant-connection\/","2363":"https:\/\/leetcode.com\/problems\/find-palindrome-with-fixed-length\/","2364":"https:\/\/leetcode.com\/problems\/max-consecutive-ones\/","2365":"https:\/\/leetcode.com\/problems\/minimum-amount-of-time-to-fill-cups\/","2366":"https:\/\/leetcode.com\/problems\/palindrome-pairs\/","2367":"https:\/\/leetcode.com\/problems\/maximum-profit-in-job-scheduling\/","2368":"https:\/\/leetcode.com\/problems\/split-array-into-fibonacci-sequence\/","2369":"https:\/\/leetcode.com\/problems\/count-asterisks\/","2370":"https:\/\/leetcode.com\/problems\/minimum-swaps-to-group-all-1s-together-ii\/","2371":"https:\/\/leetcode.com\/problems\/minimum-absolute-difference\/","2372":"https:\/\/leetcode.com\/problems\/merge-intervals\/","2373":"https:\/\/leetcode.com\/problems\/add-to-array-form-of-integer\/","2374":"https:\/\/leetcode.com\/problems\/count-equal-and-divisible-pairs-in-an-array\/","2375":"https:\/\/leetcode.com\/problems\/equal-row-and-column-pairs\/","2376":"https:\/\/leetcode.com\/problems\/shortest-path-to-get-all-keys\/","2377":"https:\/\/leetcode.com\/problems\/count-the-number-of-vowel-strings-in-range\/","2378":"https:\/\/leetcode.com\/problems\/repeated-dna-sequences\/","2379":"https:\/\/leetcode.com\/problems\/check-if-point-is-reachable\/","2380":"https:\/\/leetcode.com\/problems\/the-number-of-employees-which-report-to-each-employee\/","2381":"https:\/\/leetcode.com\/problems\/subrectangle-queries\/","2382":"https:\/\/leetcode.com\/problems\/partition-labels\/","2383":"https:\/\/leetcode.com\/problems\/count-different-palindromic-subsequences\/","2384":"https:\/\/leetcode.com\/problems\/time-needed-to-rearrange-a-binary-string\/","2385":"https:\/\/leetcode.com\/problems\/get-watched-videos-by-your-friends\/","2386":"https:\/\/leetcode.com\/problems\/make-the-string-great\/","2387":"https:\/\/leetcode.com\/problems\/array-of-objects-to-matrix\/","2388":"https:\/\/leetcode.com\/problems\/string-to-integer-atoi\/","2389":"https:\/\/leetcode.com\/problems\/number-of-ways-to-arrive-at-destination\/","2390":"https:\/\/leetcode.com\/problems\/market-analysis-i\/","2391":"https:\/\/leetcode.com\/problems\/lexicographically-smallest-palindrome\/","2392":"https:\/\/leetcode.com\/problems\/partition-array-such-that-maximum-difference-is-k\/","2393":"https:\/\/leetcode.com\/problems\/spiral-matrix-iv\/","2394":"https:\/\/leetcode.com\/problems\/make-k-subarray-sums-equal\/","2395":"https:\/\/leetcode.com\/problems\/fraction-addition-and-subtraction\/","2396":"https:\/\/leetcode.com\/problems\/total-hamming-distance\/","2397":"https:\/\/leetcode.com\/problems\/binary-tree-cameras\/","2398":"https:\/\/leetcode.com\/problems\/maximum-absolute-sum-of-any-subarray\/","2399":"https:\/\/leetcode.com\/problems\/cat-and-mouse-ii\/","2400":"https:\/\/leetcode.com\/problems\/number-of-squareful-arrays\/","2401":"https:\/\/leetcode.com\/problems\/k-radius-subarray-averages\/","2402":"https:\/\/leetcode.com\/problems\/maximum-binary-tree\/","2403":"https:\/\/leetcode.com\/problems\/construct-string-from-binary-tree\/","2404":"https:\/\/leetcode.com\/problems\/most-profit-assigning-work\/","2405":"https:\/\/leetcode.com\/problems\/reconstruct-itinerary\/"},"score":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"319":0,"320":0,"321":0,"322":0,"323":0,"324":0,"325":0,"326":0,"327":0,"328":0,"329":0,"330":0,"331":0,"332":0,"333":0,"334":0,"335":0,"336":0,"337":0,"338":0,"339":0,"340":0,"341":0,"342":0,"343":0,"344":0,"345":0,"346":0,"347":0,"348":0,"349":0,"350":0,"351":0,"352":0,"353":0,"354":0,"355":0,"356":0,"357":0,"358":0,"359":0,"360":0,"361":0,"362":0,"363":0,"364":0,"365":0,"366":0,"367":0,"368":0,"369":0,"370":0,"371":0,"372":0,"373":0,"374":0,"375":0,"376":0,"377":0,"378":0,"379":0,"380":0,"381":0,"382":0,"383":0,"384":0,"385":0,"386":0,"387":0,"388":0,"389":0,"390":0,"391":0,"392":0,"393":0,"394":0,"395":0,"396":0,"397":0,"398":0,"399":0,"400":0,"401":0,"402":0,"403":0,"404":0,"405":0,"406":0,"407":0,"408":0,"409":0,"410":0,"411":0,"412":0,"413":0,"414":0,"415":0,"416":0,"417":0,"418":0,"419":0,"420":0,"421":0,"422":0,"423":0,"424":0,"425":0,"426":0,"427":0,"428":0,"429":0,"430":0,"431":0,"432":0,"433":0,"434":0,"435":0,"436":0,"437":0,"438":0,"439":0,"440":0,"441":0,"442":0,"443":0,"444":0,"445":0,"446":0,"447":0,"448":0,"449":0,"450":0,"451":0,"452":0,"453":0,"454":0,"455":0,"456":0,"457":0,"458":0,"459":0,"460":0,"461":0,"462":0,"463":0,"464":0,"465":0,"466":0,"467":0,"468":0,"469":0,"470":0,"471":0,"472":0,"473":0,"474":0,"475":0,"476":0,"477":0,"478":0,"479":0,"480":0,"481":0,"482":0,"483":0,"484":0,"485":0,"486":0,"487":0,"488":0,"489":0,"490":0,"491":0,"492":0,"493":0,"494":0,"495":0,"496":0,"497":0,"498":0,"499":0,"500":0,"501":0,"502":0,"503":0,"504":0,"505":0,"506":0,"507":0,"508":0,"509":0,"510":0,"511":0,"512":0,"513":0,"514":0,"515":0,"516":0,"517":0,"518":0,"519":0,"520":0,"521":0,"522":0,"523":0,"524":0,"525":0,"526":0,"527":0,"528":0,"529":0,"530":0,"531":0,"532":0,"533":0,"534":0,"535":0,"536":0,"537":0,"538":0,"539":0,"540":0,"541":0,"542":0,"543":0,"544":0,"545":0,"546":0,"547":0,"548":0,"549":0,"550":0,"551":0,"552":0,"553":0,"554":0,"555":0,"556":0,"557":0,"558":0,"559":0,"560":0,"561":0,"562":0,"563":0,"564":0,"565":0,"566":0,"567":0,"568":0,"569":0,"570":0,"571":0,"572":0,"573":0,"574":0,"575":0,"576":0,"577":0,"578":0,"579":0,"580":0,"581":0,"582":0,"583":0,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"593":0,"594":0,"595":0,"596":0,"597":0,"598":0,"599":0,"600":0,"601":0,"602":0,"603":0,"604":0,"605":0,"606":0,"607":0,"608":0,"609":0,"610":0,"611":0,"612":0,"613":0,"614":0,"615":0,"616":0,"617":0,"618":0,"619":0,"620":0,"621":0,"622":0,"623":0,"624":0,"625":0,"626":0,"627":0,"628":0,"629":0,"630":0,"631":0,"632":0,"633":0,"634":0,"635":0,"636":0,"637":0,"638":0,"639":0,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"649":0,"650":0,"651":0,"652":0,"653":0,"654":0,"655":0,"656":0,"657":0,"658":0,"659":0,"660":0,"661":0,"662":0,"663":0,"664":0,"665":0,"666":0,"667":0,"668":0,"669":0,"670":0,"671":0,"672":0,"673":0,"674":0,"675":0,"676":0,"677":0,"678":0,"679":0,"680":0,"681":0,"682":0,"683":0,"684":0,"685":0,"686":0,"687":0,"688":0,"689":0,"690":0,"691":0,"692":0,"693":0,"694":0,"695":0,"696":0,"697":0,"698":0,"699":0,"700":0,"701":0,"702":0,"703":0,"704":0,"705":0,"706":0,"707":0,"708":0,"709":0,"710":0,"711":0,"712":0,"713":0,"714":0,"715":0,"716":0,"717":0,"718":0,"719":0,"720":0,"721":0,"722":0,"723":0,"724":0,"725":0,"726":0,"727":0,"728":0,"729":0,"730":0,"731":0,"732":0,"733":0,"734":0,"735":0,"736":0,"737":0,"738":0,"739":0,"740":0,"741":0,"742":0,"743":0,"744":0,"745":0,"746":0,"747":0,"748":0,"749":0,"750":0,"751":0,"752":0,"753":0,"754":0,"755":0,"756":0,"757":0,"758":0,"759":0,"760":0,"761":0,"762":0,"763":0,"764":0,"765":0,"766":0,"767":0,"768":0,"769":0,"770":0,"771":0,"772":0,"773":0,"774":0,"775":0,"776":0,"777":0,"778":0,"779":0,"780":0,"781":0,"782":0,"783":0,"784":0,"785":0,"786":0,"787":0,"788":0,"789":0,"790":0,"791":0,"792":0,"793":0,"794":0,"795":0,"796":0,"797":0,"798":0,"799":0,"800":0,"801":0,"802":0,"803":0,"804":0,"805":0,"806":0,"807":0,"808":0,"809":0,"810":0,"811":0,"812":0,"813":0,"814":0,"815":0,"816":0,"817":0,"818":0,"819":0,"820":0,"821":0,"822":0,"823":0,"824":0,"825":0,"826":0,"827":0,"828":0,"829":0,"830":0,"831":0,"832":0,"833":0,"834":0,"835":0,"836":0,"837":0,"838":0,"839":0,"840":0,"841":0,"842":0,"843":0,"844":0,"845":0,"846":0,"847":0,"848":0,"849":0,"850":0,"851":0,"852":0,"853":0,"854":0,"855":0,"856":0,"857":0,"858":0,"859":0,"860":0,"861":0,"862":0,"863":0,"864":0,"865":0,"866":0,"867":0,"868":0,"869":0,"870":0,"871":0,"872":0,"873":0,"874":0,"875":0,"876":0,"877":0,"878":0,"879":0,"880":0,"881":0,"882":0,"883":0,"884":0,"885":0,"886":0,"887":0,"888":0,"889":0,"890":0,"891":0,"892":0,"893":0,"894":0,"895":0,"896":0,"897":0,"898":0,"899":0,"900":0,"901":0,"902":0,"903":0,"904":0,"905":0,"906":0,"907":0,"908":0,"909":0,"910":0,"911":0,"912":0,"913":0,"914":0,"915":0,"916":0,"917":0,"918":0,"919":0,"920":0,"921":0,"922":0,"923":0,"924":0,"925":0,"926":0,"927":0,"928":0,"929":0,"930":0,"931":0,"932":0,"933":0,"934":0,"935":0,"936":0,"937":0,"938":0,"939":0,"940":0,"941":0,"942":0,"943":0,"944":0,"945":0,"946":0,"947":0,"948":0,"949":0,"950":0,"951":0,"952":0,"953":0,"954":0,"955":0,"956":0,"957":0,"958":0,"959":0,"960":0,"961":0,"962":0,"963":0,"964":0,"965":0,"966":0,"967":0,"968":0,"969":0,"970":0,"971":0,"972":0,"973":0,"974":0,"975":0,"976":0,"977":0,"978":0,"979":0,"980":0,"981":0,"982":0,"983":0,"984":0,"985":0,"986":0,"987":0,"988":0,"989":0,"990":0,"991":0,"992":0,"993":0,"994":0,"995":0,"996":0,"997":0,"998":0,"999":0,"1000":0,"1001":0,"1002":0,"1003":0,"1004":0,"1005":0,"1006":0,"1007":0,"1008":0,"1009":0,"1010":0,"1011":0,"1012":0,"1013":0,"1014":0,"1015":0,"1016":0,"1017":0,"1018":0,"1019":0,"1020":0,"1021":0,"1022":0,"1023":0,"1024":0,"1025":0,"1026":0,"1027":0,"1028":0,"1029":0,"1030":0,"1031":0,"1032":0,"1033":0,"1034":0,"1035":0,"1036":0,"1037":0,"1038":0,"1039":0,"1040":0,"1041":0,"1042":0,"1043":0,"1044":0,"1045":0,"1046":0,"1047":0,"1048":0,"1049":0,"1050":0,"1051":0,"1052":0,"1053":0,"1054":0,"1055":0,"1056":0,"1057":0,"1058":0,"1059":0,"1060":0,"1061":0,"1062":0,"1063":0,"1064":0,"1065":0,"1066":0,"1067":0,"1068":0,"1069":0,"1070":0,"1071":0,"1072":0,"1073":0,"1074":0,"1075":0,"1076":0,"1077":0,"1078":0,"1079":0,"1080":0,"1081":0,"1082":0,"1083":0,"1084":0,"1085":0,"1086":0,"1087":0,"1088":0,"1089":0,"1090":0,"1091":0,"1092":0,"1093":0,"1094":0,"1095":0,"1096":0,"1097":0,"1098":0,"1099":0,"1100":0,"1101":0,"1102":0,"1103":0,"1104":0,"1105":0,"1106":0,"1107":0,"1108":0,"1109":0,"1110":0,"1111":0,"1112":0,"1113":0,"1114":0,"1115":0,"1116":0,"1117":0,"1118":0,"1119":0,"1120":0,"1121":0,"1122":0,"1123":0,"1124":0,"1125":0,"1126":0,"1127":0,"1128":0,"1129":0,"1130":0,"1131":0,"1132":0,"1133":0,"1134":0,"1135":0,"1136":0,"1137":0,"1138":0,"1139":0,"1140":0,"1141":0,"1142":0,"1143":0,"1144":0,"1145":0,"1146":0,"1147":0,"1148":0,"1149":0,"1150":0,"1151":0,"1152":0,"1153":0,"1154":0,"1155":0,"1156":0,"1157":0,"1158":0,"1159":0,"1160":0,"1161":0,"1162":0,"1163":0,"1164":0,"1165":0,"1166":0,"1167":0,"1168":0,"1169":0,"1170":0,"1171":0,"1172":0,"1173":0,"1174":0,"1175":0,"1176":0,"1177":0,"1178":0,"1179":0,"1180":0,"1181":0,"1182":0,"1183":0,"1184":0,"1185":0,"1186":0,"1187":0,"1188":0,"1189":0,"1190":0,"1191":0,"1192":0,"1193":0,"1194":0,"1195":0,"1196":0,"1197":0,"1198":0,"1199":0,"1200":0,"1201":0,"1202":0,"1203":0,"1204":0,"1205":0,"1206":0,"1207":0,"1208":0,"1209":0,"1210":0,"1211":0,"1212":0,"1213":0,"1214":0,"1215":0,"1216":0,"1217":0,"1218":0,"1219":0,"1220":0,"1221":0,"1222":0,"1223":0,"1224":0,"1225":0,"1226":0,"1227":0,"1228":0,"1229":0,"1230":0,"1231":0,"1232":0,"1233":0,"1234":0,"1235":0,"1236":0,"1237":0,"1238":0,"1239":0,"1240":0,"1241":0,"1242":0,"1243":0,"1244":0,"1245":0,"1246":0,"1247":0,"1248":0,"1249":0,"1250":0,"1251":0,"1252":0,"1253":0,"1254":0,"1255":0,"1256":0,"1257":0,"1258":0,"1259":0,"1260":0,"1261":0,"1262":0,"1263":0,"1264":0,"1265":0,"1266":0,"1267":0,"1268":0,"1269":0,"1270":0,"1271":0,"1272":0,"1273":0,"1274":0,"1275":0,"1276":0,"1277":0,"1278":0,"1279":0,"1280":0,"1281":0,"1282":0,"1283":0,"1284":0,"1285":0,"1286":0,"1287":0,"1288":0,"1289":0,"1290":0,"1291":0,"1292":0,"1293":0,"1294":0,"1295":0,"1296":0,"1297":0,"1298":0,"1299":0,"1300":0,"1301":0,"1302":0,"1303":0,"1304":0,"1305":0,"1306":0,"1307":0,"1308":0,"1309":0,"1310":0,"1311":0,"1312":0,"1313":0,"1314":0,"1315":0,"1316":0,"1317":0,"1318":0,"1319":0,"1320":0,"1321":0,"1322":0,"1323":0,"1324":0,"1325":0,"1326":0,"1327":0,"1328":0,"1329":0,"1330":0,"1331":0,"1332":0,"1333":0,"1334":0,"1335":0,"1336":0,"1337":0,"1338":0,"1339":0,"1340":0,"1341":0,"1342":0,"1343":0,"1344":0,"1345":0,"1346":0,"1347":0,"1348":0,"1349":0,"1350":0,"1351":0,"1352":0,"1353":0,"1354":0,"1355":0,"1356":0,"1357":0,"1358":0,"1359":0,"1360":0,"1361":0,"1362":0,"1363":0,"1364":0,"1365":0,"1366":0,"1367":0,"1368":0,"1369":0,"1370":0,"1371":0,"1372":0,"1373":0,"1374":0,"1375":0,"1376":0,"1377":0,"1378":0,"1379":0,"1380":0,"1381":0,"1382":0,"1383":0,"1384":0,"1385":0,"1386":0,"1387":0,"1388":0,"1389":0,"1390":0,"1391":0,"1392":0,"1393":0,"1394":0,"1395":0,"1396":0,"1397":0,"1398":0,"1399":0,"1400":0,"1401":0,"1402":0,"1403":0,"1404":0,"1405":0,"1406":0,"1407":0,"1408":0,"1409":0,"1410":0,"1411":0,"1412":0,"1413":0,"1414":0,"1415":0,"1416":0,"1417":0,"1418":0,"1419":0,"1420":0,"1421":0,"1422":0,"1423":0,"1424":0,"1425":0,"1426":0,"1427":0,"1428":0,"1429":0,"1430":0,"1431":0,"1432":0,"1433":0,"1434":0,"1435":0,"1436":0,"1437":0,"1438":0,"1439":0,"1440":0,"1441":0,"1442":0,"1443":0,"1444":0,"1445":0,"1446":0,"1447":0,"1448":0,"1449":0,"1450":0,"1451":0,"1452":0,"1453":0,"1454":0,"1455":0,"1456":0,"1457":0,"1458":0,"1459":0,"1460":0,"1461":0,"1462":0,"1463":0,"1464":0,"1465":0,"1466":0,"1467":0,"1468":0,"1469":0,"1470":0,"1471":0,"1472":0,"1473":0,"1474":0,"1475":0,"1476":0,"1477":0,"1478":0,"1479":0,"1480":0,"1481":0,"1482":0,"1483":0,"1484":0,"1485":0,"1486":0,"1487":0,"1488":0,"1489":0,"1490":0,"1491":0,"1492":0,"1493":0,"1494":0,"1495":0,"1496":0,"1497":0,"1498":0,"1499":0,"1500":0,"1501":0,"1502":0,"1503":0,"1504":0,"1505":0,"1506":0,"1507":0,"1508":0,"1509":0,"1510":0,"1511":0,"1512":0,"1513":0,"1514":0,"1515":0,"1516":0,"1517":0,"1518":0,"1519":0,"1520":0,"1521":0,"1522":0,"1523":0,"1524":0,"1525":0,"1526":0,"1527":0,"1528":0,"1529":0,"1530":0,"1531":0,"1532":0,"1533":0,"1534":0,"1535":0,"1536":0,"1537":0,"1538":0,"1539":0,"1540":0,"1541":0,"1542":0,"1543":0,"1544":0,"1545":0,"1546":0,"1547":0,"1548":0,"1549":0,"1550":0,"1551":0,"1552":0,"1553":0,"1554":0,"1555":0,"1556":0,"1557":0,"1558":0,"1559":0,"1560":0,"1561":0,"1562":0,"1563":0,"1564":0,"1565":0,"1566":0,"1567":0,"1568":0,"1569":0,"1570":0,"1571":0,"1572":0,"1573":0,"1574":0,"1575":0,"1576":0,"1577":0,"1578":0,"1579":0,"1580":0,"1581":0,"1582":0,"1583":0,"1584":0,"1585":0,"1586":0,"1587":0,"1588":0,"1589":0,"1590":0,"1591":0,"1592":0,"1593":0,"1594":0,"1595":0,"1596":0,"1597":0,"1598":0,"1599":0,"1600":0,"1601":0,"1602":0,"1603":0,"1604":0,"1605":0,"1606":0,"1607":0,"1608":0,"1609":0,"1610":0,"1611":0,"1612":0,"1613":0,"1614":0,"1615":0,"1616":0,"1617":0,"1618":0,"1619":0,"1620":0,"1621":0,"1622":0,"1623":0,"1624":0,"1625":0,"1626":0,"1627":0,"1628":0,"1629":0,"1630":0,"1631":0,"1632":0,"1633":0,"1634":0,"1635":0,"1636":0,"1637":0,"1638":0,"1639":0,"1640":0,"1641":0,"1642":0,"1643":0,"1644":0,"1645":0,"1646":0,"1647":0,"1648":0,"1649":0,"1650":0,"1651":0,"1652":0,"1653":0,"1654":0,"1655":0,"1656":0,"1657":0,"1658":0,"1659":0,"1660":0,"1661":0,"1662":0,"1663":0,"1664":0,"1665":0,"1666":0,"1667":0,"1668":0,"1669":0,"1670":0,"1671":0,"1672":0,"1673":0,"1674":0,"1675":0,"1676":0,"1677":0,"1678":0,"1679":0,"1680":0,"1681":0,"1682":0,"1683":0,"1684":0,"1685":0,"1686":0,"1687":0,"1688":0,"1689":0,"1690":0,"1691":0,"1692":0,"1693":0,"1694":0,"1695":0,"1696":0,"1697":0,"1698":0,"1699":0,"1700":0,"1701":0,"1702":0,"1703":0,"1704":0,"1705":0,"1706":0,"1707":0,"1708":0,"1709":0,"1710":0,"1711":0,"1712":0,"1713":0,"1714":0,"1715":0,"1716":0,"1717":0,"1718":0,"1719":0,"1720":0,"1721":0,"1722":0,"1723":0,"1724":0,"1725":0,"1726":0,"1727":0,"1728":0,"1729":0,"1730":0,"1731":0,"1732":0,"1733":0,"1734":0,"1735":0,"1736":0,"1737":0,"1738":0,"1739":0,"1740":0,"1741":0,"1742":0,"1743":0,"1744":0,"1745":0,"1746":0,"1747":0,"1748":0,"1749":0,"1750":0,"1751":0,"1752":0,"1753":0,"1754":0,"1755":0,"1756":0,"1757":0,"1758":0,"1759":0,"1760":0,"1761":0,"1762":0,"1763":0,"1764":0,"1765":0,"1766":0,"1767":0,"1768":0,"1769":0,"1770":0,"1771":0,"1772":0,"1773":0,"1774":0,"1775":0,"1776":0,"1777":0,"1778":0,"1779":0,"1780":0,"1781":0,"1782":0,"1783":0,"1784":0,"1785":0,"1786":0,"1787":0,"1788":0,"1789":0,"1790":0,"1791":0,"1792":0,"1793":0,"1794":0,"1795":0,"1796":0,"1797":0,"1798":0,"1799":0,"1800":0,"1801":0,"1802":0,"1803":0,"1804":0,"1805":0,"1806":0,"1807":0,"1808":0,"1809":0,"1810":0,"1811":0,"1812":0,"1813":0,"1814":0,"1815":0,"1816":0,"1817":0,"1818":0,"1819":0,"1820":0,"1821":0,"1822":0,"1823":0,"1824":0,"1825":0,"1826":0,"1827":0,"1828":0,"1829":0,"1830":0,"1831":0,"1832":0,"1833":0,"1834":0,"1835":0,"1836":0,"1837":0,"1838":0,"1839":0,"1840":0,"1841":0,"1842":0,"1843":0,"1844":0,"1845":0,"1846":0,"1847":0,"1848":0,"1849":0,"1850":0,"1851":0,"1852":0,"1853":0,"1854":0,"1855":0,"1856":0,"1857":0,"1858":0,"1859":0,"1860":0,"1861":0,"1862":0,"1863":0,"1864":0,"1865":0,"1866":0,"1867":0,"1868":0,"1869":0,"1870":0,"1871":0,"1872":0,"1873":0,"1874":0,"1875":0,"1876":0,"1877":0,"1878":0,"1879":0,"1880":0,"1881":0,"1882":0,"1883":0,"1884":0,"1885":0,"1886":0,"1887":0,"1888":0,"1889":0,"1890":0,"1891":0,"1892":0,"1893":0,"1894":0,"1895":0,"1896":0,"1897":0,"1898":0,"1899":0,"1900":0,"1901":0,"1902":0,"1903":0,"1904":0,"1905":0,"1906":0,"1907":0,"1908":0,"1909":0,"1910":0,"1911":0,"1912":0,"1913":0,"1914":0,"1915":0,"1916":0,"1917":0,"1918":0,"1919":0,"1920":0,"1921":0,"1922":0,"1923":0,"1924":0,"1925":0,"1926":0,"1927":0,"1928":0,"1929":0,"1930":0,"1931":0,"1932":0,"1933":0,"1934":0,"1935":0,"1936":0,"1937":0,"1938":0,"1939":0,"1940":0,"1941":0,"1942":0,"1943":0,"1944":0,"1945":0,"1946":0,"1947":0,"1948":0,"1949":0,"1950":0,"1951":0,"1952":0,"1953":0,"1954":0,"1955":0,"1956":0,"1957":0,"1958":0,"1959":0,"1960":0,"1961":0,"1962":0,"1963":0,"1964":0,"1965":0,"1966":0,"1967":0,"1968":0,"1969":0,"1970":0,"1971":0,"1972":0,"1973":0,"1974":0,"1975":0,"1976":0,"1977":0,"1978":0,"1979":0,"1980":0,"1981":0,"1982":0,"1983":0,"1984":0,"1985":0,"1986":0,"1987":0,"1988":0,"1989":0,"1990":0,"1991":0,"1992":0,"1993":0,"1994":0,"1995":0,"1996":0,"1997":0,"1998":0,"1999":0,"2000":0,"2001":0,"2002":0,"2003":0,"2004":0,"2005":0,"2006":0,"2007":0,"2008":0,"2009":0,"2010":0,"2011":0,"2012":0,"2013":0,"2014":0,"2015":0,"2016":0,"2017":0,"2018":0,"2019":0,"2020":0,"2021":0,"2022":0,"2023":0,"2024":0,"2025":0,"2026":0,"2027":0,"2028":0,"2029":0,"2030":0,"2031":0,"2032":0,"2033":0,"2034":0,"2035":0,"2036":0,"2037":0,"2038":0,"2039":0,"2040":0,"2041":0,"2042":0,"2043":0,"2044":0,"2045":0,"2046":0,"2047":0,"2048":0,"2049":0,"2050":0,"2051":0,"2052":0,"2053":0,"2054":0,"2055":0,"2056":0,"2057":0,"2058":0,"2059":0,"2060":0,"2061":0,"2062":0,"2063":0,"2064":0,"2065":0,"2066":0,"2067":0,"2068":0,"2069":0,"2070":0,"2071":0,"2072":0,"2073":0,"2074":0,"2075":0,"2076":0,"2077":0,"2078":0,"2079":0,"2080":0,"2081":0,"2082":0,"2083":0,"2084":0,"2085":0,"2086":0,"2087":0,"2088":0,"2089":0,"2090":0,"2091":0,"2092":0,"2093":0,"2094":0,"2095":0,"2096":0,"2097":0,"2098":0,"2099":0,"2100":0,"2101":0,"2102":0,"2103":0,"2104":0,"2105":0,"2106":0,"2107":0,"2108":0,"2109":0,"2110":0,"2111":0,"2112":0,"2113":0,"2114":0,"2115":0,"2116":0,"2117":0,"2118":0,"2119":0,"2120":0,"2121":0,"2122":0,"2123":0,"2124":0,"2125":0,"2126":0,"2127":0,"2128":0,"2129":0,"2130":0,"2131":0,"2132":0,"2133":0,"2134":0,"2135":0,"2136":0,"2137":0,"2138":0,"2139":0,"2140":0,"2141":0,"2142":0,"2143":0,"2144":0,"2145":0,"2146":0,"2147":0,"2148":0,"2149":0,"2150":0,"2151":0,"2152":0,"2153":0,"2154":0,"2155":0,"2156":0,"2157":0,"2158":0,"2159":0,"2160":0,"2161":0,"2162":0,"2163":0,"2164":0,"2165":0,"2166":0,"2167":0,"2168":0,"2169":0,"2170":0,"2171":0,"2172":0,"2173":0,"2174":0,"2175":0,"2176":0,"2177":0,"2178":0,"2179":0,"2180":0,"2181":0,"2182":0,"2183":0,"2184":0,"2185":0,"2186":0,"2187":0,"2188":0,"2189":0,"2190":0,"2191":0,"2192":0,"2193":0,"2194":0,"2195":0,"2196":0,"2197":0,"2198":0,"2199":0,"2200":0,"2201":0,"2202":0,"2203":0,"2204":0,"2205":0,"2206":0,"2207":0,"2208":0,"2209":0,"2210":0,"2211":0,"2212":0,"2213":0,"2214":0,"2215":0,"2216":0,"2217":0,"2218":0,"2219":0,"2220":0,"2221":0,"2222":0,"2223":0,"2224":0,"2225":0,"2226":0,"2227":0,"2228":0,"2229":0,"2230":0,"2231":0,"2232":0,"2233":0,"2234":0,"2235":0,"2236":0,"2237":0,"2238":0,"2239":0,"2240":0,"2241":0,"2242":0,"2243":0,"2244":0,"2245":0,"2246":0,"2247":0,"2248":0,"2249":0,"2250":0,"2251":0,"2252":0,"2253":0,"2254":0,"2255":0,"2256":0,"2257":0,"2258":0,"2259":0,"2260":0,"2261":0,"2262":0,"2263":0,"2264":0,"2265":0,"2266":0,"2267":0,"2268":0,"2269":0,"2270":0,"2271":0,"2272":0,"2273":0,"2274":0,"2275":0,"2276":0,"2277":0,"2278":0,"2279":0,"2280":0,"2281":0,"2282":0,"2283":0,"2284":0,"2285":0,"2286":0,"2287":0,"2288":0,"2289":0,"2290":0,"2291":0,"2292":0,"2293":0,"2294":0,"2295":0,"2296":0,"2297":0,"2298":0,"2299":0,"2300":0,"2301":0,"2302":0,"2303":0,"2304":0,"2305":0,"2306":0,"2307":0,"2308":0,"2309":0,"2310":0,"2311":0,"2312":0,"2313":0,"2314":0,"2315":0,"2316":0,"2317":0,"2318":0,"2319":0,"2320":0,"2321":0,"2322":0,"2323":0,"2324":0,"2325":0,"2326":0,"2327":0,"2328":0,"2329":0,"2330":0,"2331":0,"2332":0,"2333":0,"2334":0,"2335":0,"2336":0,"2337":0,"2338":0,"2339":0,"2340":0,"2341":0,"2342":0,"2343":0,"2344":0,"2345":0,"2346":0,"2347":0,"2348":0,"2349":0,"2350":0,"2351":0,"2352":0,"2353":0,"2354":0,"2355":0,"2356":0,"2357":0,"2358":0,"2359":0,"2360":0,"2361":0,"2362":0,"2363":0,"2364":0,"2365":0,"2366":0,"2367":0,"2368":0,"2369":0,"2370":0,"2371":0,"2372":0,"2373":0,"2374":0,"2375":0,"2376":0,"2377":0,"2378":0,"2379":0,"2380":0,"2381":0,"2382":0,"2383":0,"2384":0,"2385":0,"2386":0,"2387":0,"2388":0,"2389":0,"2390":0,"2391":0,"2392":0,"2393":0,"2394":0,"2395":0,"2396":0,"2397":0,"2398":0,"2399":0,"2400":0,"2401":0,"2402":0,"2403":0,"2404":0,"2405":0}}